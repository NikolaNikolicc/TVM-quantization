; ModuleID = 'TVMMod'
source_filename = "TVMMod"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%0 = type { double }
%1 = type { ptr, %2, i32, %3, ptr, ptr, i64 }
%2 = type { i32, i32 }
%3 = type { i8, i8, i16 }

$__tvm_module_ctx = comdat any

$__TVMFuncCall = comdat any

$__TVMBackendGetFuncFromEnv = comdat any

$__TVMAPISetLastError = comdat any

$__TVMBackendAllocWorkspace = comdat any

$__TVMBackendFreeWorkspace = comdat any

@__tvm_module_ctx = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMFuncCall = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendGetFuncFromEnv = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMAPISetLastError = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str = private constant [94 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_adaptive_avg_pool2d: num_args should be 2\00", align 1
@.str.1 = private constant [149 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.2 = private constant [209 x i8] c"Assert fail: adaptive_pool_avg_code == 3 or adaptive_pool_avg_code == 13 or adaptive_pool_avg_code == 7 or adaptive_pool_avg_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.3 = private constant [130 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.ndim is expected to equal 4\00", align 1
@.str.4 = private constant [254 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.5 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0])\00", align 1
@.str.6 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1])\00", align 1
@.str.7 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2])\00", align 1
@.str.8 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3])\00", align 1
@.str.9 = private constant [348 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.10 = private constant [217 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.11 = private constant [197 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.12 = private constant [160 x i8] c"Assert fail: 4 == T.tvm_struct_get(adaptive_pool_avg, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.ndim is expected to equal 4\00", align 1
@.str.13 = private constant [314 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(adaptive_pool_avg, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(adaptive_pool_avg, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.dtype is expected to be float32\00", align 1
@.str.14 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0])\00", align 1
@.str.15 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1]) == 2048, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1])\00", align 1
@.str.16 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2])\00", align 1
@.str.17 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3])\00", align 1
@.str.18 = private constant [209 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides: expected to be compact array\00", align 1
@.str.19 = private constant [262 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22)\00", align 1
@.str.20 = private constant [242 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22)\00", align 1
@.str.21 = private constant [248 x i8] c"Assert fail: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22)\00", align 1
@.tvm_func.__tvm_set_device = internal unnamed_addr global ptr null, align 8
@.str.22 = private constant [17 x i8] c"__tvm_set_device\00", align 1
@__TVMBackendAllocWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel = internal unnamed_addr global ptr null, align 8
@.str.23 = private constant [51 x i8] c"tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.24 = private constant [53 x i8] c"tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1\00", align 1
@__TVMBackendFreeWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str.25 = private constant [135 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu: num_args should be 4\00", align 1
@.str.26 = private constant [190 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.27 = private constant [190 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.28 = private constant [190 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.29 = private constant [206 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.30 = private constant [171 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.ndim is expected to equal 4\00", align 1
@.str.31 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.32 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[0])\00", align 1
@.str.33 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[1])\00", align 1
@.str.34 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[2])\00", align 1
@.str.35 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_shape[3])\00", align 1
@.str.36 = private constant [515 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.37 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.38 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.39 = private constant [171 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.ndim is expected to equal 4\00", align 1
@.str.40 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.41 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[0]) == 6, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 6 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[0])\00", align 1
@.str.42 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[1]) == 6, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 6 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[1])\00", align 1
@.str.43 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[2]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[2])\00", align 1
@.str.44 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[3]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_shape[3])\00", align 1
@.str.45 = private constant [644 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_strides[3]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_strides[2]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_strides[1]) and 24576 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.46 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.47 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.48 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.49 = private constant [171 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.ndim is expected to equal 4\00", align 1
@.str.50 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.51 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[0])\00", align 1
@.str.52 = private constant [391 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[1])\00", align 1
@.str.53 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[2])\00", align 1
@.str.54 = private constant [389 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_shape[3])\00", align 1
@.str.55 = private constant [261 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.56 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.57 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.58 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.59 = private constant [179 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.ndim is expected to equal 4\00", align 1
@.str.60 = private constant [311 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.61 = private constant [401 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.62 = private constant [403 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.63 = private constant [403 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.64 = private constant [403 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.65 = private constant [531 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.66 = private constant [270 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.67 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.68 = private constant [256 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel = internal unnamed_addr global ptr null, align 8
@.str.69 = private constant [92 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.70 = private constant [94 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.71 = private constant [94 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_2\00", align 1
@.str.72 = private constant [137 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1: num_args should be 4\00", align 1
@.str.73 = private constant [192 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1: Expect arg[0] to be pointer\00", align 1
@.str.74 = private constant [192 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1: Expect arg[1] to be pointer\00", align 1
@.str.75 = private constant [192 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1: Expect arg[2] to be pointer\00", align 1
@.str.76 = private constant [208 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1: Expect arg[3] to be pointer\00", align 1
@.str.77 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.ndim is expected to equal 4\00", align 1
@.str.78 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.dtype is expected to be float32\00", align 1
@.str.79 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[0])\00", align 1
@.str.80 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[1])\00", align 1
@.str.81 = private constant [397 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[2])\00", align 1
@.str.82 = private constant [397 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_shape[3])\00", align 1
@.str.83 = private constant [522 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides: expected to be compact array\00", align 1
@.str.84 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.85 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.86 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.ndim is expected to equal 4\00", align 1
@.str.87 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.dtype is expected to be float32\00", align 1
@.str.88 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[0])\00", align 1
@.str.89 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[1])\00", align 1
@.str.90 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[2]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape[2] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[2])\00", align 1
@.str.91 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[3]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape[3] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_shape[3])\00", align 1
@.str.92 = private constant [656 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_strides[3]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_strides[2]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_strides[1]) and 65536 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides: expected to be compact array\00", align 1
@.str.93 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.94 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.95 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.96 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.ndim is expected to equal 4\00", align 1
@.str.97 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.dtype is expected to be float32\00", align 1
@.str.98 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[0])\00", align 1
@.str.99 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[1])\00", align 1
@.str.100 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[2])\00", align 1
@.str.101 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_shape[3])\00", align 1
@.str.102 = private constant [265 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.strides: expected to be compact array\00", align 1
@.str.103 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.104 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.105 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.106 = private constant [181 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.ndim is expected to equal 4\00", align 1
@.str.107 = private constant [313 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.dtype is expected to be float32\00", align 1
@.str.108 = private constant [407 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[0])\00", align 1
@.str.109 = private constant [411 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[1])\00", align 1
@.str.110 = private constant [409 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[2])\00", align 1
@.str.111 = private constant [409 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_shape[3])\00", align 1
@.str.112 = private constant [538 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides: expected to be compact array\00", align 1
@.str.113 = private constant [272 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.114 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.115 = private constant [258 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.116 = private constant [94 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.117 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.118 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_2\00", align 1
@.str.119 = private constant [137 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2: num_args should be 4\00", align 1
@.str.120 = private constant [192 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2: Expect arg[0] to be pointer\00", align 1
@.str.121 = private constant [192 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2: Expect arg[1] to be pointer\00", align 1
@.str.122 = private constant [192 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2: Expect arg[2] to be pointer\00", align 1
@.str.123 = private constant [208 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2: Expect arg[3] to be pointer\00", align 1
@.str.124 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.ndim is expected to equal 4\00", align 1
@.str.125 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.dtype is expected to be float32\00", align 1
@.str.126 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[0])\00", align 1
@.str.127 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[1])\00", align 1
@.str.128 = private constant [397 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[2])\00", align 1
@.str.129 = private constant [397 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_shape[3])\00", align 1
@.str.130 = private constant [522 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides: expected to be compact array\00", align 1
@.str.131 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.132 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.133 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.ndim is expected to equal 4\00", align 1
@.str.134 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.dtype is expected to be float32\00", align 1
@.str.135 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[0])\00", align 1
@.str.136 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[1])\00", align 1
@.str.137 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[2]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape[2] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[2])\00", align 1
@.str.138 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[3]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape[3] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_shape[3])\00", align 1
@.str.139 = private constant [657 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_strides[3]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_strides[2]) and 65536 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_strides[1]) and 262144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides: expected to be compact array\00", align 1
@.str.140 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.141 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.142 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.143 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.ndim is expected to equal 4\00", align 1
@.str.144 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.dtype is expected to be float32\00", align 1
@.str.145 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[0])\00", align 1
@.str.146 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[1])\00", align 1
@.str.147 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[2])\00", align 1
@.str.148 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_shape[3])\00", align 1
@.str.149 = private constant [265 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.strides: expected to be compact array\00", align 1
@.str.150 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.151 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.152 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.153 = private constant [181 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.ndim is expected to equal 4\00", align 1
@.str.154 = private constant [313 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.dtype is expected to be float32\00", align 1
@.str.155 = private constant [407 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[0])\00", align 1
@.str.156 = private constant [411 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[1])\00", align 1
@.str.157 = private constant [409 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[2])\00", align 1
@.str.158 = private constant [409 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_shape[3])\00", align 1
@.str.159 = private constant [538 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides: expected to be compact array\00", align 1
@.str.160 = private constant [272 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.161 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.162 = private constant [258 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.163 = private constant [94 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.164 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.165 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_2\00", align 1
@.str.166 = private constant [137 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3: num_args should be 4\00", align 1
@.str.167 = private constant [192 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3: Expect arg[0] to be pointer\00", align 1
@.str.168 = private constant [192 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3: Expect arg[1] to be pointer\00", align 1
@.str.169 = private constant [192 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3: Expect arg[2] to be pointer\00", align 1
@.str.170 = private constant [208 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3: Expect arg[3] to be pointer\00", align 1
@.str.171 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.ndim is expected to equal 4\00", align 1
@.str.172 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.dtype is expected to be float32\00", align 1
@.str.173 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[0])\00", align 1
@.str.174 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[1])\00", align 1
@.str.175 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[2])\00", align 1
@.str.176 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_shape[3])\00", align 1
@.str.177 = private constant [520 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides: expected to be compact array\00", align 1
@.str.178 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.179 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.180 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.ndim is expected to equal 4\00", align 1
@.str.181 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.dtype is expected to be float32\00", align 1
@.str.182 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[0])\00", align 1
@.str.183 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[1])\00", align 1
@.str.184 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[2]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape[2] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[2])\00", align 1
@.str.185 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[3]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape[3] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_shape[3])\00", align 1
@.str.186 = private constant [659 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_strides[3]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_strides[2]) and 262144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_strides[1]) and 1048576 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides: expected to be compact array\00", align 1
@.str.187 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.188 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.189 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.190 = private constant [173 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.ndim is expected to equal 4\00", align 1
@.str.191 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.dtype is expected to be float32\00", align 1
@.str.192 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[0])\00", align 1
@.str.193 = private constant [399 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[1])\00", align 1
@.str.194 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[2])\00", align 1
@.str.195 = private constant [395 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_shape[3])\00", align 1
@.str.196 = private constant [265 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.strides: expected to be compact array\00", align 1
@.str.197 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.198 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.199 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.200 = private constant [181 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.ndim is expected to equal 4\00", align 1
@.str.201 = private constant [313 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.dtype is expected to be float32\00", align 1
@.str.202 = private constant [407 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[0])\00", align 1
@.str.203 = private constant [411 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[1])\00", align 1
@.str.204 = private constant [407 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[2])\00", align 1
@.str.205 = private constant [407 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_shape[3])\00", align 1
@.str.206 = private constant [536 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides: expected to be compact array\00", align 1
@.str.207 = private constant [272 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.208 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.209 = private constant [258 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.210 = private constant [94 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.211 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.212 = private constant [96 x i8] c"tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_2\00", align 1
@.str.213 = private constant [85 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add: num_args should be 4\00", align 1
@.str.214 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add: Expect arg[0] to be pointer\00", align 1
@.str.215 = private constant [140 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add: Expect arg[1] to be pointer\00", align 1
@.str.216 = private constant [140 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add: Expect arg[2] to be pointer\00", align 1
@.str.217 = private constant [152 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_conv2d_add: Expect arg[3] to be pointer\00", align 1
@.str.218 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add.p0.ndim is expected to equal 4\00", align 1
@.str.219 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add.p0.dtype is expected to be float32\00", align 1
@.str.220 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[0])\00", align 1
@.str.221 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[1])\00", align 1
@.str.222 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[2])\00", align 1
@.str.223 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_shape[3])\00", align 1
@.str.224 = private constant [315 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add.p0.strides: expected to be compact array\00", align 1
@.str.225 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.226 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.227 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add.p1.ndim is expected to equal 4\00", align 1
@.str.228 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add.p1.dtype is expected to be float32\00", align 1
@.str.229 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[0])\00", align 1
@.str.230 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[1])\00", align 1
@.str.231 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[2])\00", align 1
@.str.232 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_shape[3])\00", align 1
@.str.233 = private constant [237 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add.p1.strides: expected to be compact array\00", align 1
@.str.234 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.235 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.236 = private constant [194 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.237 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add.p2.ndim is expected to equal 4\00", align 1
@.str.238 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add.p2.dtype is expected to be float32\00", align 1
@.str.239 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[0])\00", align 1
@.str.240 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[1])\00", align 1
@.str.241 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[2])\00", align 1
@.str.242 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_shape[3])\00", align 1
@.str.243 = private constant [161 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add.p2.strides: expected to be compact array\00", align 1
@.str.244 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.245 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.246 = private constant [194 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.247 = private constant [127 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add.T_add.ndim is expected to equal 4\00", align 1
@.str.248 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add.T_add.dtype is expected to be float32\00", align 1
@.str.249 = private constant [248 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[0])\00", align 1
@.str.250 = private constant [252 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add.T_add.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[1])\00", align 1
@.str.251 = private constant [250 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add.T_add.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[2])\00", align 1
@.str.252 = private constant [250 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add.T_add.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_shape[3])\00", align 1
@.str.253 = private constant [327 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_T_add_strides[1]), tvmgen_default_fused_nn_conv2d_add.T_add.strides: expected to be compact array\00", align 1
@.str.254 = private constant [217 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.255 = private constant [197 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.256 = private constant [203 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_kernel = internal unnamed_addr global ptr null, align 8
@.str.257 = private constant [42 x i8] c"tvmgen_default_fused_nn_conv2d_add_kernel\00", align 1
@.str.258 = private constant [87 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_1: num_args should be 4\00", align 1
@.str.259 = private constant [142 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_1: Expect arg[0] to be pointer\00", align 1
@.str.260 = private constant [142 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_1: Expect arg[1] to be pointer\00", align 1
@.str.261 = private constant [142 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_1: Expect arg[2] to be pointer\00", align 1
@.str.262 = private constant [154 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_conv2d_add_1: Expect arg[3] to be pointer\00", align 1
@.str.263 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_1.p0.ndim is expected to equal 4\00", align 1
@.str.264 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_1.p0.dtype is expected to be float32\00", align 1
@.str.265 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[0])\00", align 1
@.str.266 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_1.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[1])\00", align 1
@.str.267 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[2])\00", align 1
@.str.268 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_shape[3])\00", align 1
@.str.269 = private constant [323 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_1.p0.strides: expected to be compact array\00", align 1
@.str.270 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.271 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.272 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_1.p1.ndim is expected to equal 4\00", align 1
@.str.273 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_1.p1.dtype is expected to be float32\00", align 1
@.str.274 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_1.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[0])\00", align 1
@.str.275 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_1.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[1])\00", align 1
@.str.276 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[2])\00", align 1
@.str.277 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_shape[3])\00", align 1
@.str.278 = private constant [244 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_1.p1.strides: expected to be compact array\00", align 1
@.str.279 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.280 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.281 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.282 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_1.p2.ndim is expected to equal 4\00", align 1
@.str.283 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_1.p2.dtype is expected to be float32\00", align 1
@.str.284 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[0])\00", align 1
@.str.285 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_1.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[1])\00", align 1
@.str.286 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[2])\00", align 1
@.str.287 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_shape[3])\00", align 1
@.str.288 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_1.p2.strides: expected to be compact array\00", align 1
@.str.289 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.290 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.291 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.292 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_1.T_add.ndim is expected to equal 4\00", align 1
@.str.293 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_1.T_add.dtype is expected to be float32\00", align 1
@.str.294 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[0])\00", align 1
@.str.295 = private constant [258 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[1])\00", align 1
@.str.296 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[2])\00", align 1
@.str.297 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_shape[3])\00", align 1
@.str.298 = private constant [334 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_1_T_add_strides[1]), tvmgen_default_fused_nn_conv2d_add_1.T_add.strides: expected to be compact array\00", align 1
@.str.299 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.300 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.301 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_1.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.302 = private constant [44 x i8] c"tvmgen_default_fused_nn_conv2d_add_1_kernel\00", align 1
@.str.303 = private constant [87 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_2: num_args should be 4\00", align 1
@.str.304 = private constant [142 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_2: Expect arg[0] to be pointer\00", align 1
@.str.305 = private constant [142 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_2: Expect arg[1] to be pointer\00", align 1
@.str.306 = private constant [142 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_2: Expect arg[2] to be pointer\00", align 1
@.str.307 = private constant [154 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_conv2d_add_2: Expect arg[3] to be pointer\00", align 1
@.str.308 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_2.p0.ndim is expected to equal 4\00", align 1
@.str.309 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_2.p0.dtype is expected to be float32\00", align 1
@.str.310 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[0])\00", align 1
@.str.311 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_2.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[1])\00", align 1
@.str.312 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_2.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[2])\00", align 1
@.str.313 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_2.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_shape[3])\00", align 1
@.str.314 = private constant [322 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_2.p0.strides: expected to be compact array\00", align 1
@.str.315 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.316 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.317 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_2.p1.ndim is expected to equal 4\00", align 1
@.str.318 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_2.p1.dtype is expected to be float32\00", align 1
@.str.319 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[0]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_2.p1.shape[0] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[0])\00", align 1
@.str.320 = private constant [249 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_2.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[1])\00", align 1
@.str.321 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[2])\00", align 1
@.str.322 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_shape[3])\00", align 1
@.str.323 = private constant [244 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_2.p1.strides: expected to be compact array\00", align 1
@.str.324 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.325 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.326 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.327 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_2.p2.ndim is expected to equal 4\00", align 1
@.str.328 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_2.p2.dtype is expected to be float32\00", align 1
@.str.329 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[0])\00", align 1
@.str.330 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_2.p2.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[1])\00", align 1
@.str.331 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[2])\00", align 1
@.str.332 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_shape[3])\00", align 1
@.str.333 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_2.p2.strides: expected to be compact array\00", align 1
@.str.334 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.335 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.336 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.337 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_2.T_add.ndim is expected to equal 4\00", align 1
@.str.338 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_2.T_add.dtype is expected to be float32\00", align 1
@.str.339 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[0])\00", align 1
@.str.340 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[1])\00", align 1
@.str.341 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[2])\00", align 1
@.str.342 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_shape[3])\00", align 1
@.str.343 = private constant [334 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_2_T_add_strides[1]), tvmgen_default_fused_nn_conv2d_add_2.T_add.strides: expected to be compact array\00", align 1
@.str.344 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.345 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.346 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_2.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.347 = private constant [44 x i8] c"tvmgen_default_fused_nn_conv2d_add_2_kernel\00", align 1
@.str.348 = private constant [87 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_3: num_args should be 4\00", align 1
@.str.349 = private constant [142 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_3: Expect arg[0] to be pointer\00", align 1
@.str.350 = private constant [142 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_3: Expect arg[1] to be pointer\00", align 1
@.str.351 = private constant [142 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_3: Expect arg[2] to be pointer\00", align 1
@.str.352 = private constant [154 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_conv2d_add_3: Expect arg[3] to be pointer\00", align 1
@.str.353 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_3.p0.ndim is expected to equal 4\00", align 1
@.str.354 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_3.p0.dtype is expected to be float32\00", align 1
@.str.355 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[0])\00", align 1
@.str.356 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_3.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[1])\00", align 1
@.str.357 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_3.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[2])\00", align 1
@.str.358 = private constant [247 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_3.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_shape[3])\00", align 1
@.str.359 = private constant [322 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_3.p0.strides: expected to be compact array\00", align 1
@.str.360 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.361 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.362 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_3.p1.ndim is expected to equal 4\00", align 1
@.str.363 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_3.p1.dtype is expected to be float32\00", align 1
@.str.364 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[0]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_3.p1.shape[0] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[0])\00", align 1
@.str.365 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_3.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[1])\00", align 1
@.str.366 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[2])\00", align 1
@.str.367 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_shape[3])\00", align 1
@.str.368 = private constant [245 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_3.p1.strides: expected to be compact array\00", align 1
@.str.369 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.370 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.371 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.372 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_3.p2.ndim is expected to equal 4\00", align 1
@.str.373 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_3.p2.dtype is expected to be float32\00", align 1
@.str.374 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[0])\00", align 1
@.str.375 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_3.p2.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[1])\00", align 1
@.str.376 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[2])\00", align 1
@.str.377 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_shape[3])\00", align 1
@.str.378 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_3.p2.strides: expected to be compact array\00", align 1
@.str.379 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.380 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.381 = private constant [196 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.382 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_3.T_add.ndim is expected to equal 4\00", align 1
@.str.383 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_3.T_add.dtype is expected to be float32\00", align 1
@.str.384 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[0])\00", align 1
@.str.385 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[1])\00", align 1
@.str.386 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[2])\00", align 1
@.str.387 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_shape[3])\00", align 1
@.str.388 = private constant [332 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_3_T_add_strides[1]), tvmgen_default_fused_nn_conv2d_add_3.T_add.strides: expected to be compact array\00", align 1
@.str.389 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.390 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.391 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_3.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.392 = private constant [44 x i8] c"tvmgen_default_fused_nn_conv2d_add_3_kernel\00", align 1
@.str.393 = private constant [97 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: num_args should be 5\00", align 1
@.str.394 = private constant [152 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.395 = private constant [152 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.396 = private constant [152 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.397 = private constant [152 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.398 = private constant [168 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu: Expect arg[4] to be pointer\00", align 1
@.str.399 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.ndim is expected to equal 4\00", align 1
@.str.400 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.401 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[0])\00", align 1
@.str.402 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[1])\00", align 1
@.str.403 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[2])\00", align 1
@.str.404 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_shape[3])\00", align 1
@.str.405 = private constant [363 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.406 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.407 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.408 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.ndim is expected to equal 4\00", align 1
@.str.409 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.410 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[0])\00", align 1
@.str.411 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[1])\00", align 1
@.str.412 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[2])\00", align 1
@.str.413 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_shape[3])\00", align 1
@.str.414 = private constant [273 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.415 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.416 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.417 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.418 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.ndim is expected to equal 4\00", align 1
@.str.419 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.420 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[0])\00", align 1
@.str.421 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[1])\00", align 1
@.str.422 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[2])\00", align 1
@.str.423 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_shape[3])\00", align 1
@.str.424 = private constant [185 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.425 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.426 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.427 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.428 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.ndim is expected to equal 4\00", align 1
@.str.429 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.dtype is expected to be float32\00", align 1
@.str.430 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[0])\00", align 1
@.str.431 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[1])\00", align 1
@.str.432 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[2])\00", align 1
@.str.433 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_shape[3])\00", align 1
@.str.434 = private constant [363 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_p3_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides: expected to be compact array\00", align 1
@.str.435 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.436 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.437 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.438 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.ndim is expected to equal 4\00", align 1
@.str.439 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.440 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.441 = private constant [291 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.442 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.443 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.444 = private constant [379 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.445 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.446 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.447 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel = internal unnamed_addr global ptr null, align 8
@.str.448 = private constant [54 x i8] c"tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel\00", align 1
@.str.449 = private constant [99 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: num_args should be 5\00", align 1
@.str.450 = private constant [154 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: Expect arg[0] to be pointer\00", align 1
@.str.451 = private constant [154 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: Expect arg[1] to be pointer\00", align 1
@.str.452 = private constant [154 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: Expect arg[2] to be pointer\00", align 1
@.str.453 = private constant [154 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: Expect arg[3] to be pointer\00", align 1
@.str.454 = private constant [170 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1: Expect arg[4] to be pointer\00", align 1
@.str.455 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.ndim is expected to equal 4\00", align 1
@.str.456 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.dtype is expected to be float32\00", align 1
@.str.457 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[0])\00", align 1
@.str.458 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[1])\00", align 1
@.str.459 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[2])\00", align 1
@.str.460 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_shape[3])\00", align 1
@.str.461 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides: expected to be compact array\00", align 1
@.str.462 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.463 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.464 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.ndim is expected to equal 4\00", align 1
@.str.465 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.dtype is expected to be float32\00", align 1
@.str.466 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[0])\00", align 1
@.str.467 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[1])\00", align 1
@.str.468 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[2])\00", align 1
@.str.469 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_shape[3])\00", align 1
@.str.470 = private constant [280 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_strides[1]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.strides: expected to be compact array\00", align 1
@.str.471 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.472 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.473 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.474 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.ndim is expected to equal 4\00", align 1
@.str.475 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.dtype is expected to be float32\00", align 1
@.str.476 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[0])\00", align 1
@.str.477 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[1])\00", align 1
@.str.478 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[2])\00", align 1
@.str.479 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_shape[3])\00", align 1
@.str.480 = private constant [189 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.strides: expected to be compact array\00", align 1
@.str.481 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.482 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.483 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.484 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.ndim is expected to equal 4\00", align 1
@.str.485 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.dtype is expected to be float32\00", align 1
@.str.486 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[0])\00", align 1
@.str.487 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[1])\00", align 1
@.str.488 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[2])\00", align 1
@.str.489 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_shape[3])\00", align 1
@.str.490 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_p3_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides: expected to be compact array\00", align 1
@.str.491 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.492 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.493 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.494 = private constant [143 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.ndim is expected to equal 4\00", align 1
@.str.495 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.dtype is expected to be float32\00", align 1
@.str.496 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[0])\00", align 1
@.str.497 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[1])\00", align 1
@.str.498 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[2])\00", align 1
@.str.499 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_shape[3])\00", align 1
@.str.500 = private constant [386 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides: expected to be compact array\00", align 1
@.str.501 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.502 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.503 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.504 = private constant [56 x i8] c"tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel\00", align 1
@.str.505 = private constant [99 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: num_args should be 5\00", align 1
@.str.506 = private constant [154 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: Expect arg[0] to be pointer\00", align 1
@.str.507 = private constant [154 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: Expect arg[1] to be pointer\00", align 1
@.str.508 = private constant [154 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: Expect arg[2] to be pointer\00", align 1
@.str.509 = private constant [154 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: Expect arg[3] to be pointer\00", align 1
@.str.510 = private constant [170 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2: Expect arg[4] to be pointer\00", align 1
@.str.511 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.ndim is expected to equal 4\00", align 1
@.str.512 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.dtype is expected to be float32\00", align 1
@.str.513 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[0])\00", align 1
@.str.514 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[1])\00", align 1
@.str.515 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[2])\00", align 1
@.str.516 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_shape[3])\00", align 1
@.str.517 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides: expected to be compact array\00", align 1
@.str.518 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.519 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.520 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.ndim is expected to equal 4\00", align 1
@.str.521 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.dtype is expected to be float32\00", align 1
@.str.522 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[0]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape[0] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[0])\00", align 1
@.str.523 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[1])\00", align 1
@.str.524 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[2])\00", align 1
@.str.525 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_shape[3])\00", align 1
@.str.526 = private constant [280 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.strides: expected to be compact array\00", align 1
@.str.527 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.528 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.529 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.530 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.ndim is expected to equal 4\00", align 1
@.str.531 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.dtype is expected to be float32\00", align 1
@.str.532 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[0])\00", align 1
@.str.533 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[1])\00", align 1
@.str.534 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[2])\00", align 1
@.str.535 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_shape[3])\00", align 1
@.str.536 = private constant [189 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.strides: expected to be compact array\00", align 1
@.str.537 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.538 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.539 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.540 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.ndim is expected to equal 4\00", align 1
@.str.541 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.dtype is expected to be float32\00", align 1
@.str.542 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[0])\00", align 1
@.str.543 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[1])\00", align 1
@.str.544 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[2])\00", align 1
@.str.545 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_shape[3])\00", align 1
@.str.546 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_p3_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides: expected to be compact array\00", align 1
@.str.547 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.548 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.549 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.550 = private constant [143 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.ndim is expected to equal 4\00", align 1
@.str.551 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.dtype is expected to be float32\00", align 1
@.str.552 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[0])\00", align 1
@.str.553 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[1])\00", align 1
@.str.554 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[2])\00", align 1
@.str.555 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_shape[3])\00", align 1
@.str.556 = private constant [386 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides: expected to be compact array\00", align 1
@.str.557 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.558 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.559 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.560 = private constant [56 x i8] c"tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel\00", align 1
@.str.561 = private constant [99 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: num_args should be 5\00", align 1
@.str.562 = private constant [154 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: Expect arg[0] to be pointer\00", align 1
@.str.563 = private constant [154 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: Expect arg[1] to be pointer\00", align 1
@.str.564 = private constant [154 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: Expect arg[2] to be pointer\00", align 1
@.str.565 = private constant [154 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: Expect arg[3] to be pointer\00", align 1
@.str.566 = private constant [170 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3: Expect arg[4] to be pointer\00", align 1
@.str.567 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.ndim is expected to equal 4\00", align 1
@.str.568 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.dtype is expected to be float32\00", align 1
@.str.569 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[0])\00", align 1
@.str.570 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[1])\00", align 1
@.str.571 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[2])\00", align 1
@.str.572 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_shape[3])\00", align 1
@.str.573 = private constant [368 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides: expected to be compact array\00", align 1
@.str.574 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.575 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.576 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.ndim is expected to equal 4\00", align 1
@.str.577 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.dtype is expected to be float32\00", align 1
@.str.578 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[0]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape[0] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[0])\00", align 1
@.str.579 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[1])\00", align 1
@.str.580 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[2])\00", align 1
@.str.581 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_shape[3])\00", align 1
@.str.582 = private constant [280 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.strides: expected to be compact array\00", align 1
@.str.583 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.584 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.585 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.586 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.ndim is expected to equal 4\00", align 1
@.str.587 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.dtype is expected to be float32\00", align 1
@.str.588 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[0])\00", align 1
@.str.589 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[1])\00", align 1
@.str.590 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[2])\00", align 1
@.str.591 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_shape[3])\00", align 1
@.str.592 = private constant [189 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.strides: expected to be compact array\00", align 1
@.str.593 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.594 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.595 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.596 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.ndim is expected to equal 4\00", align 1
@.str.597 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.dtype is expected to be float32\00", align 1
@.str.598 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[0])\00", align 1
@.str.599 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[1])\00", align 1
@.str.600 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[2])\00", align 1
@.str.601 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_shape[3])\00", align 1
@.str.602 = private constant [368 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_p3_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides: expected to be compact array\00", align 1
@.str.603 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.604 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.605 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.606 = private constant [143 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.ndim is expected to equal 4\00", align 1
@.str.607 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.dtype is expected to be float32\00", align 1
@.str.608 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[0])\00", align 1
@.str.609 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[1])\00", align 1
@.str.610 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[2])\00", align 1
@.str.611 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_shape[3])\00", align 1
@.str.612 = private constant [384 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides: expected to be compact array\00", align 1
@.str.613 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.614 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.615 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.616 = private constant [56 x i8] c"tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel\00", align 1
@.str.617 = private constant [93 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu: num_args should be 4\00", align 1
@.str.618 = private constant [148 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.619 = private constant [148 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.620 = private constant [148 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.621 = private constant [164 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.622 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.ndim is expected to equal 4\00", align 1
@.str.623 = private constant [253 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.624 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[0])\00", align 1
@.str.625 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[1]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[1])\00", align 1
@.str.626 = private constant [267 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[2]) == 224, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[2])\00", align 1
@.str.627 = private constant [267 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[3]) == 224, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_shape[3])\00", align 1
@.str.628 = private constant [349 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.629 = private constant [216 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.630 = private constant [196 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.631 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.ndim is expected to equal 4\00", align 1
@.str.632 = private constant [253 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.633 = private constant [265 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[0])\00", align 1
@.str.634 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[1]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[1])\00", align 1
@.str.635 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[2])\00", align 1
@.str.636 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_shape[3])\00", align 1
@.str.637 = private constant [429 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_strides[1]) and 147 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.638 = private constant [216 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.639 = private constant [196 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.640 = private constant [202 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.641 = private constant [129 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.ndim is expected to equal 4\00", align 1
@.str.642 = private constant [253 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.643 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[0])\00", align 1
@.str.644 = private constant [265 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[1])\00", align 1
@.str.645 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[2])\00", align 1
@.str.646 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_shape[3])\00", align 1
@.str.647 = private constant [177 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.648 = private constant [216 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.649 = private constant [196 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.650 = private constant [202 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.651 = private constant [137 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.ndim is expected to equal 4\00", align 1
@.str.652 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.653 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.654 = private constant [277 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.655 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[2]) == 112, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.656 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[3]) == 112, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.657 = private constant [365 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.658 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.659 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.660 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel = internal unnamed_addr global ptr null, align 8
@.str.661 = private constant [50 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel\00", align 1
@.str.662 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_1: num_args should be 4\00", align 1
@.str.663 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_1: Expect arg[0] to be pointer\00", align 1
@.str.664 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_1: Expect arg[1] to be pointer\00", align 1
@.str.665 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_1: Expect arg[2] to be pointer\00", align 1
@.str.666 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_1: Expect arg[3] to be pointer\00", align 1
@.str.667 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.ndim is expected to equal 4\00", align 1
@.str.668 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.dtype is expected to be float32\00", align 1
@.str.669 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[0])\00", align 1
@.str.670 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[1])\00", align 1
@.str.671 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[2])\00", align 1
@.str.672 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_shape[3])\00", align 1
@.str.673 = private constant [355 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides: expected to be compact array\00", align 1
@.str.674 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.675 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.676 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.ndim is expected to equal 4\00", align 1
@.str.677 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.dtype is expected to be float32\00", align 1
@.str.678 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[0])\00", align 1
@.str.679 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[1])\00", align 1
@.str.680 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[2])\00", align 1
@.str.681 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_shape[3])\00", align 1
@.str.682 = private constant [267 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.strides: expected to be compact array\00", align 1
@.str.683 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.684 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.685 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.686 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.ndim is expected to equal 4\00", align 1
@.str.687 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.dtype is expected to be float32\00", align 1
@.str.688 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[0])\00", align 1
@.str.689 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[1])\00", align 1
@.str.690 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[2])\00", align 1
@.str.691 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_shape[3])\00", align 1
@.str.692 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.strides: expected to be compact array\00", align 1
@.str.693 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.694 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.695 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.696 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.ndim is expected to equal 4\00", align 1
@.str.697 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.dtype is expected to be float32\00", align 1
@.str.698 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[0])\00", align 1
@.str.699 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[1])\00", align 1
@.str.700 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[2])\00", align 1
@.str.701 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_shape[3])\00", align 1
@.str.702 = private constant [371 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_1_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides: expected to be compact array\00", align 1
@.str.703 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.704 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.705 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.706 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel\00", align 1
@.str.707 = private constant [96 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_10: num_args should be 4\00", align 1
@.str.708 = private constant [151 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_10: Expect arg[0] to be pointer\00", align 1
@.str.709 = private constant [151 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_10: Expect arg[1] to be pointer\00", align 1
@.str.710 = private constant [151 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_10: Expect arg[2] to be pointer\00", align 1
@.str.711 = private constant [167 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_10: Expect arg[3] to be pointer\00", align 1
@.str.712 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.ndim is expected to equal 4\00", align 1
@.str.713 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.dtype is expected to be float32\00", align 1
@.str.714 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[0])\00", align 1
@.str.715 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[1])\00", align 1
@.str.716 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[2])\00", align 1
@.str.717 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_shape[3])\00", align 1
@.str.718 = private constant [358 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides: expected to be compact array\00", align 1
@.str.719 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.720 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.721 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.ndim is expected to equal 4\00", align 1
@.str.722 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.dtype is expected to be float32\00", align 1
@.str.723 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[0])\00", align 1
@.str.724 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[1])\00", align 1
@.str.725 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[2])\00", align 1
@.str.726 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_shape[3])\00", align 1
@.str.727 = private constant [444 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides: expected to be compact array\00", align 1
@.str.728 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.729 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.730 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.731 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.ndim is expected to equal 4\00", align 1
@.str.732 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.dtype is expected to be float32\00", align 1
@.str.733 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[0])\00", align 1
@.str.734 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[1])\00", align 1
@.str.735 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[2])\00", align 1
@.str.736 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_shape[3])\00", align 1
@.str.737 = private constant [183 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.strides: expected to be compact array\00", align 1
@.str.738 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.739 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.740 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.741 = private constant [140 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.ndim is expected to equal 4\00", align 1
@.str.742 = private constant [272 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.dtype is expected to be float32\00", align 1
@.str.743 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[0])\00", align 1
@.str.744 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[1])\00", align 1
@.str.745 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[2])\00", align 1
@.str.746 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_shape[3])\00", align 1
@.str.747 = private constant [372 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_10_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides: expected to be compact array\00", align 1
@.str.748 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.749 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.750 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel = internal unnamed_addr global ptr null, align 8
@.str.751 = private constant [53 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel\00", align 1
@.str.752 = private constant [96 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_11: num_args should be 4\00", align 1
@.str.753 = private constant [151 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_11: Expect arg[0] to be pointer\00", align 1
@.str.754 = private constant [151 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_11: Expect arg[1] to be pointer\00", align 1
@.str.755 = private constant [151 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_11: Expect arg[2] to be pointer\00", align 1
@.str.756 = private constant [167 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_11: Expect arg[3] to be pointer\00", align 1
@.str.757 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.ndim is expected to equal 4\00", align 1
@.str.758 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.dtype is expected to be float32\00", align 1
@.str.759 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[0])\00", align 1
@.str.760 = private constant [278 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[1])\00", align 1
@.str.761 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[2])\00", align 1
@.str.762 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_shape[3])\00", align 1
@.str.763 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides: expected to be compact array\00", align 1
@.str.764 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.765 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.766 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.ndim is expected to equal 4\00", align 1
@.str.767 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.dtype is expected to be float32\00", align 1
@.str.768 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[0])\00", align 1
@.str.769 = private constant [278 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[1])\00", align 1
@.str.770 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[2])\00", align 1
@.str.771 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_shape[3])\00", align 1
@.str.772 = private constant [272 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.strides: expected to be compact array\00", align 1
@.str.773 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.774 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.775 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.776 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.ndim is expected to equal 4\00", align 1
@.str.777 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.dtype is expected to be float32\00", align 1
@.str.778 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[0])\00", align 1
@.str.779 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[1])\00", align 1
@.str.780 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[2])\00", align 1
@.str.781 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_shape[3])\00", align 1
@.str.782 = private constant [183 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.strides: expected to be compact array\00", align 1
@.str.783 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.784 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.785 = private constant [205 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.786 = private constant [140 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.ndim is expected to equal 4\00", align 1
@.str.787 = private constant [272 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.dtype is expected to be float32\00", align 1
@.str.788 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[0])\00", align 1
@.str.789 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[1])\00", align 1
@.str.790 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[2])\00", align 1
@.str.791 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_shape[3])\00", align 1
@.str.792 = private constant [372 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_11_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides: expected to be compact array\00", align 1
@.str.793 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.794 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.795 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel = internal unnamed_addr global ptr null, align 8
@.str.796 = private constant [53 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel\00", align 1
@.str.797 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_2: num_args should be 4\00", align 1
@.str.798 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_2: Expect arg[0] to be pointer\00", align 1
@.str.799 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_2: Expect arg[1] to be pointer\00", align 1
@.str.800 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_2: Expect arg[2] to be pointer\00", align 1
@.str.801 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_2: Expect arg[3] to be pointer\00", align 1
@.str.802 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.ndim is expected to equal 4\00", align 1
@.str.803 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.dtype is expected to be float32\00", align 1
@.str.804 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[0])\00", align 1
@.str.805 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[1])\00", align 1
@.str.806 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[2])\00", align 1
@.str.807 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_shape[3])\00", align 1
@.str.808 = private constant [355 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides: expected to be compact array\00", align 1
@.str.809 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.810 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.811 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.ndim is expected to equal 4\00", align 1
@.str.812 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.dtype is expected to be float32\00", align 1
@.str.813 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[0])\00", align 1
@.str.814 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[1])\00", align 1
@.str.815 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[2])\00", align 1
@.str.816 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_shape[3])\00", align 1
@.str.817 = private constant [268 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.strides: expected to be compact array\00", align 1
@.str.818 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.819 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.820 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.821 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.ndim is expected to equal 4\00", align 1
@.str.822 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.dtype is expected to be float32\00", align 1
@.str.823 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[0])\00", align 1
@.str.824 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[1])\00", align 1
@.str.825 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[2])\00", align 1
@.str.826 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_shape[3])\00", align 1
@.str.827 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.strides: expected to be compact array\00", align 1
@.str.828 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.829 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.830 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.831 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.ndim is expected to equal 4\00", align 1
@.str.832 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.dtype is expected to be float32\00", align 1
@.str.833 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[0])\00", align 1
@.str.834 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[1])\00", align 1
@.str.835 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[2])\00", align 1
@.str.836 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_shape[3])\00", align 1
@.str.837 = private constant [371 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_2_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides: expected to be compact array\00", align 1
@.str.838 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.839 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.840 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.841 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel\00", align 1
@.str.842 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_3: num_args should be 4\00", align 1
@.str.843 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_3: Expect arg[0] to be pointer\00", align 1
@.str.844 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_3: Expect arg[1] to be pointer\00", align 1
@.str.845 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_3: Expect arg[2] to be pointer\00", align 1
@.str.846 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_3: Expect arg[3] to be pointer\00", align 1
@.str.847 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.ndim is expected to equal 4\00", align 1
@.str.848 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.dtype is expected to be float32\00", align 1
@.str.849 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[0])\00", align 1
@.str.850 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[1])\00", align 1
@.str.851 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[2])\00", align 1
@.str.852 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_shape[3])\00", align 1
@.str.853 = private constant [355 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides: expected to be compact array\00", align 1
@.str.854 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.855 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.856 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.ndim is expected to equal 4\00", align 1
@.str.857 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.dtype is expected to be float32\00", align 1
@.str.858 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[0])\00", align 1
@.str.859 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[1])\00", align 1
@.str.860 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[2])\00", align 1
@.str.861 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_shape[3])\00", align 1
@.str.862 = private constant [268 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.strides: expected to be compact array\00", align 1
@.str.863 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.864 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.865 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.866 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.ndim is expected to equal 4\00", align 1
@.str.867 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.dtype is expected to be float32\00", align 1
@.str.868 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[0])\00", align 1
@.str.869 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[1])\00", align 1
@.str.870 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[2])\00", align 1
@.str.871 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_shape[3])\00", align 1
@.str.872 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.strides: expected to be compact array\00", align 1
@.str.873 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.874 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.875 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.876 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.ndim is expected to equal 4\00", align 1
@.str.877 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.dtype is expected to be float32\00", align 1
@.str.878 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[0])\00", align 1
@.str.879 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[1])\00", align 1
@.str.880 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[2])\00", align 1
@.str.881 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_shape[3])\00", align 1
@.str.882 = private constant [371 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_3_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides: expected to be compact array\00", align 1
@.str.883 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.884 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.885 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.886 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel\00", align 1
@.str.887 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_4: num_args should be 4\00", align 1
@.str.888 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_4: Expect arg[0] to be pointer\00", align 1
@.str.889 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_4: Expect arg[1] to be pointer\00", align 1
@.str.890 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_4: Expect arg[2] to be pointer\00", align 1
@.str.891 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_4: Expect arg[3] to be pointer\00", align 1
@.str.892 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.ndim is expected to equal 4\00", align 1
@.str.893 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.dtype is expected to be float32\00", align 1
@.str.894 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[0])\00", align 1
@.str.895 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[1])\00", align 1
@.str.896 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[2])\00", align 1
@.str.897 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_shape[3])\00", align 1
@.str.898 = private constant [355 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides: expected to be compact array\00", align 1
@.str.899 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.900 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.901 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.ndim is expected to equal 4\00", align 1
@.str.902 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.dtype is expected to be float32\00", align 1
@.str.903 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[0])\00", align 1
@.str.904 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[1])\00", align 1
@.str.905 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[2])\00", align 1
@.str.906 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_shape[3])\00", align 1
@.str.907 = private constant [439 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_strides[1]) and 1152 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides: expected to be compact array\00", align 1
@.str.908 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.909 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.910 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.911 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.ndim is expected to equal 4\00", align 1
@.str.912 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.dtype is expected to be float32\00", align 1
@.str.913 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[0])\00", align 1
@.str.914 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[1])\00", align 1
@.str.915 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[2])\00", align 1
@.str.916 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_shape[3])\00", align 1
@.str.917 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.strides: expected to be compact array\00", align 1
@.str.918 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.919 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.920 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.921 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.ndim is expected to equal 4\00", align 1
@.str.922 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.dtype is expected to be float32\00", align 1
@.str.923 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[0])\00", align 1
@.str.924 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[1])\00", align 1
@.str.925 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[2])\00", align 1
@.str.926 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_shape[3])\00", align 1
@.str.927 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_4_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides: expected to be compact array\00", align 1
@.str.928 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.929 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.930 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel = internal unnamed_addr global ptr null, align 8
@.str.931 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel\00", align 1
@.str.932 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_5: num_args should be 4\00", align 1
@.str.933 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_5: Expect arg[0] to be pointer\00", align 1
@.str.934 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_5: Expect arg[1] to be pointer\00", align 1
@.str.935 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_5: Expect arg[2] to be pointer\00", align 1
@.str.936 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_5: Expect arg[3] to be pointer\00", align 1
@.str.937 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.ndim is expected to equal 4\00", align 1
@.str.938 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.dtype is expected to be float32\00", align 1
@.str.939 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[0])\00", align 1
@.str.940 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[1])\00", align 1
@.str.941 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[2])\00", align 1
@.str.942 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_shape[3])\00", align 1
@.str.943 = private constant [354 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides: expected to be compact array\00", align 1
@.str.944 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.945 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.946 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.ndim is expected to equal 4\00", align 1
@.str.947 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.dtype is expected to be float32\00", align 1
@.str.948 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[0])\00", align 1
@.str.949 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[1])\00", align 1
@.str.950 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[2])\00", align 1
@.str.951 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_shape[3])\00", align 1
@.str.952 = private constant [268 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.strides: expected to be compact array\00", align 1
@.str.953 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.954 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.955 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.956 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.ndim is expected to equal 4\00", align 1
@.str.957 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.dtype is expected to be float32\00", align 1
@.str.958 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[0])\00", align 1
@.str.959 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[1])\00", align 1
@.str.960 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[2])\00", align 1
@.str.961 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_shape[3])\00", align 1
@.str.962 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.strides: expected to be compact array\00", align 1
@.str.963 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.964 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.965 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.966 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.ndim is expected to equal 4\00", align 1
@.str.967 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.dtype is expected to be float32\00", align 1
@.str.968 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[0])\00", align 1
@.str.969 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[1])\00", align 1
@.str.970 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[2])\00", align 1
@.str.971 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_shape[3])\00", align 1
@.str.972 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_5_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides: expected to be compact array\00", align 1
@.str.973 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.974 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.975 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel = internal unnamed_addr global ptr null, align 8
@.str.976 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel\00", align 1
@.str.977 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_6: num_args should be 4\00", align 1
@.str.978 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_6: Expect arg[0] to be pointer\00", align 1
@.str.979 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_6: Expect arg[1] to be pointer\00", align 1
@.str.980 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_6: Expect arg[2] to be pointer\00", align 1
@.str.981 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_6: Expect arg[3] to be pointer\00", align 1
@.str.982 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.ndim is expected to equal 4\00", align 1
@.str.983 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.dtype is expected to be float32\00", align 1
@.str.984 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[0])\00", align 1
@.str.985 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[1])\00", align 1
@.str.986 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[2])\00", align 1
@.str.987 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_shape[3])\00", align 1
@.str.988 = private constant [354 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides: expected to be compact array\00", align 1
@.str.989 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.990 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.991 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.ndim is expected to equal 4\00", align 1
@.str.992 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.dtype is expected to be float32\00", align 1
@.str.993 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[0])\00", align 1
@.str.994 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[1])\00", align 1
@.str.995 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[2])\00", align 1
@.str.996 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_shape[3])\00", align 1
@.str.997 = private constant [268 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.strides: expected to be compact array\00", align 1
@.str.998 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.999 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1000 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1001 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.ndim is expected to equal 4\00", align 1
@.str.1002 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.dtype is expected to be float32\00", align 1
@.str.1003 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[0])\00", align 1
@.str.1004 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[1])\00", align 1
@.str.1005 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[2])\00", align 1
@.str.1006 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_shape[3])\00", align 1
@.str.1007 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.strides: expected to be compact array\00", align 1
@.str.1008 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1009 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1010 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1011 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.ndim is expected to equal 4\00", align 1
@.str.1012 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.dtype is expected to be float32\00", align 1
@.str.1013 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[0])\00", align 1
@.str.1014 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[1])\00", align 1
@.str.1015 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[2])\00", align 1
@.str.1016 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_shape[3])\00", align 1
@.str.1017 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_6_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides: expected to be compact array\00", align 1
@.str.1018 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1019 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1020 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel = internal unnamed_addr global ptr null, align 8
@.str.1021 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel\00", align 1
@.str.1022 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_7: num_args should be 4\00", align 1
@.str.1023 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_7: Expect arg[0] to be pointer\00", align 1
@.str.1024 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_7: Expect arg[1] to be pointer\00", align 1
@.str.1025 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_7: Expect arg[2] to be pointer\00", align 1
@.str.1026 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_7: Expect arg[3] to be pointer\00", align 1
@.str.1027 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.ndim is expected to equal 4\00", align 1
@.str.1028 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.dtype is expected to be float32\00", align 1
@.str.1029 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[0])\00", align 1
@.str.1030 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[1])\00", align 1
@.str.1031 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[2])\00", align 1
@.str.1032 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_shape[3])\00", align 1
@.str.1033 = private constant [354 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides: expected to be compact array\00", align 1
@.str.1034 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1035 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1036 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.ndim is expected to equal 4\00", align 1
@.str.1037 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.dtype is expected to be float32\00", align 1
@.str.1038 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[0])\00", align 1
@.str.1039 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[1])\00", align 1
@.str.1040 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[2])\00", align 1
@.str.1041 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_shape[3])\00", align 1
@.str.1042 = private constant [439 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_strides[1]) and 2304 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides: expected to be compact array\00", align 1
@.str.1043 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1044 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1045 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1046 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.ndim is expected to equal 4\00", align 1
@.str.1047 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.dtype is expected to be float32\00", align 1
@.str.1048 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[0])\00", align 1
@.str.1049 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[1])\00", align 1
@.str.1050 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[2])\00", align 1
@.str.1051 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_shape[3])\00", align 1
@.str.1052 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.strides: expected to be compact array\00", align 1
@.str.1053 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1054 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1055 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1056 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.ndim is expected to equal 4\00", align 1
@.str.1057 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.dtype is expected to be float32\00", align 1
@.str.1058 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[0])\00", align 1
@.str.1059 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[1])\00", align 1
@.str.1060 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[2])\00", align 1
@.str.1061 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_shape[3])\00", align 1
@.str.1062 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_7_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides: expected to be compact array\00", align 1
@.str.1063 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1064 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1065 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel = internal unnamed_addr global ptr null, align 8
@.str.1066 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel\00", align 1
@.str.1067 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_8: num_args should be 4\00", align 1
@.str.1068 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_8: Expect arg[0] to be pointer\00", align 1
@.str.1069 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_8: Expect arg[1] to be pointer\00", align 1
@.str.1070 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_8: Expect arg[2] to be pointer\00", align 1
@.str.1071 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_8: Expect arg[3] to be pointer\00", align 1
@.str.1072 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.ndim is expected to equal 4\00", align 1
@.str.1073 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.dtype is expected to be float32\00", align 1
@.str.1074 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[0])\00", align 1
@.str.1075 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[1])\00", align 1
@.str.1076 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[2])\00", align 1
@.str.1077 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_shape[3])\00", align 1
@.str.1078 = private constant [354 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides: expected to be compact array\00", align 1
@.str.1079 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1080 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1081 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.ndim is expected to equal 4\00", align 1
@.str.1082 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.dtype is expected to be float32\00", align 1
@.str.1083 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[0])\00", align 1
@.str.1084 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[1])\00", align 1
@.str.1085 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[2])\00", align 1
@.str.1086 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_shape[3])\00", align 1
@.str.1087 = private constant [269 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.strides: expected to be compact array\00", align 1
@.str.1088 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1089 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1090 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1091 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.ndim is expected to equal 4\00", align 1
@.str.1092 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.dtype is expected to be float32\00", align 1
@.str.1093 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[0])\00", align 1
@.str.1094 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[1])\00", align 1
@.str.1095 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[2])\00", align 1
@.str.1096 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_shape[3])\00", align 1
@.str.1097 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.strides: expected to be compact array\00", align 1
@.str.1098 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1099 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1100 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1101 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.ndim is expected to equal 4\00", align 1
@.str.1102 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.dtype is expected to be float32\00", align 1
@.str.1103 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[0])\00", align 1
@.str.1104 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[1])\00", align 1
@.str.1105 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[2])\00", align 1
@.str.1106 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_shape[3])\00", align 1
@.str.1107 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_8_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides: expected to be compact array\00", align 1
@.str.1108 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1109 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1110 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel = internal unnamed_addr global ptr null, align 8
@.str.1111 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel\00", align 1
@.str.1112 = private constant [95 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_9: num_args should be 4\00", align 1
@.str.1113 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_9: Expect arg[0] to be pointer\00", align 1
@.str.1114 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_9: Expect arg[1] to be pointer\00", align 1
@.str.1115 = private constant [150 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_9: Expect arg[2] to be pointer\00", align 1
@.str.1116 = private constant [166 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_conv2d_add_nn_relu_9: Expect arg[3] to be pointer\00", align 1
@.str.1117 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.ndim is expected to equal 4\00", align 1
@.str.1118 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.dtype is expected to be float32\00", align 1
@.str.1119 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[0])\00", align 1
@.str.1120 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[1])\00", align 1
@.str.1121 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[2])\00", align 1
@.str.1122 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_shape[3])\00", align 1
@.str.1123 = private constant [354 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides: expected to be compact array\00", align 1
@.str.1124 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1125 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1126 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.ndim is expected to equal 4\00", align 1
@.str.1127 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.dtype is expected to be float32\00", align 1
@.str.1128 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[0])\00", align 1
@.str.1129 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[1])\00", align 1
@.str.1130 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[2])\00", align 1
@.str.1131 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_shape[3])\00", align 1
@.str.1132 = private constant [269 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.strides: expected to be compact array\00", align 1
@.str.1133 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1134 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1135 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1136 = private constant [131 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.ndim is expected to equal 4\00", align 1
@.str.1137 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.dtype is expected to be float32\00", align 1
@.str.1138 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[0])\00", align 1
@.str.1139 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[1])\00", align 1
@.str.1140 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[2])\00", align 1
@.str.1141 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_shape[3])\00", align 1
@.str.1142 = private constant [181 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_p2_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.strides: expected to be compact array\00", align 1
@.str.1143 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1144 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1145 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1146 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.ndim is expected to equal 4\00", align 1
@.str.1147 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.dtype is expected to be float32\00", align 1
@.str.1148 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[0])\00", align 1
@.str.1149 = private constant [285 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[1])\00", align 1
@.str.1150 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[2])\00", align 1
@.str.1151 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_shape[3])\00", align 1
@.str.1152 = private constant [370 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_nn_relu_9_T_relu_strides[1]), tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides: expected to be compact array\00", align 1
@.str.1153 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1154 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1155 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel = internal unnamed_addr global ptr null, align 8
@.str.1156 = private constant [52 x i8] c"tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel\00", align 1
@.str.1157 = private constant [84 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_dense_add: num_args should be 4\00", align 1
@.str.1158 = private constant [139 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[0] to be pointer\00", align 1
@.str.1159 = private constant [139 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[1] to be pointer\00", align 1
@.str.1160 = private constant [139 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[2] to be pointer\00", align 1
@.str.1161 = private constant [151 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[3] to be pointer\00", align 1
@.str.1162 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p0.ndim is expected to equal 2\00", align 1
@.str.1163 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p0.dtype is expected to be float32\00", align 1
@.str.1164 = private constant [236 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[0])\00", align 1
@.str.1165 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_dense_add.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[1])\00", align 1
@.str.1166 = private constant [159 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_strides[1]), tvmgen_default_fused_nn_dense_add.p0.strides: expected to be compact array\00", align 1
@.str.1167 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1168 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1169 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p1.ndim is expected to equal 2\00", align 1
@.str.1170 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p1.dtype is expected to be float32\00", align 1
@.str.1171 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[0]) == 1000, Argument tvmgen_default_fused_nn_dense_add.p1.shape[0] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[0])\00", align 1
@.str.1172 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_dense_add.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[1])\00", align 1
@.str.1173 = private constant [236 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_strides[0]), tvmgen_default_fused_nn_dense_add.p1.strides: expected to be compact array\00", align 1
@.str.1174 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1175 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1176 = private constant [193 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1177 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p2.ndim is expected to equal 2\00", align 1
@.str.1178 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p2.dtype is expected to be float32\00", align 1
@.str.1179 = private constant [236 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[0])\00", align 1
@.str.1180 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[1]) == 1000, Argument tvmgen_default_fused_nn_dense_add.p2.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[1])\00", align 1
@.str.1181 = private constant [159 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_strides[1]), tvmgen_default_fused_nn_dense_add.p2.strides: expected to be compact array\00", align 1
@.str.1182 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1183 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1184 = private constant [193 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1185 = private constant [126 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.T_add.ndim is expected to equal 2\00", align 1
@.str.1186 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.T_add.dtype is expected to be float32\00", align 1
@.str.1187 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[0])\00", align 1
@.str.1188 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[1]) == 1000, Argument tvmgen_default_fused_nn_dense_add.T_add.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[1])\00", align 1
@.str.1189 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_strides[1]), tvmgen_default_fused_nn_dense_add.T_add.strides: expected to be compact array\00", align 1
@.str.1190 = private constant [216 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.1191 = private constant [196 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.1192 = private constant [202 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_dense_add_kernel = internal unnamed_addr global ptr null, align 8
@.str.1193 = private constant [41 x i8] c"tvmgen_default_fused_nn_dense_add_kernel\00", align 1
@.str.1194 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_max_pool2d: num_args should be 2\00", align 1
@.str.1195 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.1196 = private constant [164 x i8] c"Assert fail: pool_max_code == 3 or pool_max_code == 13 or pool_max_code == 7 or pool_max_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.1197 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.p0.ndim is expected to equal 4\00", align 1
@.str.1198 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.1199 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0])\00", align 1
@.str.1200 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1])\00", align 1
@.str.1201 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2])\00", align 1
@.str.1202 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3])\00", align 1
@.str.1203 = private constant [317 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[1]), tvmgen_default_fused_nn_max_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.1204 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1205 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_max_pool2d.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1206 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(pool_max, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.pool_max.ndim is expected to equal 4\00", align 1
@.str.1207 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(pool_max, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(pool_max, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.pool_max.dtype is expected to be float32\00", align 1
@.str.1208 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0])\00", align 1
@.str.1209 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1]) == 64, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1])\00", align 1
@.str.1210 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2])\00", align 1
@.str.1211 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3])\00", align 1
@.str.1212 = private constant [339 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[1]), tvmgen_default_fused_nn_max_pool2d.pool_max.strides: expected to be compact array\00", align 1
@.str.1213 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22)\00", align 1
@.str.1214 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(pool_max, 0, 10, \22int32\22)\00", align 1
@.str.1215 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel = internal unnamed_addr global ptr null, align 8
@.str.1216 = private constant [42 x i8] c"tvmgen_default_fused_nn_max_pool2d_kernel\00", align 1
@.str.1217 = private constant [87 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_reshape_squeeze: num_args should be 2\00", align 1
@.str.1218 = private constant [142 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_reshape_squeeze: Expect arg[0] to be pointer\00", align 1
@.str.1219 = private constant [170 x i8] c"Assert fail: T_squeeze_code == 3 or T_squeeze_code == 13 or T_squeeze_code == 7 or T_squeeze_code == 4, tvmgen_default_fused_reshape_squeeze: Expect arg[1] to be pointer\00", align 1
@.str.1220 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_reshape_squeeze.p0.ndim is expected to equal 4\00", align 1
@.str.1221 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_reshape_squeeze.p0.dtype is expected to be float32\00", align 1
@.str.1222 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[0]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[0])\00", align 1
@.str.1223 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[1]) == 2048, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[1])\00", align 1
@.str.1224 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[2]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[2])\00", align 1
@.str.1225 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[3]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[3])\00", align 1
@.str.1226 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_strides[1]), tvmgen_default_fused_reshape_squeeze.p0.strides: expected to be compact array\00", align 1
@.str.1227 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_reshape_squeeze.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1228 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_reshape_squeeze.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1229 = private constant [137 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_squeeze, 0, 4, \22int32\22), tvmgen_default_fused_reshape_squeeze.T_squeeze.ndim is expected to equal 2\00", align 1
@.str.1230 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_squeeze, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_squeeze, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_reshape_squeeze.T_squeeze.dtype is expected to be float32\00", align 1
@.str.1231 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[0]) == 1, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[0])\00", align 1
@.str.1232 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[1]) == 2048, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[1])\00", align 1
@.str.1233 = private constant [179 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_strides[1]), tvmgen_default_fused_reshape_squeeze.T_squeeze.strides: expected to be compact array\00", align 1
@.str.1234 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22), Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22)\00", align 1
@.str.1235 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22)\00", align 1
@.str.1236 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22), Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel = internal unnamed_addr global ptr null, align 8
@.str.1237 = private constant [44 x i8] c"tvmgen_default_fused_reshape_squeeze_kernel\00", align 1
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

define dllexport i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !11, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !12, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !13, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !14, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !15, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = alloca ptr, align 8, !dbg !17
  %stack_value59 = alloca [6 x %0], align 8, !dbg !17
  %stack_tcode60 = alloca [6 x i32], align 4, !dbg !17
  %1 = icmp eq i32 %num_args, 2, !dbg !17
  br i1 %1, label %assert_end, label %assert_fail, !dbg !17, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %131, %handle_init ], [ %134, %handle_init_end ], [ %137, %call_end52 ]
  ret i32 %common.ret.op, !dbg !17

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %2(ptr nonnull @.str), !dbg !17
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !17, !tbaa !22
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !17
  %adaptive_pool_avg.code = load i32, ptr %3, align 4, !dbg !17, !tbaa !33
  %p0 = load ptr, ptr %args, align 8, !dbg !17
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !17
  %adaptive_pool_avg = load ptr, ptr %4, align 8, !dbg !17
  %p053 = load ptr, ptr %p0, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p053, i64 64) ], !dbg !17
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape = load ptr, ptr %5, align 8, !dbg !17
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides = load ptr, ptr %6, align 8, !dbg !17
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !17
  %dev_id = load i32, ptr %7, align 4, !dbg !17
  %adaptive_pool_avg54 = load ptr, ptr %adaptive_pool_avg, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_avg54, i64 64) ], !dbg !17
  %8 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape = load ptr, ptr %8, align 8, !dbg !17
  %9 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides = load ptr, ptr %9, align 8, !dbg !17
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !17

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %10(ptr nonnull @.str.1), !dbg !17
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %adaptive_pool_avg.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !17

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %11(ptr nonnull @.str.2), !dbg !17
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !17
  %13 = load i32, ptr %12, align 4, !dbg !17
  %14 = icmp eq i32 %13, 4, !dbg !17
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !17, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %15(ptr nonnull @.str.3), !dbg !17
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !17
  %17 = load i16, ptr %16, align 2, !dbg !17
  %18 = icmp eq i16 %17, 1, !dbg !17
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !17
  %20 = load i8, ptr %19, align 1, !dbg !17
  %21 = icmp eq i8 %20, 32, !dbg !17
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !17
  %23 = load i8, ptr %22, align 1, !dbg !17
  %24 = icmp eq i8 %23, 2, !dbg !17
  %25 = and i1 %21, %24, !dbg !17
  %26 = and i1 %18, %25, !dbg !17
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !17, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %27(ptr nonnull @.str.4), !dbg !17
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, align 8, !dbg !17, !tbaa !35
  %29 = and i64 %28, 4294967295, !dbg !17
  %30 = icmp eq i64 %29, 1, !dbg !17
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !17, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %31(ptr nonnull @.str.5), !dbg !17
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 1, !dbg !17
  %33 = load i64, ptr %32, align 8, !dbg !17, !tbaa !45
  %34 = and i64 %33, 4294967295, !dbg !17
  %35 = icmp eq i64 %34, 2048, !dbg !17
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !17, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %36(ptr nonnull @.str.6), !dbg !17
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 2, !dbg !17
  %38 = load i64, ptr %37, align 8, !dbg !17, !tbaa !47
  %39 = and i64 %38, 4294967295, !dbg !17
  %40 = icmp eq i64 %39, 7, !dbg !17
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !17, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %41(ptr nonnull @.str.7), !dbg !17
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 3, !dbg !17
  %43 = load i64, ptr %42, align 8, !dbg !17, !tbaa !50
  %44 = and i64 %43, 4294967295, !dbg !17
  %45 = icmp eq i64 %44, 7, !dbg !17
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !17, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %46(ptr nonnull @.str.8), !dbg !17
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, null, !dbg !17
  br i1 %.not, label %if_end, label %if_then, !dbg !17, !prof !52

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 1, !dbg !17
  %48 = load i64, ptr %47, align 8, !dbg !17, !tbaa !53
  %49 = and i64 %48, 4294967295, !dbg !17
  %50 = icmp eq i64 %49, 49, !dbg !17
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 2, !dbg !17
  %52 = load i64, ptr %51, align 8, !dbg !17, !tbaa !63
  %53 = and i64 %52, 4294967295, !dbg !17
  %54 = icmp eq i64 %53, 7, !dbg !17
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 3, !dbg !17
  %56 = load i64, ptr %55, align 8, !dbg !17, !tbaa !66
  %57 = and i64 %56, 4294967295, !dbg !17
  %58 = icmp eq i64 %57, 1, !dbg !17
  %59 = and i1 %54, %58, !dbg !17
  %60 = and i1 %50, %59, !dbg !17
  br i1 %60, label %if_end, label %assert_fail21, !dbg !17, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !17
  %62 = load i64, ptr %61, align 8, !dbg !17
  %63 = icmp eq i64 %62, 0, !dbg !17
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !17, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %64(ptr nonnull @.str.9), !dbg !17
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %65(ptr nonnull @.str.10), !dbg !17
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !17
  %67 = load i32, ptr %66, align 4, !dbg !17
  %68 = icmp eq i32 %67, 2, !dbg !17
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !17, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %69(ptr nonnull @.str.11), !dbg !17
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 2, !dbg !17
  %71 = load i32, ptr %70, align 4, !dbg !17
  %72 = icmp eq i32 %71, 4, !dbg !17
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !17, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %73(ptr nonnull @.str.12), !dbg !17
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 2, !dbg !17
  %75 = load i16, ptr %74, align 2, !dbg !17
  %76 = icmp eq i16 %75, 1, !dbg !17
  %77 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 1, !dbg !17
  %78 = load i8, ptr %77, align 1, !dbg !17
  %79 = icmp eq i8 %78, 32, !dbg !17
  %80 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 0, !dbg !17
  %81 = load i8, ptr %80, align 1, !dbg !17
  %82 = icmp eq i8 %81, 2, !dbg !17
  %83 = and i1 %79, %82, !dbg !17
  %84 = and i1 %76, %83, !dbg !17
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !17, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %85(ptr nonnull @.str.13), !dbg !17
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, align 8, !dbg !17, !tbaa !68
  %87 = and i64 %86, 4294967295, !dbg !17
  %88 = icmp eq i64 %87, 1, !dbg !17
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !17, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %89(ptr nonnull @.str.14), !dbg !17
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 1, !dbg !17
  %91 = load i64, ptr %90, align 8, !dbg !17, !tbaa !78
  %92 = and i64 %91, 4294967295, !dbg !17
  %93 = icmp eq i64 %92, 2048, !dbg !17
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !17, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %94(ptr nonnull @.str.15), !dbg !17
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 2, !dbg !17
  %96 = load i64, ptr %95, align 8, !dbg !17, !tbaa !80
  %97 = and i64 %96, 4294967295, !dbg !17
  %98 = icmp eq i64 %97, 1, !dbg !17
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !17, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %99(ptr nonnull @.str.16), !dbg !17
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 3, !dbg !17
  %101 = load i64, ptr %100, align 8, !dbg !17, !tbaa !83
  %102 = and i64 %101, 4294967295, !dbg !17
  %103 = icmp eq i64 %102, 1, !dbg !17
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !17, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %104(ptr nonnull @.str.17), !dbg !17
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, null, !dbg !17
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !17, !prof !52

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 1, !dbg !17
  %106 = load i64, ptr %105, align 8, !dbg !17, !tbaa !85
  %107 = and i64 %106, 4294967295, !dbg !17
  %108 = icmp eq i64 %107, 1, !dbg !17
  br i1 %108, label %if_end42, label %assert_fail43, !dbg !17, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %109 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 6, !dbg !17
  %110 = load i64, ptr %109, align 8, !dbg !17
  %111 = icmp eq i64 %110, 0, !dbg !17
  br i1 %111, label %assert_end46, label %assert_fail45, !dbg !17, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %112 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %112(ptr nonnull @.str.18), !dbg !17
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %113(ptr nonnull @.str.19), !dbg !17
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %114 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 0, !dbg !17
  %115 = load i32, ptr %114, align 4, !dbg !17
  %116 = icmp eq i32 %115, 2, !dbg !17
  br i1 %116, label %assert_end48, label %assert_fail47, !dbg !17, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %117 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %117(ptr nonnull @.str.20), !dbg !17
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %118 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 1, !dbg !17
  %119 = load i32, ptr %118, align 4, !dbg !17
  %120 = icmp eq i32 %dev_id, %119, !dbg !17
  br i1 %120, label %assert_end50, label %assert_fail49, !dbg !17, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %121(ptr nonnull @.str.21), !dbg !17
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !17
  store i32 0, ptr %stack_tcode60, align 4, !dbg !17, !tbaa !95
  %122 = sext i32 %dev_id to i64, !dbg !17
  %123 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !17
  store i64 %122, ptr %123, align 8, !dbg !17
  %124 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !17
  store i32 0, ptr %124, align 4, !dbg !17, !tbaa !106
  %125 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !17
  %126 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !17
  %127 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !17, !tbaa !19
  %128 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !17
  %.not62 = icmp eq ptr %128, null, !dbg !17
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !17, !prof !52

handle_init:                                      ; preds = %assert_end50
  %129 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !17, !tbaa !19
  %130 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !17, !tbaa !19
  %131 = call i32 %130(ptr %129, ptr nonnull @.str.22, ptr nonnull %0), !dbg !17
  %132 = icmp eq i32 %131, 0, !dbg !17
  br i1 %132, label %call_end, label %common.ret, !dbg !17, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %133 = phi ptr [ %128, %assert_end50 ], [ %136, %call_end ], !dbg !17
  %134 = call i32 %127(ptr %133, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %125, ptr nonnull %126), !dbg !17
  %135 = icmp eq i32 %134, 0, !dbg !17
  br i1 %135, label %call_end52, label %common.ret, !dbg !17, !prof !18

call_end:                                         ; preds = %handle_init
  %136 = load ptr, ptr %0, align 8, !dbg !17
  store ptr %136, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !17
  br label %handle_init_end, !dbg !17

call_end52:                                       ; preds = %handle_init_end
  %137 = call fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %dev_id, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, ptr %p053, ptr %adaptive_pool_avg54), !dbg !17
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !108 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !110, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !111, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !112, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !113, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !114, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !115, metadata !DIExpression()), !dbg !116
  %0 = alloca ptr, align 8, !dbg !116
  %stack_value115 = alloca [16 x %0], align 8, !dbg !116
  %stack_tcode116 = alloca [16 x i32], align 4, !dbg !116
  %1 = icmp eq i32 %num_args, 4, !dbg !116
  br i1 %1, label %assert_end, label %assert_fail, !dbg !116, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !116

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %2(ptr nonnull @.str.25), !dbg !116
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !116, !tbaa !117
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !116
  %p1.code = load i32, ptr %3, align 4, !dbg !116, !tbaa !128
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !116
  %p2.code = load i32, ptr %4, align 4, !dbg !116, !tbaa !130
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !116
  %T_relu.code = load i32, ptr %5, align 4, !dbg !116, !tbaa !133
  %p0 = load ptr, ptr %args, align 8, !dbg !116
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !116
  %p1 = load ptr, ptr %6, align 8, !dbg !116
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !116
  %p2 = load ptr, ptr %7, align 8, !dbg !116
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !116
  %T_relu = load ptr, ptr %8, align 8, !dbg !116
  %p0107 = load ptr, ptr %p0, align 8, !dbg !116
  call void @llvm.assume(i1 true) [ "align"(ptr %p0107, i64 64) ], !dbg !116
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape = load ptr, ptr %9, align 8, !dbg !116
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides = load ptr, ptr %10, align 8, !dbg !116
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !116
  %dev_id = load i32, ptr %11, align 4, !dbg !116
  %p1108 = load ptr, ptr %p1, align 8, !dbg !116
  call void @llvm.assume(i1 true) [ "align"(ptr %p1108, i64 64) ], !dbg !116
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape = load ptr, ptr %12, align 8, !dbg !116
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides = load ptr, ptr %13, align 8, !dbg !116
  %p2110 = load ptr, ptr %p2, align 8, !dbg !116
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !116
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape = load ptr, ptr %14, align 8, !dbg !116
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.strides = load ptr, ptr %15, align 8, !dbg !116
  %T_relu109 = load ptr, ptr %T_relu, align 8, !dbg !116
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu109, i64 64) ], !dbg !116
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape = load ptr, ptr %16, align 8, !dbg !116
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !116
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides = load ptr, ptr %17, align 8, !dbg !116
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !116

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %18(ptr nonnull @.str.26), !dbg !116
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !116

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %19(ptr nonnull @.str.27), !dbg !116
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !116

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %20(ptr nonnull @.str.28), !dbg !116
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !116

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %21(ptr nonnull @.str.29), !dbg !116
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !116
  %23 = load i32, ptr %22, align 4, !dbg !116
  %24 = icmp eq i32 %23, 4, !dbg !116
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !116, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %25(ptr nonnull @.str.30), !dbg !116
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !116
  %27 = load i16, ptr %26, align 2, !dbg !116
  %28 = icmp eq i16 %27, 1, !dbg !116
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !116
  %30 = load i8, ptr %29, align 1, !dbg !116
  %31 = icmp eq i8 %30, 32, !dbg !116
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !116
  %33 = load i8, ptr %32, align 1, !dbg !116
  %34 = icmp eq i8 %33, 2, !dbg !116
  %35 = and i1 %31, %34, !dbg !116
  %36 = and i1 %28, %35, !dbg !116
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !116, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %37(ptr nonnull @.str.31), !dbg !116
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape, align 8, !dbg !116, !tbaa !135
  %39 = and i64 %38, 4294967295, !dbg !116
  %40 = icmp eq i64 %39, 1, !dbg !116
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !116, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %41(ptr nonnull @.str.32), !dbg !116
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape, i64 1, !dbg !116
  %43 = load i64, ptr %42, align 8, !dbg !116, !tbaa !145
  %44 = and i64 %43, 4294967295, !dbg !116
  %45 = icmp eq i64 %44, 64, !dbg !116
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !116, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %46(ptr nonnull @.str.33), !dbg !116
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape, i64 2, !dbg !116
  %48 = load i64, ptr %47, align 8, !dbg !116, !tbaa !147
  %49 = and i64 %48, 4294967295, !dbg !116
  %50 = icmp eq i64 %49, 56, !dbg !116
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !116, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %51(ptr nonnull @.str.34), !dbg !116
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.shape, i64 3, !dbg !116
  %53 = load i64, ptr %52, align 8, !dbg !116, !tbaa !150
  %54 = and i64 %53, 4294967295, !dbg !116
  %55 = icmp eq i64 %54, 56, !dbg !116
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !116, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %56(ptr nonnull @.str.35), !dbg !116
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides, null, !dbg !116
  br i1 %.not, label %if_end, label %if_then, !dbg !116, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides, i64 1, !dbg !116
  %58 = load i64, ptr %57, align 8, !dbg !116, !tbaa !152
  %59 = and i64 %58, 4294967295, !dbg !116
  %60 = icmp eq i64 %59, 3136, !dbg !116
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides, i64 2, !dbg !116
  %62 = load i64, ptr %61, align 8, !dbg !116, !tbaa !162
  %63 = and i64 %62, 4294967295, !dbg !116
  %64 = icmp eq i64 %63, 56, !dbg !116
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p0.strides, i64 3, !dbg !116
  %66 = load i64, ptr %65, align 8, !dbg !116, !tbaa !165
  %67 = and i64 %66, 4294967295, !dbg !116
  %68 = icmp eq i64 %67, 1, !dbg !116
  %69 = and i1 %64, %68, !dbg !116
  %70 = and i1 %60, %69, !dbg !116
  br i1 %70, label %if_end, label %assert_fail27, !dbg !116, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !116
  %72 = load i64, ptr %71, align 8, !dbg !116
  %73 = icmp eq i64 %72, 0, !dbg !116
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !116, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %74(ptr nonnull @.str.36), !dbg !116
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %75(ptr nonnull @.str.37), !dbg !116
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !116
  %77 = load i32, ptr %76, align 4, !dbg !116
  %78 = icmp eq i32 %77, 2, !dbg !116
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !116, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %79(ptr nonnull @.str.38), !dbg !116
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !116
  %81 = load i32, ptr %80, align 4, !dbg !116
  %82 = icmp eq i32 %81, 4, !dbg !116
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !116, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %83(ptr nonnull @.str.39), !dbg !116
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !116
  %85 = load i16, ptr %84, align 2, !dbg !116
  %86 = icmp eq i16 %85, 1, !dbg !116
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !116
  %88 = load i8, ptr %87, align 1, !dbg !116
  %89 = icmp eq i8 %88, 32, !dbg !116
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !116
  %91 = load i8, ptr %90, align 1, !dbg !116
  %92 = icmp eq i8 %91, 2, !dbg !116
  %93 = and i1 %89, %92, !dbg !116
  %94 = and i1 %86, %93, !dbg !116
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !116, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %95(ptr nonnull @.str.40), !dbg !116
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape, align 8, !dbg !116, !tbaa !167
  %97 = and i64 %96, 4294967295, !dbg !116
  %98 = icmp eq i64 %97, 6, !dbg !116
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !116, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %99(ptr nonnull @.str.41), !dbg !116
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape, i64 1, !dbg !116
  %101 = load i64, ptr %100, align 8, !dbg !116, !tbaa !177
  %102 = and i64 %101, 4294967295, !dbg !116
  %103 = icmp eq i64 %102, 6, !dbg !116
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !116, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %104(ptr nonnull @.str.42), !dbg !116
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape, i64 2, !dbg !116
  %106 = load i64, ptr %105, align 8, !dbg !116, !tbaa !179
  %107 = and i64 %106, 4294967295, !dbg !116
  %108 = icmp eq i64 %107, 64, !dbg !116
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !116, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %109(ptr nonnull @.str.43), !dbg !116
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.shape, i64 3, !dbg !116
  %111 = load i64, ptr %110, align 8, !dbg !116, !tbaa !182
  %112 = and i64 %111, 4294967295, !dbg !116
  %113 = icmp eq i64 %112, 64, !dbg !116
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !116, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %114(ptr nonnull @.str.44), !dbg !116
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides, null, !dbg !116
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !116, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides, align 8, !dbg !116, !tbaa !184
  %116 = and i64 %115, 4294967295, !dbg !116
  %117 = icmp eq i64 %116, 24576, !dbg !116
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides, i64 1, !dbg !116
  %119 = load i64, ptr %118, align 8, !dbg !116, !tbaa !194
  %120 = and i64 %119, 4294967295, !dbg !116
  %121 = icmp eq i64 %120, 4096, !dbg !116
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides, i64 2, !dbg !116
  %123 = load i64, ptr %122, align 8, !dbg !116, !tbaa !196
  %124 = and i64 %123, 4294967295, !dbg !116
  %125 = icmp eq i64 %124, 64, !dbg !116
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p1.strides, i64 3, !dbg !116
  %127 = load i64, ptr %126, align 8, !dbg !116, !tbaa !199
  %128 = and i64 %127, 4294967295, !dbg !116
  %129 = icmp eq i64 %128, 1, !dbg !116
  %130 = and i1 %125, %129, !dbg !116
  %131 = and i1 %121, %130, !dbg !116
  %132 = and i1 %117, %131, !dbg !116
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !116, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !116
  %134 = load i64, ptr %133, align 8, !dbg !116
  %135 = icmp eq i64 %134, 0, !dbg !116
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !116, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %136(ptr nonnull @.str.45), !dbg !116
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %137(ptr nonnull @.str.46), !dbg !116
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !116
  %139 = load i32, ptr %138, align 4, !dbg !116
  %140 = icmp eq i32 %139, 2, !dbg !116
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !116, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %141(ptr nonnull @.str.47), !dbg !116
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !116
  %143 = load i32, ptr %142, align 4, !dbg !116
  %144 = icmp eq i32 %dev_id, %143, !dbg !116
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !116, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %145(ptr nonnull @.str.48), !dbg !116
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !116
  %147 = load i32, ptr %146, align 4, !dbg !116
  %148 = icmp eq i32 %147, 4, !dbg !116
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !116, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %149(ptr nonnull @.str.49), !dbg !116
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !116
  %151 = load i16, ptr %150, align 2, !dbg !116
  %152 = icmp eq i16 %151, 1, !dbg !116
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !116
  %154 = load i8, ptr %153, align 1, !dbg !116
  %155 = icmp eq i8 %154, 32, !dbg !116
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !116
  %157 = load i8, ptr %156, align 1, !dbg !116
  %158 = icmp eq i8 %157, 2, !dbg !116
  %159 = and i1 %155, %158, !dbg !116
  %160 = and i1 %152, %159, !dbg !116
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !116, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %161(ptr nonnull @.str.50), !dbg !116
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape, align 8, !dbg !116, !tbaa !201
  %163 = and i64 %162, 4294967295, !dbg !116
  %164 = icmp eq i64 %163, 1, !dbg !116
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !116, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %165(ptr nonnull @.str.51), !dbg !116
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape, i64 1, !dbg !116
  %167 = load i64, ptr %166, align 8, !dbg !116, !tbaa !211
  %168 = and i64 %167, 4294967295, !dbg !116
  %169 = icmp eq i64 %168, 64, !dbg !116
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !116, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %170(ptr nonnull @.str.52), !dbg !116
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape, i64 2, !dbg !116
  %172 = load i64, ptr %171, align 8, !dbg !116, !tbaa !213
  %173 = and i64 %172, 4294967295, !dbg !116
  %174 = icmp eq i64 %173, 1, !dbg !116
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !116, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %175(ptr nonnull @.str.53), !dbg !116
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.shape, i64 3, !dbg !116
  %177 = load i64, ptr %176, align 8, !dbg !116, !tbaa !216
  %178 = and i64 %177, 4294967295, !dbg !116
  %179 = icmp eq i64 %178, 1, !dbg !116
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !116, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %180(ptr nonnull @.str.54), !dbg !116
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.strides, null, !dbg !116
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !116, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.p2.strides, i64 1, !dbg !116
  %182 = load i64, ptr %181, align 8, !dbg !116, !tbaa !218
  %183 = and i64 %182, 4294967295, !dbg !116
  %184 = icmp eq i64 %183, 1, !dbg !116
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !116, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !116
  %186 = load i64, ptr %185, align 8, !dbg !116
  %187 = icmp eq i64 %186, 0, !dbg !116
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !116, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %188(ptr nonnull @.str.55), !dbg !116
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %189(ptr nonnull @.str.56), !dbg !116
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !116
  %191 = load i32, ptr %190, align 4, !dbg !116
  %192 = icmp eq i32 %191, 2, !dbg !116
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !116, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %193(ptr nonnull @.str.57), !dbg !116
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !116
  %195 = load i32, ptr %194, align 4, !dbg !116
  %196 = icmp eq i32 %dev_id, %195, !dbg !116
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !116, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %197(ptr nonnull @.str.58), !dbg !116
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !116
  %199 = load i32, ptr %198, align 4, !dbg !116
  %200 = icmp eq i32 %199, 4, !dbg !116
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !116, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %201(ptr nonnull @.str.59), !dbg !116
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !116
  %203 = load i16, ptr %202, align 2, !dbg !116
  %204 = icmp eq i16 %203, 1, !dbg !116
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !116
  %206 = load i8, ptr %205, align 1, !dbg !116
  %207 = icmp eq i8 %206, 32, !dbg !116
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !116
  %209 = load i8, ptr %208, align 1, !dbg !116
  %210 = icmp eq i8 %209, 2, !dbg !116
  %211 = and i1 %207, %210, !dbg !116
  %212 = and i1 %204, %211, !dbg !116
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !116, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %213(ptr nonnull @.str.60), !dbg !116
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape, align 8, !dbg !116, !tbaa !228
  %215 = and i64 %214, 4294967295, !dbg !116
  %216 = icmp eq i64 %215, 1, !dbg !116
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !116, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %217(ptr nonnull @.str.61), !dbg !116
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape, i64 1, !dbg !116
  %219 = load i64, ptr %218, align 8, !dbg !116, !tbaa !238
  %220 = and i64 %219, 4294967295, !dbg !116
  %221 = icmp eq i64 %220, 64, !dbg !116
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !116, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %222(ptr nonnull @.str.62), !dbg !116
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape, i64 2, !dbg !116
  %224 = load i64, ptr %223, align 8, !dbg !116, !tbaa !240
  %225 = and i64 %224, 4294967295, !dbg !116
  %226 = icmp eq i64 %225, 56, !dbg !116
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !116, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %227(ptr nonnull @.str.63), !dbg !116
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.shape, i64 3, !dbg !116
  %229 = load i64, ptr %228, align 8, !dbg !116, !tbaa !243
  %230 = and i64 %229, 4294967295, !dbg !116
  %231 = icmp eq i64 %230, 56, !dbg !116
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !116, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %232(ptr nonnull @.str.64), !dbg !116
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides, null, !dbg !116
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !116, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides, i64 1, !dbg !116
  %234 = load i64, ptr %233, align 8, !dbg !116, !tbaa !245
  %235 = and i64 %234, 4294967295, !dbg !116
  %236 = icmp eq i64 %235, 3136, !dbg !116
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides, i64 2, !dbg !116
  %238 = load i64, ptr %237, align 8, !dbg !116, !tbaa !255
  %239 = and i64 %238, 4294967295, !dbg !116
  %240 = icmp eq i64 %239, 56, !dbg !116
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu.T_relu.strides, i64 3, !dbg !116
  %242 = load i64, ptr %241, align 8, !dbg !116, !tbaa !258
  %243 = and i64 %242, 4294967295, !dbg !116
  %244 = icmp eq i64 %243, 1, !dbg !116
  %245 = and i1 %240, %244, !dbg !116
  %246 = and i1 %236, %245, !dbg !116
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !116, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !116
  %248 = load i64, ptr %247, align 8, !dbg !116
  %249 = icmp eq i64 %248, 0, !dbg !116
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !116, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %250(ptr nonnull @.str.65), !dbg !116
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %251(ptr nonnull @.str.66), !dbg !116
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !116
  %253 = load i32, ptr %252, align 4, !dbg !116
  %254 = icmp eq i32 %253, 2, !dbg !116
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !116, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %255(ptr nonnull @.str.67), !dbg !116
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !116
  %257 = load i32, ptr %256, align 4, !dbg !116
  %258 = icmp eq i32 %dev_id, %257, !dbg !116
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !116, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !116, !tbaa !19
  tail call void %259(ptr nonnull @.str.68), !dbg !116
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !116
  store i32 0, ptr %stack_tcode116, align 4, !dbg !116, !tbaa !260
  %260 = sext i32 %dev_id to i64, !dbg !116
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !116
  store i64 %260, ptr %261, align 8, !dbg !116
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !116
  store i32 0, ptr %262, align 4, !dbg !116, !tbaa !271
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !116
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !116
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !116, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !116
  %.not120 = icmp eq ptr %266, null, !dbg !116
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !116, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !116, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !116, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !116
  %270 = icmp eq i32 %269, 0, !dbg !116
  br i1 %270, label %call_end, label %common.ret, !dbg !116, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !116
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !116
  %273 = icmp eq i32 %272, 0, !dbg !116
  br i1 %273, label %call_end106, label %common.ret, !dbg !116, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !116
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !116
  br label %handle_init_end, !dbg !116

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_compute_(i32 %dev_id, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, ptr %p0107, ptr %p1108, ptr %T_relu109, ptr %p2110), !dbg !116
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !273 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !275, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !276, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !277, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !278, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !279, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !280, metadata !DIExpression()), !dbg !281
  %0 = alloca ptr, align 8, !dbg !281
  %stack_value115 = alloca [16 x %0], align 8, !dbg !281
  %stack_tcode116 = alloca [16 x i32], align 4, !dbg !281
  %1 = icmp eq i32 %num_args, 4, !dbg !281
  br i1 %1, label %assert_end, label %assert_fail, !dbg !281, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !281

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %2(ptr nonnull @.str.72), !dbg !281
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !281, !tbaa !282
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !281
  %p1.code = load i32, ptr %3, align 4, !dbg !281, !tbaa !293
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !281
  %p2.code = load i32, ptr %4, align 4, !dbg !281, !tbaa !295
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !281
  %T_relu.code = load i32, ptr %5, align 4, !dbg !281, !tbaa !298
  %p0 = load ptr, ptr %args, align 8, !dbg !281
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !281
  %p1 = load ptr, ptr %6, align 8, !dbg !281
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !281
  %p2 = load ptr, ptr %7, align 8, !dbg !281
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !281
  %T_relu = load ptr, ptr %8, align 8, !dbg !281
  %p0107 = load ptr, ptr %p0, align 8, !dbg !281
  call void @llvm.assume(i1 true) [ "align"(ptr %p0107, i64 64) ], !dbg !281
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape = load ptr, ptr %9, align 8, !dbg !281
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides = load ptr, ptr %10, align 8, !dbg !281
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !281
  %dev_id = load i32, ptr %11, align 4, !dbg !281
  %p1108 = load ptr, ptr %p1, align 8, !dbg !281
  call void @llvm.assume(i1 true) [ "align"(ptr %p1108, i64 64) ], !dbg !281
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape = load ptr, ptr %12, align 8, !dbg !281
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides = load ptr, ptr %13, align 8, !dbg !281
  %p2110 = load ptr, ptr %p2, align 8, !dbg !281
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !281
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape = load ptr, ptr %14, align 8, !dbg !281
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.strides = load ptr, ptr %15, align 8, !dbg !281
  %T_relu109 = load ptr, ptr %T_relu, align 8, !dbg !281
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu109, i64 64) ], !dbg !281
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape = load ptr, ptr %16, align 8, !dbg !281
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !281
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides = load ptr, ptr %17, align 8, !dbg !281
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !281

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %18(ptr nonnull @.str.73), !dbg !281
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !281

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %19(ptr nonnull @.str.74), !dbg !281
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !281

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %20(ptr nonnull @.str.75), !dbg !281
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !281

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %21(ptr nonnull @.str.76), !dbg !281
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !281
  %23 = load i32, ptr %22, align 4, !dbg !281
  %24 = icmp eq i32 %23, 4, !dbg !281
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !281, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %25(ptr nonnull @.str.77), !dbg !281
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !281
  %27 = load i16, ptr %26, align 2, !dbg !281
  %28 = icmp eq i16 %27, 1, !dbg !281
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !281
  %30 = load i8, ptr %29, align 1, !dbg !281
  %31 = icmp eq i8 %30, 32, !dbg !281
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !281
  %33 = load i8, ptr %32, align 1, !dbg !281
  %34 = icmp eq i8 %33, 2, !dbg !281
  %35 = and i1 %31, %34, !dbg !281
  %36 = and i1 %28, %35, !dbg !281
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !281, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %37(ptr nonnull @.str.78), !dbg !281
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape, align 8, !dbg !281, !tbaa !300
  %39 = and i64 %38, 4294967295, !dbg !281
  %40 = icmp eq i64 %39, 1, !dbg !281
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !281, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %41(ptr nonnull @.str.79), !dbg !281
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape, i64 1, !dbg !281
  %43 = load i64, ptr %42, align 8, !dbg !281, !tbaa !310
  %44 = and i64 %43, 4294967295, !dbg !281
  %45 = icmp eq i64 %44, 128, !dbg !281
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !281, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %46(ptr nonnull @.str.80), !dbg !281
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape, i64 2, !dbg !281
  %48 = load i64, ptr %47, align 8, !dbg !281, !tbaa !312
  %49 = and i64 %48, 4294967295, !dbg !281
  %50 = icmp eq i64 %49, 28, !dbg !281
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !281, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %51(ptr nonnull @.str.81), !dbg !281
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.shape, i64 3, !dbg !281
  %53 = load i64, ptr %52, align 8, !dbg !281, !tbaa !315
  %54 = and i64 %53, 4294967295, !dbg !281
  %55 = icmp eq i64 %54, 28, !dbg !281
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !281, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %56(ptr nonnull @.str.82), !dbg !281
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides, null, !dbg !281
  br i1 %.not, label %if_end, label %if_then, !dbg !281, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides, i64 1, !dbg !281
  %58 = load i64, ptr %57, align 8, !dbg !281, !tbaa !317
  %59 = and i64 %58, 4294967295, !dbg !281
  %60 = icmp eq i64 %59, 784, !dbg !281
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides, i64 2, !dbg !281
  %62 = load i64, ptr %61, align 8, !dbg !281, !tbaa !327
  %63 = and i64 %62, 4294967295, !dbg !281
  %64 = icmp eq i64 %63, 28, !dbg !281
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p0.strides, i64 3, !dbg !281
  %66 = load i64, ptr %65, align 8, !dbg !281, !tbaa !330
  %67 = and i64 %66, 4294967295, !dbg !281
  %68 = icmp eq i64 %67, 1, !dbg !281
  %69 = and i1 %64, %68, !dbg !281
  %70 = and i1 %60, %69, !dbg !281
  br i1 %70, label %if_end, label %assert_fail27, !dbg !281, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !281
  %72 = load i64, ptr %71, align 8, !dbg !281
  %73 = icmp eq i64 %72, 0, !dbg !281
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !281, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %74(ptr nonnull @.str.83), !dbg !281
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %75(ptr nonnull @.str.84), !dbg !281
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !281
  %77 = load i32, ptr %76, align 4, !dbg !281
  %78 = icmp eq i32 %77, 2, !dbg !281
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !281, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %79(ptr nonnull @.str.85), !dbg !281
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !281
  %81 = load i32, ptr %80, align 4, !dbg !281
  %82 = icmp eq i32 %81, 4, !dbg !281
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !281, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %83(ptr nonnull @.str.86), !dbg !281
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !281
  %85 = load i16, ptr %84, align 2, !dbg !281
  %86 = icmp eq i16 %85, 1, !dbg !281
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !281
  %88 = load i8, ptr %87, align 1, !dbg !281
  %89 = icmp eq i8 %88, 32, !dbg !281
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !281
  %91 = load i8, ptr %90, align 1, !dbg !281
  %92 = icmp eq i8 %91, 2, !dbg !281
  %93 = and i1 %89, %92, !dbg !281
  %94 = and i1 %86, %93, !dbg !281
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !281, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %95(ptr nonnull @.str.87), !dbg !281
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape, align 8, !dbg !281, !tbaa !332
  %97 = and i64 %96, 4294967295, !dbg !281
  %98 = icmp eq i64 %97, 4, !dbg !281
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !281, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %99(ptr nonnull @.str.88), !dbg !281
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape, i64 1, !dbg !281
  %101 = load i64, ptr %100, align 8, !dbg !281, !tbaa !342
  %102 = and i64 %101, 4294967295, !dbg !281
  %103 = icmp eq i64 %102, 4, !dbg !281
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !281, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %104(ptr nonnull @.str.89), !dbg !281
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape, i64 2, !dbg !281
  %106 = load i64, ptr %105, align 8, !dbg !281, !tbaa !344
  %107 = and i64 %106, 4294967295, !dbg !281
  %108 = icmp eq i64 %107, 128, !dbg !281
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !281, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %109(ptr nonnull @.str.90), !dbg !281
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.shape, i64 3, !dbg !281
  %111 = load i64, ptr %110, align 8, !dbg !281, !tbaa !347
  %112 = and i64 %111, 4294967295, !dbg !281
  %113 = icmp eq i64 %112, 128, !dbg !281
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !281, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %114(ptr nonnull @.str.91), !dbg !281
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides, null, !dbg !281
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !281, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides, align 8, !dbg !281, !tbaa !349
  %116 = and i64 %115, 4294967295, !dbg !281
  %117 = icmp eq i64 %116, 65536, !dbg !281
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides, i64 1, !dbg !281
  %119 = load i64, ptr %118, align 8, !dbg !281, !tbaa !359
  %120 = and i64 %119, 4294967295, !dbg !281
  %121 = icmp eq i64 %120, 16384, !dbg !281
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides, i64 2, !dbg !281
  %123 = load i64, ptr %122, align 8, !dbg !281, !tbaa !361
  %124 = and i64 %123, 4294967295, !dbg !281
  %125 = icmp eq i64 %124, 128, !dbg !281
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p1.strides, i64 3, !dbg !281
  %127 = load i64, ptr %126, align 8, !dbg !281, !tbaa !364
  %128 = and i64 %127, 4294967295, !dbg !281
  %129 = icmp eq i64 %128, 1, !dbg !281
  %130 = and i1 %125, %129, !dbg !281
  %131 = and i1 %121, %130, !dbg !281
  %132 = and i1 %117, %131, !dbg !281
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !281, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !281
  %134 = load i64, ptr %133, align 8, !dbg !281
  %135 = icmp eq i64 %134, 0, !dbg !281
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !281, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %136(ptr nonnull @.str.92), !dbg !281
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %137(ptr nonnull @.str.93), !dbg !281
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !281
  %139 = load i32, ptr %138, align 4, !dbg !281
  %140 = icmp eq i32 %139, 2, !dbg !281
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !281, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %141(ptr nonnull @.str.94), !dbg !281
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !281
  %143 = load i32, ptr %142, align 4, !dbg !281
  %144 = icmp eq i32 %dev_id, %143, !dbg !281
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !281, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %145(ptr nonnull @.str.95), !dbg !281
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !281
  %147 = load i32, ptr %146, align 4, !dbg !281
  %148 = icmp eq i32 %147, 4, !dbg !281
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !281, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %149(ptr nonnull @.str.96), !dbg !281
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !281
  %151 = load i16, ptr %150, align 2, !dbg !281
  %152 = icmp eq i16 %151, 1, !dbg !281
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !281
  %154 = load i8, ptr %153, align 1, !dbg !281
  %155 = icmp eq i8 %154, 32, !dbg !281
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !281
  %157 = load i8, ptr %156, align 1, !dbg !281
  %158 = icmp eq i8 %157, 2, !dbg !281
  %159 = and i1 %155, %158, !dbg !281
  %160 = and i1 %152, %159, !dbg !281
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !281, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %161(ptr nonnull @.str.97), !dbg !281
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape, align 8, !dbg !281, !tbaa !366
  %163 = and i64 %162, 4294967295, !dbg !281
  %164 = icmp eq i64 %163, 1, !dbg !281
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !281, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %165(ptr nonnull @.str.98), !dbg !281
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape, i64 1, !dbg !281
  %167 = load i64, ptr %166, align 8, !dbg !281, !tbaa !376
  %168 = and i64 %167, 4294967295, !dbg !281
  %169 = icmp eq i64 %168, 128, !dbg !281
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !281, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %170(ptr nonnull @.str.99), !dbg !281
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape, i64 2, !dbg !281
  %172 = load i64, ptr %171, align 8, !dbg !281, !tbaa !378
  %173 = and i64 %172, 4294967295, !dbg !281
  %174 = icmp eq i64 %173, 1, !dbg !281
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !281, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %175(ptr nonnull @.str.100), !dbg !281
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.shape, i64 3, !dbg !281
  %177 = load i64, ptr %176, align 8, !dbg !281, !tbaa !381
  %178 = and i64 %177, 4294967295, !dbg !281
  %179 = icmp eq i64 %178, 1, !dbg !281
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !281, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %180(ptr nonnull @.str.101), !dbg !281
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.strides, null, !dbg !281
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !281, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.p2.strides, i64 1, !dbg !281
  %182 = load i64, ptr %181, align 8, !dbg !281, !tbaa !383
  %183 = and i64 %182, 4294967295, !dbg !281
  %184 = icmp eq i64 %183, 1, !dbg !281
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !281, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !281
  %186 = load i64, ptr %185, align 8, !dbg !281
  %187 = icmp eq i64 %186, 0, !dbg !281
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !281, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %188(ptr nonnull @.str.102), !dbg !281
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %189(ptr nonnull @.str.103), !dbg !281
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !281
  %191 = load i32, ptr %190, align 4, !dbg !281
  %192 = icmp eq i32 %191, 2, !dbg !281
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !281, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %193(ptr nonnull @.str.104), !dbg !281
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !281
  %195 = load i32, ptr %194, align 4, !dbg !281
  %196 = icmp eq i32 %dev_id, %195, !dbg !281
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !281, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %197(ptr nonnull @.str.105), !dbg !281
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !281
  %199 = load i32, ptr %198, align 4, !dbg !281
  %200 = icmp eq i32 %199, 4, !dbg !281
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !281, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %201(ptr nonnull @.str.106), !dbg !281
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !281
  %203 = load i16, ptr %202, align 2, !dbg !281
  %204 = icmp eq i16 %203, 1, !dbg !281
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !281
  %206 = load i8, ptr %205, align 1, !dbg !281
  %207 = icmp eq i8 %206, 32, !dbg !281
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !281
  %209 = load i8, ptr %208, align 1, !dbg !281
  %210 = icmp eq i8 %209, 2, !dbg !281
  %211 = and i1 %207, %210, !dbg !281
  %212 = and i1 %204, %211, !dbg !281
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !281, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %213(ptr nonnull @.str.107), !dbg !281
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape, align 8, !dbg !281, !tbaa !393
  %215 = and i64 %214, 4294967295, !dbg !281
  %216 = icmp eq i64 %215, 1, !dbg !281
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !281, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %217(ptr nonnull @.str.108), !dbg !281
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape, i64 1, !dbg !281
  %219 = load i64, ptr %218, align 8, !dbg !281, !tbaa !403
  %220 = and i64 %219, 4294967295, !dbg !281
  %221 = icmp eq i64 %220, 128, !dbg !281
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !281, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %222(ptr nonnull @.str.109), !dbg !281
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape, i64 2, !dbg !281
  %224 = load i64, ptr %223, align 8, !dbg !281, !tbaa !405
  %225 = and i64 %224, 4294967295, !dbg !281
  %226 = icmp eq i64 %225, 28, !dbg !281
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !281, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %227(ptr nonnull @.str.110), !dbg !281
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.shape, i64 3, !dbg !281
  %229 = load i64, ptr %228, align 8, !dbg !281, !tbaa !408
  %230 = and i64 %229, 4294967295, !dbg !281
  %231 = icmp eq i64 %230, 28, !dbg !281
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !281, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %232(ptr nonnull @.str.111), !dbg !281
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides, null, !dbg !281
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !281, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides, i64 1, !dbg !281
  %234 = load i64, ptr %233, align 8, !dbg !281, !tbaa !410
  %235 = and i64 %234, 4294967295, !dbg !281
  %236 = icmp eq i64 %235, 784, !dbg !281
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides, i64 2, !dbg !281
  %238 = load i64, ptr %237, align 8, !dbg !281, !tbaa !420
  %239 = and i64 %238, 4294967295, !dbg !281
  %240 = icmp eq i64 %239, 28, !dbg !281
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1.T_relu.strides, i64 3, !dbg !281
  %242 = load i64, ptr %241, align 8, !dbg !281, !tbaa !423
  %243 = and i64 %242, 4294967295, !dbg !281
  %244 = icmp eq i64 %243, 1, !dbg !281
  %245 = and i1 %240, %244, !dbg !281
  %246 = and i1 %236, %245, !dbg !281
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !281, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !281
  %248 = load i64, ptr %247, align 8, !dbg !281
  %249 = icmp eq i64 %248, 0, !dbg !281
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !281, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %250(ptr nonnull @.str.112), !dbg !281
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %251(ptr nonnull @.str.113), !dbg !281
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !281
  %253 = load i32, ptr %252, align 4, !dbg !281
  %254 = icmp eq i32 %253, 2, !dbg !281
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !281, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %255(ptr nonnull @.str.114), !dbg !281
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !281
  %257 = load i32, ptr %256, align 4, !dbg !281
  %258 = icmp eq i32 %dev_id, %257, !dbg !281
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !281, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !281, !tbaa !19
  tail call void %259(ptr nonnull @.str.115), !dbg !281
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !281
  store i32 0, ptr %stack_tcode116, align 4, !dbg !281, !tbaa !425
  %260 = sext i32 %dev_id to i64, !dbg !281
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !281
  store i64 %260, ptr %261, align 8, !dbg !281
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !281
  store i32 0, ptr %262, align 4, !dbg !281, !tbaa !436
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !281
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !281
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !281, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !281
  %.not120 = icmp eq ptr %266, null, !dbg !281
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !281, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !281, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !281, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !281
  %270 = icmp eq i32 %269, 0, !dbg !281
  br i1 %270, label %call_end, label %common.ret, !dbg !281, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !281
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !281
  %273 = icmp eq i32 %272, 0, !dbg !281
  br i1 %273, label %call_end106, label %common.ret, !dbg !281, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !281
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !281
  br label %handle_init_end, !dbg !281

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_compute_(i32 %dev_id, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, ptr %p0107, ptr %p1108, ptr %T_relu109, ptr %p2110), !dbg !281
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !438 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !440, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !441, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !442, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !443, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !444, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !445, metadata !DIExpression()), !dbg !446
  %0 = alloca ptr, align 8, !dbg !446
  %stack_value115 = alloca [16 x %0], align 8, !dbg !446
  %stack_tcode116 = alloca [16 x i32], align 4, !dbg !446
  %1 = icmp eq i32 %num_args, 4, !dbg !446
  br i1 %1, label %assert_end, label %assert_fail, !dbg !446, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !446

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %2(ptr nonnull @.str.119), !dbg !446
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !446, !tbaa !447
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !446
  %p1.code = load i32, ptr %3, align 4, !dbg !446, !tbaa !458
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !446
  %p2.code = load i32, ptr %4, align 4, !dbg !446, !tbaa !460
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !446
  %T_relu.code = load i32, ptr %5, align 4, !dbg !446, !tbaa !463
  %p0 = load ptr, ptr %args, align 8, !dbg !446
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !446
  %p1 = load ptr, ptr %6, align 8, !dbg !446
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !446
  %p2 = load ptr, ptr %7, align 8, !dbg !446
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !446
  %T_relu = load ptr, ptr %8, align 8, !dbg !446
  %p0107 = load ptr, ptr %p0, align 8, !dbg !446
  call void @llvm.assume(i1 true) [ "align"(ptr %p0107, i64 64) ], !dbg !446
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape = load ptr, ptr %9, align 8, !dbg !446
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides = load ptr, ptr %10, align 8, !dbg !446
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !446
  %dev_id = load i32, ptr %11, align 4, !dbg !446
  %p1108 = load ptr, ptr %p1, align 8, !dbg !446
  call void @llvm.assume(i1 true) [ "align"(ptr %p1108, i64 64) ], !dbg !446
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape = load ptr, ptr %12, align 8, !dbg !446
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides = load ptr, ptr %13, align 8, !dbg !446
  %p2110 = load ptr, ptr %p2, align 8, !dbg !446
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !446
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape = load ptr, ptr %14, align 8, !dbg !446
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.strides = load ptr, ptr %15, align 8, !dbg !446
  %T_relu109 = load ptr, ptr %T_relu, align 8, !dbg !446
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu109, i64 64) ], !dbg !446
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape = load ptr, ptr %16, align 8, !dbg !446
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !446
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides = load ptr, ptr %17, align 8, !dbg !446
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !446

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %18(ptr nonnull @.str.120), !dbg !446
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !446

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %19(ptr nonnull @.str.121), !dbg !446
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !446

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %20(ptr nonnull @.str.122), !dbg !446
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !446

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %21(ptr nonnull @.str.123), !dbg !446
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !446
  %23 = load i32, ptr %22, align 4, !dbg !446
  %24 = icmp eq i32 %23, 4, !dbg !446
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !446, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %25(ptr nonnull @.str.124), !dbg !446
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !446
  %27 = load i16, ptr %26, align 2, !dbg !446
  %28 = icmp eq i16 %27, 1, !dbg !446
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !446
  %30 = load i8, ptr %29, align 1, !dbg !446
  %31 = icmp eq i8 %30, 32, !dbg !446
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !446
  %33 = load i8, ptr %32, align 1, !dbg !446
  %34 = icmp eq i8 %33, 2, !dbg !446
  %35 = and i1 %31, %34, !dbg !446
  %36 = and i1 %28, %35, !dbg !446
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !446, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %37(ptr nonnull @.str.125), !dbg !446
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape, align 8, !dbg !446, !tbaa !465
  %39 = and i64 %38, 4294967295, !dbg !446
  %40 = icmp eq i64 %39, 1, !dbg !446
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !446, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %41(ptr nonnull @.str.126), !dbg !446
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape, i64 1, !dbg !446
  %43 = load i64, ptr %42, align 8, !dbg !446, !tbaa !475
  %44 = and i64 %43, 4294967295, !dbg !446
  %45 = icmp eq i64 %44, 256, !dbg !446
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !446, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %46(ptr nonnull @.str.127), !dbg !446
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape, i64 2, !dbg !446
  %48 = load i64, ptr %47, align 8, !dbg !446, !tbaa !477
  %49 = and i64 %48, 4294967295, !dbg !446
  %50 = icmp eq i64 %49, 14, !dbg !446
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !446, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %51(ptr nonnull @.str.128), !dbg !446
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.shape, i64 3, !dbg !446
  %53 = load i64, ptr %52, align 8, !dbg !446, !tbaa !480
  %54 = and i64 %53, 4294967295, !dbg !446
  %55 = icmp eq i64 %54, 14, !dbg !446
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !446, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %56(ptr nonnull @.str.129), !dbg !446
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides, null, !dbg !446
  br i1 %.not, label %if_end, label %if_then, !dbg !446, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides, i64 1, !dbg !446
  %58 = load i64, ptr %57, align 8, !dbg !446, !tbaa !482
  %59 = and i64 %58, 4294967295, !dbg !446
  %60 = icmp eq i64 %59, 196, !dbg !446
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides, i64 2, !dbg !446
  %62 = load i64, ptr %61, align 8, !dbg !446, !tbaa !492
  %63 = and i64 %62, 4294967295, !dbg !446
  %64 = icmp eq i64 %63, 14, !dbg !446
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p0.strides, i64 3, !dbg !446
  %66 = load i64, ptr %65, align 8, !dbg !446, !tbaa !495
  %67 = and i64 %66, 4294967295, !dbg !446
  %68 = icmp eq i64 %67, 1, !dbg !446
  %69 = and i1 %64, %68, !dbg !446
  %70 = and i1 %60, %69, !dbg !446
  br i1 %70, label %if_end, label %assert_fail27, !dbg !446, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !446
  %72 = load i64, ptr %71, align 8, !dbg !446
  %73 = icmp eq i64 %72, 0, !dbg !446
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !446, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %74(ptr nonnull @.str.130), !dbg !446
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %75(ptr nonnull @.str.131), !dbg !446
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !446
  %77 = load i32, ptr %76, align 4, !dbg !446
  %78 = icmp eq i32 %77, 2, !dbg !446
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !446, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %79(ptr nonnull @.str.132), !dbg !446
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !446
  %81 = load i32, ptr %80, align 4, !dbg !446
  %82 = icmp eq i32 %81, 4, !dbg !446
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !446, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %83(ptr nonnull @.str.133), !dbg !446
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !446
  %85 = load i16, ptr %84, align 2, !dbg !446
  %86 = icmp eq i16 %85, 1, !dbg !446
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !446
  %88 = load i8, ptr %87, align 1, !dbg !446
  %89 = icmp eq i8 %88, 32, !dbg !446
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !446
  %91 = load i8, ptr %90, align 1, !dbg !446
  %92 = icmp eq i8 %91, 2, !dbg !446
  %93 = and i1 %89, %92, !dbg !446
  %94 = and i1 %86, %93, !dbg !446
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !446, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %95(ptr nonnull @.str.134), !dbg !446
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape, align 8, !dbg !446, !tbaa !497
  %97 = and i64 %96, 4294967295, !dbg !446
  %98 = icmp eq i64 %97, 4, !dbg !446
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !446, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %99(ptr nonnull @.str.135), !dbg !446
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape, i64 1, !dbg !446
  %101 = load i64, ptr %100, align 8, !dbg !446, !tbaa !507
  %102 = and i64 %101, 4294967295, !dbg !446
  %103 = icmp eq i64 %102, 4, !dbg !446
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !446, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %104(ptr nonnull @.str.136), !dbg !446
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape, i64 2, !dbg !446
  %106 = load i64, ptr %105, align 8, !dbg !446, !tbaa !509
  %107 = and i64 %106, 4294967295, !dbg !446
  %108 = icmp eq i64 %107, 256, !dbg !446
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !446, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %109(ptr nonnull @.str.137), !dbg !446
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.shape, i64 3, !dbg !446
  %111 = load i64, ptr %110, align 8, !dbg !446, !tbaa !512
  %112 = and i64 %111, 4294967295, !dbg !446
  %113 = icmp eq i64 %112, 256, !dbg !446
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !446, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %114(ptr nonnull @.str.138), !dbg !446
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides, null, !dbg !446
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !446, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides, align 8, !dbg !446, !tbaa !514
  %116 = and i64 %115, 4294967295, !dbg !446
  %117 = icmp eq i64 %116, 262144, !dbg !446
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides, i64 1, !dbg !446
  %119 = load i64, ptr %118, align 8, !dbg !446, !tbaa !524
  %120 = and i64 %119, 4294967295, !dbg !446
  %121 = icmp eq i64 %120, 65536, !dbg !446
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides, i64 2, !dbg !446
  %123 = load i64, ptr %122, align 8, !dbg !446, !tbaa !526
  %124 = and i64 %123, 4294967295, !dbg !446
  %125 = icmp eq i64 %124, 256, !dbg !446
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p1.strides, i64 3, !dbg !446
  %127 = load i64, ptr %126, align 8, !dbg !446, !tbaa !529
  %128 = and i64 %127, 4294967295, !dbg !446
  %129 = icmp eq i64 %128, 1, !dbg !446
  %130 = and i1 %125, %129, !dbg !446
  %131 = and i1 %121, %130, !dbg !446
  %132 = and i1 %117, %131, !dbg !446
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !446, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !446
  %134 = load i64, ptr %133, align 8, !dbg !446
  %135 = icmp eq i64 %134, 0, !dbg !446
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !446, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %136(ptr nonnull @.str.139), !dbg !446
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %137(ptr nonnull @.str.140), !dbg !446
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !446
  %139 = load i32, ptr %138, align 4, !dbg !446
  %140 = icmp eq i32 %139, 2, !dbg !446
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !446, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %141(ptr nonnull @.str.141), !dbg !446
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !446
  %143 = load i32, ptr %142, align 4, !dbg !446
  %144 = icmp eq i32 %dev_id, %143, !dbg !446
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !446, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %145(ptr nonnull @.str.142), !dbg !446
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !446
  %147 = load i32, ptr %146, align 4, !dbg !446
  %148 = icmp eq i32 %147, 4, !dbg !446
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !446, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %149(ptr nonnull @.str.143), !dbg !446
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !446
  %151 = load i16, ptr %150, align 2, !dbg !446
  %152 = icmp eq i16 %151, 1, !dbg !446
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !446
  %154 = load i8, ptr %153, align 1, !dbg !446
  %155 = icmp eq i8 %154, 32, !dbg !446
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !446
  %157 = load i8, ptr %156, align 1, !dbg !446
  %158 = icmp eq i8 %157, 2, !dbg !446
  %159 = and i1 %155, %158, !dbg !446
  %160 = and i1 %152, %159, !dbg !446
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !446, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %161(ptr nonnull @.str.144), !dbg !446
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape, align 8, !dbg !446, !tbaa !531
  %163 = and i64 %162, 4294967295, !dbg !446
  %164 = icmp eq i64 %163, 1, !dbg !446
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !446, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %165(ptr nonnull @.str.145), !dbg !446
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape, i64 1, !dbg !446
  %167 = load i64, ptr %166, align 8, !dbg !446, !tbaa !541
  %168 = and i64 %167, 4294967295, !dbg !446
  %169 = icmp eq i64 %168, 256, !dbg !446
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !446, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %170(ptr nonnull @.str.146), !dbg !446
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape, i64 2, !dbg !446
  %172 = load i64, ptr %171, align 8, !dbg !446, !tbaa !543
  %173 = and i64 %172, 4294967295, !dbg !446
  %174 = icmp eq i64 %173, 1, !dbg !446
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !446, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %175(ptr nonnull @.str.147), !dbg !446
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.shape, i64 3, !dbg !446
  %177 = load i64, ptr %176, align 8, !dbg !446, !tbaa !546
  %178 = and i64 %177, 4294967295, !dbg !446
  %179 = icmp eq i64 %178, 1, !dbg !446
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !446, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %180(ptr nonnull @.str.148), !dbg !446
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.strides, null, !dbg !446
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !446, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.p2.strides, i64 1, !dbg !446
  %182 = load i64, ptr %181, align 8, !dbg !446, !tbaa !548
  %183 = and i64 %182, 4294967295, !dbg !446
  %184 = icmp eq i64 %183, 1, !dbg !446
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !446, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !446
  %186 = load i64, ptr %185, align 8, !dbg !446
  %187 = icmp eq i64 %186, 0, !dbg !446
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !446, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %188(ptr nonnull @.str.149), !dbg !446
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %189(ptr nonnull @.str.150), !dbg !446
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !446
  %191 = load i32, ptr %190, align 4, !dbg !446
  %192 = icmp eq i32 %191, 2, !dbg !446
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !446, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %193(ptr nonnull @.str.151), !dbg !446
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !446
  %195 = load i32, ptr %194, align 4, !dbg !446
  %196 = icmp eq i32 %dev_id, %195, !dbg !446
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !446, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %197(ptr nonnull @.str.152), !dbg !446
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !446
  %199 = load i32, ptr %198, align 4, !dbg !446
  %200 = icmp eq i32 %199, 4, !dbg !446
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !446, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %201(ptr nonnull @.str.153), !dbg !446
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !446
  %203 = load i16, ptr %202, align 2, !dbg !446
  %204 = icmp eq i16 %203, 1, !dbg !446
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !446
  %206 = load i8, ptr %205, align 1, !dbg !446
  %207 = icmp eq i8 %206, 32, !dbg !446
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !446
  %209 = load i8, ptr %208, align 1, !dbg !446
  %210 = icmp eq i8 %209, 2, !dbg !446
  %211 = and i1 %207, %210, !dbg !446
  %212 = and i1 %204, %211, !dbg !446
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !446, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %213(ptr nonnull @.str.154), !dbg !446
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape, align 8, !dbg !446, !tbaa !558
  %215 = and i64 %214, 4294967295, !dbg !446
  %216 = icmp eq i64 %215, 1, !dbg !446
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !446, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %217(ptr nonnull @.str.155), !dbg !446
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape, i64 1, !dbg !446
  %219 = load i64, ptr %218, align 8, !dbg !446, !tbaa !568
  %220 = and i64 %219, 4294967295, !dbg !446
  %221 = icmp eq i64 %220, 256, !dbg !446
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !446, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %222(ptr nonnull @.str.156), !dbg !446
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape, i64 2, !dbg !446
  %224 = load i64, ptr %223, align 8, !dbg !446, !tbaa !570
  %225 = and i64 %224, 4294967295, !dbg !446
  %226 = icmp eq i64 %225, 14, !dbg !446
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !446, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %227(ptr nonnull @.str.157), !dbg !446
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.shape, i64 3, !dbg !446
  %229 = load i64, ptr %228, align 8, !dbg !446, !tbaa !573
  %230 = and i64 %229, 4294967295, !dbg !446
  %231 = icmp eq i64 %230, 14, !dbg !446
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !446, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %232(ptr nonnull @.str.158), !dbg !446
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides, null, !dbg !446
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !446, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides, i64 1, !dbg !446
  %234 = load i64, ptr %233, align 8, !dbg !446, !tbaa !575
  %235 = and i64 %234, 4294967295, !dbg !446
  %236 = icmp eq i64 %235, 196, !dbg !446
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides, i64 2, !dbg !446
  %238 = load i64, ptr %237, align 8, !dbg !446, !tbaa !585
  %239 = and i64 %238, 4294967295, !dbg !446
  %240 = icmp eq i64 %239, 14, !dbg !446
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2.T_relu.strides, i64 3, !dbg !446
  %242 = load i64, ptr %241, align 8, !dbg !446, !tbaa !588
  %243 = and i64 %242, 4294967295, !dbg !446
  %244 = icmp eq i64 %243, 1, !dbg !446
  %245 = and i1 %240, %244, !dbg !446
  %246 = and i1 %236, %245, !dbg !446
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !446, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !446
  %248 = load i64, ptr %247, align 8, !dbg !446
  %249 = icmp eq i64 %248, 0, !dbg !446
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !446, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %250(ptr nonnull @.str.159), !dbg !446
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %251(ptr nonnull @.str.160), !dbg !446
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !446
  %253 = load i32, ptr %252, align 4, !dbg !446
  %254 = icmp eq i32 %253, 2, !dbg !446
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !446, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %255(ptr nonnull @.str.161), !dbg !446
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !446
  %257 = load i32, ptr %256, align 4, !dbg !446
  %258 = icmp eq i32 %dev_id, %257, !dbg !446
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !446, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !446, !tbaa !19
  tail call void %259(ptr nonnull @.str.162), !dbg !446
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !446
  store i32 0, ptr %stack_tcode116, align 4, !dbg !446, !tbaa !590
  %260 = sext i32 %dev_id to i64, !dbg !446
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !446
  store i64 %260, ptr %261, align 8, !dbg !446
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !446
  store i32 0, ptr %262, align 4, !dbg !446, !tbaa !601
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !446
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !446
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !446, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !446
  %.not120 = icmp eq ptr %266, null, !dbg !446
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !446, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !446, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !446, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !446
  %270 = icmp eq i32 %269, 0, !dbg !446
  br i1 %270, label %call_end, label %common.ret, !dbg !446, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !446
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !446
  %273 = icmp eq i32 %272, 0, !dbg !446
  br i1 %273, label %call_end106, label %common.ret, !dbg !446, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !446
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !446
  br label %handle_init_end, !dbg !446

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_compute_(i32 %dev_id, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, ptr %p0107, ptr %p1108, ptr %T_relu109, ptr %p2110), !dbg !446
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !603 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !605, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !606, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !607, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !608, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !609, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !610, metadata !DIExpression()), !dbg !611
  %0 = alloca ptr, align 8, !dbg !611
  %stack_value115 = alloca [16 x %0], align 8, !dbg !611
  %stack_tcode116 = alloca [16 x i32], align 4, !dbg !611
  %1 = icmp eq i32 %num_args, 4, !dbg !611
  br i1 %1, label %assert_end, label %assert_fail, !dbg !611, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !611

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %2(ptr nonnull @.str.166), !dbg !611
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !611, !tbaa !612
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !611
  %p1.code = load i32, ptr %3, align 4, !dbg !611, !tbaa !623
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !611
  %p2.code = load i32, ptr %4, align 4, !dbg !611, !tbaa !625
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !611
  %T_relu.code = load i32, ptr %5, align 4, !dbg !611, !tbaa !628
  %p0 = load ptr, ptr %args, align 8, !dbg !611
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !611
  %p1 = load ptr, ptr %6, align 8, !dbg !611
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !611
  %p2 = load ptr, ptr %7, align 8, !dbg !611
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !611
  %T_relu = load ptr, ptr %8, align 8, !dbg !611
  %p0107 = load ptr, ptr %p0, align 8, !dbg !611
  call void @llvm.assume(i1 true) [ "align"(ptr %p0107, i64 64) ], !dbg !611
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape = load ptr, ptr %9, align 8, !dbg !611
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides = load ptr, ptr %10, align 8, !dbg !611
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !611
  %dev_id = load i32, ptr %11, align 4, !dbg !611
  %p1108 = load ptr, ptr %p1, align 8, !dbg !611
  call void @llvm.assume(i1 true) [ "align"(ptr %p1108, i64 64) ], !dbg !611
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape = load ptr, ptr %12, align 8, !dbg !611
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides = load ptr, ptr %13, align 8, !dbg !611
  %p2110 = load ptr, ptr %p2, align 8, !dbg !611
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !611
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape = load ptr, ptr %14, align 8, !dbg !611
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.strides = load ptr, ptr %15, align 8, !dbg !611
  %T_relu109 = load ptr, ptr %T_relu, align 8, !dbg !611
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu109, i64 64) ], !dbg !611
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape = load ptr, ptr %16, align 8, !dbg !611
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !611
  %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides = load ptr, ptr %17, align 8, !dbg !611
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !611

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %18(ptr nonnull @.str.167), !dbg !611
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !611

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %19(ptr nonnull @.str.168), !dbg !611
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !611

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %20(ptr nonnull @.str.169), !dbg !611
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !611

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %21(ptr nonnull @.str.170), !dbg !611
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !611
  %23 = load i32, ptr %22, align 4, !dbg !611
  %24 = icmp eq i32 %23, 4, !dbg !611
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !611, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %25(ptr nonnull @.str.171), !dbg !611
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !611
  %27 = load i16, ptr %26, align 2, !dbg !611
  %28 = icmp eq i16 %27, 1, !dbg !611
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !611
  %30 = load i8, ptr %29, align 1, !dbg !611
  %31 = icmp eq i8 %30, 32, !dbg !611
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !611
  %33 = load i8, ptr %32, align 1, !dbg !611
  %34 = icmp eq i8 %33, 2, !dbg !611
  %35 = and i1 %31, %34, !dbg !611
  %36 = and i1 %28, %35, !dbg !611
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !611, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %37(ptr nonnull @.str.172), !dbg !611
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape, align 8, !dbg !611, !tbaa !630
  %39 = and i64 %38, 4294967295, !dbg !611
  %40 = icmp eq i64 %39, 1, !dbg !611
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !611, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %41(ptr nonnull @.str.173), !dbg !611
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape, i64 1, !dbg !611
  %43 = load i64, ptr %42, align 8, !dbg !611, !tbaa !640
  %44 = and i64 %43, 4294967295, !dbg !611
  %45 = icmp eq i64 %44, 512, !dbg !611
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !611, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %46(ptr nonnull @.str.174), !dbg !611
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape, i64 2, !dbg !611
  %48 = load i64, ptr %47, align 8, !dbg !611, !tbaa !642
  %49 = and i64 %48, 4294967295, !dbg !611
  %50 = icmp eq i64 %49, 7, !dbg !611
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !611, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %51(ptr nonnull @.str.175), !dbg !611
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.shape, i64 3, !dbg !611
  %53 = load i64, ptr %52, align 8, !dbg !611, !tbaa !645
  %54 = and i64 %53, 4294967295, !dbg !611
  %55 = icmp eq i64 %54, 7, !dbg !611
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !611, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %56(ptr nonnull @.str.176), !dbg !611
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides, null, !dbg !611
  br i1 %.not, label %if_end, label %if_then, !dbg !611, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides, i64 1, !dbg !611
  %58 = load i64, ptr %57, align 8, !dbg !611, !tbaa !647
  %59 = and i64 %58, 4294967295, !dbg !611
  %60 = icmp eq i64 %59, 49, !dbg !611
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides, i64 2, !dbg !611
  %62 = load i64, ptr %61, align 8, !dbg !611, !tbaa !657
  %63 = and i64 %62, 4294967295, !dbg !611
  %64 = icmp eq i64 %63, 7, !dbg !611
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p0.strides, i64 3, !dbg !611
  %66 = load i64, ptr %65, align 8, !dbg !611, !tbaa !660
  %67 = and i64 %66, 4294967295, !dbg !611
  %68 = icmp eq i64 %67, 1, !dbg !611
  %69 = and i1 %64, %68, !dbg !611
  %70 = and i1 %60, %69, !dbg !611
  br i1 %70, label %if_end, label %assert_fail27, !dbg !611, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !611
  %72 = load i64, ptr %71, align 8, !dbg !611
  %73 = icmp eq i64 %72, 0, !dbg !611
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !611, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %74(ptr nonnull @.str.177), !dbg !611
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %75(ptr nonnull @.str.178), !dbg !611
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !611
  %77 = load i32, ptr %76, align 4, !dbg !611
  %78 = icmp eq i32 %77, 2, !dbg !611
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !611, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %79(ptr nonnull @.str.179), !dbg !611
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !611
  %81 = load i32, ptr %80, align 4, !dbg !611
  %82 = icmp eq i32 %81, 4, !dbg !611
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !611, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %83(ptr nonnull @.str.180), !dbg !611
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !611
  %85 = load i16, ptr %84, align 2, !dbg !611
  %86 = icmp eq i16 %85, 1, !dbg !611
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !611
  %88 = load i8, ptr %87, align 1, !dbg !611
  %89 = icmp eq i8 %88, 32, !dbg !611
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !611
  %91 = load i8, ptr %90, align 1, !dbg !611
  %92 = icmp eq i8 %91, 2, !dbg !611
  %93 = and i1 %89, %92, !dbg !611
  %94 = and i1 %86, %93, !dbg !611
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !611, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %95(ptr nonnull @.str.181), !dbg !611
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape, align 8, !dbg !611, !tbaa !662
  %97 = and i64 %96, 4294967295, !dbg !611
  %98 = icmp eq i64 %97, 4, !dbg !611
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !611, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %99(ptr nonnull @.str.182), !dbg !611
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape, i64 1, !dbg !611
  %101 = load i64, ptr %100, align 8, !dbg !611, !tbaa !672
  %102 = and i64 %101, 4294967295, !dbg !611
  %103 = icmp eq i64 %102, 4, !dbg !611
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !611, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %104(ptr nonnull @.str.183), !dbg !611
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape, i64 2, !dbg !611
  %106 = load i64, ptr %105, align 8, !dbg !611, !tbaa !674
  %107 = and i64 %106, 4294967295, !dbg !611
  %108 = icmp eq i64 %107, 512, !dbg !611
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !611, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %109(ptr nonnull @.str.184), !dbg !611
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.shape, i64 3, !dbg !611
  %111 = load i64, ptr %110, align 8, !dbg !611, !tbaa !677
  %112 = and i64 %111, 4294967295, !dbg !611
  %113 = icmp eq i64 %112, 512, !dbg !611
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !611, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %114(ptr nonnull @.str.185), !dbg !611
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides, null, !dbg !611
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !611, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides, align 8, !dbg !611, !tbaa !679
  %116 = and i64 %115, 4294967295, !dbg !611
  %117 = icmp eq i64 %116, 1048576, !dbg !611
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides, i64 1, !dbg !611
  %119 = load i64, ptr %118, align 8, !dbg !611, !tbaa !689
  %120 = and i64 %119, 4294967295, !dbg !611
  %121 = icmp eq i64 %120, 262144, !dbg !611
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides, i64 2, !dbg !611
  %123 = load i64, ptr %122, align 8, !dbg !611, !tbaa !691
  %124 = and i64 %123, 4294967295, !dbg !611
  %125 = icmp eq i64 %124, 512, !dbg !611
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p1.strides, i64 3, !dbg !611
  %127 = load i64, ptr %126, align 8, !dbg !611, !tbaa !694
  %128 = and i64 %127, 4294967295, !dbg !611
  %129 = icmp eq i64 %128, 1, !dbg !611
  %130 = and i1 %125, %129, !dbg !611
  %131 = and i1 %121, %130, !dbg !611
  %132 = and i1 %117, %131, !dbg !611
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !611, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !611
  %134 = load i64, ptr %133, align 8, !dbg !611
  %135 = icmp eq i64 %134, 0, !dbg !611
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !611, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %136(ptr nonnull @.str.186), !dbg !611
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %137(ptr nonnull @.str.187), !dbg !611
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !611
  %139 = load i32, ptr %138, align 4, !dbg !611
  %140 = icmp eq i32 %139, 2, !dbg !611
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !611, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %141(ptr nonnull @.str.188), !dbg !611
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !611
  %143 = load i32, ptr %142, align 4, !dbg !611
  %144 = icmp eq i32 %dev_id, %143, !dbg !611
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !611, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %145(ptr nonnull @.str.189), !dbg !611
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !611
  %147 = load i32, ptr %146, align 4, !dbg !611
  %148 = icmp eq i32 %147, 4, !dbg !611
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !611, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %149(ptr nonnull @.str.190), !dbg !611
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !611
  %151 = load i16, ptr %150, align 2, !dbg !611
  %152 = icmp eq i16 %151, 1, !dbg !611
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !611
  %154 = load i8, ptr %153, align 1, !dbg !611
  %155 = icmp eq i8 %154, 32, !dbg !611
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !611
  %157 = load i8, ptr %156, align 1, !dbg !611
  %158 = icmp eq i8 %157, 2, !dbg !611
  %159 = and i1 %155, %158, !dbg !611
  %160 = and i1 %152, %159, !dbg !611
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !611, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %161(ptr nonnull @.str.191), !dbg !611
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape, align 8, !dbg !611, !tbaa !696
  %163 = and i64 %162, 4294967295, !dbg !611
  %164 = icmp eq i64 %163, 1, !dbg !611
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !611, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %165(ptr nonnull @.str.192), !dbg !611
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape, i64 1, !dbg !611
  %167 = load i64, ptr %166, align 8, !dbg !611, !tbaa !706
  %168 = and i64 %167, 4294967295, !dbg !611
  %169 = icmp eq i64 %168, 512, !dbg !611
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !611, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %170(ptr nonnull @.str.193), !dbg !611
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape, i64 2, !dbg !611
  %172 = load i64, ptr %171, align 8, !dbg !611, !tbaa !708
  %173 = and i64 %172, 4294967295, !dbg !611
  %174 = icmp eq i64 %173, 1, !dbg !611
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !611, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %175(ptr nonnull @.str.194), !dbg !611
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.shape, i64 3, !dbg !611
  %177 = load i64, ptr %176, align 8, !dbg !611, !tbaa !711
  %178 = and i64 %177, 4294967295, !dbg !611
  %179 = icmp eq i64 %178, 1, !dbg !611
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !611, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %180(ptr nonnull @.str.195), !dbg !611
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.strides, null, !dbg !611
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !611, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.p2.strides, i64 1, !dbg !611
  %182 = load i64, ptr %181, align 8, !dbg !611, !tbaa !713
  %183 = and i64 %182, 4294967295, !dbg !611
  %184 = icmp eq i64 %183, 1, !dbg !611
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !611, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !611
  %186 = load i64, ptr %185, align 8, !dbg !611
  %187 = icmp eq i64 %186, 0, !dbg !611
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !611, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %188(ptr nonnull @.str.196), !dbg !611
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %189(ptr nonnull @.str.197), !dbg !611
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !611
  %191 = load i32, ptr %190, align 4, !dbg !611
  %192 = icmp eq i32 %191, 2, !dbg !611
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !611, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %193(ptr nonnull @.str.198), !dbg !611
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !611
  %195 = load i32, ptr %194, align 4, !dbg !611
  %196 = icmp eq i32 %dev_id, %195, !dbg !611
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !611, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %197(ptr nonnull @.str.199), !dbg !611
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !611
  %199 = load i32, ptr %198, align 4, !dbg !611
  %200 = icmp eq i32 %199, 4, !dbg !611
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !611, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %201(ptr nonnull @.str.200), !dbg !611
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !611
  %203 = load i16, ptr %202, align 2, !dbg !611
  %204 = icmp eq i16 %203, 1, !dbg !611
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !611
  %206 = load i8, ptr %205, align 1, !dbg !611
  %207 = icmp eq i8 %206, 32, !dbg !611
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !611
  %209 = load i8, ptr %208, align 1, !dbg !611
  %210 = icmp eq i8 %209, 2, !dbg !611
  %211 = and i1 %207, %210, !dbg !611
  %212 = and i1 %204, %211, !dbg !611
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !611, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %213(ptr nonnull @.str.201), !dbg !611
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape, align 8, !dbg !611, !tbaa !723
  %215 = and i64 %214, 4294967295, !dbg !611
  %216 = icmp eq i64 %215, 1, !dbg !611
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !611, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %217(ptr nonnull @.str.202), !dbg !611
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape, i64 1, !dbg !611
  %219 = load i64, ptr %218, align 8, !dbg !611, !tbaa !733
  %220 = and i64 %219, 4294967295, !dbg !611
  %221 = icmp eq i64 %220, 512, !dbg !611
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !611, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %222(ptr nonnull @.str.203), !dbg !611
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape, i64 2, !dbg !611
  %224 = load i64, ptr %223, align 8, !dbg !611, !tbaa !735
  %225 = and i64 %224, 4294967295, !dbg !611
  %226 = icmp eq i64 %225, 7, !dbg !611
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !611, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %227(ptr nonnull @.str.204), !dbg !611
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.shape, i64 3, !dbg !611
  %229 = load i64, ptr %228, align 8, !dbg !611, !tbaa !738
  %230 = and i64 %229, 4294967295, !dbg !611
  %231 = icmp eq i64 %230, 7, !dbg !611
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !611, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %232(ptr nonnull @.str.205), !dbg !611
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides, null, !dbg !611
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !611, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides, i64 1, !dbg !611
  %234 = load i64, ptr %233, align 8, !dbg !611, !tbaa !740
  %235 = and i64 %234, 4294967295, !dbg !611
  %236 = icmp eq i64 %235, 49, !dbg !611
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides, i64 2, !dbg !611
  %238 = load i64, ptr %237, align 8, !dbg !611, !tbaa !750
  %239 = and i64 %238, 4294967295, !dbg !611
  %240 = icmp eq i64 %239, 7, !dbg !611
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3.T_relu.strides, i64 3, !dbg !611
  %242 = load i64, ptr %241, align 8, !dbg !611, !tbaa !753
  %243 = and i64 %242, 4294967295, !dbg !611
  %244 = icmp eq i64 %243, 1, !dbg !611
  %245 = and i1 %240, %244, !dbg !611
  %246 = and i1 %236, %245, !dbg !611
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !611, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !611
  %248 = load i64, ptr %247, align 8, !dbg !611
  %249 = icmp eq i64 %248, 0, !dbg !611
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !611, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %250(ptr nonnull @.str.206), !dbg !611
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %251(ptr nonnull @.str.207), !dbg !611
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !611
  %253 = load i32, ptr %252, align 4, !dbg !611
  %254 = icmp eq i32 %253, 2, !dbg !611
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !611, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %255(ptr nonnull @.str.208), !dbg !611
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !611
  %257 = load i32, ptr %256, align 4, !dbg !611
  %258 = icmp eq i32 %dev_id, %257, !dbg !611
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !611, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !611, !tbaa !19
  tail call void %259(ptr nonnull @.str.209), !dbg !611
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !611
  store i32 0, ptr %stack_tcode116, align 4, !dbg !611, !tbaa !755
  %260 = sext i32 %dev_id to i64, !dbg !611
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !611
  store i64 %260, ptr %261, align 8, !dbg !611
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !611
  store i32 0, ptr %262, align 4, !dbg !611, !tbaa !766
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !611
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !611
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !611, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !611
  %.not120 = icmp eq ptr %266, null, !dbg !611
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !611, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !611, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !611, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !611
  %270 = icmp eq i32 %269, 0, !dbg !611
  br i1 %270, label %call_end, label %common.ret, !dbg !611, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !611
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !611
  %273 = icmp eq i32 %272, 0, !dbg !611
  br i1 %273, label %call_end106, label %common.ret, !dbg !611, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !611
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !611
  br label %handle_init_end, !dbg !611

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_compute_(i32 %dev_id, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, ptr %p0107, ptr %p1108, ptr %T_relu109, ptr %p2110), !dbg !611
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !768 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !770, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !771, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !772, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !773, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !774, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !775, metadata !DIExpression()), !dbg !776
  %0 = alloca ptr, align 8, !dbg !776
  %stack_value115 = alloca [17 x %0], align 8, !dbg !776
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !776
  %1 = icmp eq i32 %num_args, 4, !dbg !776
  br i1 %1, label %assert_end, label %assert_fail, !dbg !776, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !776

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %2(ptr nonnull @.str.213), !dbg !776
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !776, !tbaa !777
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !776
  %p1.code = load i32, ptr %3, align 4, !dbg !776, !tbaa !788
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !776
  %p2.code = load i32, ptr %4, align 4, !dbg !776, !tbaa !790
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !776
  %T_add.code = load i32, ptr %5, align 4, !dbg !776, !tbaa !793
  %p0 = load ptr, ptr %args, align 8, !dbg !776
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !776
  %p1 = load ptr, ptr %6, align 8, !dbg !776
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !776
  %p2 = load ptr, ptr %7, align 8, !dbg !776
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !776
  %T_add = load ptr, ptr %8, align 8, !dbg !776
  %p0108 = load ptr, ptr %p0, align 8, !dbg !776
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !776
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p0.shape = load ptr, ptr %9, align 8, !dbg !776
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p0.strides = load ptr, ptr %10, align 8, !dbg !776
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !776
  %dev_id = load i32, ptr %11, align 4, !dbg !776
  %p1109 = load ptr, ptr %p1, align 8, !dbg !776
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !776
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p1.shape = load ptr, ptr %12, align 8, !dbg !776
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p1.strides = load ptr, ptr %13, align 8, !dbg !776
  %p2110 = load ptr, ptr %p2, align 8, !dbg !776
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !776
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p2.shape = load ptr, ptr %14, align 8, !dbg !776
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.p2.strides = load ptr, ptr %15, align 8, !dbg !776
  %T_add107 = load ptr, ptr %T_add, align 8, !dbg !776
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add107, i64 64) ], !dbg !776
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.T_add.shape = load ptr, ptr %16, align 8, !dbg !776
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !776
  %tvmgen_default_fused_nn_conv2d_add.T_add.strides = load ptr, ptr %17, align 8, !dbg !776
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !776

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %18(ptr nonnull @.str.214), !dbg !776
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !776

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %19(ptr nonnull @.str.215), !dbg !776
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !776

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %20(ptr nonnull @.str.216), !dbg !776
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !776

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %21(ptr nonnull @.str.217), !dbg !776
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !776
  %23 = load i32, ptr %22, align 4, !dbg !776
  %24 = icmp eq i32 %23, 4, !dbg !776
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !776, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %25(ptr nonnull @.str.218), !dbg !776
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !776
  %27 = load i16, ptr %26, align 2, !dbg !776
  %28 = icmp eq i16 %27, 1, !dbg !776
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !776
  %30 = load i8, ptr %29, align 1, !dbg !776
  %31 = icmp eq i8 %30, 32, !dbg !776
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !776
  %33 = load i8, ptr %32, align 1, !dbg !776
  %34 = icmp eq i8 %33, 2, !dbg !776
  %35 = and i1 %31, %34, !dbg !776
  %36 = and i1 %28, %35, !dbg !776
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !776, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %37(ptr nonnull @.str.219), !dbg !776
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.shape, align 8, !dbg !776, !tbaa !795
  %39 = and i64 %38, 4294967295, !dbg !776
  %40 = icmp eq i64 %39, 1, !dbg !776
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !776, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %41(ptr nonnull @.str.220), !dbg !776
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.shape, i64 1, !dbg !776
  %43 = load i64, ptr %42, align 8, !dbg !776, !tbaa !805
  %44 = and i64 %43, 4294967295, !dbg !776
  %45 = icmp eq i64 %44, 64, !dbg !776
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !776, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %46(ptr nonnull @.str.221), !dbg !776
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.shape, i64 2, !dbg !776
  %48 = load i64, ptr %47, align 8, !dbg !776, !tbaa !807
  %49 = and i64 %48, 4294967295, !dbg !776
  %50 = icmp eq i64 %49, 56, !dbg !776
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !776, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %51(ptr nonnull @.str.222), !dbg !776
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.shape, i64 3, !dbg !776
  %53 = load i64, ptr %52, align 8, !dbg !776, !tbaa !810
  %54 = and i64 %53, 4294967295, !dbg !776
  %55 = icmp eq i64 %54, 56, !dbg !776
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !776, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %56(ptr nonnull @.str.223), !dbg !776
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add.p0.strides, null, !dbg !776
  br i1 %.not, label %if_end, label %if_then, !dbg !776, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.strides, i64 1, !dbg !776
  %58 = load i64, ptr %57, align 8, !dbg !776, !tbaa !812
  %59 = and i64 %58, 4294967295, !dbg !776
  %60 = icmp eq i64 %59, 3136, !dbg !776
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.strides, i64 2, !dbg !776
  %62 = load i64, ptr %61, align 8, !dbg !776, !tbaa !822
  %63 = and i64 %62, 4294967295, !dbg !776
  %64 = icmp eq i64 %63, 56, !dbg !776
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p0.strides, i64 3, !dbg !776
  %66 = load i64, ptr %65, align 8, !dbg !776, !tbaa !825
  %67 = and i64 %66, 4294967295, !dbg !776
  %68 = icmp eq i64 %67, 1, !dbg !776
  %69 = and i1 %64, %68, !dbg !776
  %70 = and i1 %60, %69, !dbg !776
  br i1 %70, label %if_end, label %assert_fail27, !dbg !776, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !776
  %72 = load i64, ptr %71, align 8, !dbg !776
  %73 = icmp eq i64 %72, 0, !dbg !776
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !776, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %74(ptr nonnull @.str.224), !dbg !776
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %75(ptr nonnull @.str.225), !dbg !776
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !776
  %77 = load i32, ptr %76, align 4, !dbg !776
  %78 = icmp eq i32 %77, 2, !dbg !776
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !776, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %79(ptr nonnull @.str.226), !dbg !776
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !776
  %81 = load i32, ptr %80, align 4, !dbg !776
  %82 = icmp eq i32 %81, 4, !dbg !776
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !776, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %83(ptr nonnull @.str.227), !dbg !776
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !776
  %85 = load i16, ptr %84, align 2, !dbg !776
  %86 = icmp eq i16 %85, 1, !dbg !776
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !776
  %88 = load i8, ptr %87, align 1, !dbg !776
  %89 = icmp eq i8 %88, 32, !dbg !776
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !776
  %91 = load i8, ptr %90, align 1, !dbg !776
  %92 = icmp eq i8 %91, 2, !dbg !776
  %93 = and i1 %89, %92, !dbg !776
  %94 = and i1 %86, %93, !dbg !776
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !776, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %95(ptr nonnull @.str.228), !dbg !776
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.shape, align 8, !dbg !776, !tbaa !827
  %97 = and i64 %96, 4294967295, !dbg !776
  %98 = icmp eq i64 %97, 256, !dbg !776
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !776, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %99(ptr nonnull @.str.229), !dbg !776
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.shape, i64 1, !dbg !776
  %101 = load i64, ptr %100, align 8, !dbg !776, !tbaa !837
  %102 = and i64 %101, 4294967295, !dbg !776
  %103 = icmp eq i64 %102, 64, !dbg !776
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !776, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %104(ptr nonnull @.str.230), !dbg !776
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.shape, i64 2, !dbg !776
  %106 = load i64, ptr %105, align 8, !dbg !776, !tbaa !839
  %107 = and i64 %106, 4294967295, !dbg !776
  %108 = icmp eq i64 %107, 1, !dbg !776
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !776, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %109(ptr nonnull @.str.231), !dbg !776
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.shape, i64 3, !dbg !776
  %111 = load i64, ptr %110, align 8, !dbg !776, !tbaa !842
  %112 = and i64 %111, 4294967295, !dbg !776
  %113 = icmp eq i64 %112, 1, !dbg !776
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !776, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %114(ptr nonnull @.str.232), !dbg !776
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add.p1.strides, null, !dbg !776
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !776, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.strides, align 8, !dbg !776, !tbaa !844
  %116 = and i64 %115, 4294967295, !dbg !776
  %117 = icmp eq i64 %116, 64, !dbg !776
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p1.strides, i64 1, !dbg !776
  %119 = load i64, ptr %118, align 8, !dbg !776, !tbaa !854
  %120 = and i64 %119, 4294967295, !dbg !776
  %121 = icmp eq i64 %120, 1, !dbg !776
  %122 = and i1 %117, %121, !dbg !776
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !776, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !776
  %124 = load i64, ptr %123, align 8, !dbg !776
  %125 = icmp eq i64 %124, 0, !dbg !776
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !776, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %126(ptr nonnull @.str.233), !dbg !776
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %127(ptr nonnull @.str.234), !dbg !776
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !776
  %129 = load i32, ptr %128, align 4, !dbg !776
  %130 = icmp eq i32 %129, 2, !dbg !776
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !776, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %131(ptr nonnull @.str.235), !dbg !776
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !776
  %133 = load i32, ptr %132, align 4, !dbg !776
  %134 = icmp eq i32 %dev_id, %133, !dbg !776
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !776, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %135(ptr nonnull @.str.236), !dbg !776
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !776
  %137 = load i32, ptr %136, align 4, !dbg !776
  %138 = icmp eq i32 %137, 4, !dbg !776
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !776, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %139(ptr nonnull @.str.237), !dbg !776
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !776
  %141 = load i16, ptr %140, align 2, !dbg !776
  %142 = icmp eq i16 %141, 1, !dbg !776
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !776
  %144 = load i8, ptr %143, align 1, !dbg !776
  %145 = icmp eq i8 %144, 32, !dbg !776
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !776
  %147 = load i8, ptr %146, align 1, !dbg !776
  %148 = icmp eq i8 %147, 2, !dbg !776
  %149 = and i1 %145, %148, !dbg !776
  %150 = and i1 %142, %149, !dbg !776
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !776, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %151(ptr nonnull @.str.238), !dbg !776
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add.p2.shape, align 8, !dbg !776, !tbaa !856
  %153 = and i64 %152, 4294967295, !dbg !776
  %154 = icmp eq i64 %153, 1, !dbg !776
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !776, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %155(ptr nonnull @.str.239), !dbg !776
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p2.shape, i64 1, !dbg !776
  %157 = load i64, ptr %156, align 8, !dbg !776, !tbaa !866
  %158 = and i64 %157, 4294967295, !dbg !776
  %159 = icmp eq i64 %158, 256, !dbg !776
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !776, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %160(ptr nonnull @.str.240), !dbg !776
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p2.shape, i64 2, !dbg !776
  %162 = load i64, ptr %161, align 8, !dbg !776, !tbaa !868
  %163 = and i64 %162, 4294967295, !dbg !776
  %164 = icmp eq i64 %163, 1, !dbg !776
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !776, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %165(ptr nonnull @.str.241), !dbg !776
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p2.shape, i64 3, !dbg !776
  %167 = load i64, ptr %166, align 8, !dbg !776, !tbaa !871
  %168 = and i64 %167, 4294967295, !dbg !776
  %169 = icmp eq i64 %168, 1, !dbg !776
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !776, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %170(ptr nonnull @.str.242), !dbg !776
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add.p2.strides, null, !dbg !776
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !776, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.p2.strides, i64 1, !dbg !776
  %172 = load i64, ptr %171, align 8, !dbg !776, !tbaa !873
  %173 = and i64 %172, 4294967295, !dbg !776
  %174 = icmp eq i64 %173, 1, !dbg !776
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !776, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !776
  %176 = load i64, ptr %175, align 8, !dbg !776
  %177 = icmp eq i64 %176, 0, !dbg !776
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !776, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %178(ptr nonnull @.str.243), !dbg !776
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %179(ptr nonnull @.str.244), !dbg !776
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !776
  %181 = load i32, ptr %180, align 4, !dbg !776
  %182 = icmp eq i32 %181, 2, !dbg !776
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !776, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %183(ptr nonnull @.str.245), !dbg !776
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !776
  %185 = load i32, ptr %184, align 4, !dbg !776
  %186 = icmp eq i32 %dev_id, %185, !dbg !776
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !776, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %187(ptr nonnull @.str.246), !dbg !776
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !776
  %189 = load i32, ptr %188, align 4, !dbg !776
  %190 = icmp eq i32 %189, 4, !dbg !776
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !776, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %191(ptr nonnull @.str.247), !dbg !776
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !776
  %193 = load i16, ptr %192, align 2, !dbg !776
  %194 = icmp eq i16 %193, 1, !dbg !776
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !776
  %196 = load i8, ptr %195, align 1, !dbg !776
  %197 = icmp eq i8 %196, 32, !dbg !776
  %198 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !776
  %199 = load i8, ptr %198, align 1, !dbg !776
  %200 = icmp eq i8 %199, 2, !dbg !776
  %201 = and i1 %197, %200, !dbg !776
  %202 = and i1 %194, %201, !dbg !776
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !776, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %203(ptr nonnull @.str.248), !dbg !776
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.shape, align 8, !dbg !776, !tbaa !883
  %205 = and i64 %204, 4294967295, !dbg !776
  %206 = icmp eq i64 %205, 1, !dbg !776
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !776, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %207(ptr nonnull @.str.249), !dbg !776
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.shape, i64 1, !dbg !776
  %209 = load i64, ptr %208, align 8, !dbg !776, !tbaa !893
  %210 = and i64 %209, 4294967295, !dbg !776
  %211 = icmp eq i64 %210, 256, !dbg !776
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !776, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %212(ptr nonnull @.str.250), !dbg !776
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.shape, i64 2, !dbg !776
  %214 = load i64, ptr %213, align 8, !dbg !776, !tbaa !895
  %215 = and i64 %214, 4294967295, !dbg !776
  %216 = icmp eq i64 %215, 56, !dbg !776
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !776, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %217(ptr nonnull @.str.251), !dbg !776
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.shape, i64 3, !dbg !776
  %219 = load i64, ptr %218, align 8, !dbg !776, !tbaa !898
  %220 = and i64 %219, 4294967295, !dbg !776
  %221 = icmp eq i64 %220, 56, !dbg !776
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !776, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %222(ptr nonnull @.str.252), !dbg !776
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add.T_add.strides, null, !dbg !776
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !776, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.strides, i64 1, !dbg !776
  %224 = load i64, ptr %223, align 8, !dbg !776, !tbaa !900
  %225 = and i64 %224, 4294967295, !dbg !776
  %226 = icmp eq i64 %225, 3136, !dbg !776
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.strides, i64 2, !dbg !776
  %228 = load i64, ptr %227, align 8, !dbg !776, !tbaa !910
  %229 = and i64 %228, 4294967295, !dbg !776
  %230 = icmp eq i64 %229, 56, !dbg !776
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add.T_add.strides, i64 3, !dbg !776
  %232 = load i64, ptr %231, align 8, !dbg !776, !tbaa !913
  %233 = and i64 %232, 4294967295, !dbg !776
  %234 = icmp eq i64 %233, 1, !dbg !776
  %235 = and i1 %230, %234, !dbg !776
  %236 = and i1 %226, %235, !dbg !776
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !776, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !776
  %238 = load i64, ptr %237, align 8, !dbg !776
  %239 = icmp eq i64 %238, 0, !dbg !776
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !776, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %240(ptr nonnull @.str.253), !dbg !776
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %241(ptr nonnull @.str.254), !dbg !776
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !776
  %243 = load i32, ptr %242, align 4, !dbg !776
  %244 = icmp eq i32 %243, 2, !dbg !776
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !776, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %245(ptr nonnull @.str.255), !dbg !776
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !776
  %247 = load i32, ptr %246, align 4, !dbg !776
  %248 = icmp eq i32 %dev_id, %247, !dbg !776
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !776, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !776, !tbaa !19
  tail call void %249(ptr nonnull @.str.256), !dbg !776
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !776
  store i32 0, ptr %stack_tcode116, align 4, !dbg !776, !tbaa !915
  %250 = sext i32 %dev_id to i64, !dbg !776
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !776
  store i64 %250, ptr %251, align 8, !dbg !776
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !776
  store i32 0, ptr %252, align 4, !dbg !776, !tbaa !926
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !776
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !776
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !776, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !776
  %.not120 = icmp eq ptr %256, null, !dbg !776
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !776, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !776, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !776, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !776
  %260 = icmp eq i32 %259, 0, !dbg !776
  br i1 %260, label %call_end, label %common.ret, !dbg !776, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !776
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !776
  %263 = icmp eq i32 %262, 0, !dbg !776
  br i1 %263, label %call_end106, label %common.ret, !dbg !776, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !776
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !776
  br label %handle_init_end, !dbg !776

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_compute_(ptr nonnull %stack_value115, ptr %T_add107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !776
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !928 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !930, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !931, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !932, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !933, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !934, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !935, metadata !DIExpression()), !dbg !936
  %0 = alloca ptr, align 8, !dbg !936
  %stack_value115 = alloca [17 x %0], align 8, !dbg !936
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !936
  %1 = icmp eq i32 %num_args, 4, !dbg !936
  br i1 %1, label %assert_end, label %assert_fail, !dbg !936, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !936

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %2(ptr nonnull @.str.258), !dbg !936
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !936, !tbaa !937
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !936
  %p1.code = load i32, ptr %3, align 4, !dbg !936, !tbaa !948
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !936
  %p2.code = load i32, ptr %4, align 4, !dbg !936, !tbaa !950
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !936
  %T_add.code = load i32, ptr %5, align 4, !dbg !936, !tbaa !953
  %p0 = load ptr, ptr %args, align 8, !dbg !936
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !936
  %p1 = load ptr, ptr %6, align 8, !dbg !936
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !936
  %p2 = load ptr, ptr %7, align 8, !dbg !936
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !936
  %T_add = load ptr, ptr %8, align 8, !dbg !936
  %p0108 = load ptr, ptr %p0, align 8, !dbg !936
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !936
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p0.shape = load ptr, ptr %9, align 8, !dbg !936
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p0.strides = load ptr, ptr %10, align 8, !dbg !936
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !936
  %dev_id = load i32, ptr %11, align 4, !dbg !936
  %p1109 = load ptr, ptr %p1, align 8, !dbg !936
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !936
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p1.shape = load ptr, ptr %12, align 8, !dbg !936
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p1.strides = load ptr, ptr %13, align 8, !dbg !936
  %p2110 = load ptr, ptr %p2, align 8, !dbg !936
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !936
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p2.shape = load ptr, ptr %14, align 8, !dbg !936
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.p2.strides = load ptr, ptr %15, align 8, !dbg !936
  %T_add107 = load ptr, ptr %T_add, align 8, !dbg !936
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add107, i64 64) ], !dbg !936
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.T_add.shape = load ptr, ptr %16, align 8, !dbg !936
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !936
  %tvmgen_default_fused_nn_conv2d_add_1.T_add.strides = load ptr, ptr %17, align 8, !dbg !936
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !936

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %18(ptr nonnull @.str.259), !dbg !936
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !936

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %19(ptr nonnull @.str.260), !dbg !936
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !936

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %20(ptr nonnull @.str.261), !dbg !936
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !936

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %21(ptr nonnull @.str.262), !dbg !936
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !936
  %23 = load i32, ptr %22, align 4, !dbg !936
  %24 = icmp eq i32 %23, 4, !dbg !936
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !936, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %25(ptr nonnull @.str.263), !dbg !936
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !936
  %27 = load i16, ptr %26, align 2, !dbg !936
  %28 = icmp eq i16 %27, 1, !dbg !936
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !936
  %30 = load i8, ptr %29, align 1, !dbg !936
  %31 = icmp eq i8 %30, 32, !dbg !936
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !936
  %33 = load i8, ptr %32, align 1, !dbg !936
  %34 = icmp eq i8 %33, 2, !dbg !936
  %35 = and i1 %31, %34, !dbg !936
  %36 = and i1 %28, %35, !dbg !936
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !936, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %37(ptr nonnull @.str.264), !dbg !936
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.shape, align 8, !dbg !936, !tbaa !955
  %39 = and i64 %38, 4294967295, !dbg !936
  %40 = icmp eq i64 %39, 1, !dbg !936
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !936, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %41(ptr nonnull @.str.265), !dbg !936
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.shape, i64 1, !dbg !936
  %43 = load i64, ptr %42, align 8, !dbg !936, !tbaa !965
  %44 = and i64 %43, 4294967295, !dbg !936
  %45 = icmp eq i64 %44, 256, !dbg !936
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !936, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %46(ptr nonnull @.str.266), !dbg !936
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.shape, i64 2, !dbg !936
  %48 = load i64, ptr %47, align 8, !dbg !936, !tbaa !967
  %49 = and i64 %48, 4294967295, !dbg !936
  %50 = icmp eq i64 %49, 56, !dbg !936
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !936, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %51(ptr nonnull @.str.267), !dbg !936
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.shape, i64 3, !dbg !936
  %53 = load i64, ptr %52, align 8, !dbg !936, !tbaa !970
  %54 = and i64 %53, 4294967295, !dbg !936
  %55 = icmp eq i64 %54, 56, !dbg !936
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !936, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %56(ptr nonnull @.str.268), !dbg !936
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.strides, null, !dbg !936
  br i1 %.not, label %if_end, label %if_then, !dbg !936, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.strides, i64 1, !dbg !936
  %58 = load i64, ptr %57, align 8, !dbg !936, !tbaa !972
  %59 = and i64 %58, 4294967295, !dbg !936
  %60 = icmp eq i64 %59, 3136, !dbg !936
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.strides, i64 2, !dbg !936
  %62 = load i64, ptr %61, align 8, !dbg !936, !tbaa !982
  %63 = and i64 %62, 4294967295, !dbg !936
  %64 = icmp eq i64 %63, 56, !dbg !936
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p0.strides, i64 3, !dbg !936
  %66 = load i64, ptr %65, align 8, !dbg !936, !tbaa !985
  %67 = and i64 %66, 4294967295, !dbg !936
  %68 = icmp eq i64 %67, 1, !dbg !936
  %69 = and i1 %64, %68, !dbg !936
  %70 = and i1 %60, %69, !dbg !936
  br i1 %70, label %if_end, label %assert_fail27, !dbg !936, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !936
  %72 = load i64, ptr %71, align 8, !dbg !936
  %73 = icmp eq i64 %72, 0, !dbg !936
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !936, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %74(ptr nonnull @.str.269), !dbg !936
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %75(ptr nonnull @.str.270), !dbg !936
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !936
  %77 = load i32, ptr %76, align 4, !dbg !936
  %78 = icmp eq i32 %77, 2, !dbg !936
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !936, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %79(ptr nonnull @.str.271), !dbg !936
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !936
  %81 = load i32, ptr %80, align 4, !dbg !936
  %82 = icmp eq i32 %81, 4, !dbg !936
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !936, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %83(ptr nonnull @.str.272), !dbg !936
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !936
  %85 = load i16, ptr %84, align 2, !dbg !936
  %86 = icmp eq i16 %85, 1, !dbg !936
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !936
  %88 = load i8, ptr %87, align 1, !dbg !936
  %89 = icmp eq i8 %88, 32, !dbg !936
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !936
  %91 = load i8, ptr %90, align 1, !dbg !936
  %92 = icmp eq i8 %91, 2, !dbg !936
  %93 = and i1 %89, %92, !dbg !936
  %94 = and i1 %86, %93, !dbg !936
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !936, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %95(ptr nonnull @.str.273), !dbg !936
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.shape, align 8, !dbg !936, !tbaa !987
  %97 = and i64 %96, 4294967295, !dbg !936
  %98 = icmp eq i64 %97, 512, !dbg !936
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !936, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %99(ptr nonnull @.str.274), !dbg !936
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.shape, i64 1, !dbg !936
  %101 = load i64, ptr %100, align 8, !dbg !936, !tbaa !997
  %102 = and i64 %101, 4294967295, !dbg !936
  %103 = icmp eq i64 %102, 256, !dbg !936
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !936, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %104(ptr nonnull @.str.275), !dbg !936
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.shape, i64 2, !dbg !936
  %106 = load i64, ptr %105, align 8, !dbg !936, !tbaa !999
  %107 = and i64 %106, 4294967295, !dbg !936
  %108 = icmp eq i64 %107, 1, !dbg !936
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !936, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %109(ptr nonnull @.str.276), !dbg !936
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.shape, i64 3, !dbg !936
  %111 = load i64, ptr %110, align 8, !dbg !936, !tbaa !1002
  %112 = and i64 %111, 4294967295, !dbg !936
  %113 = icmp eq i64 %112, 1, !dbg !936
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !936, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %114(ptr nonnull @.str.277), !dbg !936
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.strides, null, !dbg !936
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !936, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.strides, align 8, !dbg !936, !tbaa !1004
  %116 = and i64 %115, 4294967295, !dbg !936
  %117 = icmp eq i64 %116, 256, !dbg !936
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p1.strides, i64 1, !dbg !936
  %119 = load i64, ptr %118, align 8, !dbg !936, !tbaa !1014
  %120 = and i64 %119, 4294967295, !dbg !936
  %121 = icmp eq i64 %120, 1, !dbg !936
  %122 = and i1 %117, %121, !dbg !936
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !936, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !936
  %124 = load i64, ptr %123, align 8, !dbg !936
  %125 = icmp eq i64 %124, 0, !dbg !936
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !936, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %126(ptr nonnull @.str.278), !dbg !936
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %127(ptr nonnull @.str.279), !dbg !936
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !936
  %129 = load i32, ptr %128, align 4, !dbg !936
  %130 = icmp eq i32 %129, 2, !dbg !936
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !936, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %131(ptr nonnull @.str.280), !dbg !936
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !936
  %133 = load i32, ptr %132, align 4, !dbg !936
  %134 = icmp eq i32 %dev_id, %133, !dbg !936
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !936, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %135(ptr nonnull @.str.281), !dbg !936
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !936
  %137 = load i32, ptr %136, align 4, !dbg !936
  %138 = icmp eq i32 %137, 4, !dbg !936
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !936, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %139(ptr nonnull @.str.282), !dbg !936
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !936
  %141 = load i16, ptr %140, align 2, !dbg !936
  %142 = icmp eq i16 %141, 1, !dbg !936
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !936
  %144 = load i8, ptr %143, align 1, !dbg !936
  %145 = icmp eq i8 %144, 32, !dbg !936
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !936
  %147 = load i8, ptr %146, align 1, !dbg !936
  %148 = icmp eq i8 %147, 2, !dbg !936
  %149 = and i1 %145, %148, !dbg !936
  %150 = and i1 %142, %149, !dbg !936
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !936, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %151(ptr nonnull @.str.283), !dbg !936
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.shape, align 8, !dbg !936, !tbaa !1016
  %153 = and i64 %152, 4294967295, !dbg !936
  %154 = icmp eq i64 %153, 1, !dbg !936
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !936, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %155(ptr nonnull @.str.284), !dbg !936
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.shape, i64 1, !dbg !936
  %157 = load i64, ptr %156, align 8, !dbg !936, !tbaa !1026
  %158 = and i64 %157, 4294967295, !dbg !936
  %159 = icmp eq i64 %158, 512, !dbg !936
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !936, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %160(ptr nonnull @.str.285), !dbg !936
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.shape, i64 2, !dbg !936
  %162 = load i64, ptr %161, align 8, !dbg !936, !tbaa !1028
  %163 = and i64 %162, 4294967295, !dbg !936
  %164 = icmp eq i64 %163, 1, !dbg !936
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !936, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %165(ptr nonnull @.str.286), !dbg !936
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.shape, i64 3, !dbg !936
  %167 = load i64, ptr %166, align 8, !dbg !936, !tbaa !1031
  %168 = and i64 %167, 4294967295, !dbg !936
  %169 = icmp eq i64 %168, 1, !dbg !936
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !936, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %170(ptr nonnull @.str.287), !dbg !936
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.strides, null, !dbg !936
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !936, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.p2.strides, i64 1, !dbg !936
  %172 = load i64, ptr %171, align 8, !dbg !936, !tbaa !1033
  %173 = and i64 %172, 4294967295, !dbg !936
  %174 = icmp eq i64 %173, 1, !dbg !936
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !936, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !936
  %176 = load i64, ptr %175, align 8, !dbg !936
  %177 = icmp eq i64 %176, 0, !dbg !936
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !936, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %178(ptr nonnull @.str.288), !dbg !936
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %179(ptr nonnull @.str.289), !dbg !936
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !936
  %181 = load i32, ptr %180, align 4, !dbg !936
  %182 = icmp eq i32 %181, 2, !dbg !936
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !936, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %183(ptr nonnull @.str.290), !dbg !936
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !936
  %185 = load i32, ptr %184, align 4, !dbg !936
  %186 = icmp eq i32 %dev_id, %185, !dbg !936
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !936, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %187(ptr nonnull @.str.291), !dbg !936
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !936
  %189 = load i32, ptr %188, align 4, !dbg !936
  %190 = icmp eq i32 %189, 4, !dbg !936
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !936, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %191(ptr nonnull @.str.292), !dbg !936
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !936
  %193 = load i16, ptr %192, align 2, !dbg !936
  %194 = icmp eq i16 %193, 1, !dbg !936
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !936
  %196 = load i8, ptr %195, align 1, !dbg !936
  %197 = icmp eq i8 %196, 32, !dbg !936
  %198 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !936
  %199 = load i8, ptr %198, align 1, !dbg !936
  %200 = icmp eq i8 %199, 2, !dbg !936
  %201 = and i1 %197, %200, !dbg !936
  %202 = and i1 %194, %201, !dbg !936
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !936, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %203(ptr nonnull @.str.293), !dbg !936
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.shape, align 8, !dbg !936, !tbaa !1043
  %205 = and i64 %204, 4294967295, !dbg !936
  %206 = icmp eq i64 %205, 1, !dbg !936
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !936, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %207(ptr nonnull @.str.294), !dbg !936
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.shape, i64 1, !dbg !936
  %209 = load i64, ptr %208, align 8, !dbg !936, !tbaa !1053
  %210 = and i64 %209, 4294967295, !dbg !936
  %211 = icmp eq i64 %210, 512, !dbg !936
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !936, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %212(ptr nonnull @.str.295), !dbg !936
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.shape, i64 2, !dbg !936
  %214 = load i64, ptr %213, align 8, !dbg !936, !tbaa !1055
  %215 = and i64 %214, 4294967295, !dbg !936
  %216 = icmp eq i64 %215, 28, !dbg !936
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !936, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %217(ptr nonnull @.str.296), !dbg !936
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.shape, i64 3, !dbg !936
  %219 = load i64, ptr %218, align 8, !dbg !936, !tbaa !1058
  %220 = and i64 %219, 4294967295, !dbg !936
  %221 = icmp eq i64 %220, 28, !dbg !936
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !936, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %222(ptr nonnull @.str.297), !dbg !936
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.strides, null, !dbg !936
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !936, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.strides, i64 1, !dbg !936
  %224 = load i64, ptr %223, align 8, !dbg !936, !tbaa !1060
  %225 = and i64 %224, 4294967295, !dbg !936
  %226 = icmp eq i64 %225, 784, !dbg !936
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.strides, i64 2, !dbg !936
  %228 = load i64, ptr %227, align 8, !dbg !936, !tbaa !1070
  %229 = and i64 %228, 4294967295, !dbg !936
  %230 = icmp eq i64 %229, 28, !dbg !936
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_1.T_add.strides, i64 3, !dbg !936
  %232 = load i64, ptr %231, align 8, !dbg !936, !tbaa !1073
  %233 = and i64 %232, 4294967295, !dbg !936
  %234 = icmp eq i64 %233, 1, !dbg !936
  %235 = and i1 %230, %234, !dbg !936
  %236 = and i1 %226, %235, !dbg !936
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !936, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !936
  %238 = load i64, ptr %237, align 8, !dbg !936
  %239 = icmp eq i64 %238, 0, !dbg !936
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !936, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %240(ptr nonnull @.str.298), !dbg !936
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %241(ptr nonnull @.str.299), !dbg !936
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !936
  %243 = load i32, ptr %242, align 4, !dbg !936
  %244 = icmp eq i32 %243, 2, !dbg !936
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !936, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %245(ptr nonnull @.str.300), !dbg !936
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !936
  %247 = load i32, ptr %246, align 4, !dbg !936
  %248 = icmp eq i32 %dev_id, %247, !dbg !936
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !936, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !936, !tbaa !19
  tail call void %249(ptr nonnull @.str.301), !dbg !936
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !936
  store i32 0, ptr %stack_tcode116, align 4, !dbg !936, !tbaa !1075
  %250 = sext i32 %dev_id to i64, !dbg !936
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !936
  store i64 %250, ptr %251, align 8, !dbg !936
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !936
  store i32 0, ptr %252, align 4, !dbg !936, !tbaa !1086
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !936
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !936
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !936, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !936
  %.not120 = icmp eq ptr %256, null, !dbg !936
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !936, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !936, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !936, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !936
  %260 = icmp eq i32 %259, 0, !dbg !936
  br i1 %260, label %call_end, label %common.ret, !dbg !936, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !936
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !936
  %263 = icmp eq i32 %262, 0, !dbg !936
  br i1 %263, label %call_end106, label %common.ret, !dbg !936, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !936
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !936
  br label %handle_init_end, !dbg !936

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_1_compute_(ptr nonnull %stack_value115, ptr %T_add107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !936
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1088 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1090, metadata !DIExpression()), !dbg !1096
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1091, metadata !DIExpression()), !dbg !1096
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1092, metadata !DIExpression()), !dbg !1096
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1093, metadata !DIExpression()), !dbg !1096
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1094, metadata !DIExpression()), !dbg !1096
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1095, metadata !DIExpression()), !dbg !1096
  %0 = alloca ptr, align 8, !dbg !1096
  %stack_value115 = alloca [17 x %0], align 8, !dbg !1096
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !1096
  %1 = icmp eq i32 %num_args, 4, !dbg !1096
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1096, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1096

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %2(ptr nonnull @.str.303), !dbg !1096
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1096, !tbaa !1097
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1096
  %p1.code = load i32, ptr %3, align 4, !dbg !1096, !tbaa !1108
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1096
  %p2.code = load i32, ptr %4, align 4, !dbg !1096, !tbaa !1110
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1096
  %T_add.code = load i32, ptr %5, align 4, !dbg !1096, !tbaa !1113
  %p0 = load ptr, ptr %args, align 8, !dbg !1096
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1096
  %p1 = load ptr, ptr %6, align 8, !dbg !1096
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1096
  %p2 = load ptr, ptr %7, align 8, !dbg !1096
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1096
  %T_add = load ptr, ptr %8, align 8, !dbg !1096
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1096
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1096
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p0.shape = load ptr, ptr %9, align 8, !dbg !1096
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p0.strides = load ptr, ptr %10, align 8, !dbg !1096
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1096
  %dev_id = load i32, ptr %11, align 4, !dbg !1096
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1096
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1096
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p1.shape = load ptr, ptr %12, align 8, !dbg !1096
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p1.strides = load ptr, ptr %13, align 8, !dbg !1096
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1096
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1096
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p2.shape = load ptr, ptr %14, align 8, !dbg !1096
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.p2.strides = load ptr, ptr %15, align 8, !dbg !1096
  %T_add107 = load ptr, ptr %T_add, align 8, !dbg !1096
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add107, i64 64) ], !dbg !1096
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.T_add.shape = load ptr, ptr %16, align 8, !dbg !1096
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !1096
  %tvmgen_default_fused_nn_conv2d_add_2.T_add.strides = load ptr, ptr %17, align 8, !dbg !1096
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1096

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %18(ptr nonnull @.str.304), !dbg !1096
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1096

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %19(ptr nonnull @.str.305), !dbg !1096
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1096

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %20(ptr nonnull @.str.306), !dbg !1096
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1096

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %21(ptr nonnull @.str.307), !dbg !1096
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1096
  %23 = load i32, ptr %22, align 4, !dbg !1096
  %24 = icmp eq i32 %23, 4, !dbg !1096
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1096, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %25(ptr nonnull @.str.308), !dbg !1096
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1096
  %27 = load i16, ptr %26, align 2, !dbg !1096
  %28 = icmp eq i16 %27, 1, !dbg !1096
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1096
  %30 = load i8, ptr %29, align 1, !dbg !1096
  %31 = icmp eq i8 %30, 32, !dbg !1096
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1096
  %33 = load i8, ptr %32, align 1, !dbg !1096
  %34 = icmp eq i8 %33, 2, !dbg !1096
  %35 = and i1 %31, %34, !dbg !1096
  %36 = and i1 %28, %35, !dbg !1096
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1096, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %37(ptr nonnull @.str.309), !dbg !1096
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.shape, align 8, !dbg !1096, !tbaa !1115
  %39 = and i64 %38, 4294967295, !dbg !1096
  %40 = icmp eq i64 %39, 1, !dbg !1096
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1096, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %41(ptr nonnull @.str.310), !dbg !1096
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.shape, i64 1, !dbg !1096
  %43 = load i64, ptr %42, align 8, !dbg !1096, !tbaa !1125
  %44 = and i64 %43, 4294967295, !dbg !1096
  %45 = icmp eq i64 %44, 512, !dbg !1096
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1096, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %46(ptr nonnull @.str.311), !dbg !1096
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.shape, i64 2, !dbg !1096
  %48 = load i64, ptr %47, align 8, !dbg !1096, !tbaa !1127
  %49 = and i64 %48, 4294967295, !dbg !1096
  %50 = icmp eq i64 %49, 28, !dbg !1096
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1096, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %51(ptr nonnull @.str.312), !dbg !1096
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.shape, i64 3, !dbg !1096
  %53 = load i64, ptr %52, align 8, !dbg !1096, !tbaa !1130
  %54 = and i64 %53, 4294967295, !dbg !1096
  %55 = icmp eq i64 %54, 28, !dbg !1096
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1096, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %56(ptr nonnull @.str.313), !dbg !1096
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.strides, null, !dbg !1096
  br i1 %.not, label %if_end, label %if_then, !dbg !1096, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.strides, i64 1, !dbg !1096
  %58 = load i64, ptr %57, align 8, !dbg !1096, !tbaa !1132
  %59 = and i64 %58, 4294967295, !dbg !1096
  %60 = icmp eq i64 %59, 784, !dbg !1096
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.strides, i64 2, !dbg !1096
  %62 = load i64, ptr %61, align 8, !dbg !1096, !tbaa !1142
  %63 = and i64 %62, 4294967295, !dbg !1096
  %64 = icmp eq i64 %63, 28, !dbg !1096
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p0.strides, i64 3, !dbg !1096
  %66 = load i64, ptr %65, align 8, !dbg !1096, !tbaa !1145
  %67 = and i64 %66, 4294967295, !dbg !1096
  %68 = icmp eq i64 %67, 1, !dbg !1096
  %69 = and i1 %64, %68, !dbg !1096
  %70 = and i1 %60, %69, !dbg !1096
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1096, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1096
  %72 = load i64, ptr %71, align 8, !dbg !1096
  %73 = icmp eq i64 %72, 0, !dbg !1096
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1096, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %74(ptr nonnull @.str.314), !dbg !1096
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %75(ptr nonnull @.str.315), !dbg !1096
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1096
  %77 = load i32, ptr %76, align 4, !dbg !1096
  %78 = icmp eq i32 %77, 2, !dbg !1096
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1096, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %79(ptr nonnull @.str.316), !dbg !1096
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1096
  %81 = load i32, ptr %80, align 4, !dbg !1096
  %82 = icmp eq i32 %81, 4, !dbg !1096
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1096, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %83(ptr nonnull @.str.317), !dbg !1096
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1096
  %85 = load i16, ptr %84, align 2, !dbg !1096
  %86 = icmp eq i16 %85, 1, !dbg !1096
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1096
  %88 = load i8, ptr %87, align 1, !dbg !1096
  %89 = icmp eq i8 %88, 32, !dbg !1096
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1096
  %91 = load i8, ptr %90, align 1, !dbg !1096
  %92 = icmp eq i8 %91, 2, !dbg !1096
  %93 = and i1 %89, %92, !dbg !1096
  %94 = and i1 %86, %93, !dbg !1096
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1096, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %95(ptr nonnull @.str.318), !dbg !1096
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.shape, align 8, !dbg !1096, !tbaa !1147
  %97 = and i64 %96, 4294967295, !dbg !1096
  %98 = icmp eq i64 %97, 1024, !dbg !1096
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1096, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %99(ptr nonnull @.str.319), !dbg !1096
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.shape, i64 1, !dbg !1096
  %101 = load i64, ptr %100, align 8, !dbg !1096, !tbaa !1157
  %102 = and i64 %101, 4294967295, !dbg !1096
  %103 = icmp eq i64 %102, 512, !dbg !1096
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1096, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %104(ptr nonnull @.str.320), !dbg !1096
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.shape, i64 2, !dbg !1096
  %106 = load i64, ptr %105, align 8, !dbg !1096, !tbaa !1159
  %107 = and i64 %106, 4294967295, !dbg !1096
  %108 = icmp eq i64 %107, 1, !dbg !1096
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1096, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %109(ptr nonnull @.str.321), !dbg !1096
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.shape, i64 3, !dbg !1096
  %111 = load i64, ptr %110, align 8, !dbg !1096, !tbaa !1162
  %112 = and i64 %111, 4294967295, !dbg !1096
  %113 = icmp eq i64 %112, 1, !dbg !1096
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1096, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %114(ptr nonnull @.str.322), !dbg !1096
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.strides, null, !dbg !1096
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1096, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.strides, align 8, !dbg !1096, !tbaa !1164
  %116 = and i64 %115, 4294967295, !dbg !1096
  %117 = icmp eq i64 %116, 512, !dbg !1096
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p1.strides, i64 1, !dbg !1096
  %119 = load i64, ptr %118, align 8, !dbg !1096, !tbaa !1174
  %120 = and i64 %119, 4294967295, !dbg !1096
  %121 = icmp eq i64 %120, 1, !dbg !1096
  %122 = and i1 %117, %121, !dbg !1096
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !1096, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1096
  %124 = load i64, ptr %123, align 8, !dbg !1096
  %125 = icmp eq i64 %124, 0, !dbg !1096
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !1096, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %126(ptr nonnull @.str.323), !dbg !1096
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %127(ptr nonnull @.str.324), !dbg !1096
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1096
  %129 = load i32, ptr %128, align 4, !dbg !1096
  %130 = icmp eq i32 %129, 2, !dbg !1096
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !1096, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %131(ptr nonnull @.str.325), !dbg !1096
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1096
  %133 = load i32, ptr %132, align 4, !dbg !1096
  %134 = icmp eq i32 %dev_id, %133, !dbg !1096
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !1096, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %135(ptr nonnull @.str.326), !dbg !1096
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1096
  %137 = load i32, ptr %136, align 4, !dbg !1096
  %138 = icmp eq i32 %137, 4, !dbg !1096
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !1096, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %139(ptr nonnull @.str.327), !dbg !1096
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1096
  %141 = load i16, ptr %140, align 2, !dbg !1096
  %142 = icmp eq i16 %141, 1, !dbg !1096
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1096
  %144 = load i8, ptr %143, align 1, !dbg !1096
  %145 = icmp eq i8 %144, 32, !dbg !1096
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1096
  %147 = load i8, ptr %146, align 1, !dbg !1096
  %148 = icmp eq i8 %147, 2, !dbg !1096
  %149 = and i1 %145, %148, !dbg !1096
  %150 = and i1 %142, %149, !dbg !1096
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !1096, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %151(ptr nonnull @.str.328), !dbg !1096
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.shape, align 8, !dbg !1096, !tbaa !1176
  %153 = and i64 %152, 4294967295, !dbg !1096
  %154 = icmp eq i64 %153, 1, !dbg !1096
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !1096, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %155(ptr nonnull @.str.329), !dbg !1096
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.shape, i64 1, !dbg !1096
  %157 = load i64, ptr %156, align 8, !dbg !1096, !tbaa !1186
  %158 = and i64 %157, 4294967295, !dbg !1096
  %159 = icmp eq i64 %158, 1024, !dbg !1096
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !1096, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %160(ptr nonnull @.str.330), !dbg !1096
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.shape, i64 2, !dbg !1096
  %162 = load i64, ptr %161, align 8, !dbg !1096, !tbaa !1188
  %163 = and i64 %162, 4294967295, !dbg !1096
  %164 = icmp eq i64 %163, 1, !dbg !1096
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !1096, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %165(ptr nonnull @.str.331), !dbg !1096
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.shape, i64 3, !dbg !1096
  %167 = load i64, ptr %166, align 8, !dbg !1096, !tbaa !1191
  %168 = and i64 %167, 4294967295, !dbg !1096
  %169 = icmp eq i64 %168, 1, !dbg !1096
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !1096, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %170(ptr nonnull @.str.332), !dbg !1096
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.strides, null, !dbg !1096
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1096, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.p2.strides, i64 1, !dbg !1096
  %172 = load i64, ptr %171, align 8, !dbg !1096, !tbaa !1193
  %173 = and i64 %172, 4294967295, !dbg !1096
  %174 = icmp eq i64 %173, 1, !dbg !1096
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !1096, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1096
  %176 = load i64, ptr %175, align 8, !dbg !1096
  %177 = icmp eq i64 %176, 0, !dbg !1096
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !1096, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %178(ptr nonnull @.str.333), !dbg !1096
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %179(ptr nonnull @.str.334), !dbg !1096
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1096
  %181 = load i32, ptr %180, align 4, !dbg !1096
  %182 = icmp eq i32 %181, 2, !dbg !1096
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !1096, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %183(ptr nonnull @.str.335), !dbg !1096
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1096
  %185 = load i32, ptr %184, align 4, !dbg !1096
  %186 = icmp eq i32 %dev_id, %185, !dbg !1096
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !1096, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %187(ptr nonnull @.str.336), !dbg !1096
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !1096
  %189 = load i32, ptr %188, align 4, !dbg !1096
  %190 = icmp eq i32 %189, 4, !dbg !1096
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !1096, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %191(ptr nonnull @.str.337), !dbg !1096
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !1096
  %193 = load i16, ptr %192, align 2, !dbg !1096
  %194 = icmp eq i16 %193, 1, !dbg !1096
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !1096
  %196 = load i8, ptr %195, align 1, !dbg !1096
  %197 = icmp eq i8 %196, 32, !dbg !1096
  %198 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !1096
  %199 = load i8, ptr %198, align 1, !dbg !1096
  %200 = icmp eq i8 %199, 2, !dbg !1096
  %201 = and i1 %197, %200, !dbg !1096
  %202 = and i1 %194, %201, !dbg !1096
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !1096, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %203(ptr nonnull @.str.338), !dbg !1096
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.shape, align 8, !dbg !1096, !tbaa !1203
  %205 = and i64 %204, 4294967295, !dbg !1096
  %206 = icmp eq i64 %205, 1, !dbg !1096
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !1096, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %207(ptr nonnull @.str.339), !dbg !1096
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.shape, i64 1, !dbg !1096
  %209 = load i64, ptr %208, align 8, !dbg !1096, !tbaa !1213
  %210 = and i64 %209, 4294967295, !dbg !1096
  %211 = icmp eq i64 %210, 1024, !dbg !1096
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !1096, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %212(ptr nonnull @.str.340), !dbg !1096
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.shape, i64 2, !dbg !1096
  %214 = load i64, ptr %213, align 8, !dbg !1096, !tbaa !1215
  %215 = and i64 %214, 4294967295, !dbg !1096
  %216 = icmp eq i64 %215, 14, !dbg !1096
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !1096, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %217(ptr nonnull @.str.341), !dbg !1096
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.shape, i64 3, !dbg !1096
  %219 = load i64, ptr %218, align 8, !dbg !1096, !tbaa !1218
  %220 = and i64 %219, 4294967295, !dbg !1096
  %221 = icmp eq i64 %220, 14, !dbg !1096
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !1096, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %222(ptr nonnull @.str.342), !dbg !1096
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.strides, null, !dbg !1096
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1096, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.strides, i64 1, !dbg !1096
  %224 = load i64, ptr %223, align 8, !dbg !1096, !tbaa !1220
  %225 = and i64 %224, 4294967295, !dbg !1096
  %226 = icmp eq i64 %225, 196, !dbg !1096
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.strides, i64 2, !dbg !1096
  %228 = load i64, ptr %227, align 8, !dbg !1096, !tbaa !1230
  %229 = and i64 %228, 4294967295, !dbg !1096
  %230 = icmp eq i64 %229, 14, !dbg !1096
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_2.T_add.strides, i64 3, !dbg !1096
  %232 = load i64, ptr %231, align 8, !dbg !1096, !tbaa !1233
  %233 = and i64 %232, 4294967295, !dbg !1096
  %234 = icmp eq i64 %233, 1, !dbg !1096
  %235 = and i1 %230, %234, !dbg !1096
  %236 = and i1 %226, %235, !dbg !1096
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !1096, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !1096
  %238 = load i64, ptr %237, align 8, !dbg !1096
  %239 = icmp eq i64 %238, 0, !dbg !1096
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !1096, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %240(ptr nonnull @.str.343), !dbg !1096
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %241(ptr nonnull @.str.344), !dbg !1096
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !1096
  %243 = load i32, ptr %242, align 4, !dbg !1096
  %244 = icmp eq i32 %243, 2, !dbg !1096
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !1096, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %245(ptr nonnull @.str.345), !dbg !1096
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !1096
  %247 = load i32, ptr %246, align 4, !dbg !1096
  %248 = icmp eq i32 %dev_id, %247, !dbg !1096
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !1096, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1096, !tbaa !19
  tail call void %249(ptr nonnull @.str.346), !dbg !1096
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1096
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1096, !tbaa !1235
  %250 = sext i32 %dev_id to i64, !dbg !1096
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1096
  store i64 %250, ptr %251, align 8, !dbg !1096
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1096
  store i32 0, ptr %252, align 4, !dbg !1096, !tbaa !1246
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1096
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1096
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1096, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1096
  %.not120 = icmp eq ptr %256, null, !dbg !1096
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1096, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1096, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1096, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !1096
  %260 = icmp eq i32 %259, 0, !dbg !1096
  br i1 %260, label %call_end, label %common.ret, !dbg !1096, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !1096
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !1096
  %263 = icmp eq i32 %262, 0, !dbg !1096
  br i1 %263, label %call_end106, label %common.ret, !dbg !1096, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !1096
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1096
  br label %handle_init_end, !dbg !1096

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_2_compute_(ptr nonnull %stack_value115, ptr %T_add107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1096
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1248 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1250, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1251, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1252, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1253, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1254, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1255, metadata !DIExpression()), !dbg !1256
  %0 = alloca ptr, align 8, !dbg !1256
  %stack_value115 = alloca [17 x %0], align 8, !dbg !1256
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !1256
  %1 = icmp eq i32 %num_args, 4, !dbg !1256
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1256, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1256

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %2(ptr nonnull @.str.348), !dbg !1256
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1256, !tbaa !1257
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1256
  %p1.code = load i32, ptr %3, align 4, !dbg !1256, !tbaa !1268
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1256
  %p2.code = load i32, ptr %4, align 4, !dbg !1256, !tbaa !1270
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1256
  %T_add.code = load i32, ptr %5, align 4, !dbg !1256, !tbaa !1273
  %p0 = load ptr, ptr %args, align 8, !dbg !1256
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1256
  %p1 = load ptr, ptr %6, align 8, !dbg !1256
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1256
  %p2 = load ptr, ptr %7, align 8, !dbg !1256
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1256
  %T_add = load ptr, ptr %8, align 8, !dbg !1256
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1256
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1256
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p0.shape = load ptr, ptr %9, align 8, !dbg !1256
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p0.strides = load ptr, ptr %10, align 8, !dbg !1256
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1256
  %dev_id = load i32, ptr %11, align 4, !dbg !1256
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1256
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1256
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p1.shape = load ptr, ptr %12, align 8, !dbg !1256
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p1.strides = load ptr, ptr %13, align 8, !dbg !1256
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1256
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1256
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p2.shape = load ptr, ptr %14, align 8, !dbg !1256
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.p2.strides = load ptr, ptr %15, align 8, !dbg !1256
  %T_add107 = load ptr, ptr %T_add, align 8, !dbg !1256
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add107, i64 64) ], !dbg !1256
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.T_add.shape = load ptr, ptr %16, align 8, !dbg !1256
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !1256
  %tvmgen_default_fused_nn_conv2d_add_3.T_add.strides = load ptr, ptr %17, align 8, !dbg !1256
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1256

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %18(ptr nonnull @.str.349), !dbg !1256
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1256

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %19(ptr nonnull @.str.350), !dbg !1256
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1256

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %20(ptr nonnull @.str.351), !dbg !1256
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1256

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %21(ptr nonnull @.str.352), !dbg !1256
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1256
  %23 = load i32, ptr %22, align 4, !dbg !1256
  %24 = icmp eq i32 %23, 4, !dbg !1256
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1256, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %25(ptr nonnull @.str.353), !dbg !1256
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1256
  %27 = load i16, ptr %26, align 2, !dbg !1256
  %28 = icmp eq i16 %27, 1, !dbg !1256
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1256
  %30 = load i8, ptr %29, align 1, !dbg !1256
  %31 = icmp eq i8 %30, 32, !dbg !1256
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1256
  %33 = load i8, ptr %32, align 1, !dbg !1256
  %34 = icmp eq i8 %33, 2, !dbg !1256
  %35 = and i1 %31, %34, !dbg !1256
  %36 = and i1 %28, %35, !dbg !1256
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1256, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %37(ptr nonnull @.str.354), !dbg !1256
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.shape, align 8, !dbg !1256, !tbaa !1275
  %39 = and i64 %38, 4294967295, !dbg !1256
  %40 = icmp eq i64 %39, 1, !dbg !1256
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1256, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %41(ptr nonnull @.str.355), !dbg !1256
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.shape, i64 1, !dbg !1256
  %43 = load i64, ptr %42, align 8, !dbg !1256, !tbaa !1285
  %44 = and i64 %43, 4294967295, !dbg !1256
  %45 = icmp eq i64 %44, 1024, !dbg !1256
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1256, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %46(ptr nonnull @.str.356), !dbg !1256
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.shape, i64 2, !dbg !1256
  %48 = load i64, ptr %47, align 8, !dbg !1256, !tbaa !1287
  %49 = and i64 %48, 4294967295, !dbg !1256
  %50 = icmp eq i64 %49, 14, !dbg !1256
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1256, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %51(ptr nonnull @.str.357), !dbg !1256
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.shape, i64 3, !dbg !1256
  %53 = load i64, ptr %52, align 8, !dbg !1256, !tbaa !1290
  %54 = and i64 %53, 4294967295, !dbg !1256
  %55 = icmp eq i64 %54, 14, !dbg !1256
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1256, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %56(ptr nonnull @.str.358), !dbg !1256
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.strides, null, !dbg !1256
  br i1 %.not, label %if_end, label %if_then, !dbg !1256, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.strides, i64 1, !dbg !1256
  %58 = load i64, ptr %57, align 8, !dbg !1256, !tbaa !1292
  %59 = and i64 %58, 4294967295, !dbg !1256
  %60 = icmp eq i64 %59, 196, !dbg !1256
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.strides, i64 2, !dbg !1256
  %62 = load i64, ptr %61, align 8, !dbg !1256, !tbaa !1302
  %63 = and i64 %62, 4294967295, !dbg !1256
  %64 = icmp eq i64 %63, 14, !dbg !1256
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p0.strides, i64 3, !dbg !1256
  %66 = load i64, ptr %65, align 8, !dbg !1256, !tbaa !1305
  %67 = and i64 %66, 4294967295, !dbg !1256
  %68 = icmp eq i64 %67, 1, !dbg !1256
  %69 = and i1 %64, %68, !dbg !1256
  %70 = and i1 %60, %69, !dbg !1256
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1256, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1256
  %72 = load i64, ptr %71, align 8, !dbg !1256
  %73 = icmp eq i64 %72, 0, !dbg !1256
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1256, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %74(ptr nonnull @.str.359), !dbg !1256
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %75(ptr nonnull @.str.360), !dbg !1256
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1256
  %77 = load i32, ptr %76, align 4, !dbg !1256
  %78 = icmp eq i32 %77, 2, !dbg !1256
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1256, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %79(ptr nonnull @.str.361), !dbg !1256
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1256
  %81 = load i32, ptr %80, align 4, !dbg !1256
  %82 = icmp eq i32 %81, 4, !dbg !1256
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1256, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %83(ptr nonnull @.str.362), !dbg !1256
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1256
  %85 = load i16, ptr %84, align 2, !dbg !1256
  %86 = icmp eq i16 %85, 1, !dbg !1256
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1256
  %88 = load i8, ptr %87, align 1, !dbg !1256
  %89 = icmp eq i8 %88, 32, !dbg !1256
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1256
  %91 = load i8, ptr %90, align 1, !dbg !1256
  %92 = icmp eq i8 %91, 2, !dbg !1256
  %93 = and i1 %89, %92, !dbg !1256
  %94 = and i1 %86, %93, !dbg !1256
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1256, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %95(ptr nonnull @.str.363), !dbg !1256
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.shape, align 8, !dbg !1256, !tbaa !1307
  %97 = and i64 %96, 4294967295, !dbg !1256
  %98 = icmp eq i64 %97, 2048, !dbg !1256
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1256, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %99(ptr nonnull @.str.364), !dbg !1256
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.shape, i64 1, !dbg !1256
  %101 = load i64, ptr %100, align 8, !dbg !1256, !tbaa !1317
  %102 = and i64 %101, 4294967295, !dbg !1256
  %103 = icmp eq i64 %102, 1024, !dbg !1256
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1256, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %104(ptr nonnull @.str.365), !dbg !1256
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.shape, i64 2, !dbg !1256
  %106 = load i64, ptr %105, align 8, !dbg !1256, !tbaa !1319
  %107 = and i64 %106, 4294967295, !dbg !1256
  %108 = icmp eq i64 %107, 1, !dbg !1256
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1256, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %109(ptr nonnull @.str.366), !dbg !1256
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.shape, i64 3, !dbg !1256
  %111 = load i64, ptr %110, align 8, !dbg !1256, !tbaa !1322
  %112 = and i64 %111, 4294967295, !dbg !1256
  %113 = icmp eq i64 %112, 1, !dbg !1256
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1256, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %114(ptr nonnull @.str.367), !dbg !1256
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.strides, null, !dbg !1256
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1256, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.strides, align 8, !dbg !1256, !tbaa !1324
  %116 = and i64 %115, 4294967295, !dbg !1256
  %117 = icmp eq i64 %116, 1024, !dbg !1256
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p1.strides, i64 1, !dbg !1256
  %119 = load i64, ptr %118, align 8, !dbg !1256, !tbaa !1334
  %120 = and i64 %119, 4294967295, !dbg !1256
  %121 = icmp eq i64 %120, 1, !dbg !1256
  %122 = and i1 %117, %121, !dbg !1256
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !1256, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1256
  %124 = load i64, ptr %123, align 8, !dbg !1256
  %125 = icmp eq i64 %124, 0, !dbg !1256
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !1256, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %126(ptr nonnull @.str.368), !dbg !1256
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %127(ptr nonnull @.str.369), !dbg !1256
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1256
  %129 = load i32, ptr %128, align 4, !dbg !1256
  %130 = icmp eq i32 %129, 2, !dbg !1256
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !1256, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %131(ptr nonnull @.str.370), !dbg !1256
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1256
  %133 = load i32, ptr %132, align 4, !dbg !1256
  %134 = icmp eq i32 %dev_id, %133, !dbg !1256
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !1256, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %135(ptr nonnull @.str.371), !dbg !1256
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1256
  %137 = load i32, ptr %136, align 4, !dbg !1256
  %138 = icmp eq i32 %137, 4, !dbg !1256
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !1256, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %139(ptr nonnull @.str.372), !dbg !1256
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1256
  %141 = load i16, ptr %140, align 2, !dbg !1256
  %142 = icmp eq i16 %141, 1, !dbg !1256
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1256
  %144 = load i8, ptr %143, align 1, !dbg !1256
  %145 = icmp eq i8 %144, 32, !dbg !1256
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1256
  %147 = load i8, ptr %146, align 1, !dbg !1256
  %148 = icmp eq i8 %147, 2, !dbg !1256
  %149 = and i1 %145, %148, !dbg !1256
  %150 = and i1 %142, %149, !dbg !1256
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !1256, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %151(ptr nonnull @.str.373), !dbg !1256
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.shape, align 8, !dbg !1256, !tbaa !1336
  %153 = and i64 %152, 4294967295, !dbg !1256
  %154 = icmp eq i64 %153, 1, !dbg !1256
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !1256, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %155(ptr nonnull @.str.374), !dbg !1256
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.shape, i64 1, !dbg !1256
  %157 = load i64, ptr %156, align 8, !dbg !1256, !tbaa !1346
  %158 = and i64 %157, 4294967295, !dbg !1256
  %159 = icmp eq i64 %158, 2048, !dbg !1256
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !1256, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %160(ptr nonnull @.str.375), !dbg !1256
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.shape, i64 2, !dbg !1256
  %162 = load i64, ptr %161, align 8, !dbg !1256, !tbaa !1348
  %163 = and i64 %162, 4294967295, !dbg !1256
  %164 = icmp eq i64 %163, 1, !dbg !1256
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !1256, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %165(ptr nonnull @.str.376), !dbg !1256
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.shape, i64 3, !dbg !1256
  %167 = load i64, ptr %166, align 8, !dbg !1256, !tbaa !1351
  %168 = and i64 %167, 4294967295, !dbg !1256
  %169 = icmp eq i64 %168, 1, !dbg !1256
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !1256, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %170(ptr nonnull @.str.377), !dbg !1256
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.strides, null, !dbg !1256
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1256, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.p2.strides, i64 1, !dbg !1256
  %172 = load i64, ptr %171, align 8, !dbg !1256, !tbaa !1353
  %173 = and i64 %172, 4294967295, !dbg !1256
  %174 = icmp eq i64 %173, 1, !dbg !1256
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !1256, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1256
  %176 = load i64, ptr %175, align 8, !dbg !1256
  %177 = icmp eq i64 %176, 0, !dbg !1256
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !1256, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %178(ptr nonnull @.str.378), !dbg !1256
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %179(ptr nonnull @.str.379), !dbg !1256
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1256
  %181 = load i32, ptr %180, align 4, !dbg !1256
  %182 = icmp eq i32 %181, 2, !dbg !1256
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !1256, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %183(ptr nonnull @.str.380), !dbg !1256
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1256
  %185 = load i32, ptr %184, align 4, !dbg !1256
  %186 = icmp eq i32 %dev_id, %185, !dbg !1256
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !1256, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %187(ptr nonnull @.str.381), !dbg !1256
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !1256
  %189 = load i32, ptr %188, align 4, !dbg !1256
  %190 = icmp eq i32 %189, 4, !dbg !1256
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !1256, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %191(ptr nonnull @.str.382), !dbg !1256
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !1256
  %193 = load i16, ptr %192, align 2, !dbg !1256
  %194 = icmp eq i16 %193, 1, !dbg !1256
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !1256
  %196 = load i8, ptr %195, align 1, !dbg !1256
  %197 = icmp eq i8 %196, 32, !dbg !1256
  %198 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !1256
  %199 = load i8, ptr %198, align 1, !dbg !1256
  %200 = icmp eq i8 %199, 2, !dbg !1256
  %201 = and i1 %197, %200, !dbg !1256
  %202 = and i1 %194, %201, !dbg !1256
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !1256, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %203(ptr nonnull @.str.383), !dbg !1256
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.shape, align 8, !dbg !1256, !tbaa !1363
  %205 = and i64 %204, 4294967295, !dbg !1256
  %206 = icmp eq i64 %205, 1, !dbg !1256
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !1256, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %207(ptr nonnull @.str.384), !dbg !1256
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.shape, i64 1, !dbg !1256
  %209 = load i64, ptr %208, align 8, !dbg !1256, !tbaa !1373
  %210 = and i64 %209, 4294967295, !dbg !1256
  %211 = icmp eq i64 %210, 2048, !dbg !1256
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !1256, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %212(ptr nonnull @.str.385), !dbg !1256
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.shape, i64 2, !dbg !1256
  %214 = load i64, ptr %213, align 8, !dbg !1256, !tbaa !1375
  %215 = and i64 %214, 4294967295, !dbg !1256
  %216 = icmp eq i64 %215, 7, !dbg !1256
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !1256, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %217(ptr nonnull @.str.386), !dbg !1256
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.shape, i64 3, !dbg !1256
  %219 = load i64, ptr %218, align 8, !dbg !1256, !tbaa !1378
  %220 = and i64 %219, 4294967295, !dbg !1256
  %221 = icmp eq i64 %220, 7, !dbg !1256
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !1256, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %222(ptr nonnull @.str.387), !dbg !1256
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.strides, null, !dbg !1256
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1256, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.strides, i64 1, !dbg !1256
  %224 = load i64, ptr %223, align 8, !dbg !1256, !tbaa !1380
  %225 = and i64 %224, 4294967295, !dbg !1256
  %226 = icmp eq i64 %225, 49, !dbg !1256
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.strides, i64 2, !dbg !1256
  %228 = load i64, ptr %227, align 8, !dbg !1256, !tbaa !1390
  %229 = and i64 %228, 4294967295, !dbg !1256
  %230 = icmp eq i64 %229, 7, !dbg !1256
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_3.T_add.strides, i64 3, !dbg !1256
  %232 = load i64, ptr %231, align 8, !dbg !1256, !tbaa !1393
  %233 = and i64 %232, 4294967295, !dbg !1256
  %234 = icmp eq i64 %233, 1, !dbg !1256
  %235 = and i1 %230, %234, !dbg !1256
  %236 = and i1 %226, %235, !dbg !1256
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !1256, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !1256
  %238 = load i64, ptr %237, align 8, !dbg !1256
  %239 = icmp eq i64 %238, 0, !dbg !1256
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !1256, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %240(ptr nonnull @.str.388), !dbg !1256
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %241(ptr nonnull @.str.389), !dbg !1256
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !1256
  %243 = load i32, ptr %242, align 4, !dbg !1256
  %244 = icmp eq i32 %243, 2, !dbg !1256
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !1256, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %245(ptr nonnull @.str.390), !dbg !1256
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !1256
  %247 = load i32, ptr %246, align 4, !dbg !1256
  %248 = icmp eq i32 %dev_id, %247, !dbg !1256
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !1256, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1256, !tbaa !19
  tail call void %249(ptr nonnull @.str.391), !dbg !1256
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1256
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1256, !tbaa !1395
  %250 = sext i32 %dev_id to i64, !dbg !1256
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1256
  store i64 %250, ptr %251, align 8, !dbg !1256
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1256
  store i32 0, ptr %252, align 4, !dbg !1256, !tbaa !1406
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1256
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1256
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1256, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1256
  %.not120 = icmp eq ptr %256, null, !dbg !1256
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1256, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1256, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1256, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !1256
  %260 = icmp eq i32 %259, 0, !dbg !1256
  br i1 %260, label %call_end, label %common.ret, !dbg !1256, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !1256
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !1256
  %263 = icmp eq i32 %262, 0, !dbg !1256
  br i1 %263, label %call_end106, label %common.ret, !dbg !1256, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !1256
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1256
  br label %handle_init_end, !dbg !1256

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_3_compute_(ptr nonnull %stack_value115, ptr %T_add107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1256
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1408 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1410, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1411, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1412, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1413, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1414, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1415, metadata !DIExpression()), !dbg !1416
  %0 = alloca ptr, align 8, !dbg !1416
  %stack_value143 = alloca [18 x %0], align 8, !dbg !1416
  %stack_tcode144 = alloca [18 x i32], align 4, !dbg !1416
  %1 = icmp eq i32 %num_args, 5, !dbg !1416
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1416, !prof !18

common.ret:                                       ; preds = %call_end133, %handle_init_end, %handle_init, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail120, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail108, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail96, %assert_fail94, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail84, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail120 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ %326, %handle_init ], [ %329, %handle_init_end ], [ %332, %call_end133 ]
  ret i32 %common.ret.op, !dbg !1416

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %2(ptr nonnull @.str.393), !dbg !1416
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1416, !tbaa !1417
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1416
  %p1.code = load i32, ptr %3, align 4, !dbg !1416, !tbaa !1428
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1416
  %p2.code = load i32, ptr %4, align 4, !dbg !1416, !tbaa !1430
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1416
  %p3.code = load i32, ptr %5, align 4, !dbg !1416, !tbaa !1433
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1416
  %T_relu.code = load i32, ptr %6, align 4, !dbg !1416, !tbaa !1435
  %p0 = load ptr, ptr %args, align 8, !dbg !1416
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1416
  %p1 = load ptr, ptr %7, align 8, !dbg !1416
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1416
  %p2 = load ptr, ptr %8, align 8, !dbg !1416
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1416
  %p3 = load ptr, ptr %9, align 8, !dbg !1416
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1416
  %T_relu = load ptr, ptr %10, align 8, !dbg !1416
  %p0135 = load ptr, ptr %p0, align 8, !dbg !1416
  call void @llvm.assume(i1 true) [ "align"(ptr %p0135, i64 64) ], !dbg !1416
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape = load ptr, ptr %11, align 8, !dbg !1416
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides = load ptr, ptr %12, align 8, !dbg !1416
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1416
  %dev_id = load i32, ptr %13, align 4, !dbg !1416
  %p1136 = load ptr, ptr %p1, align 8, !dbg !1416
  call void @llvm.assume(i1 true) [ "align"(ptr %p1136, i64 64) ], !dbg !1416
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape = load ptr, ptr %14, align 8, !dbg !1416
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.strides = load ptr, ptr %15, align 8, !dbg !1416
  %p2137 = load ptr, ptr %p2, align 8, !dbg !1416
  call void @llvm.assume(i1 true) [ "align"(ptr %p2137, i64 64) ], !dbg !1416
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape = load ptr, ptr %16, align 8, !dbg !1416
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.strides = load ptr, ptr %17, align 8, !dbg !1416
  %p3138 = load ptr, ptr %p3, align 8, !dbg !1416
  call void @llvm.assume(i1 true) [ "align"(ptr %p3138, i64 64) ], !dbg !1416
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape = load ptr, ptr %18, align 8, !dbg !1416
  %19 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides = load ptr, ptr %19, align 8, !dbg !1416
  %T_relu134 = load ptr, ptr %T_relu, align 8, !dbg !1416
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu134, i64 64) ], !dbg !1416
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape = load ptr, ptr %20, align 8, !dbg !1416
  %21 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !1416
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides = load ptr, ptr %21, align 8, !dbg !1416
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !1416

assert_fail6:                                     ; preds = %assert_end
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %22(ptr nonnull @.str.394), !dbg !1416
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !1416

assert_fail8:                                     ; preds = %assert_end7
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %23(ptr nonnull @.str.395), !dbg !1416
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !1416

assert_fail10:                                    ; preds = %assert_end9
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %24(ptr nonnull @.str.396), !dbg !1416
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !1416

assert_fail12:                                    ; preds = %assert_end11
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %25(ptr nonnull @.str.397), !dbg !1416
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !1416

assert_fail14:                                    ; preds = %assert_end13
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %26(ptr nonnull @.str.398), !dbg !1416
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1416
  %28 = load i32, ptr %27, align 4, !dbg !1416
  %29 = icmp eq i32 %28, 4, !dbg !1416
  br i1 %29, label %assert_end19, label %assert_fail16, !dbg !1416, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %30(ptr nonnull @.str.399), !dbg !1416
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1416
  %32 = load i16, ptr %31, align 2, !dbg !1416
  %33 = icmp eq i16 %32, 1, !dbg !1416
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1416
  %35 = load i8, ptr %34, align 1, !dbg !1416
  %36 = icmp eq i8 %35, 32, !dbg !1416
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1416
  %38 = load i8, ptr %37, align 1, !dbg !1416
  %39 = icmp eq i8 %38, 2, !dbg !1416
  %40 = and i1 %36, %39, !dbg !1416
  %41 = and i1 %33, %40, !dbg !1416
  br i1 %41, label %assert_end21, label %assert_fail20, !dbg !1416, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %42(ptr nonnull @.str.400), !dbg !1416
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %43 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape, align 8, !dbg !1416, !tbaa !1439
  %44 = and i64 %43, 4294967295, !dbg !1416
  %45 = icmp eq i64 %44, 1, !dbg !1416
  br i1 %45, label %assert_end23, label %assert_fail22, !dbg !1416, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %46(ptr nonnull @.str.401), !dbg !1416
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape, i64 1, !dbg !1416
  %48 = load i64, ptr %47, align 8, !dbg !1416, !tbaa !1449
  %49 = and i64 %48, 4294967295, !dbg !1416
  %50 = icmp eq i64 %49, 64, !dbg !1416
  br i1 %50, label %assert_end25, label %assert_fail24, !dbg !1416, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %51(ptr nonnull @.str.402), !dbg !1416
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape, i64 2, !dbg !1416
  %53 = load i64, ptr %52, align 8, !dbg !1416, !tbaa !1451
  %54 = and i64 %53, 4294967295, !dbg !1416
  %55 = icmp eq i64 %54, 56, !dbg !1416
  br i1 %55, label %assert_end27, label %assert_fail26, !dbg !1416, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %56(ptr nonnull @.str.403), !dbg !1416
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.shape, i64 3, !dbg !1416
  %58 = load i64, ptr %57, align 8, !dbg !1416, !tbaa !1454
  %59 = and i64 %58, 4294967295, !dbg !1416
  %60 = icmp eq i64 %59, 56, !dbg !1416
  br i1 %60, label %assert_end29, label %assert_fail28, !dbg !1416, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %61(ptr nonnull @.str.404), !dbg !1416
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides, null, !dbg !1416
  br i1 %.not, label %if_end, label %if_then, !dbg !1416, !prof !52

if_then:                                          ; preds = %assert_end29
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides, i64 1, !dbg !1416
  %63 = load i64, ptr %62, align 8, !dbg !1416, !tbaa !1456
  %64 = and i64 %63, 4294967295, !dbg !1416
  %65 = icmp eq i64 %64, 3136, !dbg !1416
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides, i64 2, !dbg !1416
  %67 = load i64, ptr %66, align 8, !dbg !1416, !tbaa !1466
  %68 = and i64 %67, 4294967295, !dbg !1416
  %69 = icmp eq i64 %68, 56, !dbg !1416
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p0.strides, i64 3, !dbg !1416
  %71 = load i64, ptr %70, align 8, !dbg !1416, !tbaa !1469
  %72 = and i64 %71, 4294967295, !dbg !1416
  %73 = icmp eq i64 %72, 1, !dbg !1416
  %74 = and i1 %69, %73, !dbg !1416
  %75 = and i1 %65, %74, !dbg !1416
  br i1 %75, label %if_end, label %assert_fail30, !dbg !1416, !prof !18

if_end:                                           ; preds = %if_then, %assert_end29
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1416
  %77 = load i64, ptr %76, align 8, !dbg !1416
  %78 = icmp eq i64 %77, 0, !dbg !1416
  br i1 %78, label %assert_end33, label %assert_fail32, !dbg !1416, !prof !18

assert_fail30:                                    ; preds = %if_then
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %79(ptr nonnull @.str.405), !dbg !1416
  br label %common.ret

assert_fail32:                                    ; preds = %if_end
  %80 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %80(ptr nonnull @.str.406), !dbg !1416
  br label %common.ret

assert_end33:                                     ; preds = %if_end
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1416
  %82 = load i32, ptr %81, align 4, !dbg !1416
  %83 = icmp eq i32 %82, 2, !dbg !1416
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !1416, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %84(ptr nonnull @.str.407), !dbg !1416
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1416
  %86 = load i32, ptr %85, align 4, !dbg !1416
  %87 = icmp eq i32 %86, 4, !dbg !1416
  br i1 %87, label %assert_end39, label %assert_fail36, !dbg !1416, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %88(ptr nonnull @.str.408), !dbg !1416
  br label %common.ret

assert_end39:                                     ; preds = %assert_end35
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1416
  %90 = load i16, ptr %89, align 2, !dbg !1416
  %91 = icmp eq i16 %90, 1, !dbg !1416
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1416
  %93 = load i8, ptr %92, align 1, !dbg !1416
  %94 = icmp eq i8 %93, 32, !dbg !1416
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1416
  %96 = load i8, ptr %95, align 1, !dbg !1416
  %97 = icmp eq i8 %96, 2, !dbg !1416
  %98 = and i1 %94, %97, !dbg !1416
  %99 = and i1 %91, %98, !dbg !1416
  br i1 %99, label %assert_end41, label %assert_fail40, !dbg !1416, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %100 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %100(ptr nonnull @.str.409), !dbg !1416
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %101 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape, align 8, !dbg !1416, !tbaa !1471
  %102 = and i64 %101, 4294967295, !dbg !1416
  %103 = icmp eq i64 %102, 256, !dbg !1416
  br i1 %103, label %assert_end43, label %assert_fail42, !dbg !1416, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %104(ptr nonnull @.str.410), !dbg !1416
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape, i64 1, !dbg !1416
  %106 = load i64, ptr %105, align 8, !dbg !1416, !tbaa !1481
  %107 = and i64 %106, 4294967295, !dbg !1416
  %108 = icmp eq i64 %107, 64, !dbg !1416
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !1416, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %109(ptr nonnull @.str.411), !dbg !1416
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape, i64 2, !dbg !1416
  %111 = load i64, ptr %110, align 8, !dbg !1416, !tbaa !1483
  %112 = and i64 %111, 4294967295, !dbg !1416
  %113 = icmp eq i64 %112, 1, !dbg !1416
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !1416, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %114(ptr nonnull @.str.412), !dbg !1416
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.shape, i64 3, !dbg !1416
  %116 = load i64, ptr %115, align 8, !dbg !1416, !tbaa !1486
  %117 = and i64 %116, 4294967295, !dbg !1416
  %118 = icmp eq i64 %117, 1, !dbg !1416
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !1416, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %119(ptr nonnull @.str.413), !dbg !1416
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %.not145 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.strides, null, !dbg !1416
  br i1 %.not145, label %if_end51, label %if_then50, !dbg !1416, !prof !52

if_then50:                                        ; preds = %assert_end49
  %120 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.strides, align 8, !dbg !1416, !tbaa !1488
  %121 = and i64 %120, 4294967295, !dbg !1416
  %122 = icmp eq i64 %121, 64, !dbg !1416
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p1.strides, i64 1, !dbg !1416
  %124 = load i64, ptr %123, align 8, !dbg !1416, !tbaa !1498
  %125 = and i64 %124, 4294967295, !dbg !1416
  %126 = icmp eq i64 %125, 1, !dbg !1416
  %127 = and i1 %122, %126, !dbg !1416
  br i1 %127, label %if_end51, label %assert_fail52, !dbg !1416, !prof !18

if_end51:                                         ; preds = %if_then50, %assert_end49
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1416
  %129 = load i64, ptr %128, align 8, !dbg !1416
  %130 = icmp eq i64 %129, 0, !dbg !1416
  br i1 %130, label %assert_end55, label %assert_fail54, !dbg !1416, !prof !18

assert_fail52:                                    ; preds = %if_then50
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %131(ptr nonnull @.str.414), !dbg !1416
  br label %common.ret

assert_fail54:                                    ; preds = %if_end51
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %132(ptr nonnull @.str.415), !dbg !1416
  br label %common.ret

assert_end55:                                     ; preds = %if_end51
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1416
  %134 = load i32, ptr %133, align 4, !dbg !1416
  %135 = icmp eq i32 %134, 2, !dbg !1416
  br i1 %135, label %assert_end57, label %assert_fail56, !dbg !1416, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %136(ptr nonnull @.str.416), !dbg !1416
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1416
  %138 = load i32, ptr %137, align 4, !dbg !1416
  %139 = icmp eq i32 %dev_id, %138, !dbg !1416
  br i1 %139, label %assert_end59, label %assert_fail58, !dbg !1416, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %140(ptr nonnull @.str.417), !dbg !1416
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %141 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1416
  %142 = load i32, ptr %141, align 4, !dbg !1416
  %143 = icmp eq i32 %142, 4, !dbg !1416
  br i1 %143, label %assert_end63, label %assert_fail60, !dbg !1416, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %144(ptr nonnull @.str.418), !dbg !1416
  br label %common.ret

assert_end63:                                     ; preds = %assert_end59
  %145 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1416
  %146 = load i16, ptr %145, align 2, !dbg !1416
  %147 = icmp eq i16 %146, 1, !dbg !1416
  %148 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1416
  %149 = load i8, ptr %148, align 1, !dbg !1416
  %150 = icmp eq i8 %149, 32, !dbg !1416
  %151 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1416
  %152 = load i8, ptr %151, align 1, !dbg !1416
  %153 = icmp eq i8 %152, 2, !dbg !1416
  %154 = and i1 %150, %153, !dbg !1416
  %155 = and i1 %147, %154, !dbg !1416
  br i1 %155, label %assert_end65, label %assert_fail64, !dbg !1416, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %156(ptr nonnull @.str.419), !dbg !1416
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape, align 8, !dbg !1416, !tbaa !1500
  %158 = and i64 %157, 4294967295, !dbg !1416
  %159 = icmp eq i64 %158, 1, !dbg !1416
  br i1 %159, label %assert_end67, label %assert_fail66, !dbg !1416, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %160(ptr nonnull @.str.420), !dbg !1416
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape, i64 1, !dbg !1416
  %162 = load i64, ptr %161, align 8, !dbg !1416, !tbaa !1510
  %163 = and i64 %162, 4294967295, !dbg !1416
  %164 = icmp eq i64 %163, 256, !dbg !1416
  br i1 %164, label %assert_end69, label %assert_fail68, !dbg !1416, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %165(ptr nonnull @.str.421), !dbg !1416
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape, i64 2, !dbg !1416
  %167 = load i64, ptr %166, align 8, !dbg !1416, !tbaa !1512
  %168 = and i64 %167, 4294967295, !dbg !1416
  %169 = icmp eq i64 %168, 1, !dbg !1416
  br i1 %169, label %assert_end71, label %assert_fail70, !dbg !1416, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %170(ptr nonnull @.str.422), !dbg !1416
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.shape, i64 3, !dbg !1416
  %172 = load i64, ptr %171, align 8, !dbg !1416, !tbaa !1515
  %173 = and i64 %172, 4294967295, !dbg !1416
  %174 = icmp eq i64 %173, 1, !dbg !1416
  br i1 %174, label %assert_end73, label %assert_fail72, !dbg !1416, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %175(ptr nonnull @.str.423), !dbg !1416
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not146 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.strides, null, !dbg !1416
  br i1 %.not146, label %if_end75, label %if_then74, !dbg !1416, !prof !52

if_then74:                                        ; preds = %assert_end73
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p2.strides, i64 1, !dbg !1416
  %177 = load i64, ptr %176, align 8, !dbg !1416, !tbaa !1517
  %178 = and i64 %177, 4294967295, !dbg !1416
  %179 = icmp eq i64 %178, 1, !dbg !1416
  br i1 %179, label %if_end75, label %assert_fail76, !dbg !1416, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1416
  %181 = load i64, ptr %180, align 8, !dbg !1416
  %182 = icmp eq i64 %181, 0, !dbg !1416
  br i1 %182, label %assert_end79, label %assert_fail78, !dbg !1416, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %183(ptr nonnull @.str.424), !dbg !1416
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %184(ptr nonnull @.str.425), !dbg !1416
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1416
  %186 = load i32, ptr %185, align 4, !dbg !1416
  %187 = icmp eq i32 %186, 2, !dbg !1416
  br i1 %187, label %assert_end81, label %assert_fail80, !dbg !1416, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %188(ptr nonnull @.str.426), !dbg !1416
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %189 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1416
  %190 = load i32, ptr %189, align 4, !dbg !1416
  %191 = icmp eq i32 %dev_id, %190, !dbg !1416
  br i1 %191, label %assert_end83, label %assert_fail82, !dbg !1416, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %192(ptr nonnull @.str.427), !dbg !1416
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %193 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1416
  %194 = load i32, ptr %193, align 4, !dbg !1416
  %195 = icmp eq i32 %194, 4, !dbg !1416
  br i1 %195, label %assert_end87, label %assert_fail84, !dbg !1416, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %196(ptr nonnull @.str.428), !dbg !1416
  br label %common.ret

assert_end87:                                     ; preds = %assert_end83
  %197 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1416
  %198 = load i16, ptr %197, align 2, !dbg !1416
  %199 = icmp eq i16 %198, 1, !dbg !1416
  %200 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1416
  %201 = load i8, ptr %200, align 1, !dbg !1416
  %202 = icmp eq i8 %201, 32, !dbg !1416
  %203 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1416
  %204 = load i8, ptr %203, align 1, !dbg !1416
  %205 = icmp eq i8 %204, 2, !dbg !1416
  %206 = and i1 %202, %205, !dbg !1416
  %207 = and i1 %199, %206, !dbg !1416
  br i1 %207, label %assert_end89, label %assert_fail88, !dbg !1416, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %208(ptr nonnull @.str.429), !dbg !1416
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %209 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape, align 8, !dbg !1416, !tbaa !1527
  %210 = and i64 %209, 4294967295, !dbg !1416
  %211 = icmp eq i64 %210, 1, !dbg !1416
  br i1 %211, label %assert_end91, label %assert_fail90, !dbg !1416, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %212(ptr nonnull @.str.430), !dbg !1416
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape, i64 1, !dbg !1416
  %214 = load i64, ptr %213, align 8, !dbg !1416, !tbaa !1537
  %215 = and i64 %214, 4294967295, !dbg !1416
  %216 = icmp eq i64 %215, 256, !dbg !1416
  br i1 %216, label %assert_end93, label %assert_fail92, !dbg !1416, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %217(ptr nonnull @.str.431), !dbg !1416
  br label %common.ret

assert_end93:                                     ; preds = %assert_end91
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape, i64 2, !dbg !1416
  %219 = load i64, ptr %218, align 8, !dbg !1416, !tbaa !1539
  %220 = and i64 %219, 4294967295, !dbg !1416
  %221 = icmp eq i64 %220, 56, !dbg !1416
  br i1 %221, label %assert_end95, label %assert_fail94, !dbg !1416, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %222(ptr nonnull @.str.432), !dbg !1416
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.shape, i64 3, !dbg !1416
  %224 = load i64, ptr %223, align 8, !dbg !1416, !tbaa !1542
  %225 = and i64 %224, 4294967295, !dbg !1416
  %226 = icmp eq i64 %225, 56, !dbg !1416
  br i1 %226, label %assert_end97, label %assert_fail96, !dbg !1416, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %227(ptr nonnull @.str.433), !dbg !1416
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %.not147 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides, null, !dbg !1416
  br i1 %.not147, label %if_end99, label %if_then98, !dbg !1416, !prof !52

if_then98:                                        ; preds = %assert_end97
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides, i64 1, !dbg !1416
  %229 = load i64, ptr %228, align 8, !dbg !1416, !tbaa !1544
  %230 = and i64 %229, 4294967295, !dbg !1416
  %231 = icmp eq i64 %230, 3136, !dbg !1416
  %232 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides, i64 2, !dbg !1416
  %233 = load i64, ptr %232, align 8, !dbg !1416, !tbaa !1554
  %234 = and i64 %233, 4294967295, !dbg !1416
  %235 = icmp eq i64 %234, 56, !dbg !1416
  %236 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.p3.strides, i64 3, !dbg !1416
  %237 = load i64, ptr %236, align 8, !dbg !1416, !tbaa !1557
  %238 = and i64 %237, 4294967295, !dbg !1416
  %239 = icmp eq i64 %238, 1, !dbg !1416
  %240 = and i1 %235, %239, !dbg !1416
  %241 = and i1 %231, %240, !dbg !1416
  br i1 %241, label %if_end99, label %assert_fail100, !dbg !1416, !prof !18

if_end99:                                         ; preds = %if_then98, %assert_end97
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1416
  %243 = load i64, ptr %242, align 8, !dbg !1416
  %244 = icmp eq i64 %243, 0, !dbg !1416
  br i1 %244, label %assert_end103, label %assert_fail102, !dbg !1416, !prof !18

assert_fail100:                                   ; preds = %if_then98
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %245(ptr nonnull @.str.434), !dbg !1416
  br label %common.ret

assert_fail102:                                   ; preds = %if_end99
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %246(ptr nonnull @.str.435), !dbg !1416
  br label %common.ret

assert_end103:                                    ; preds = %if_end99
  %247 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1416
  %248 = load i32, ptr %247, align 4, !dbg !1416
  %249 = icmp eq i32 %248, 2, !dbg !1416
  br i1 %249, label %assert_end105, label %assert_fail104, !dbg !1416, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %250(ptr nonnull @.str.436), !dbg !1416
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %251 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1416
  %252 = load i32, ptr %251, align 4, !dbg !1416
  %253 = icmp eq i32 %dev_id, %252, !dbg !1416
  br i1 %253, label %assert_end107, label %assert_fail106, !dbg !1416, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %254 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %254(ptr nonnull @.str.437), !dbg !1416
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %255 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !1416
  %256 = load i32, ptr %255, align 4, !dbg !1416
  %257 = icmp eq i32 %256, 4, !dbg !1416
  br i1 %257, label %assert_end111, label %assert_fail108, !dbg !1416, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %258 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %258(ptr nonnull @.str.438), !dbg !1416
  br label %common.ret

assert_end111:                                    ; preds = %assert_end107
  %259 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !1416
  %260 = load i16, ptr %259, align 2, !dbg !1416
  %261 = icmp eq i16 %260, 1, !dbg !1416
  %262 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !1416
  %263 = load i8, ptr %262, align 1, !dbg !1416
  %264 = icmp eq i8 %263, 32, !dbg !1416
  %265 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !1416
  %266 = load i8, ptr %265, align 1, !dbg !1416
  %267 = icmp eq i8 %266, 2, !dbg !1416
  %268 = and i1 %264, %267, !dbg !1416
  %269 = and i1 %261, %268, !dbg !1416
  br i1 %269, label %assert_end113, label %assert_fail112, !dbg !1416, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %270(ptr nonnull @.str.439), !dbg !1416
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %271 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape, align 8, !dbg !1416, !tbaa !1559
  %272 = and i64 %271, 4294967295, !dbg !1416
  %273 = icmp eq i64 %272, 1, !dbg !1416
  br i1 %273, label %assert_end115, label %assert_fail114, !dbg !1416, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %274(ptr nonnull @.str.440), !dbg !1416
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape, i64 1, !dbg !1416
  %276 = load i64, ptr %275, align 8, !dbg !1416, !tbaa !1569
  %277 = and i64 %276, 4294967295, !dbg !1416
  %278 = icmp eq i64 %277, 256, !dbg !1416
  br i1 %278, label %assert_end117, label %assert_fail116, !dbg !1416, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %279(ptr nonnull @.str.441), !dbg !1416
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape, i64 2, !dbg !1416
  %281 = load i64, ptr %280, align 8, !dbg !1416, !tbaa !1571
  %282 = and i64 %281, 4294967295, !dbg !1416
  %283 = icmp eq i64 %282, 56, !dbg !1416
  br i1 %283, label %assert_end119, label %assert_fail118, !dbg !1416, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %284(ptr nonnull @.str.442), !dbg !1416
  br label %common.ret

assert_end119:                                    ; preds = %assert_end117
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.shape, i64 3, !dbg !1416
  %286 = load i64, ptr %285, align 8, !dbg !1416, !tbaa !1574
  %287 = and i64 %286, 4294967295, !dbg !1416
  %288 = icmp eq i64 %287, 56, !dbg !1416
  br i1 %288, label %assert_end121, label %assert_fail120, !dbg !1416, !prof !18

assert_fail120:                                   ; preds = %assert_end119
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %289(ptr nonnull @.str.443), !dbg !1416
  br label %common.ret

assert_end121:                                    ; preds = %assert_end119
  %.not148 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides, null, !dbg !1416
  br i1 %.not148, label %if_end123, label %if_then122, !dbg !1416, !prof !52

if_then122:                                       ; preds = %assert_end121
  %290 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides, i64 1, !dbg !1416
  %291 = load i64, ptr %290, align 8, !dbg !1416, !tbaa !1576
  %292 = and i64 %291, 4294967295, !dbg !1416
  %293 = icmp eq i64 %292, 3136, !dbg !1416
  %294 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides, i64 2, !dbg !1416
  %295 = load i64, ptr %294, align 8, !dbg !1416, !tbaa !1586
  %296 = and i64 %295, 4294967295, !dbg !1416
  %297 = icmp eq i64 %296, 56, !dbg !1416
  %298 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu.T_relu.strides, i64 3, !dbg !1416
  %299 = load i64, ptr %298, align 8, !dbg !1416, !tbaa !1589
  %300 = and i64 %299, 4294967295, !dbg !1416
  %301 = icmp eq i64 %300, 1, !dbg !1416
  %302 = and i1 %297, %301, !dbg !1416
  %303 = and i1 %293, %302, !dbg !1416
  br i1 %303, label %if_end123, label %assert_fail124, !dbg !1416, !prof !18

if_end123:                                        ; preds = %if_then122, %assert_end121
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !1416
  %305 = load i64, ptr %304, align 8, !dbg !1416
  %306 = icmp eq i64 %305, 0, !dbg !1416
  br i1 %306, label %assert_end127, label %assert_fail126, !dbg !1416, !prof !18

assert_fail124:                                   ; preds = %if_then122
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %307(ptr nonnull @.str.444), !dbg !1416
  br label %common.ret

assert_fail126:                                   ; preds = %if_end123
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %308(ptr nonnull @.str.445), !dbg !1416
  br label %common.ret

assert_end127:                                    ; preds = %if_end123
  %309 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !1416
  %310 = load i32, ptr %309, align 4, !dbg !1416
  %311 = icmp eq i32 %310, 2, !dbg !1416
  br i1 %311, label %assert_end129, label %assert_fail128, !dbg !1416, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %312 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %312(ptr nonnull @.str.446), !dbg !1416
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %313 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !1416
  %314 = load i32, ptr %313, align 4, !dbg !1416
  %315 = icmp eq i32 %dev_id, %314, !dbg !1416
  br i1 %315, label %assert_end131, label %assert_fail130, !dbg !1416, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %316 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1416, !tbaa !19
  tail call void %316(ptr nonnull @.str.447), !dbg !1416
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  store i64 2, ptr %stack_value143, align 8, !dbg !1416
  store i32 0, ptr %stack_tcode144, align 4, !dbg !1416, !tbaa !1591
  %317 = sext i32 %dev_id to i64, !dbg !1416
  %318 = getelementptr inbounds i64, ptr %stack_value143, i64 1, !dbg !1416
  store i64 %317, ptr %318, align 8, !dbg !1416
  %319 = getelementptr inbounds i32, ptr %stack_tcode144, i64 1, !dbg !1416
  store i32 0, ptr %319, align 4, !dbg !1416, !tbaa !1602
  %320 = getelementptr inbounds %0, ptr %stack_value143, i64 2, !dbg !1416
  %321 = getelementptr inbounds i32, ptr %stack_tcode144, i64 2, !dbg !1416
  %322 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1416, !tbaa !19
  %323 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1416
  %.not149 = icmp eq ptr %323, null, !dbg !1416
  br i1 %.not149, label %handle_init, label %handle_init_end, !dbg !1416, !prof !52

handle_init:                                      ; preds = %assert_end131
  %324 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1416, !tbaa !19
  %325 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1416, !tbaa !19
  %326 = call i32 %325(ptr %324, ptr nonnull @.str.22, ptr nonnull %0), !dbg !1416
  %327 = icmp eq i32 %326, 0, !dbg !1416
  br i1 %327, label %call_end, label %common.ret, !dbg !1416, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end131
  %328 = phi ptr [ %323, %assert_end131 ], [ %331, %call_end ], !dbg !1416
  %329 = call i32 %322(ptr %328, ptr nonnull %stack_value143, ptr nonnull %stack_tcode144, i32 2, ptr nonnull %320, ptr nonnull %321), !dbg !1416
  %330 = icmp eq i32 %329, 0, !dbg !1416
  br i1 %330, label %call_end133, label %common.ret, !dbg !1416, !prof !18

call_end:                                         ; preds = %handle_init
  %331 = load ptr, ptr %0, align 8, !dbg !1416
  store ptr %331, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1416
  br label %handle_init_end, !dbg !1416

call_end133:                                      ; preds = %handle_init_end
  %332 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_compute_(ptr nonnull %stack_value143, ptr %T_relu134, ptr nonnull %stack_tcode144, ptr %p0135, ptr %p1136, ptr %p2137, ptr %p3138), !dbg !1416
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1604 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1606, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1607, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1608, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1609, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1610, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1611, metadata !DIExpression()), !dbg !1612
  %0 = alloca ptr, align 8, !dbg !1612
  %stack_value143 = alloca [18 x %0], align 8, !dbg !1612
  %stack_tcode144 = alloca [18 x i32], align 4, !dbg !1612
  %1 = icmp eq i32 %num_args, 5, !dbg !1612
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1612, !prof !18

common.ret:                                       ; preds = %call_end133, %handle_init_end, %handle_init, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail120, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail108, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail96, %assert_fail94, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail84, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail120 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ %326, %handle_init ], [ %329, %handle_init_end ], [ %332, %call_end133 ]
  ret i32 %common.ret.op, !dbg !1612

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %2(ptr nonnull @.str.449), !dbg !1612
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1612, !tbaa !1613
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1612
  %p1.code = load i32, ptr %3, align 4, !dbg !1612, !tbaa !1624
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1612
  %p2.code = load i32, ptr %4, align 4, !dbg !1612, !tbaa !1626
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1612
  %p3.code = load i32, ptr %5, align 4, !dbg !1612, !tbaa !1629
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1612
  %T_relu.code = load i32, ptr %6, align 4, !dbg !1612, !tbaa !1631
  %p0 = load ptr, ptr %args, align 8, !dbg !1612
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1612
  %p1 = load ptr, ptr %7, align 8, !dbg !1612
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1612
  %p2 = load ptr, ptr %8, align 8, !dbg !1612
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1612
  %p3 = load ptr, ptr %9, align 8, !dbg !1612
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1612
  %T_relu = load ptr, ptr %10, align 8, !dbg !1612
  %p0135 = load ptr, ptr %p0, align 8, !dbg !1612
  call void @llvm.assume(i1 true) [ "align"(ptr %p0135, i64 64) ], !dbg !1612
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape = load ptr, ptr %11, align 8, !dbg !1612
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides = load ptr, ptr %12, align 8, !dbg !1612
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1612
  %dev_id = load i32, ptr %13, align 4, !dbg !1612
  %p1136 = load ptr, ptr %p1, align 8, !dbg !1612
  call void @llvm.assume(i1 true) [ "align"(ptr %p1136, i64 64) ], !dbg !1612
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape = load ptr, ptr %14, align 8, !dbg !1612
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.strides = load ptr, ptr %15, align 8, !dbg !1612
  %p2137 = load ptr, ptr %p2, align 8, !dbg !1612
  call void @llvm.assume(i1 true) [ "align"(ptr %p2137, i64 64) ], !dbg !1612
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape = load ptr, ptr %16, align 8, !dbg !1612
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.strides = load ptr, ptr %17, align 8, !dbg !1612
  %p3138 = load ptr, ptr %p3, align 8, !dbg !1612
  call void @llvm.assume(i1 true) [ "align"(ptr %p3138, i64 64) ], !dbg !1612
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape = load ptr, ptr %18, align 8, !dbg !1612
  %19 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides = load ptr, ptr %19, align 8, !dbg !1612
  %T_relu134 = load ptr, ptr %T_relu, align 8, !dbg !1612
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu134, i64 64) ], !dbg !1612
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape = load ptr, ptr %20, align 8, !dbg !1612
  %21 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !1612
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides = load ptr, ptr %21, align 8, !dbg !1612
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !1612

assert_fail6:                                     ; preds = %assert_end
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %22(ptr nonnull @.str.450), !dbg !1612
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !1612

assert_fail8:                                     ; preds = %assert_end7
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %23(ptr nonnull @.str.451), !dbg !1612
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !1612

assert_fail10:                                    ; preds = %assert_end9
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %24(ptr nonnull @.str.452), !dbg !1612
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !1612

assert_fail12:                                    ; preds = %assert_end11
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %25(ptr nonnull @.str.453), !dbg !1612
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !1612

assert_fail14:                                    ; preds = %assert_end13
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %26(ptr nonnull @.str.454), !dbg !1612
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1612
  %28 = load i32, ptr %27, align 4, !dbg !1612
  %29 = icmp eq i32 %28, 4, !dbg !1612
  br i1 %29, label %assert_end19, label %assert_fail16, !dbg !1612, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %30(ptr nonnull @.str.455), !dbg !1612
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1612
  %32 = load i16, ptr %31, align 2, !dbg !1612
  %33 = icmp eq i16 %32, 1, !dbg !1612
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1612
  %35 = load i8, ptr %34, align 1, !dbg !1612
  %36 = icmp eq i8 %35, 32, !dbg !1612
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1612
  %38 = load i8, ptr %37, align 1, !dbg !1612
  %39 = icmp eq i8 %38, 2, !dbg !1612
  %40 = and i1 %36, %39, !dbg !1612
  %41 = and i1 %33, %40, !dbg !1612
  br i1 %41, label %assert_end21, label %assert_fail20, !dbg !1612, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %42(ptr nonnull @.str.456), !dbg !1612
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %43 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape, align 8, !dbg !1612, !tbaa !1635
  %44 = and i64 %43, 4294967295, !dbg !1612
  %45 = icmp eq i64 %44, 1, !dbg !1612
  br i1 %45, label %assert_end23, label %assert_fail22, !dbg !1612, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %46(ptr nonnull @.str.457), !dbg !1612
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape, i64 1, !dbg !1612
  %48 = load i64, ptr %47, align 8, !dbg !1612, !tbaa !1645
  %49 = and i64 %48, 4294967295, !dbg !1612
  %50 = icmp eq i64 %49, 128, !dbg !1612
  br i1 %50, label %assert_end25, label %assert_fail24, !dbg !1612, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %51(ptr nonnull @.str.458), !dbg !1612
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape, i64 2, !dbg !1612
  %53 = load i64, ptr %52, align 8, !dbg !1612, !tbaa !1647
  %54 = and i64 %53, 4294967295, !dbg !1612
  %55 = icmp eq i64 %54, 28, !dbg !1612
  br i1 %55, label %assert_end27, label %assert_fail26, !dbg !1612, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %56(ptr nonnull @.str.459), !dbg !1612
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.shape, i64 3, !dbg !1612
  %58 = load i64, ptr %57, align 8, !dbg !1612, !tbaa !1650
  %59 = and i64 %58, 4294967295, !dbg !1612
  %60 = icmp eq i64 %59, 28, !dbg !1612
  br i1 %60, label %assert_end29, label %assert_fail28, !dbg !1612, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %61(ptr nonnull @.str.460), !dbg !1612
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides, null, !dbg !1612
  br i1 %.not, label %if_end, label %if_then, !dbg !1612, !prof !52

if_then:                                          ; preds = %assert_end29
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides, i64 1, !dbg !1612
  %63 = load i64, ptr %62, align 8, !dbg !1612, !tbaa !1652
  %64 = and i64 %63, 4294967295, !dbg !1612
  %65 = icmp eq i64 %64, 784, !dbg !1612
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides, i64 2, !dbg !1612
  %67 = load i64, ptr %66, align 8, !dbg !1612, !tbaa !1662
  %68 = and i64 %67, 4294967295, !dbg !1612
  %69 = icmp eq i64 %68, 28, !dbg !1612
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p0.strides, i64 3, !dbg !1612
  %71 = load i64, ptr %70, align 8, !dbg !1612, !tbaa !1665
  %72 = and i64 %71, 4294967295, !dbg !1612
  %73 = icmp eq i64 %72, 1, !dbg !1612
  %74 = and i1 %69, %73, !dbg !1612
  %75 = and i1 %65, %74, !dbg !1612
  br i1 %75, label %if_end, label %assert_fail30, !dbg !1612, !prof !18

if_end:                                           ; preds = %if_then, %assert_end29
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1612
  %77 = load i64, ptr %76, align 8, !dbg !1612
  %78 = icmp eq i64 %77, 0, !dbg !1612
  br i1 %78, label %assert_end33, label %assert_fail32, !dbg !1612, !prof !18

assert_fail30:                                    ; preds = %if_then
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %79(ptr nonnull @.str.461), !dbg !1612
  br label %common.ret

assert_fail32:                                    ; preds = %if_end
  %80 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %80(ptr nonnull @.str.462), !dbg !1612
  br label %common.ret

assert_end33:                                     ; preds = %if_end
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1612
  %82 = load i32, ptr %81, align 4, !dbg !1612
  %83 = icmp eq i32 %82, 2, !dbg !1612
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !1612, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %84(ptr nonnull @.str.463), !dbg !1612
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1612
  %86 = load i32, ptr %85, align 4, !dbg !1612
  %87 = icmp eq i32 %86, 4, !dbg !1612
  br i1 %87, label %assert_end39, label %assert_fail36, !dbg !1612, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %88(ptr nonnull @.str.464), !dbg !1612
  br label %common.ret

assert_end39:                                     ; preds = %assert_end35
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1612
  %90 = load i16, ptr %89, align 2, !dbg !1612
  %91 = icmp eq i16 %90, 1, !dbg !1612
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1612
  %93 = load i8, ptr %92, align 1, !dbg !1612
  %94 = icmp eq i8 %93, 32, !dbg !1612
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1612
  %96 = load i8, ptr %95, align 1, !dbg !1612
  %97 = icmp eq i8 %96, 2, !dbg !1612
  %98 = and i1 %94, %97, !dbg !1612
  %99 = and i1 %91, %98, !dbg !1612
  br i1 %99, label %assert_end41, label %assert_fail40, !dbg !1612, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %100 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %100(ptr nonnull @.str.465), !dbg !1612
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %101 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape, align 8, !dbg !1612, !tbaa !1667
  %102 = and i64 %101, 4294967295, !dbg !1612
  %103 = icmp eq i64 %102, 512, !dbg !1612
  br i1 %103, label %assert_end43, label %assert_fail42, !dbg !1612, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %104(ptr nonnull @.str.466), !dbg !1612
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape, i64 1, !dbg !1612
  %106 = load i64, ptr %105, align 8, !dbg !1612, !tbaa !1677
  %107 = and i64 %106, 4294967295, !dbg !1612
  %108 = icmp eq i64 %107, 128, !dbg !1612
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !1612, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %109(ptr nonnull @.str.467), !dbg !1612
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape, i64 2, !dbg !1612
  %111 = load i64, ptr %110, align 8, !dbg !1612, !tbaa !1679
  %112 = and i64 %111, 4294967295, !dbg !1612
  %113 = icmp eq i64 %112, 1, !dbg !1612
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !1612, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %114(ptr nonnull @.str.468), !dbg !1612
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.shape, i64 3, !dbg !1612
  %116 = load i64, ptr %115, align 8, !dbg !1612, !tbaa !1682
  %117 = and i64 %116, 4294967295, !dbg !1612
  %118 = icmp eq i64 %117, 1, !dbg !1612
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !1612, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %119(ptr nonnull @.str.469), !dbg !1612
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %.not145 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.strides, null, !dbg !1612
  br i1 %.not145, label %if_end51, label %if_then50, !dbg !1612, !prof !52

if_then50:                                        ; preds = %assert_end49
  %120 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.strides, align 8, !dbg !1612, !tbaa !1684
  %121 = and i64 %120, 4294967295, !dbg !1612
  %122 = icmp eq i64 %121, 128, !dbg !1612
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p1.strides, i64 1, !dbg !1612
  %124 = load i64, ptr %123, align 8, !dbg !1612, !tbaa !1694
  %125 = and i64 %124, 4294967295, !dbg !1612
  %126 = icmp eq i64 %125, 1, !dbg !1612
  %127 = and i1 %122, %126, !dbg !1612
  br i1 %127, label %if_end51, label %assert_fail52, !dbg !1612, !prof !18

if_end51:                                         ; preds = %if_then50, %assert_end49
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1612
  %129 = load i64, ptr %128, align 8, !dbg !1612
  %130 = icmp eq i64 %129, 0, !dbg !1612
  br i1 %130, label %assert_end55, label %assert_fail54, !dbg !1612, !prof !18

assert_fail52:                                    ; preds = %if_then50
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %131(ptr nonnull @.str.470), !dbg !1612
  br label %common.ret

assert_fail54:                                    ; preds = %if_end51
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %132(ptr nonnull @.str.471), !dbg !1612
  br label %common.ret

assert_end55:                                     ; preds = %if_end51
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1612
  %134 = load i32, ptr %133, align 4, !dbg !1612
  %135 = icmp eq i32 %134, 2, !dbg !1612
  br i1 %135, label %assert_end57, label %assert_fail56, !dbg !1612, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %136(ptr nonnull @.str.472), !dbg !1612
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1612
  %138 = load i32, ptr %137, align 4, !dbg !1612
  %139 = icmp eq i32 %dev_id, %138, !dbg !1612
  br i1 %139, label %assert_end59, label %assert_fail58, !dbg !1612, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %140(ptr nonnull @.str.473), !dbg !1612
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %141 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1612
  %142 = load i32, ptr %141, align 4, !dbg !1612
  %143 = icmp eq i32 %142, 4, !dbg !1612
  br i1 %143, label %assert_end63, label %assert_fail60, !dbg !1612, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %144(ptr nonnull @.str.474), !dbg !1612
  br label %common.ret

assert_end63:                                     ; preds = %assert_end59
  %145 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1612
  %146 = load i16, ptr %145, align 2, !dbg !1612
  %147 = icmp eq i16 %146, 1, !dbg !1612
  %148 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1612
  %149 = load i8, ptr %148, align 1, !dbg !1612
  %150 = icmp eq i8 %149, 32, !dbg !1612
  %151 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1612
  %152 = load i8, ptr %151, align 1, !dbg !1612
  %153 = icmp eq i8 %152, 2, !dbg !1612
  %154 = and i1 %150, %153, !dbg !1612
  %155 = and i1 %147, %154, !dbg !1612
  br i1 %155, label %assert_end65, label %assert_fail64, !dbg !1612, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %156(ptr nonnull @.str.475), !dbg !1612
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape, align 8, !dbg !1612, !tbaa !1696
  %158 = and i64 %157, 4294967295, !dbg !1612
  %159 = icmp eq i64 %158, 1, !dbg !1612
  br i1 %159, label %assert_end67, label %assert_fail66, !dbg !1612, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %160(ptr nonnull @.str.476), !dbg !1612
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape, i64 1, !dbg !1612
  %162 = load i64, ptr %161, align 8, !dbg !1612, !tbaa !1706
  %163 = and i64 %162, 4294967295, !dbg !1612
  %164 = icmp eq i64 %163, 512, !dbg !1612
  br i1 %164, label %assert_end69, label %assert_fail68, !dbg !1612, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %165(ptr nonnull @.str.477), !dbg !1612
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape, i64 2, !dbg !1612
  %167 = load i64, ptr %166, align 8, !dbg !1612, !tbaa !1708
  %168 = and i64 %167, 4294967295, !dbg !1612
  %169 = icmp eq i64 %168, 1, !dbg !1612
  br i1 %169, label %assert_end71, label %assert_fail70, !dbg !1612, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %170(ptr nonnull @.str.478), !dbg !1612
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.shape, i64 3, !dbg !1612
  %172 = load i64, ptr %171, align 8, !dbg !1612, !tbaa !1711
  %173 = and i64 %172, 4294967295, !dbg !1612
  %174 = icmp eq i64 %173, 1, !dbg !1612
  br i1 %174, label %assert_end73, label %assert_fail72, !dbg !1612, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %175(ptr nonnull @.str.479), !dbg !1612
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not146 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.strides, null, !dbg !1612
  br i1 %.not146, label %if_end75, label %if_then74, !dbg !1612, !prof !52

if_then74:                                        ; preds = %assert_end73
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p2.strides, i64 1, !dbg !1612
  %177 = load i64, ptr %176, align 8, !dbg !1612, !tbaa !1713
  %178 = and i64 %177, 4294967295, !dbg !1612
  %179 = icmp eq i64 %178, 1, !dbg !1612
  br i1 %179, label %if_end75, label %assert_fail76, !dbg !1612, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1612
  %181 = load i64, ptr %180, align 8, !dbg !1612
  %182 = icmp eq i64 %181, 0, !dbg !1612
  br i1 %182, label %assert_end79, label %assert_fail78, !dbg !1612, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %183(ptr nonnull @.str.480), !dbg !1612
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %184(ptr nonnull @.str.481), !dbg !1612
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1612
  %186 = load i32, ptr %185, align 4, !dbg !1612
  %187 = icmp eq i32 %186, 2, !dbg !1612
  br i1 %187, label %assert_end81, label %assert_fail80, !dbg !1612, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %188(ptr nonnull @.str.482), !dbg !1612
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %189 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1612
  %190 = load i32, ptr %189, align 4, !dbg !1612
  %191 = icmp eq i32 %dev_id, %190, !dbg !1612
  br i1 %191, label %assert_end83, label %assert_fail82, !dbg !1612, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %192(ptr nonnull @.str.483), !dbg !1612
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %193 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1612
  %194 = load i32, ptr %193, align 4, !dbg !1612
  %195 = icmp eq i32 %194, 4, !dbg !1612
  br i1 %195, label %assert_end87, label %assert_fail84, !dbg !1612, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %196(ptr nonnull @.str.484), !dbg !1612
  br label %common.ret

assert_end87:                                     ; preds = %assert_end83
  %197 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1612
  %198 = load i16, ptr %197, align 2, !dbg !1612
  %199 = icmp eq i16 %198, 1, !dbg !1612
  %200 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1612
  %201 = load i8, ptr %200, align 1, !dbg !1612
  %202 = icmp eq i8 %201, 32, !dbg !1612
  %203 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1612
  %204 = load i8, ptr %203, align 1, !dbg !1612
  %205 = icmp eq i8 %204, 2, !dbg !1612
  %206 = and i1 %202, %205, !dbg !1612
  %207 = and i1 %199, %206, !dbg !1612
  br i1 %207, label %assert_end89, label %assert_fail88, !dbg !1612, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %208(ptr nonnull @.str.485), !dbg !1612
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %209 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape, align 8, !dbg !1612, !tbaa !1723
  %210 = and i64 %209, 4294967295, !dbg !1612
  %211 = icmp eq i64 %210, 1, !dbg !1612
  br i1 %211, label %assert_end91, label %assert_fail90, !dbg !1612, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %212(ptr nonnull @.str.486), !dbg !1612
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape, i64 1, !dbg !1612
  %214 = load i64, ptr %213, align 8, !dbg !1612, !tbaa !1733
  %215 = and i64 %214, 4294967295, !dbg !1612
  %216 = icmp eq i64 %215, 512, !dbg !1612
  br i1 %216, label %assert_end93, label %assert_fail92, !dbg !1612, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %217(ptr nonnull @.str.487), !dbg !1612
  br label %common.ret

assert_end93:                                     ; preds = %assert_end91
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape, i64 2, !dbg !1612
  %219 = load i64, ptr %218, align 8, !dbg !1612, !tbaa !1735
  %220 = and i64 %219, 4294967295, !dbg !1612
  %221 = icmp eq i64 %220, 28, !dbg !1612
  br i1 %221, label %assert_end95, label %assert_fail94, !dbg !1612, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %222(ptr nonnull @.str.488), !dbg !1612
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.shape, i64 3, !dbg !1612
  %224 = load i64, ptr %223, align 8, !dbg !1612, !tbaa !1738
  %225 = and i64 %224, 4294967295, !dbg !1612
  %226 = icmp eq i64 %225, 28, !dbg !1612
  br i1 %226, label %assert_end97, label %assert_fail96, !dbg !1612, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %227(ptr nonnull @.str.489), !dbg !1612
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %.not147 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides, null, !dbg !1612
  br i1 %.not147, label %if_end99, label %if_then98, !dbg !1612, !prof !52

if_then98:                                        ; preds = %assert_end97
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides, i64 1, !dbg !1612
  %229 = load i64, ptr %228, align 8, !dbg !1612, !tbaa !1740
  %230 = and i64 %229, 4294967295, !dbg !1612
  %231 = icmp eq i64 %230, 784, !dbg !1612
  %232 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides, i64 2, !dbg !1612
  %233 = load i64, ptr %232, align 8, !dbg !1612, !tbaa !1750
  %234 = and i64 %233, 4294967295, !dbg !1612
  %235 = icmp eq i64 %234, 28, !dbg !1612
  %236 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.p3.strides, i64 3, !dbg !1612
  %237 = load i64, ptr %236, align 8, !dbg !1612, !tbaa !1753
  %238 = and i64 %237, 4294967295, !dbg !1612
  %239 = icmp eq i64 %238, 1, !dbg !1612
  %240 = and i1 %235, %239, !dbg !1612
  %241 = and i1 %231, %240, !dbg !1612
  br i1 %241, label %if_end99, label %assert_fail100, !dbg !1612, !prof !18

if_end99:                                         ; preds = %if_then98, %assert_end97
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1612
  %243 = load i64, ptr %242, align 8, !dbg !1612
  %244 = icmp eq i64 %243, 0, !dbg !1612
  br i1 %244, label %assert_end103, label %assert_fail102, !dbg !1612, !prof !18

assert_fail100:                                   ; preds = %if_then98
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %245(ptr nonnull @.str.490), !dbg !1612
  br label %common.ret

assert_fail102:                                   ; preds = %if_end99
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %246(ptr nonnull @.str.491), !dbg !1612
  br label %common.ret

assert_end103:                                    ; preds = %if_end99
  %247 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1612
  %248 = load i32, ptr %247, align 4, !dbg !1612
  %249 = icmp eq i32 %248, 2, !dbg !1612
  br i1 %249, label %assert_end105, label %assert_fail104, !dbg !1612, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %250(ptr nonnull @.str.492), !dbg !1612
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %251 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1612
  %252 = load i32, ptr %251, align 4, !dbg !1612
  %253 = icmp eq i32 %dev_id, %252, !dbg !1612
  br i1 %253, label %assert_end107, label %assert_fail106, !dbg !1612, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %254 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %254(ptr nonnull @.str.493), !dbg !1612
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %255 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !1612
  %256 = load i32, ptr %255, align 4, !dbg !1612
  %257 = icmp eq i32 %256, 4, !dbg !1612
  br i1 %257, label %assert_end111, label %assert_fail108, !dbg !1612, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %258 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %258(ptr nonnull @.str.494), !dbg !1612
  br label %common.ret

assert_end111:                                    ; preds = %assert_end107
  %259 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !1612
  %260 = load i16, ptr %259, align 2, !dbg !1612
  %261 = icmp eq i16 %260, 1, !dbg !1612
  %262 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !1612
  %263 = load i8, ptr %262, align 1, !dbg !1612
  %264 = icmp eq i8 %263, 32, !dbg !1612
  %265 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !1612
  %266 = load i8, ptr %265, align 1, !dbg !1612
  %267 = icmp eq i8 %266, 2, !dbg !1612
  %268 = and i1 %264, %267, !dbg !1612
  %269 = and i1 %261, %268, !dbg !1612
  br i1 %269, label %assert_end113, label %assert_fail112, !dbg !1612, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %270(ptr nonnull @.str.495), !dbg !1612
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %271 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape, align 8, !dbg !1612, !tbaa !1755
  %272 = and i64 %271, 4294967295, !dbg !1612
  %273 = icmp eq i64 %272, 1, !dbg !1612
  br i1 %273, label %assert_end115, label %assert_fail114, !dbg !1612, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %274(ptr nonnull @.str.496), !dbg !1612
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape, i64 1, !dbg !1612
  %276 = load i64, ptr %275, align 8, !dbg !1612, !tbaa !1765
  %277 = and i64 %276, 4294967295, !dbg !1612
  %278 = icmp eq i64 %277, 512, !dbg !1612
  br i1 %278, label %assert_end117, label %assert_fail116, !dbg !1612, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %279(ptr nonnull @.str.497), !dbg !1612
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape, i64 2, !dbg !1612
  %281 = load i64, ptr %280, align 8, !dbg !1612, !tbaa !1767
  %282 = and i64 %281, 4294967295, !dbg !1612
  %283 = icmp eq i64 %282, 28, !dbg !1612
  br i1 %283, label %assert_end119, label %assert_fail118, !dbg !1612, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %284(ptr nonnull @.str.498), !dbg !1612
  br label %common.ret

assert_end119:                                    ; preds = %assert_end117
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.shape, i64 3, !dbg !1612
  %286 = load i64, ptr %285, align 8, !dbg !1612, !tbaa !1770
  %287 = and i64 %286, 4294967295, !dbg !1612
  %288 = icmp eq i64 %287, 28, !dbg !1612
  br i1 %288, label %assert_end121, label %assert_fail120, !dbg !1612, !prof !18

assert_fail120:                                   ; preds = %assert_end119
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %289(ptr nonnull @.str.499), !dbg !1612
  br label %common.ret

assert_end121:                                    ; preds = %assert_end119
  %.not148 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides, null, !dbg !1612
  br i1 %.not148, label %if_end123, label %if_then122, !dbg !1612, !prof !52

if_then122:                                       ; preds = %assert_end121
  %290 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides, i64 1, !dbg !1612
  %291 = load i64, ptr %290, align 8, !dbg !1612, !tbaa !1772
  %292 = and i64 %291, 4294967295, !dbg !1612
  %293 = icmp eq i64 %292, 784, !dbg !1612
  %294 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides, i64 2, !dbg !1612
  %295 = load i64, ptr %294, align 8, !dbg !1612, !tbaa !1782
  %296 = and i64 %295, 4294967295, !dbg !1612
  %297 = icmp eq i64 %296, 28, !dbg !1612
  %298 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1.T_relu.strides, i64 3, !dbg !1612
  %299 = load i64, ptr %298, align 8, !dbg !1612, !tbaa !1785
  %300 = and i64 %299, 4294967295, !dbg !1612
  %301 = icmp eq i64 %300, 1, !dbg !1612
  %302 = and i1 %297, %301, !dbg !1612
  %303 = and i1 %293, %302, !dbg !1612
  br i1 %303, label %if_end123, label %assert_fail124, !dbg !1612, !prof !18

if_end123:                                        ; preds = %if_then122, %assert_end121
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !1612
  %305 = load i64, ptr %304, align 8, !dbg !1612
  %306 = icmp eq i64 %305, 0, !dbg !1612
  br i1 %306, label %assert_end127, label %assert_fail126, !dbg !1612, !prof !18

assert_fail124:                                   ; preds = %if_then122
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %307(ptr nonnull @.str.500), !dbg !1612
  br label %common.ret

assert_fail126:                                   ; preds = %if_end123
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %308(ptr nonnull @.str.501), !dbg !1612
  br label %common.ret

assert_end127:                                    ; preds = %if_end123
  %309 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !1612
  %310 = load i32, ptr %309, align 4, !dbg !1612
  %311 = icmp eq i32 %310, 2, !dbg !1612
  br i1 %311, label %assert_end129, label %assert_fail128, !dbg !1612, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %312 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %312(ptr nonnull @.str.502), !dbg !1612
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %313 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !1612
  %314 = load i32, ptr %313, align 4, !dbg !1612
  %315 = icmp eq i32 %dev_id, %314, !dbg !1612
  br i1 %315, label %assert_end131, label %assert_fail130, !dbg !1612, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %316 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1612, !tbaa !19
  tail call void %316(ptr nonnull @.str.503), !dbg !1612
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  store i64 2, ptr %stack_value143, align 8, !dbg !1612
  store i32 0, ptr %stack_tcode144, align 4, !dbg !1612, !tbaa !1787
  %317 = sext i32 %dev_id to i64, !dbg !1612
  %318 = getelementptr inbounds i64, ptr %stack_value143, i64 1, !dbg !1612
  store i64 %317, ptr %318, align 8, !dbg !1612
  %319 = getelementptr inbounds i32, ptr %stack_tcode144, i64 1, !dbg !1612
  store i32 0, ptr %319, align 4, !dbg !1612, !tbaa !1798
  %320 = getelementptr inbounds %0, ptr %stack_value143, i64 2, !dbg !1612
  %321 = getelementptr inbounds i32, ptr %stack_tcode144, i64 2, !dbg !1612
  %322 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1612, !tbaa !19
  %323 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1612
  %.not149 = icmp eq ptr %323, null, !dbg !1612
  br i1 %.not149, label %handle_init, label %handle_init_end, !dbg !1612, !prof !52

handle_init:                                      ; preds = %assert_end131
  %324 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1612, !tbaa !19
  %325 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1612, !tbaa !19
  %326 = call i32 %325(ptr %324, ptr nonnull @.str.22, ptr nonnull %0), !dbg !1612
  %327 = icmp eq i32 %326, 0, !dbg !1612
  br i1 %327, label %call_end, label %common.ret, !dbg !1612, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end131
  %328 = phi ptr [ %323, %assert_end131 ], [ %331, %call_end ], !dbg !1612
  %329 = call i32 %322(ptr %328, ptr nonnull %stack_value143, ptr nonnull %stack_tcode144, i32 2, ptr nonnull %320, ptr nonnull %321), !dbg !1612
  %330 = icmp eq i32 %329, 0, !dbg !1612
  br i1 %330, label %call_end133, label %common.ret, !dbg !1612, !prof !18

call_end:                                         ; preds = %handle_init
  %331 = load ptr, ptr %0, align 8, !dbg !1612
  store ptr %331, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1612
  br label %handle_init_end, !dbg !1612

call_end133:                                      ; preds = %handle_init_end
  %332 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_compute_(ptr nonnull %stack_value143, ptr %T_relu134, ptr nonnull %stack_tcode144, ptr %p0135, ptr %p1136, ptr %p2137, ptr %p3138), !dbg !1612
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1800 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1802, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1803, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1804, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1805, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1806, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1807, metadata !DIExpression()), !dbg !1808
  %0 = alloca ptr, align 8, !dbg !1808
  %stack_value143 = alloca [18 x %0], align 8, !dbg !1808
  %stack_tcode144 = alloca [18 x i32], align 4, !dbg !1808
  %1 = icmp eq i32 %num_args, 5, !dbg !1808
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1808, !prof !18

common.ret:                                       ; preds = %call_end133, %handle_init_end, %handle_init, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail120, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail108, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail96, %assert_fail94, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail84, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail120 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ %326, %handle_init ], [ %329, %handle_init_end ], [ %332, %call_end133 ]
  ret i32 %common.ret.op, !dbg !1808

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %2(ptr nonnull @.str.505), !dbg !1808
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1808, !tbaa !1809
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1808
  %p1.code = load i32, ptr %3, align 4, !dbg !1808, !tbaa !1820
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1808
  %p2.code = load i32, ptr %4, align 4, !dbg !1808, !tbaa !1822
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1808
  %p3.code = load i32, ptr %5, align 4, !dbg !1808, !tbaa !1825
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1808
  %T_relu.code = load i32, ptr %6, align 4, !dbg !1808, !tbaa !1827
  %p0 = load ptr, ptr %args, align 8, !dbg !1808
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1808
  %p1 = load ptr, ptr %7, align 8, !dbg !1808
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1808
  %p2 = load ptr, ptr %8, align 8, !dbg !1808
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1808
  %p3 = load ptr, ptr %9, align 8, !dbg !1808
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1808
  %T_relu = load ptr, ptr %10, align 8, !dbg !1808
  %p0135 = load ptr, ptr %p0, align 8, !dbg !1808
  call void @llvm.assume(i1 true) [ "align"(ptr %p0135, i64 64) ], !dbg !1808
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape = load ptr, ptr %11, align 8, !dbg !1808
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides = load ptr, ptr %12, align 8, !dbg !1808
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1808
  %dev_id = load i32, ptr %13, align 4, !dbg !1808
  %p1136 = load ptr, ptr %p1, align 8, !dbg !1808
  call void @llvm.assume(i1 true) [ "align"(ptr %p1136, i64 64) ], !dbg !1808
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape = load ptr, ptr %14, align 8, !dbg !1808
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.strides = load ptr, ptr %15, align 8, !dbg !1808
  %p2137 = load ptr, ptr %p2, align 8, !dbg !1808
  call void @llvm.assume(i1 true) [ "align"(ptr %p2137, i64 64) ], !dbg !1808
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape = load ptr, ptr %16, align 8, !dbg !1808
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.strides = load ptr, ptr %17, align 8, !dbg !1808
  %p3138 = load ptr, ptr %p3, align 8, !dbg !1808
  call void @llvm.assume(i1 true) [ "align"(ptr %p3138, i64 64) ], !dbg !1808
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape = load ptr, ptr %18, align 8, !dbg !1808
  %19 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides = load ptr, ptr %19, align 8, !dbg !1808
  %T_relu134 = load ptr, ptr %T_relu, align 8, !dbg !1808
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu134, i64 64) ], !dbg !1808
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape = load ptr, ptr %20, align 8, !dbg !1808
  %21 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !1808
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides = load ptr, ptr %21, align 8, !dbg !1808
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !1808

assert_fail6:                                     ; preds = %assert_end
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %22(ptr nonnull @.str.506), !dbg !1808
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !1808

assert_fail8:                                     ; preds = %assert_end7
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %23(ptr nonnull @.str.507), !dbg !1808
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !1808

assert_fail10:                                    ; preds = %assert_end9
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %24(ptr nonnull @.str.508), !dbg !1808
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !1808

assert_fail12:                                    ; preds = %assert_end11
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %25(ptr nonnull @.str.509), !dbg !1808
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !1808

assert_fail14:                                    ; preds = %assert_end13
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %26(ptr nonnull @.str.510), !dbg !1808
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1808
  %28 = load i32, ptr %27, align 4, !dbg !1808
  %29 = icmp eq i32 %28, 4, !dbg !1808
  br i1 %29, label %assert_end19, label %assert_fail16, !dbg !1808, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %30(ptr nonnull @.str.511), !dbg !1808
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1808
  %32 = load i16, ptr %31, align 2, !dbg !1808
  %33 = icmp eq i16 %32, 1, !dbg !1808
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1808
  %35 = load i8, ptr %34, align 1, !dbg !1808
  %36 = icmp eq i8 %35, 32, !dbg !1808
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1808
  %38 = load i8, ptr %37, align 1, !dbg !1808
  %39 = icmp eq i8 %38, 2, !dbg !1808
  %40 = and i1 %36, %39, !dbg !1808
  %41 = and i1 %33, %40, !dbg !1808
  br i1 %41, label %assert_end21, label %assert_fail20, !dbg !1808, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %42(ptr nonnull @.str.512), !dbg !1808
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %43 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape, align 8, !dbg !1808, !tbaa !1831
  %44 = and i64 %43, 4294967295, !dbg !1808
  %45 = icmp eq i64 %44, 1, !dbg !1808
  br i1 %45, label %assert_end23, label %assert_fail22, !dbg !1808, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %46(ptr nonnull @.str.513), !dbg !1808
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape, i64 1, !dbg !1808
  %48 = load i64, ptr %47, align 8, !dbg !1808, !tbaa !1841
  %49 = and i64 %48, 4294967295, !dbg !1808
  %50 = icmp eq i64 %49, 256, !dbg !1808
  br i1 %50, label %assert_end25, label %assert_fail24, !dbg !1808, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %51(ptr nonnull @.str.514), !dbg !1808
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape, i64 2, !dbg !1808
  %53 = load i64, ptr %52, align 8, !dbg !1808, !tbaa !1843
  %54 = and i64 %53, 4294967295, !dbg !1808
  %55 = icmp eq i64 %54, 14, !dbg !1808
  br i1 %55, label %assert_end27, label %assert_fail26, !dbg !1808, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %56(ptr nonnull @.str.515), !dbg !1808
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.shape, i64 3, !dbg !1808
  %58 = load i64, ptr %57, align 8, !dbg !1808, !tbaa !1846
  %59 = and i64 %58, 4294967295, !dbg !1808
  %60 = icmp eq i64 %59, 14, !dbg !1808
  br i1 %60, label %assert_end29, label %assert_fail28, !dbg !1808, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %61(ptr nonnull @.str.516), !dbg !1808
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides, null, !dbg !1808
  br i1 %.not, label %if_end, label %if_then, !dbg !1808, !prof !52

if_then:                                          ; preds = %assert_end29
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides, i64 1, !dbg !1808
  %63 = load i64, ptr %62, align 8, !dbg !1808, !tbaa !1848
  %64 = and i64 %63, 4294967295, !dbg !1808
  %65 = icmp eq i64 %64, 196, !dbg !1808
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides, i64 2, !dbg !1808
  %67 = load i64, ptr %66, align 8, !dbg !1808, !tbaa !1858
  %68 = and i64 %67, 4294967295, !dbg !1808
  %69 = icmp eq i64 %68, 14, !dbg !1808
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p0.strides, i64 3, !dbg !1808
  %71 = load i64, ptr %70, align 8, !dbg !1808, !tbaa !1861
  %72 = and i64 %71, 4294967295, !dbg !1808
  %73 = icmp eq i64 %72, 1, !dbg !1808
  %74 = and i1 %69, %73, !dbg !1808
  %75 = and i1 %65, %74, !dbg !1808
  br i1 %75, label %if_end, label %assert_fail30, !dbg !1808, !prof !18

if_end:                                           ; preds = %if_then, %assert_end29
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1808
  %77 = load i64, ptr %76, align 8, !dbg !1808
  %78 = icmp eq i64 %77, 0, !dbg !1808
  br i1 %78, label %assert_end33, label %assert_fail32, !dbg !1808, !prof !18

assert_fail30:                                    ; preds = %if_then
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %79(ptr nonnull @.str.517), !dbg !1808
  br label %common.ret

assert_fail32:                                    ; preds = %if_end
  %80 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %80(ptr nonnull @.str.518), !dbg !1808
  br label %common.ret

assert_end33:                                     ; preds = %if_end
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1808
  %82 = load i32, ptr %81, align 4, !dbg !1808
  %83 = icmp eq i32 %82, 2, !dbg !1808
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !1808, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %84(ptr nonnull @.str.519), !dbg !1808
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1808
  %86 = load i32, ptr %85, align 4, !dbg !1808
  %87 = icmp eq i32 %86, 4, !dbg !1808
  br i1 %87, label %assert_end39, label %assert_fail36, !dbg !1808, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %88(ptr nonnull @.str.520), !dbg !1808
  br label %common.ret

assert_end39:                                     ; preds = %assert_end35
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1808
  %90 = load i16, ptr %89, align 2, !dbg !1808
  %91 = icmp eq i16 %90, 1, !dbg !1808
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1808
  %93 = load i8, ptr %92, align 1, !dbg !1808
  %94 = icmp eq i8 %93, 32, !dbg !1808
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1808
  %96 = load i8, ptr %95, align 1, !dbg !1808
  %97 = icmp eq i8 %96, 2, !dbg !1808
  %98 = and i1 %94, %97, !dbg !1808
  %99 = and i1 %91, %98, !dbg !1808
  br i1 %99, label %assert_end41, label %assert_fail40, !dbg !1808, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %100 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %100(ptr nonnull @.str.521), !dbg !1808
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %101 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape, align 8, !dbg !1808, !tbaa !1863
  %102 = and i64 %101, 4294967295, !dbg !1808
  %103 = icmp eq i64 %102, 1024, !dbg !1808
  br i1 %103, label %assert_end43, label %assert_fail42, !dbg !1808, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %104(ptr nonnull @.str.522), !dbg !1808
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape, i64 1, !dbg !1808
  %106 = load i64, ptr %105, align 8, !dbg !1808, !tbaa !1873
  %107 = and i64 %106, 4294967295, !dbg !1808
  %108 = icmp eq i64 %107, 256, !dbg !1808
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !1808, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %109(ptr nonnull @.str.523), !dbg !1808
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape, i64 2, !dbg !1808
  %111 = load i64, ptr %110, align 8, !dbg !1808, !tbaa !1875
  %112 = and i64 %111, 4294967295, !dbg !1808
  %113 = icmp eq i64 %112, 1, !dbg !1808
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !1808, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %114(ptr nonnull @.str.524), !dbg !1808
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.shape, i64 3, !dbg !1808
  %116 = load i64, ptr %115, align 8, !dbg !1808, !tbaa !1878
  %117 = and i64 %116, 4294967295, !dbg !1808
  %118 = icmp eq i64 %117, 1, !dbg !1808
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !1808, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %119(ptr nonnull @.str.525), !dbg !1808
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %.not145 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.strides, null, !dbg !1808
  br i1 %.not145, label %if_end51, label %if_then50, !dbg !1808, !prof !52

if_then50:                                        ; preds = %assert_end49
  %120 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.strides, align 8, !dbg !1808, !tbaa !1880
  %121 = and i64 %120, 4294967295, !dbg !1808
  %122 = icmp eq i64 %121, 256, !dbg !1808
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p1.strides, i64 1, !dbg !1808
  %124 = load i64, ptr %123, align 8, !dbg !1808, !tbaa !1890
  %125 = and i64 %124, 4294967295, !dbg !1808
  %126 = icmp eq i64 %125, 1, !dbg !1808
  %127 = and i1 %122, %126, !dbg !1808
  br i1 %127, label %if_end51, label %assert_fail52, !dbg !1808, !prof !18

if_end51:                                         ; preds = %if_then50, %assert_end49
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1808
  %129 = load i64, ptr %128, align 8, !dbg !1808
  %130 = icmp eq i64 %129, 0, !dbg !1808
  br i1 %130, label %assert_end55, label %assert_fail54, !dbg !1808, !prof !18

assert_fail52:                                    ; preds = %if_then50
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %131(ptr nonnull @.str.526), !dbg !1808
  br label %common.ret

assert_fail54:                                    ; preds = %if_end51
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %132(ptr nonnull @.str.527), !dbg !1808
  br label %common.ret

assert_end55:                                     ; preds = %if_end51
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1808
  %134 = load i32, ptr %133, align 4, !dbg !1808
  %135 = icmp eq i32 %134, 2, !dbg !1808
  br i1 %135, label %assert_end57, label %assert_fail56, !dbg !1808, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %136(ptr nonnull @.str.528), !dbg !1808
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1808
  %138 = load i32, ptr %137, align 4, !dbg !1808
  %139 = icmp eq i32 %dev_id, %138, !dbg !1808
  br i1 %139, label %assert_end59, label %assert_fail58, !dbg !1808, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %140(ptr nonnull @.str.529), !dbg !1808
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %141 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1808
  %142 = load i32, ptr %141, align 4, !dbg !1808
  %143 = icmp eq i32 %142, 4, !dbg !1808
  br i1 %143, label %assert_end63, label %assert_fail60, !dbg !1808, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %144(ptr nonnull @.str.530), !dbg !1808
  br label %common.ret

assert_end63:                                     ; preds = %assert_end59
  %145 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1808
  %146 = load i16, ptr %145, align 2, !dbg !1808
  %147 = icmp eq i16 %146, 1, !dbg !1808
  %148 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1808
  %149 = load i8, ptr %148, align 1, !dbg !1808
  %150 = icmp eq i8 %149, 32, !dbg !1808
  %151 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1808
  %152 = load i8, ptr %151, align 1, !dbg !1808
  %153 = icmp eq i8 %152, 2, !dbg !1808
  %154 = and i1 %150, %153, !dbg !1808
  %155 = and i1 %147, %154, !dbg !1808
  br i1 %155, label %assert_end65, label %assert_fail64, !dbg !1808, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %156(ptr nonnull @.str.531), !dbg !1808
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape, align 8, !dbg !1808, !tbaa !1892
  %158 = and i64 %157, 4294967295, !dbg !1808
  %159 = icmp eq i64 %158, 1, !dbg !1808
  br i1 %159, label %assert_end67, label %assert_fail66, !dbg !1808, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %160(ptr nonnull @.str.532), !dbg !1808
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape, i64 1, !dbg !1808
  %162 = load i64, ptr %161, align 8, !dbg !1808, !tbaa !1902
  %163 = and i64 %162, 4294967295, !dbg !1808
  %164 = icmp eq i64 %163, 1024, !dbg !1808
  br i1 %164, label %assert_end69, label %assert_fail68, !dbg !1808, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %165(ptr nonnull @.str.533), !dbg !1808
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape, i64 2, !dbg !1808
  %167 = load i64, ptr %166, align 8, !dbg !1808, !tbaa !1904
  %168 = and i64 %167, 4294967295, !dbg !1808
  %169 = icmp eq i64 %168, 1, !dbg !1808
  br i1 %169, label %assert_end71, label %assert_fail70, !dbg !1808, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %170(ptr nonnull @.str.534), !dbg !1808
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.shape, i64 3, !dbg !1808
  %172 = load i64, ptr %171, align 8, !dbg !1808, !tbaa !1907
  %173 = and i64 %172, 4294967295, !dbg !1808
  %174 = icmp eq i64 %173, 1, !dbg !1808
  br i1 %174, label %assert_end73, label %assert_fail72, !dbg !1808, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %175(ptr nonnull @.str.535), !dbg !1808
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not146 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.strides, null, !dbg !1808
  br i1 %.not146, label %if_end75, label %if_then74, !dbg !1808, !prof !52

if_then74:                                        ; preds = %assert_end73
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p2.strides, i64 1, !dbg !1808
  %177 = load i64, ptr %176, align 8, !dbg !1808, !tbaa !1909
  %178 = and i64 %177, 4294967295, !dbg !1808
  %179 = icmp eq i64 %178, 1, !dbg !1808
  br i1 %179, label %if_end75, label %assert_fail76, !dbg !1808, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1808
  %181 = load i64, ptr %180, align 8, !dbg !1808
  %182 = icmp eq i64 %181, 0, !dbg !1808
  br i1 %182, label %assert_end79, label %assert_fail78, !dbg !1808, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %183(ptr nonnull @.str.536), !dbg !1808
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %184(ptr nonnull @.str.537), !dbg !1808
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1808
  %186 = load i32, ptr %185, align 4, !dbg !1808
  %187 = icmp eq i32 %186, 2, !dbg !1808
  br i1 %187, label %assert_end81, label %assert_fail80, !dbg !1808, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %188(ptr nonnull @.str.538), !dbg !1808
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %189 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1808
  %190 = load i32, ptr %189, align 4, !dbg !1808
  %191 = icmp eq i32 %dev_id, %190, !dbg !1808
  br i1 %191, label %assert_end83, label %assert_fail82, !dbg !1808, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %192(ptr nonnull @.str.539), !dbg !1808
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %193 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1808
  %194 = load i32, ptr %193, align 4, !dbg !1808
  %195 = icmp eq i32 %194, 4, !dbg !1808
  br i1 %195, label %assert_end87, label %assert_fail84, !dbg !1808, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %196(ptr nonnull @.str.540), !dbg !1808
  br label %common.ret

assert_end87:                                     ; preds = %assert_end83
  %197 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1808
  %198 = load i16, ptr %197, align 2, !dbg !1808
  %199 = icmp eq i16 %198, 1, !dbg !1808
  %200 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1808
  %201 = load i8, ptr %200, align 1, !dbg !1808
  %202 = icmp eq i8 %201, 32, !dbg !1808
  %203 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1808
  %204 = load i8, ptr %203, align 1, !dbg !1808
  %205 = icmp eq i8 %204, 2, !dbg !1808
  %206 = and i1 %202, %205, !dbg !1808
  %207 = and i1 %199, %206, !dbg !1808
  br i1 %207, label %assert_end89, label %assert_fail88, !dbg !1808, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %208(ptr nonnull @.str.541), !dbg !1808
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %209 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape, align 8, !dbg !1808, !tbaa !1919
  %210 = and i64 %209, 4294967295, !dbg !1808
  %211 = icmp eq i64 %210, 1, !dbg !1808
  br i1 %211, label %assert_end91, label %assert_fail90, !dbg !1808, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %212(ptr nonnull @.str.542), !dbg !1808
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape, i64 1, !dbg !1808
  %214 = load i64, ptr %213, align 8, !dbg !1808, !tbaa !1929
  %215 = and i64 %214, 4294967295, !dbg !1808
  %216 = icmp eq i64 %215, 1024, !dbg !1808
  br i1 %216, label %assert_end93, label %assert_fail92, !dbg !1808, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %217(ptr nonnull @.str.543), !dbg !1808
  br label %common.ret

assert_end93:                                     ; preds = %assert_end91
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape, i64 2, !dbg !1808
  %219 = load i64, ptr %218, align 8, !dbg !1808, !tbaa !1931
  %220 = and i64 %219, 4294967295, !dbg !1808
  %221 = icmp eq i64 %220, 14, !dbg !1808
  br i1 %221, label %assert_end95, label %assert_fail94, !dbg !1808, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %222(ptr nonnull @.str.544), !dbg !1808
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.shape, i64 3, !dbg !1808
  %224 = load i64, ptr %223, align 8, !dbg !1808, !tbaa !1934
  %225 = and i64 %224, 4294967295, !dbg !1808
  %226 = icmp eq i64 %225, 14, !dbg !1808
  br i1 %226, label %assert_end97, label %assert_fail96, !dbg !1808, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %227(ptr nonnull @.str.545), !dbg !1808
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %.not147 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides, null, !dbg !1808
  br i1 %.not147, label %if_end99, label %if_then98, !dbg !1808, !prof !52

if_then98:                                        ; preds = %assert_end97
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides, i64 1, !dbg !1808
  %229 = load i64, ptr %228, align 8, !dbg !1808, !tbaa !1936
  %230 = and i64 %229, 4294967295, !dbg !1808
  %231 = icmp eq i64 %230, 196, !dbg !1808
  %232 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides, i64 2, !dbg !1808
  %233 = load i64, ptr %232, align 8, !dbg !1808, !tbaa !1946
  %234 = and i64 %233, 4294967295, !dbg !1808
  %235 = icmp eq i64 %234, 14, !dbg !1808
  %236 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.p3.strides, i64 3, !dbg !1808
  %237 = load i64, ptr %236, align 8, !dbg !1808, !tbaa !1949
  %238 = and i64 %237, 4294967295, !dbg !1808
  %239 = icmp eq i64 %238, 1, !dbg !1808
  %240 = and i1 %235, %239, !dbg !1808
  %241 = and i1 %231, %240, !dbg !1808
  br i1 %241, label %if_end99, label %assert_fail100, !dbg !1808, !prof !18

if_end99:                                         ; preds = %if_then98, %assert_end97
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1808
  %243 = load i64, ptr %242, align 8, !dbg !1808
  %244 = icmp eq i64 %243, 0, !dbg !1808
  br i1 %244, label %assert_end103, label %assert_fail102, !dbg !1808, !prof !18

assert_fail100:                                   ; preds = %if_then98
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %245(ptr nonnull @.str.546), !dbg !1808
  br label %common.ret

assert_fail102:                                   ; preds = %if_end99
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %246(ptr nonnull @.str.547), !dbg !1808
  br label %common.ret

assert_end103:                                    ; preds = %if_end99
  %247 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1808
  %248 = load i32, ptr %247, align 4, !dbg !1808
  %249 = icmp eq i32 %248, 2, !dbg !1808
  br i1 %249, label %assert_end105, label %assert_fail104, !dbg !1808, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %250(ptr nonnull @.str.548), !dbg !1808
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %251 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1808
  %252 = load i32, ptr %251, align 4, !dbg !1808
  %253 = icmp eq i32 %dev_id, %252, !dbg !1808
  br i1 %253, label %assert_end107, label %assert_fail106, !dbg !1808, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %254 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %254(ptr nonnull @.str.549), !dbg !1808
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %255 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !1808
  %256 = load i32, ptr %255, align 4, !dbg !1808
  %257 = icmp eq i32 %256, 4, !dbg !1808
  br i1 %257, label %assert_end111, label %assert_fail108, !dbg !1808, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %258 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %258(ptr nonnull @.str.550), !dbg !1808
  br label %common.ret

assert_end111:                                    ; preds = %assert_end107
  %259 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !1808
  %260 = load i16, ptr %259, align 2, !dbg !1808
  %261 = icmp eq i16 %260, 1, !dbg !1808
  %262 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !1808
  %263 = load i8, ptr %262, align 1, !dbg !1808
  %264 = icmp eq i8 %263, 32, !dbg !1808
  %265 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !1808
  %266 = load i8, ptr %265, align 1, !dbg !1808
  %267 = icmp eq i8 %266, 2, !dbg !1808
  %268 = and i1 %264, %267, !dbg !1808
  %269 = and i1 %261, %268, !dbg !1808
  br i1 %269, label %assert_end113, label %assert_fail112, !dbg !1808, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %270(ptr nonnull @.str.551), !dbg !1808
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %271 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape, align 8, !dbg !1808, !tbaa !1951
  %272 = and i64 %271, 4294967295, !dbg !1808
  %273 = icmp eq i64 %272, 1, !dbg !1808
  br i1 %273, label %assert_end115, label %assert_fail114, !dbg !1808, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %274(ptr nonnull @.str.552), !dbg !1808
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape, i64 1, !dbg !1808
  %276 = load i64, ptr %275, align 8, !dbg !1808, !tbaa !1961
  %277 = and i64 %276, 4294967295, !dbg !1808
  %278 = icmp eq i64 %277, 1024, !dbg !1808
  br i1 %278, label %assert_end117, label %assert_fail116, !dbg !1808, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %279(ptr nonnull @.str.553), !dbg !1808
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape, i64 2, !dbg !1808
  %281 = load i64, ptr %280, align 8, !dbg !1808, !tbaa !1963
  %282 = and i64 %281, 4294967295, !dbg !1808
  %283 = icmp eq i64 %282, 14, !dbg !1808
  br i1 %283, label %assert_end119, label %assert_fail118, !dbg !1808, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %284(ptr nonnull @.str.554), !dbg !1808
  br label %common.ret

assert_end119:                                    ; preds = %assert_end117
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.shape, i64 3, !dbg !1808
  %286 = load i64, ptr %285, align 8, !dbg !1808, !tbaa !1966
  %287 = and i64 %286, 4294967295, !dbg !1808
  %288 = icmp eq i64 %287, 14, !dbg !1808
  br i1 %288, label %assert_end121, label %assert_fail120, !dbg !1808, !prof !18

assert_fail120:                                   ; preds = %assert_end119
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %289(ptr nonnull @.str.555), !dbg !1808
  br label %common.ret

assert_end121:                                    ; preds = %assert_end119
  %.not148 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides, null, !dbg !1808
  br i1 %.not148, label %if_end123, label %if_then122, !dbg !1808, !prof !52

if_then122:                                       ; preds = %assert_end121
  %290 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides, i64 1, !dbg !1808
  %291 = load i64, ptr %290, align 8, !dbg !1808, !tbaa !1968
  %292 = and i64 %291, 4294967295, !dbg !1808
  %293 = icmp eq i64 %292, 196, !dbg !1808
  %294 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides, i64 2, !dbg !1808
  %295 = load i64, ptr %294, align 8, !dbg !1808, !tbaa !1978
  %296 = and i64 %295, 4294967295, !dbg !1808
  %297 = icmp eq i64 %296, 14, !dbg !1808
  %298 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2.T_relu.strides, i64 3, !dbg !1808
  %299 = load i64, ptr %298, align 8, !dbg !1808, !tbaa !1981
  %300 = and i64 %299, 4294967295, !dbg !1808
  %301 = icmp eq i64 %300, 1, !dbg !1808
  %302 = and i1 %297, %301, !dbg !1808
  %303 = and i1 %293, %302, !dbg !1808
  br i1 %303, label %if_end123, label %assert_fail124, !dbg !1808, !prof !18

if_end123:                                        ; preds = %if_then122, %assert_end121
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !1808
  %305 = load i64, ptr %304, align 8, !dbg !1808
  %306 = icmp eq i64 %305, 0, !dbg !1808
  br i1 %306, label %assert_end127, label %assert_fail126, !dbg !1808, !prof !18

assert_fail124:                                   ; preds = %if_then122
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %307(ptr nonnull @.str.556), !dbg !1808
  br label %common.ret

assert_fail126:                                   ; preds = %if_end123
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %308(ptr nonnull @.str.557), !dbg !1808
  br label %common.ret

assert_end127:                                    ; preds = %if_end123
  %309 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !1808
  %310 = load i32, ptr %309, align 4, !dbg !1808
  %311 = icmp eq i32 %310, 2, !dbg !1808
  br i1 %311, label %assert_end129, label %assert_fail128, !dbg !1808, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %312 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %312(ptr nonnull @.str.558), !dbg !1808
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %313 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !1808
  %314 = load i32, ptr %313, align 4, !dbg !1808
  %315 = icmp eq i32 %dev_id, %314, !dbg !1808
  br i1 %315, label %assert_end131, label %assert_fail130, !dbg !1808, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %316 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1808, !tbaa !19
  tail call void %316(ptr nonnull @.str.559), !dbg !1808
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  store i64 2, ptr %stack_value143, align 8, !dbg !1808
  store i32 0, ptr %stack_tcode144, align 4, !dbg !1808, !tbaa !1983
  %317 = sext i32 %dev_id to i64, !dbg !1808
  %318 = getelementptr inbounds i64, ptr %stack_value143, i64 1, !dbg !1808
  store i64 %317, ptr %318, align 8, !dbg !1808
  %319 = getelementptr inbounds i32, ptr %stack_tcode144, i64 1, !dbg !1808
  store i32 0, ptr %319, align 4, !dbg !1808, !tbaa !1994
  %320 = getelementptr inbounds %0, ptr %stack_value143, i64 2, !dbg !1808
  %321 = getelementptr inbounds i32, ptr %stack_tcode144, i64 2, !dbg !1808
  %322 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1808, !tbaa !19
  %323 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1808
  %.not149 = icmp eq ptr %323, null, !dbg !1808
  br i1 %.not149, label %handle_init, label %handle_init_end, !dbg !1808, !prof !52

handle_init:                                      ; preds = %assert_end131
  %324 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1808, !tbaa !19
  %325 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1808, !tbaa !19
  %326 = call i32 %325(ptr %324, ptr nonnull @.str.22, ptr nonnull %0), !dbg !1808
  %327 = icmp eq i32 %326, 0, !dbg !1808
  br i1 %327, label %call_end, label %common.ret, !dbg !1808, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end131
  %328 = phi ptr [ %323, %assert_end131 ], [ %331, %call_end ], !dbg !1808
  %329 = call i32 %322(ptr %328, ptr nonnull %stack_value143, ptr nonnull %stack_tcode144, i32 2, ptr nonnull %320, ptr nonnull %321), !dbg !1808
  %330 = icmp eq i32 %329, 0, !dbg !1808
  br i1 %330, label %call_end133, label %common.ret, !dbg !1808, !prof !18

call_end:                                         ; preds = %handle_init
  %331 = load ptr, ptr %0, align 8, !dbg !1808
  store ptr %331, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1808
  br label %handle_init_end, !dbg !1808

call_end133:                                      ; preds = %handle_init_end
  %332 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_compute_(ptr nonnull %stack_value143, ptr %T_relu134, ptr nonnull %stack_tcode144, ptr %p0135, ptr %p1136, ptr %p2137, ptr %p3138), !dbg !1808
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1996 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1998, metadata !DIExpression()), !dbg !2004
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1999, metadata !DIExpression()), !dbg !2004
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2000, metadata !DIExpression()), !dbg !2004
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2001, metadata !DIExpression()), !dbg !2004
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2002, metadata !DIExpression()), !dbg !2004
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2003, metadata !DIExpression()), !dbg !2004
  %0 = alloca ptr, align 8, !dbg !2004
  %stack_value143 = alloca [18 x %0], align 8, !dbg !2004
  %stack_tcode144 = alloca [18 x i32], align 4, !dbg !2004
  %1 = icmp eq i32 %num_args, 5, !dbg !2004
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2004, !prof !18

common.ret:                                       ; preds = %call_end133, %handle_init_end, %handle_init, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail120, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail108, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail96, %assert_fail94, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail84, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail120 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ %326, %handle_init ], [ %329, %handle_init_end ], [ %332, %call_end133 ]
  ret i32 %common.ret.op, !dbg !2004

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %2(ptr nonnull @.str.561), !dbg !2004
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2004, !tbaa !2005
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2004
  %p1.code = load i32, ptr %3, align 4, !dbg !2004, !tbaa !2016
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2004
  %p2.code = load i32, ptr %4, align 4, !dbg !2004, !tbaa !2018
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2004
  %p3.code = load i32, ptr %5, align 4, !dbg !2004, !tbaa !2021
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !2004
  %T_relu.code = load i32, ptr %6, align 4, !dbg !2004, !tbaa !2023
  %p0 = load ptr, ptr %args, align 8, !dbg !2004
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2004
  %p1 = load ptr, ptr %7, align 8, !dbg !2004
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2004
  %p2 = load ptr, ptr %8, align 8, !dbg !2004
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2004
  %p3 = load ptr, ptr %9, align 8, !dbg !2004
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !2004
  %T_relu = load ptr, ptr %10, align 8, !dbg !2004
  %p0135 = load ptr, ptr %p0, align 8, !dbg !2004
  call void @llvm.assume(i1 true) [ "align"(ptr %p0135, i64 64) ], !dbg !2004
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape = load ptr, ptr %11, align 8, !dbg !2004
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides = load ptr, ptr %12, align 8, !dbg !2004
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2004
  %dev_id = load i32, ptr %13, align 4, !dbg !2004
  %p1136 = load ptr, ptr %p1, align 8, !dbg !2004
  call void @llvm.assume(i1 true) [ "align"(ptr %p1136, i64 64) ], !dbg !2004
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape = load ptr, ptr %14, align 8, !dbg !2004
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.strides = load ptr, ptr %15, align 8, !dbg !2004
  %p2137 = load ptr, ptr %p2, align 8, !dbg !2004
  call void @llvm.assume(i1 true) [ "align"(ptr %p2137, i64 64) ], !dbg !2004
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape = load ptr, ptr %16, align 8, !dbg !2004
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.strides = load ptr, ptr %17, align 8, !dbg !2004
  %p3138 = load ptr, ptr %p3, align 8, !dbg !2004
  call void @llvm.assume(i1 true) [ "align"(ptr %p3138, i64 64) ], !dbg !2004
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape = load ptr, ptr %18, align 8, !dbg !2004
  %19 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides = load ptr, ptr %19, align 8, !dbg !2004
  %T_relu134 = load ptr, ptr %T_relu, align 8, !dbg !2004
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu134, i64 64) ], !dbg !2004
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape = load ptr, ptr %20, align 8, !dbg !2004
  %21 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2004
  %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides = load ptr, ptr %21, align 8, !dbg !2004
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !2004

assert_fail6:                                     ; preds = %assert_end
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %22(ptr nonnull @.str.562), !dbg !2004
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !2004

assert_fail8:                                     ; preds = %assert_end7
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %23(ptr nonnull @.str.563), !dbg !2004
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !2004

assert_fail10:                                    ; preds = %assert_end9
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %24(ptr nonnull @.str.564), !dbg !2004
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !2004

assert_fail12:                                    ; preds = %assert_end11
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %25(ptr nonnull @.str.565), !dbg !2004
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !2004

assert_fail14:                                    ; preds = %assert_end13
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %26(ptr nonnull @.str.566), !dbg !2004
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2004
  %28 = load i32, ptr %27, align 4, !dbg !2004
  %29 = icmp eq i32 %28, 4, !dbg !2004
  br i1 %29, label %assert_end19, label %assert_fail16, !dbg !2004, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %30(ptr nonnull @.str.567), !dbg !2004
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2004
  %32 = load i16, ptr %31, align 2, !dbg !2004
  %33 = icmp eq i16 %32, 1, !dbg !2004
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2004
  %35 = load i8, ptr %34, align 1, !dbg !2004
  %36 = icmp eq i8 %35, 32, !dbg !2004
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2004
  %38 = load i8, ptr %37, align 1, !dbg !2004
  %39 = icmp eq i8 %38, 2, !dbg !2004
  %40 = and i1 %36, %39, !dbg !2004
  %41 = and i1 %33, %40, !dbg !2004
  br i1 %41, label %assert_end21, label %assert_fail20, !dbg !2004, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %42(ptr nonnull @.str.568), !dbg !2004
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %43 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape, align 8, !dbg !2004, !tbaa !2027
  %44 = and i64 %43, 4294967295, !dbg !2004
  %45 = icmp eq i64 %44, 1, !dbg !2004
  br i1 %45, label %assert_end23, label %assert_fail22, !dbg !2004, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %46(ptr nonnull @.str.569), !dbg !2004
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape, i64 1, !dbg !2004
  %48 = load i64, ptr %47, align 8, !dbg !2004, !tbaa !2037
  %49 = and i64 %48, 4294967295, !dbg !2004
  %50 = icmp eq i64 %49, 512, !dbg !2004
  br i1 %50, label %assert_end25, label %assert_fail24, !dbg !2004, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %51(ptr nonnull @.str.570), !dbg !2004
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape, i64 2, !dbg !2004
  %53 = load i64, ptr %52, align 8, !dbg !2004, !tbaa !2039
  %54 = and i64 %53, 4294967295, !dbg !2004
  %55 = icmp eq i64 %54, 7, !dbg !2004
  br i1 %55, label %assert_end27, label %assert_fail26, !dbg !2004, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %56(ptr nonnull @.str.571), !dbg !2004
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.shape, i64 3, !dbg !2004
  %58 = load i64, ptr %57, align 8, !dbg !2004, !tbaa !2042
  %59 = and i64 %58, 4294967295, !dbg !2004
  %60 = icmp eq i64 %59, 7, !dbg !2004
  br i1 %60, label %assert_end29, label %assert_fail28, !dbg !2004, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %61(ptr nonnull @.str.572), !dbg !2004
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides, null, !dbg !2004
  br i1 %.not, label %if_end, label %if_then, !dbg !2004, !prof !52

if_then:                                          ; preds = %assert_end29
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides, i64 1, !dbg !2004
  %63 = load i64, ptr %62, align 8, !dbg !2004, !tbaa !2044
  %64 = and i64 %63, 4294967295, !dbg !2004
  %65 = icmp eq i64 %64, 49, !dbg !2004
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides, i64 2, !dbg !2004
  %67 = load i64, ptr %66, align 8, !dbg !2004, !tbaa !2054
  %68 = and i64 %67, 4294967295, !dbg !2004
  %69 = icmp eq i64 %68, 7, !dbg !2004
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p0.strides, i64 3, !dbg !2004
  %71 = load i64, ptr %70, align 8, !dbg !2004, !tbaa !2057
  %72 = and i64 %71, 4294967295, !dbg !2004
  %73 = icmp eq i64 %72, 1, !dbg !2004
  %74 = and i1 %69, %73, !dbg !2004
  %75 = and i1 %65, %74, !dbg !2004
  br i1 %75, label %if_end, label %assert_fail30, !dbg !2004, !prof !18

if_end:                                           ; preds = %if_then, %assert_end29
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2004
  %77 = load i64, ptr %76, align 8, !dbg !2004
  %78 = icmp eq i64 %77, 0, !dbg !2004
  br i1 %78, label %assert_end33, label %assert_fail32, !dbg !2004, !prof !18

assert_fail30:                                    ; preds = %if_then
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %79(ptr nonnull @.str.573), !dbg !2004
  br label %common.ret

assert_fail32:                                    ; preds = %if_end
  %80 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %80(ptr nonnull @.str.574), !dbg !2004
  br label %common.ret

assert_end33:                                     ; preds = %if_end
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2004
  %82 = load i32, ptr %81, align 4, !dbg !2004
  %83 = icmp eq i32 %82, 2, !dbg !2004
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !2004, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %84(ptr nonnull @.str.575), !dbg !2004
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2004
  %86 = load i32, ptr %85, align 4, !dbg !2004
  %87 = icmp eq i32 %86, 4, !dbg !2004
  br i1 %87, label %assert_end39, label %assert_fail36, !dbg !2004, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %88(ptr nonnull @.str.576), !dbg !2004
  br label %common.ret

assert_end39:                                     ; preds = %assert_end35
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2004
  %90 = load i16, ptr %89, align 2, !dbg !2004
  %91 = icmp eq i16 %90, 1, !dbg !2004
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2004
  %93 = load i8, ptr %92, align 1, !dbg !2004
  %94 = icmp eq i8 %93, 32, !dbg !2004
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2004
  %96 = load i8, ptr %95, align 1, !dbg !2004
  %97 = icmp eq i8 %96, 2, !dbg !2004
  %98 = and i1 %94, %97, !dbg !2004
  %99 = and i1 %91, %98, !dbg !2004
  br i1 %99, label %assert_end41, label %assert_fail40, !dbg !2004, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %100 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %100(ptr nonnull @.str.577), !dbg !2004
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %101 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape, align 8, !dbg !2004, !tbaa !2059
  %102 = and i64 %101, 4294967295, !dbg !2004
  %103 = icmp eq i64 %102, 2048, !dbg !2004
  br i1 %103, label %assert_end43, label %assert_fail42, !dbg !2004, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %104(ptr nonnull @.str.578), !dbg !2004
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape, i64 1, !dbg !2004
  %106 = load i64, ptr %105, align 8, !dbg !2004, !tbaa !2069
  %107 = and i64 %106, 4294967295, !dbg !2004
  %108 = icmp eq i64 %107, 512, !dbg !2004
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !2004, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %109(ptr nonnull @.str.579), !dbg !2004
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape, i64 2, !dbg !2004
  %111 = load i64, ptr %110, align 8, !dbg !2004, !tbaa !2071
  %112 = and i64 %111, 4294967295, !dbg !2004
  %113 = icmp eq i64 %112, 1, !dbg !2004
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !2004, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %114(ptr nonnull @.str.580), !dbg !2004
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.shape, i64 3, !dbg !2004
  %116 = load i64, ptr %115, align 8, !dbg !2004, !tbaa !2074
  %117 = and i64 %116, 4294967295, !dbg !2004
  %118 = icmp eq i64 %117, 1, !dbg !2004
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !2004, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %119(ptr nonnull @.str.581), !dbg !2004
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %.not145 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.strides, null, !dbg !2004
  br i1 %.not145, label %if_end51, label %if_then50, !dbg !2004, !prof !52

if_then50:                                        ; preds = %assert_end49
  %120 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.strides, align 8, !dbg !2004, !tbaa !2076
  %121 = and i64 %120, 4294967295, !dbg !2004
  %122 = icmp eq i64 %121, 512, !dbg !2004
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p1.strides, i64 1, !dbg !2004
  %124 = load i64, ptr %123, align 8, !dbg !2004, !tbaa !2086
  %125 = and i64 %124, 4294967295, !dbg !2004
  %126 = icmp eq i64 %125, 1, !dbg !2004
  %127 = and i1 %122, %126, !dbg !2004
  br i1 %127, label %if_end51, label %assert_fail52, !dbg !2004, !prof !18

if_end51:                                         ; preds = %if_then50, %assert_end49
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2004
  %129 = load i64, ptr %128, align 8, !dbg !2004
  %130 = icmp eq i64 %129, 0, !dbg !2004
  br i1 %130, label %assert_end55, label %assert_fail54, !dbg !2004, !prof !18

assert_fail52:                                    ; preds = %if_then50
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %131(ptr nonnull @.str.582), !dbg !2004
  br label %common.ret

assert_fail54:                                    ; preds = %if_end51
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %132(ptr nonnull @.str.583), !dbg !2004
  br label %common.ret

assert_end55:                                     ; preds = %if_end51
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2004
  %134 = load i32, ptr %133, align 4, !dbg !2004
  %135 = icmp eq i32 %134, 2, !dbg !2004
  br i1 %135, label %assert_end57, label %assert_fail56, !dbg !2004, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %136(ptr nonnull @.str.584), !dbg !2004
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2004
  %138 = load i32, ptr %137, align 4, !dbg !2004
  %139 = icmp eq i32 %dev_id, %138, !dbg !2004
  br i1 %139, label %assert_end59, label %assert_fail58, !dbg !2004, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %140(ptr nonnull @.str.585), !dbg !2004
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %141 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2004
  %142 = load i32, ptr %141, align 4, !dbg !2004
  %143 = icmp eq i32 %142, 4, !dbg !2004
  br i1 %143, label %assert_end63, label %assert_fail60, !dbg !2004, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %144(ptr nonnull @.str.586), !dbg !2004
  br label %common.ret

assert_end63:                                     ; preds = %assert_end59
  %145 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2004
  %146 = load i16, ptr %145, align 2, !dbg !2004
  %147 = icmp eq i16 %146, 1, !dbg !2004
  %148 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2004
  %149 = load i8, ptr %148, align 1, !dbg !2004
  %150 = icmp eq i8 %149, 32, !dbg !2004
  %151 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2004
  %152 = load i8, ptr %151, align 1, !dbg !2004
  %153 = icmp eq i8 %152, 2, !dbg !2004
  %154 = and i1 %150, %153, !dbg !2004
  %155 = and i1 %147, %154, !dbg !2004
  br i1 %155, label %assert_end65, label %assert_fail64, !dbg !2004, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %156(ptr nonnull @.str.587), !dbg !2004
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape, align 8, !dbg !2004, !tbaa !2088
  %158 = and i64 %157, 4294967295, !dbg !2004
  %159 = icmp eq i64 %158, 1, !dbg !2004
  br i1 %159, label %assert_end67, label %assert_fail66, !dbg !2004, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %160(ptr nonnull @.str.588), !dbg !2004
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape, i64 1, !dbg !2004
  %162 = load i64, ptr %161, align 8, !dbg !2004, !tbaa !2098
  %163 = and i64 %162, 4294967295, !dbg !2004
  %164 = icmp eq i64 %163, 2048, !dbg !2004
  br i1 %164, label %assert_end69, label %assert_fail68, !dbg !2004, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %165(ptr nonnull @.str.589), !dbg !2004
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape, i64 2, !dbg !2004
  %167 = load i64, ptr %166, align 8, !dbg !2004, !tbaa !2100
  %168 = and i64 %167, 4294967295, !dbg !2004
  %169 = icmp eq i64 %168, 1, !dbg !2004
  br i1 %169, label %assert_end71, label %assert_fail70, !dbg !2004, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %170(ptr nonnull @.str.590), !dbg !2004
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.shape, i64 3, !dbg !2004
  %172 = load i64, ptr %171, align 8, !dbg !2004, !tbaa !2103
  %173 = and i64 %172, 4294967295, !dbg !2004
  %174 = icmp eq i64 %173, 1, !dbg !2004
  br i1 %174, label %assert_end73, label %assert_fail72, !dbg !2004, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %175(ptr nonnull @.str.591), !dbg !2004
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not146 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.strides, null, !dbg !2004
  br i1 %.not146, label %if_end75, label %if_then74, !dbg !2004, !prof !52

if_then74:                                        ; preds = %assert_end73
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p2.strides, i64 1, !dbg !2004
  %177 = load i64, ptr %176, align 8, !dbg !2004, !tbaa !2105
  %178 = and i64 %177, 4294967295, !dbg !2004
  %179 = icmp eq i64 %178, 1, !dbg !2004
  br i1 %179, label %if_end75, label %assert_fail76, !dbg !2004, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2004
  %181 = load i64, ptr %180, align 8, !dbg !2004
  %182 = icmp eq i64 %181, 0, !dbg !2004
  br i1 %182, label %assert_end79, label %assert_fail78, !dbg !2004, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %183(ptr nonnull @.str.592), !dbg !2004
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %184(ptr nonnull @.str.593), !dbg !2004
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2004
  %186 = load i32, ptr %185, align 4, !dbg !2004
  %187 = icmp eq i32 %186, 2, !dbg !2004
  br i1 %187, label %assert_end81, label %assert_fail80, !dbg !2004, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %188(ptr nonnull @.str.594), !dbg !2004
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %189 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2004
  %190 = load i32, ptr %189, align 4, !dbg !2004
  %191 = icmp eq i32 %dev_id, %190, !dbg !2004
  br i1 %191, label %assert_end83, label %assert_fail82, !dbg !2004, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %192(ptr nonnull @.str.595), !dbg !2004
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %193 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !2004
  %194 = load i32, ptr %193, align 4, !dbg !2004
  %195 = icmp eq i32 %194, 4, !dbg !2004
  br i1 %195, label %assert_end87, label %assert_fail84, !dbg !2004, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %196(ptr nonnull @.str.596), !dbg !2004
  br label %common.ret

assert_end87:                                     ; preds = %assert_end83
  %197 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !2004
  %198 = load i16, ptr %197, align 2, !dbg !2004
  %199 = icmp eq i16 %198, 1, !dbg !2004
  %200 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !2004
  %201 = load i8, ptr %200, align 1, !dbg !2004
  %202 = icmp eq i8 %201, 32, !dbg !2004
  %203 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !2004
  %204 = load i8, ptr %203, align 1, !dbg !2004
  %205 = icmp eq i8 %204, 2, !dbg !2004
  %206 = and i1 %202, %205, !dbg !2004
  %207 = and i1 %199, %206, !dbg !2004
  br i1 %207, label %assert_end89, label %assert_fail88, !dbg !2004, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %208(ptr nonnull @.str.597), !dbg !2004
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %209 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape, align 8, !dbg !2004, !tbaa !2115
  %210 = and i64 %209, 4294967295, !dbg !2004
  %211 = icmp eq i64 %210, 1, !dbg !2004
  br i1 %211, label %assert_end91, label %assert_fail90, !dbg !2004, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %212(ptr nonnull @.str.598), !dbg !2004
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape, i64 1, !dbg !2004
  %214 = load i64, ptr %213, align 8, !dbg !2004, !tbaa !2125
  %215 = and i64 %214, 4294967295, !dbg !2004
  %216 = icmp eq i64 %215, 2048, !dbg !2004
  br i1 %216, label %assert_end93, label %assert_fail92, !dbg !2004, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %217(ptr nonnull @.str.599), !dbg !2004
  br label %common.ret

assert_end93:                                     ; preds = %assert_end91
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape, i64 2, !dbg !2004
  %219 = load i64, ptr %218, align 8, !dbg !2004, !tbaa !2127
  %220 = and i64 %219, 4294967295, !dbg !2004
  %221 = icmp eq i64 %220, 7, !dbg !2004
  br i1 %221, label %assert_end95, label %assert_fail94, !dbg !2004, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %222(ptr nonnull @.str.600), !dbg !2004
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.shape, i64 3, !dbg !2004
  %224 = load i64, ptr %223, align 8, !dbg !2004, !tbaa !2130
  %225 = and i64 %224, 4294967295, !dbg !2004
  %226 = icmp eq i64 %225, 7, !dbg !2004
  br i1 %226, label %assert_end97, label %assert_fail96, !dbg !2004, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %227(ptr nonnull @.str.601), !dbg !2004
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %.not147 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides, null, !dbg !2004
  br i1 %.not147, label %if_end99, label %if_then98, !dbg !2004, !prof !52

if_then98:                                        ; preds = %assert_end97
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides, i64 1, !dbg !2004
  %229 = load i64, ptr %228, align 8, !dbg !2004, !tbaa !2132
  %230 = and i64 %229, 4294967295, !dbg !2004
  %231 = icmp eq i64 %230, 49, !dbg !2004
  %232 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides, i64 2, !dbg !2004
  %233 = load i64, ptr %232, align 8, !dbg !2004, !tbaa !2142
  %234 = and i64 %233, 4294967295, !dbg !2004
  %235 = icmp eq i64 %234, 7, !dbg !2004
  %236 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.p3.strides, i64 3, !dbg !2004
  %237 = load i64, ptr %236, align 8, !dbg !2004, !tbaa !2145
  %238 = and i64 %237, 4294967295, !dbg !2004
  %239 = icmp eq i64 %238, 1, !dbg !2004
  %240 = and i1 %235, %239, !dbg !2004
  %241 = and i1 %231, %240, !dbg !2004
  br i1 %241, label %if_end99, label %assert_fail100, !dbg !2004, !prof !18

if_end99:                                         ; preds = %if_then98, %assert_end97
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !2004
  %243 = load i64, ptr %242, align 8, !dbg !2004
  %244 = icmp eq i64 %243, 0, !dbg !2004
  br i1 %244, label %assert_end103, label %assert_fail102, !dbg !2004, !prof !18

assert_fail100:                                   ; preds = %if_then98
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %245(ptr nonnull @.str.602), !dbg !2004
  br label %common.ret

assert_fail102:                                   ; preds = %if_end99
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %246(ptr nonnull @.str.603), !dbg !2004
  br label %common.ret

assert_end103:                                    ; preds = %if_end99
  %247 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !2004
  %248 = load i32, ptr %247, align 4, !dbg !2004
  %249 = icmp eq i32 %248, 2, !dbg !2004
  br i1 %249, label %assert_end105, label %assert_fail104, !dbg !2004, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %250(ptr nonnull @.str.604), !dbg !2004
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %251 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !2004
  %252 = load i32, ptr %251, align 4, !dbg !2004
  %253 = icmp eq i32 %dev_id, %252, !dbg !2004
  br i1 %253, label %assert_end107, label %assert_fail106, !dbg !2004, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %254 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %254(ptr nonnull @.str.605), !dbg !2004
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %255 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2004
  %256 = load i32, ptr %255, align 4, !dbg !2004
  %257 = icmp eq i32 %256, 4, !dbg !2004
  br i1 %257, label %assert_end111, label %assert_fail108, !dbg !2004, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %258 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %258(ptr nonnull @.str.606), !dbg !2004
  br label %common.ret

assert_end111:                                    ; preds = %assert_end107
  %259 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2004
  %260 = load i16, ptr %259, align 2, !dbg !2004
  %261 = icmp eq i16 %260, 1, !dbg !2004
  %262 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2004
  %263 = load i8, ptr %262, align 1, !dbg !2004
  %264 = icmp eq i8 %263, 32, !dbg !2004
  %265 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2004
  %266 = load i8, ptr %265, align 1, !dbg !2004
  %267 = icmp eq i8 %266, 2, !dbg !2004
  %268 = and i1 %264, %267, !dbg !2004
  %269 = and i1 %261, %268, !dbg !2004
  br i1 %269, label %assert_end113, label %assert_fail112, !dbg !2004, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %270(ptr nonnull @.str.607), !dbg !2004
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %271 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape, align 8, !dbg !2004, !tbaa !2147
  %272 = and i64 %271, 4294967295, !dbg !2004
  %273 = icmp eq i64 %272, 1, !dbg !2004
  br i1 %273, label %assert_end115, label %assert_fail114, !dbg !2004, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %274(ptr nonnull @.str.608), !dbg !2004
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape, i64 1, !dbg !2004
  %276 = load i64, ptr %275, align 8, !dbg !2004, !tbaa !2157
  %277 = and i64 %276, 4294967295, !dbg !2004
  %278 = icmp eq i64 %277, 2048, !dbg !2004
  br i1 %278, label %assert_end117, label %assert_fail116, !dbg !2004, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %279(ptr nonnull @.str.609), !dbg !2004
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape, i64 2, !dbg !2004
  %281 = load i64, ptr %280, align 8, !dbg !2004, !tbaa !2159
  %282 = and i64 %281, 4294967295, !dbg !2004
  %283 = icmp eq i64 %282, 7, !dbg !2004
  br i1 %283, label %assert_end119, label %assert_fail118, !dbg !2004, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %284(ptr nonnull @.str.610), !dbg !2004
  br label %common.ret

assert_end119:                                    ; preds = %assert_end117
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.shape, i64 3, !dbg !2004
  %286 = load i64, ptr %285, align 8, !dbg !2004, !tbaa !2162
  %287 = and i64 %286, 4294967295, !dbg !2004
  %288 = icmp eq i64 %287, 7, !dbg !2004
  br i1 %288, label %assert_end121, label %assert_fail120, !dbg !2004, !prof !18

assert_fail120:                                   ; preds = %assert_end119
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %289(ptr nonnull @.str.611), !dbg !2004
  br label %common.ret

assert_end121:                                    ; preds = %assert_end119
  %.not148 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides, null, !dbg !2004
  br i1 %.not148, label %if_end123, label %if_then122, !dbg !2004, !prof !52

if_then122:                                       ; preds = %assert_end121
  %290 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides, i64 1, !dbg !2004
  %291 = load i64, ptr %290, align 8, !dbg !2004, !tbaa !2164
  %292 = and i64 %291, 4294967295, !dbg !2004
  %293 = icmp eq i64 %292, 49, !dbg !2004
  %294 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides, i64 2, !dbg !2004
  %295 = load i64, ptr %294, align 8, !dbg !2004, !tbaa !2174
  %296 = and i64 %295, 4294967295, !dbg !2004
  %297 = icmp eq i64 %296, 7, !dbg !2004
  %298 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3.T_relu.strides, i64 3, !dbg !2004
  %299 = load i64, ptr %298, align 8, !dbg !2004, !tbaa !2177
  %300 = and i64 %299, 4294967295, !dbg !2004
  %301 = icmp eq i64 %300, 1, !dbg !2004
  %302 = and i1 %297, %301, !dbg !2004
  %303 = and i1 %293, %302, !dbg !2004
  br i1 %303, label %if_end123, label %assert_fail124, !dbg !2004, !prof !18

if_end123:                                        ; preds = %if_then122, %assert_end121
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2004
  %305 = load i64, ptr %304, align 8, !dbg !2004
  %306 = icmp eq i64 %305, 0, !dbg !2004
  br i1 %306, label %assert_end127, label %assert_fail126, !dbg !2004, !prof !18

assert_fail124:                                   ; preds = %if_then122
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %307(ptr nonnull @.str.612), !dbg !2004
  br label %common.ret

assert_fail126:                                   ; preds = %if_end123
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %308(ptr nonnull @.str.613), !dbg !2004
  br label %common.ret

assert_end127:                                    ; preds = %if_end123
  %309 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2004
  %310 = load i32, ptr %309, align 4, !dbg !2004
  %311 = icmp eq i32 %310, 2, !dbg !2004
  br i1 %311, label %assert_end129, label %assert_fail128, !dbg !2004, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %312 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %312(ptr nonnull @.str.614), !dbg !2004
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %313 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2004
  %314 = load i32, ptr %313, align 4, !dbg !2004
  %315 = icmp eq i32 %dev_id, %314, !dbg !2004
  br i1 %315, label %assert_end131, label %assert_fail130, !dbg !2004, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %316 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2004, !tbaa !19
  tail call void %316(ptr nonnull @.str.615), !dbg !2004
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  store i64 2, ptr %stack_value143, align 8, !dbg !2004
  store i32 0, ptr %stack_tcode144, align 4, !dbg !2004, !tbaa !2179
  %317 = sext i32 %dev_id to i64, !dbg !2004
  %318 = getelementptr inbounds i64, ptr %stack_value143, i64 1, !dbg !2004
  store i64 %317, ptr %318, align 8, !dbg !2004
  %319 = getelementptr inbounds i32, ptr %stack_tcode144, i64 1, !dbg !2004
  store i32 0, ptr %319, align 4, !dbg !2004, !tbaa !2190
  %320 = getelementptr inbounds %0, ptr %stack_value143, i64 2, !dbg !2004
  %321 = getelementptr inbounds i32, ptr %stack_tcode144, i64 2, !dbg !2004
  %322 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2004, !tbaa !19
  %323 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2004
  %.not149 = icmp eq ptr %323, null, !dbg !2004
  br i1 %.not149, label %handle_init, label %handle_init_end, !dbg !2004, !prof !52

handle_init:                                      ; preds = %assert_end131
  %324 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2004, !tbaa !19
  %325 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2004, !tbaa !19
  %326 = call i32 %325(ptr %324, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2004
  %327 = icmp eq i32 %326, 0, !dbg !2004
  br i1 %327, label %call_end, label %common.ret, !dbg !2004, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end131
  %328 = phi ptr [ %323, %assert_end131 ], [ %331, %call_end ], !dbg !2004
  %329 = call i32 %322(ptr %328, ptr nonnull %stack_value143, ptr nonnull %stack_tcode144, i32 2, ptr nonnull %320, ptr nonnull %321), !dbg !2004
  %330 = icmp eq i32 %329, 0, !dbg !2004
  br i1 %330, label %call_end133, label %common.ret, !dbg !2004, !prof !18

call_end:                                         ; preds = %handle_init
  %331 = load ptr, ptr %0, align 8, !dbg !2004
  store ptr %331, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2004
  br label %handle_init_end, !dbg !2004

call_end133:                                      ; preds = %handle_init_end
  %332 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_compute_(ptr nonnull %stack_value143, ptr %T_relu134, ptr nonnull %stack_tcode144, ptr %p0135, ptr %p1136, ptr %p2137, ptr %p3138), !dbg !2004
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2192 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2194, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2195, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2196, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2197, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2198, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2199, metadata !DIExpression()), !dbg !2200
  %0 = alloca ptr, align 8, !dbg !2200
  %stack_value115 = alloca [17 x %0], align 8, !dbg !2200
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !2200
  %1 = icmp eq i32 %num_args, 4, !dbg !2200
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2200, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2200

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %2(ptr nonnull @.str.617), !dbg !2200
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2200, !tbaa !2201
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2200
  %p1.code = load i32, ptr %3, align 4, !dbg !2200, !tbaa !2212
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2200
  %p2.code = load i32, ptr %4, align 4, !dbg !2200, !tbaa !2214
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2200
  %T_relu.code = load i32, ptr %5, align 4, !dbg !2200, !tbaa !2217
  %p0 = load ptr, ptr %args, align 8, !dbg !2200
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2200
  %p1 = load ptr, ptr %6, align 8, !dbg !2200
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2200
  %p2 = load ptr, ptr %7, align 8, !dbg !2200
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2200
  %T_relu = load ptr, ptr %8, align 8, !dbg !2200
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2200
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2200
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape = load ptr, ptr %9, align 8, !dbg !2200
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides = load ptr, ptr %10, align 8, !dbg !2200
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2200
  %dev_id = load i32, ptr %11, align 4, !dbg !2200
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2200
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2200
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape = load ptr, ptr %12, align 8, !dbg !2200
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides = load ptr, ptr %13, align 8, !dbg !2200
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2200
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2200
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape = load ptr, ptr %14, align 8, !dbg !2200
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.strides = load ptr, ptr %15, align 8, !dbg !2200
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !2200
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !2200
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape = load ptr, ptr %16, align 8, !dbg !2200
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2200
  %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides = load ptr, ptr %17, align 8, !dbg !2200
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2200

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %18(ptr nonnull @.str.618), !dbg !2200
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2200

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %19(ptr nonnull @.str.619), !dbg !2200
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2200

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %20(ptr nonnull @.str.620), !dbg !2200
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2200

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %21(ptr nonnull @.str.621), !dbg !2200
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2200
  %23 = load i32, ptr %22, align 4, !dbg !2200
  %24 = icmp eq i32 %23, 4, !dbg !2200
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2200, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %25(ptr nonnull @.str.622), !dbg !2200
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2200
  %27 = load i16, ptr %26, align 2, !dbg !2200
  %28 = icmp eq i16 %27, 1, !dbg !2200
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2200
  %30 = load i8, ptr %29, align 1, !dbg !2200
  %31 = icmp eq i8 %30, 32, !dbg !2200
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2200
  %33 = load i8, ptr %32, align 1, !dbg !2200
  %34 = icmp eq i8 %33, 2, !dbg !2200
  %35 = and i1 %31, %34, !dbg !2200
  %36 = and i1 %28, %35, !dbg !2200
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2200, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %37(ptr nonnull @.str.623), !dbg !2200
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape, align 8, !dbg !2200, !tbaa !2219
  %39 = and i64 %38, 4294967295, !dbg !2200
  %40 = icmp eq i64 %39, 1, !dbg !2200
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2200, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %41(ptr nonnull @.str.624), !dbg !2200
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape, i64 1, !dbg !2200
  %43 = load i64, ptr %42, align 8, !dbg !2200, !tbaa !2229
  %44 = and i64 %43, 4294967295, !dbg !2200
  %45 = icmp eq i64 %44, 3, !dbg !2200
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2200, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %46(ptr nonnull @.str.625), !dbg !2200
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape, i64 2, !dbg !2200
  %48 = load i64, ptr %47, align 8, !dbg !2200, !tbaa !2231
  %49 = and i64 %48, 4294967295, !dbg !2200
  %50 = icmp eq i64 %49, 224, !dbg !2200
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2200, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %51(ptr nonnull @.str.626), !dbg !2200
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.shape, i64 3, !dbg !2200
  %53 = load i64, ptr %52, align 8, !dbg !2200, !tbaa !2234
  %54 = and i64 %53, 4294967295, !dbg !2200
  %55 = icmp eq i64 %54, 224, !dbg !2200
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2200, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %56(ptr nonnull @.str.627), !dbg !2200
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides, null, !dbg !2200
  br i1 %.not, label %if_end, label %if_then, !dbg !2200, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides, i64 1, !dbg !2200
  %58 = load i64, ptr %57, align 8, !dbg !2200, !tbaa !2236
  %59 = and i64 %58, 4294967295, !dbg !2200
  %60 = icmp eq i64 %59, 50176, !dbg !2200
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides, i64 2, !dbg !2200
  %62 = load i64, ptr %61, align 8, !dbg !2200, !tbaa !2246
  %63 = and i64 %62, 4294967295, !dbg !2200
  %64 = icmp eq i64 %63, 224, !dbg !2200
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p0.strides, i64 3, !dbg !2200
  %66 = load i64, ptr %65, align 8, !dbg !2200, !tbaa !2249
  %67 = and i64 %66, 4294967295, !dbg !2200
  %68 = icmp eq i64 %67, 1, !dbg !2200
  %69 = and i1 %64, %68, !dbg !2200
  %70 = and i1 %60, %69, !dbg !2200
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2200, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2200
  %72 = load i64, ptr %71, align 8, !dbg !2200
  %73 = icmp eq i64 %72, 0, !dbg !2200
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2200, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %74(ptr nonnull @.str.628), !dbg !2200
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %75(ptr nonnull @.str.629), !dbg !2200
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2200
  %77 = load i32, ptr %76, align 4, !dbg !2200
  %78 = icmp eq i32 %77, 2, !dbg !2200
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2200, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %79(ptr nonnull @.str.630), !dbg !2200
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2200
  %81 = load i32, ptr %80, align 4, !dbg !2200
  %82 = icmp eq i32 %81, 4, !dbg !2200
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2200, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %83(ptr nonnull @.str.631), !dbg !2200
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2200
  %85 = load i16, ptr %84, align 2, !dbg !2200
  %86 = icmp eq i16 %85, 1, !dbg !2200
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2200
  %88 = load i8, ptr %87, align 1, !dbg !2200
  %89 = icmp eq i8 %88, 32, !dbg !2200
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2200
  %91 = load i8, ptr %90, align 1, !dbg !2200
  %92 = icmp eq i8 %91, 2, !dbg !2200
  %93 = and i1 %89, %92, !dbg !2200
  %94 = and i1 %86, %93, !dbg !2200
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2200, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %95(ptr nonnull @.str.632), !dbg !2200
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape, align 8, !dbg !2200, !tbaa !2251
  %97 = and i64 %96, 4294967295, !dbg !2200
  %98 = icmp eq i64 %97, 64, !dbg !2200
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2200, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %99(ptr nonnull @.str.633), !dbg !2200
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape, i64 1, !dbg !2200
  %101 = load i64, ptr %100, align 8, !dbg !2200, !tbaa !2261
  %102 = and i64 %101, 4294967295, !dbg !2200
  %103 = icmp eq i64 %102, 3, !dbg !2200
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2200, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %104(ptr nonnull @.str.634), !dbg !2200
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape, i64 2, !dbg !2200
  %106 = load i64, ptr %105, align 8, !dbg !2200, !tbaa !2263
  %107 = and i64 %106, 4294967295, !dbg !2200
  %108 = icmp eq i64 %107, 7, !dbg !2200
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2200, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %109(ptr nonnull @.str.635), !dbg !2200
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.shape, i64 3, !dbg !2200
  %111 = load i64, ptr %110, align 8, !dbg !2200, !tbaa !2266
  %112 = and i64 %111, 4294967295, !dbg !2200
  %113 = icmp eq i64 %112, 7, !dbg !2200
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2200, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %114(ptr nonnull @.str.636), !dbg !2200
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides, null, !dbg !2200
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2200, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides, align 8, !dbg !2200, !tbaa !2268
  %116 = and i64 %115, 4294967295, !dbg !2200
  %117 = icmp eq i64 %116, 147, !dbg !2200
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides, i64 1, !dbg !2200
  %119 = load i64, ptr %118, align 8, !dbg !2200, !tbaa !2278
  %120 = and i64 %119, 4294967295, !dbg !2200
  %121 = icmp eq i64 %120, 49, !dbg !2200
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides, i64 2, !dbg !2200
  %123 = load i64, ptr %122, align 8, !dbg !2200, !tbaa !2280
  %124 = and i64 %123, 4294967295, !dbg !2200
  %125 = icmp eq i64 %124, 7, !dbg !2200
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p1.strides, i64 3, !dbg !2200
  %127 = load i64, ptr %126, align 8, !dbg !2200, !tbaa !2283
  %128 = and i64 %127, 4294967295, !dbg !2200
  %129 = icmp eq i64 %128, 1, !dbg !2200
  %130 = and i1 %125, %129, !dbg !2200
  %131 = and i1 %121, %130, !dbg !2200
  %132 = and i1 %117, %131, !dbg !2200
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !2200, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2200
  %134 = load i64, ptr %133, align 8, !dbg !2200
  %135 = icmp eq i64 %134, 0, !dbg !2200
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !2200, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %136(ptr nonnull @.str.637), !dbg !2200
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %137(ptr nonnull @.str.638), !dbg !2200
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2200
  %139 = load i32, ptr %138, align 4, !dbg !2200
  %140 = icmp eq i32 %139, 2, !dbg !2200
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !2200, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %141(ptr nonnull @.str.639), !dbg !2200
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2200
  %143 = load i32, ptr %142, align 4, !dbg !2200
  %144 = icmp eq i32 %dev_id, %143, !dbg !2200
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !2200, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %145(ptr nonnull @.str.640), !dbg !2200
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2200
  %147 = load i32, ptr %146, align 4, !dbg !2200
  %148 = icmp eq i32 %147, 4, !dbg !2200
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !2200, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %149(ptr nonnull @.str.641), !dbg !2200
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2200
  %151 = load i16, ptr %150, align 2, !dbg !2200
  %152 = icmp eq i16 %151, 1, !dbg !2200
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2200
  %154 = load i8, ptr %153, align 1, !dbg !2200
  %155 = icmp eq i8 %154, 32, !dbg !2200
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2200
  %157 = load i8, ptr %156, align 1, !dbg !2200
  %158 = icmp eq i8 %157, 2, !dbg !2200
  %159 = and i1 %155, %158, !dbg !2200
  %160 = and i1 %152, %159, !dbg !2200
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !2200, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %161(ptr nonnull @.str.642), !dbg !2200
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape, align 8, !dbg !2200, !tbaa !2285
  %163 = and i64 %162, 4294967295, !dbg !2200
  %164 = icmp eq i64 %163, 1, !dbg !2200
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !2200, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %165(ptr nonnull @.str.643), !dbg !2200
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape, i64 1, !dbg !2200
  %167 = load i64, ptr %166, align 8, !dbg !2200, !tbaa !2295
  %168 = and i64 %167, 4294967295, !dbg !2200
  %169 = icmp eq i64 %168, 64, !dbg !2200
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !2200, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %170(ptr nonnull @.str.644), !dbg !2200
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape, i64 2, !dbg !2200
  %172 = load i64, ptr %171, align 8, !dbg !2200, !tbaa !2297
  %173 = and i64 %172, 4294967295, !dbg !2200
  %174 = icmp eq i64 %173, 1, !dbg !2200
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !2200, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %175(ptr nonnull @.str.645), !dbg !2200
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.shape, i64 3, !dbg !2200
  %177 = load i64, ptr %176, align 8, !dbg !2200, !tbaa !2300
  %178 = and i64 %177, 4294967295, !dbg !2200
  %179 = icmp eq i64 %178, 1, !dbg !2200
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !2200, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %180(ptr nonnull @.str.646), !dbg !2200
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.strides, null, !dbg !2200
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2200, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.p2.strides, i64 1, !dbg !2200
  %182 = load i64, ptr %181, align 8, !dbg !2200, !tbaa !2302
  %183 = and i64 %182, 4294967295, !dbg !2200
  %184 = icmp eq i64 %183, 1, !dbg !2200
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !2200, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2200
  %186 = load i64, ptr %185, align 8, !dbg !2200
  %187 = icmp eq i64 %186, 0, !dbg !2200
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !2200, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %188(ptr nonnull @.str.647), !dbg !2200
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %189(ptr nonnull @.str.648), !dbg !2200
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2200
  %191 = load i32, ptr %190, align 4, !dbg !2200
  %192 = icmp eq i32 %191, 2, !dbg !2200
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !2200, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %193(ptr nonnull @.str.649), !dbg !2200
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2200
  %195 = load i32, ptr %194, align 4, !dbg !2200
  %196 = icmp eq i32 %dev_id, %195, !dbg !2200
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !2200, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %197(ptr nonnull @.str.650), !dbg !2200
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2200
  %199 = load i32, ptr %198, align 4, !dbg !2200
  %200 = icmp eq i32 %199, 4, !dbg !2200
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !2200, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %201(ptr nonnull @.str.651), !dbg !2200
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2200
  %203 = load i16, ptr %202, align 2, !dbg !2200
  %204 = icmp eq i16 %203, 1, !dbg !2200
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2200
  %206 = load i8, ptr %205, align 1, !dbg !2200
  %207 = icmp eq i8 %206, 32, !dbg !2200
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2200
  %209 = load i8, ptr %208, align 1, !dbg !2200
  %210 = icmp eq i8 %209, 2, !dbg !2200
  %211 = and i1 %207, %210, !dbg !2200
  %212 = and i1 %204, %211, !dbg !2200
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !2200, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %213(ptr nonnull @.str.652), !dbg !2200
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape, align 8, !dbg !2200, !tbaa !2312
  %215 = and i64 %214, 4294967295, !dbg !2200
  %216 = icmp eq i64 %215, 1, !dbg !2200
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !2200, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %217(ptr nonnull @.str.653), !dbg !2200
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape, i64 1, !dbg !2200
  %219 = load i64, ptr %218, align 8, !dbg !2200, !tbaa !2322
  %220 = and i64 %219, 4294967295, !dbg !2200
  %221 = icmp eq i64 %220, 64, !dbg !2200
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !2200, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %222(ptr nonnull @.str.654), !dbg !2200
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape, i64 2, !dbg !2200
  %224 = load i64, ptr %223, align 8, !dbg !2200, !tbaa !2324
  %225 = and i64 %224, 4294967295, !dbg !2200
  %226 = icmp eq i64 %225, 112, !dbg !2200
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !2200, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %227(ptr nonnull @.str.655), !dbg !2200
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.shape, i64 3, !dbg !2200
  %229 = load i64, ptr %228, align 8, !dbg !2200, !tbaa !2327
  %230 = and i64 %229, 4294967295, !dbg !2200
  %231 = icmp eq i64 %230, 112, !dbg !2200
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !2200, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %232(ptr nonnull @.str.656), !dbg !2200
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides, null, !dbg !2200
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2200, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides, i64 1, !dbg !2200
  %234 = load i64, ptr %233, align 8, !dbg !2200, !tbaa !2329
  %235 = and i64 %234, 4294967295, !dbg !2200
  %236 = icmp eq i64 %235, 12544, !dbg !2200
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides, i64 2, !dbg !2200
  %238 = load i64, ptr %237, align 8, !dbg !2200, !tbaa !2339
  %239 = and i64 %238, 4294967295, !dbg !2200
  %240 = icmp eq i64 %239, 112, !dbg !2200
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu.T_relu.strides, i64 3, !dbg !2200
  %242 = load i64, ptr %241, align 8, !dbg !2200, !tbaa !2342
  %243 = and i64 %242, 4294967295, !dbg !2200
  %244 = icmp eq i64 %243, 1, !dbg !2200
  %245 = and i1 %240, %244, !dbg !2200
  %246 = and i1 %236, %245, !dbg !2200
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !2200, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2200
  %248 = load i64, ptr %247, align 8, !dbg !2200
  %249 = icmp eq i64 %248, 0, !dbg !2200
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !2200, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %250(ptr nonnull @.str.657), !dbg !2200
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %251(ptr nonnull @.str.658), !dbg !2200
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2200
  %253 = load i32, ptr %252, align 4, !dbg !2200
  %254 = icmp eq i32 %253, 2, !dbg !2200
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !2200, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %255(ptr nonnull @.str.659), !dbg !2200
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2200
  %257 = load i32, ptr %256, align 4, !dbg !2200
  %258 = icmp eq i32 %dev_id, %257, !dbg !2200
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !2200, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2200, !tbaa !19
  tail call void %259(ptr nonnull @.str.660), !dbg !2200
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2200
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2200, !tbaa !2344
  %260 = sext i32 %dev_id to i64, !dbg !2200
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2200
  store i64 %260, ptr %261, align 8, !dbg !2200
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2200
  store i32 0, ptr %262, align 4, !dbg !2200, !tbaa !2355
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2200
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2200
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2200, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2200
  %.not120 = icmp eq ptr %266, null, !dbg !2200
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2200, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2200, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2200, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2200
  %270 = icmp eq i32 %269, 0, !dbg !2200
  br i1 %270, label %call_end, label %common.ret, !dbg !2200, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !2200
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !2200
  %273 = icmp eq i32 %272, 0, !dbg !2200
  br i1 %273, label %call_end106, label %common.ret, !dbg !2200, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !2200
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2200
  br label %handle_init_end, !dbg !2200

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2200
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2357 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2359, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2360, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2361, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2362, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2363, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2364, metadata !DIExpression()), !dbg !2365
  %0 = alloca ptr, align 8, !dbg !2365
  %stack_value115 = alloca [17 x %0], align 8, !dbg !2365
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !2365
  %1 = icmp eq i32 %num_args, 4, !dbg !2365
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2365, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2365

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %2(ptr nonnull @.str.662), !dbg !2365
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2365, !tbaa !2366
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2365
  %p1.code = load i32, ptr %3, align 4, !dbg !2365, !tbaa !2377
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2365
  %p2.code = load i32, ptr %4, align 4, !dbg !2365, !tbaa !2379
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2365
  %T_relu.code = load i32, ptr %5, align 4, !dbg !2365, !tbaa !2382
  %p0 = load ptr, ptr %args, align 8, !dbg !2365
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2365
  %p1 = load ptr, ptr %6, align 8, !dbg !2365
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2365
  %p2 = load ptr, ptr %7, align 8, !dbg !2365
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2365
  %T_relu = load ptr, ptr %8, align 8, !dbg !2365
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2365
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2365
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape = load ptr, ptr %9, align 8, !dbg !2365
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides = load ptr, ptr %10, align 8, !dbg !2365
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2365
  %dev_id = load i32, ptr %11, align 4, !dbg !2365
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2365
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2365
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape = load ptr, ptr %12, align 8, !dbg !2365
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.strides = load ptr, ptr %13, align 8, !dbg !2365
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2365
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2365
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape = load ptr, ptr %14, align 8, !dbg !2365
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.strides = load ptr, ptr %15, align 8, !dbg !2365
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !2365
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !2365
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape = load ptr, ptr %16, align 8, !dbg !2365
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2365
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides = load ptr, ptr %17, align 8, !dbg !2365
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2365

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %18(ptr nonnull @.str.663), !dbg !2365
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2365

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %19(ptr nonnull @.str.664), !dbg !2365
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2365

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %20(ptr nonnull @.str.665), !dbg !2365
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2365

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %21(ptr nonnull @.str.666), !dbg !2365
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2365
  %23 = load i32, ptr %22, align 4, !dbg !2365
  %24 = icmp eq i32 %23, 4, !dbg !2365
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2365, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %25(ptr nonnull @.str.667), !dbg !2365
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2365
  %27 = load i16, ptr %26, align 2, !dbg !2365
  %28 = icmp eq i16 %27, 1, !dbg !2365
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2365
  %30 = load i8, ptr %29, align 1, !dbg !2365
  %31 = icmp eq i8 %30, 32, !dbg !2365
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2365
  %33 = load i8, ptr %32, align 1, !dbg !2365
  %34 = icmp eq i8 %33, 2, !dbg !2365
  %35 = and i1 %31, %34, !dbg !2365
  %36 = and i1 %28, %35, !dbg !2365
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2365, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %37(ptr nonnull @.str.668), !dbg !2365
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape, align 8, !dbg !2365, !tbaa !2384
  %39 = and i64 %38, 4294967295, !dbg !2365
  %40 = icmp eq i64 %39, 1, !dbg !2365
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2365, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %41(ptr nonnull @.str.669), !dbg !2365
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape, i64 1, !dbg !2365
  %43 = load i64, ptr %42, align 8, !dbg !2365, !tbaa !2394
  %44 = and i64 %43, 4294967295, !dbg !2365
  %45 = icmp eq i64 %44, 64, !dbg !2365
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2365, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %46(ptr nonnull @.str.670), !dbg !2365
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape, i64 2, !dbg !2365
  %48 = load i64, ptr %47, align 8, !dbg !2365, !tbaa !2396
  %49 = and i64 %48, 4294967295, !dbg !2365
  %50 = icmp eq i64 %49, 56, !dbg !2365
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2365, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %51(ptr nonnull @.str.671), !dbg !2365
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.shape, i64 3, !dbg !2365
  %53 = load i64, ptr %52, align 8, !dbg !2365, !tbaa !2399
  %54 = and i64 %53, 4294967295, !dbg !2365
  %55 = icmp eq i64 %54, 56, !dbg !2365
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2365, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %56(ptr nonnull @.str.672), !dbg !2365
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides, null, !dbg !2365
  br i1 %.not, label %if_end, label %if_then, !dbg !2365, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides, i64 1, !dbg !2365
  %58 = load i64, ptr %57, align 8, !dbg !2365, !tbaa !2401
  %59 = and i64 %58, 4294967295, !dbg !2365
  %60 = icmp eq i64 %59, 3136, !dbg !2365
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides, i64 2, !dbg !2365
  %62 = load i64, ptr %61, align 8, !dbg !2365, !tbaa !2411
  %63 = and i64 %62, 4294967295, !dbg !2365
  %64 = icmp eq i64 %63, 56, !dbg !2365
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p0.strides, i64 3, !dbg !2365
  %66 = load i64, ptr %65, align 8, !dbg !2365, !tbaa !2414
  %67 = and i64 %66, 4294967295, !dbg !2365
  %68 = icmp eq i64 %67, 1, !dbg !2365
  %69 = and i1 %64, %68, !dbg !2365
  %70 = and i1 %60, %69, !dbg !2365
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2365, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2365
  %72 = load i64, ptr %71, align 8, !dbg !2365
  %73 = icmp eq i64 %72, 0, !dbg !2365
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2365, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %74(ptr nonnull @.str.673), !dbg !2365
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %75(ptr nonnull @.str.674), !dbg !2365
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2365
  %77 = load i32, ptr %76, align 4, !dbg !2365
  %78 = icmp eq i32 %77, 2, !dbg !2365
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2365, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %79(ptr nonnull @.str.675), !dbg !2365
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2365
  %81 = load i32, ptr %80, align 4, !dbg !2365
  %82 = icmp eq i32 %81, 4, !dbg !2365
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2365, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %83(ptr nonnull @.str.676), !dbg !2365
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2365
  %85 = load i16, ptr %84, align 2, !dbg !2365
  %86 = icmp eq i16 %85, 1, !dbg !2365
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2365
  %88 = load i8, ptr %87, align 1, !dbg !2365
  %89 = icmp eq i8 %88, 32, !dbg !2365
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2365
  %91 = load i8, ptr %90, align 1, !dbg !2365
  %92 = icmp eq i8 %91, 2, !dbg !2365
  %93 = and i1 %89, %92, !dbg !2365
  %94 = and i1 %86, %93, !dbg !2365
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2365, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %95(ptr nonnull @.str.677), !dbg !2365
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape, align 8, !dbg !2365, !tbaa !2416
  %97 = and i64 %96, 4294967295, !dbg !2365
  %98 = icmp eq i64 %97, 64, !dbg !2365
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2365, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %99(ptr nonnull @.str.678), !dbg !2365
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape, i64 1, !dbg !2365
  %101 = load i64, ptr %100, align 8, !dbg !2365, !tbaa !2426
  %102 = and i64 %101, 4294967295, !dbg !2365
  %103 = icmp eq i64 %102, 64, !dbg !2365
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2365, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %104(ptr nonnull @.str.679), !dbg !2365
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape, i64 2, !dbg !2365
  %106 = load i64, ptr %105, align 8, !dbg !2365, !tbaa !2428
  %107 = and i64 %106, 4294967295, !dbg !2365
  %108 = icmp eq i64 %107, 1, !dbg !2365
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2365, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %109(ptr nonnull @.str.680), !dbg !2365
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.shape, i64 3, !dbg !2365
  %111 = load i64, ptr %110, align 8, !dbg !2365, !tbaa !2431
  %112 = and i64 %111, 4294967295, !dbg !2365
  %113 = icmp eq i64 %112, 1, !dbg !2365
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2365, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %114(ptr nonnull @.str.681), !dbg !2365
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.strides, null, !dbg !2365
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2365, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.strides, align 8, !dbg !2365, !tbaa !2433
  %116 = and i64 %115, 4294967295, !dbg !2365
  %117 = icmp eq i64 %116, 64, !dbg !2365
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p1.strides, i64 1, !dbg !2365
  %119 = load i64, ptr %118, align 8, !dbg !2365, !tbaa !2443
  %120 = and i64 %119, 4294967295, !dbg !2365
  %121 = icmp eq i64 %120, 1, !dbg !2365
  %122 = and i1 %117, %121, !dbg !2365
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !2365, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2365
  %124 = load i64, ptr %123, align 8, !dbg !2365
  %125 = icmp eq i64 %124, 0, !dbg !2365
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !2365, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %126(ptr nonnull @.str.682), !dbg !2365
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %127(ptr nonnull @.str.683), !dbg !2365
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2365
  %129 = load i32, ptr %128, align 4, !dbg !2365
  %130 = icmp eq i32 %129, 2, !dbg !2365
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !2365, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %131(ptr nonnull @.str.684), !dbg !2365
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2365
  %133 = load i32, ptr %132, align 4, !dbg !2365
  %134 = icmp eq i32 %dev_id, %133, !dbg !2365
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !2365, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %135(ptr nonnull @.str.685), !dbg !2365
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2365
  %137 = load i32, ptr %136, align 4, !dbg !2365
  %138 = icmp eq i32 %137, 4, !dbg !2365
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !2365, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %139(ptr nonnull @.str.686), !dbg !2365
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2365
  %141 = load i16, ptr %140, align 2, !dbg !2365
  %142 = icmp eq i16 %141, 1, !dbg !2365
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2365
  %144 = load i8, ptr %143, align 1, !dbg !2365
  %145 = icmp eq i8 %144, 32, !dbg !2365
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2365
  %147 = load i8, ptr %146, align 1, !dbg !2365
  %148 = icmp eq i8 %147, 2, !dbg !2365
  %149 = and i1 %145, %148, !dbg !2365
  %150 = and i1 %142, %149, !dbg !2365
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !2365, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %151(ptr nonnull @.str.687), !dbg !2365
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape, align 8, !dbg !2365, !tbaa !2445
  %153 = and i64 %152, 4294967295, !dbg !2365
  %154 = icmp eq i64 %153, 1, !dbg !2365
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !2365, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %155(ptr nonnull @.str.688), !dbg !2365
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape, i64 1, !dbg !2365
  %157 = load i64, ptr %156, align 8, !dbg !2365, !tbaa !2455
  %158 = and i64 %157, 4294967295, !dbg !2365
  %159 = icmp eq i64 %158, 64, !dbg !2365
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !2365, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %160(ptr nonnull @.str.689), !dbg !2365
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape, i64 2, !dbg !2365
  %162 = load i64, ptr %161, align 8, !dbg !2365, !tbaa !2457
  %163 = and i64 %162, 4294967295, !dbg !2365
  %164 = icmp eq i64 %163, 1, !dbg !2365
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !2365, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %165(ptr nonnull @.str.690), !dbg !2365
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.shape, i64 3, !dbg !2365
  %167 = load i64, ptr %166, align 8, !dbg !2365, !tbaa !2460
  %168 = and i64 %167, 4294967295, !dbg !2365
  %169 = icmp eq i64 %168, 1, !dbg !2365
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !2365, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %170(ptr nonnull @.str.691), !dbg !2365
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.strides, null, !dbg !2365
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2365, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.p2.strides, i64 1, !dbg !2365
  %172 = load i64, ptr %171, align 8, !dbg !2365, !tbaa !2462
  %173 = and i64 %172, 4294967295, !dbg !2365
  %174 = icmp eq i64 %173, 1, !dbg !2365
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !2365, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2365
  %176 = load i64, ptr %175, align 8, !dbg !2365
  %177 = icmp eq i64 %176, 0, !dbg !2365
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !2365, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %178(ptr nonnull @.str.692), !dbg !2365
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %179(ptr nonnull @.str.693), !dbg !2365
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2365
  %181 = load i32, ptr %180, align 4, !dbg !2365
  %182 = icmp eq i32 %181, 2, !dbg !2365
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !2365, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %183(ptr nonnull @.str.694), !dbg !2365
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2365
  %185 = load i32, ptr %184, align 4, !dbg !2365
  %186 = icmp eq i32 %dev_id, %185, !dbg !2365
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !2365, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %187(ptr nonnull @.str.695), !dbg !2365
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2365
  %189 = load i32, ptr %188, align 4, !dbg !2365
  %190 = icmp eq i32 %189, 4, !dbg !2365
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !2365, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %191(ptr nonnull @.str.696), !dbg !2365
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2365
  %193 = load i16, ptr %192, align 2, !dbg !2365
  %194 = icmp eq i16 %193, 1, !dbg !2365
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2365
  %196 = load i8, ptr %195, align 1, !dbg !2365
  %197 = icmp eq i8 %196, 32, !dbg !2365
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2365
  %199 = load i8, ptr %198, align 1, !dbg !2365
  %200 = icmp eq i8 %199, 2, !dbg !2365
  %201 = and i1 %197, %200, !dbg !2365
  %202 = and i1 %194, %201, !dbg !2365
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !2365, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %203(ptr nonnull @.str.697), !dbg !2365
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape, align 8, !dbg !2365, !tbaa !2472
  %205 = and i64 %204, 4294967295, !dbg !2365
  %206 = icmp eq i64 %205, 1, !dbg !2365
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !2365, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %207(ptr nonnull @.str.698), !dbg !2365
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape, i64 1, !dbg !2365
  %209 = load i64, ptr %208, align 8, !dbg !2365, !tbaa !2482
  %210 = and i64 %209, 4294967295, !dbg !2365
  %211 = icmp eq i64 %210, 64, !dbg !2365
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !2365, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %212(ptr nonnull @.str.699), !dbg !2365
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape, i64 2, !dbg !2365
  %214 = load i64, ptr %213, align 8, !dbg !2365, !tbaa !2484
  %215 = and i64 %214, 4294967295, !dbg !2365
  %216 = icmp eq i64 %215, 56, !dbg !2365
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !2365, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %217(ptr nonnull @.str.700), !dbg !2365
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.shape, i64 3, !dbg !2365
  %219 = load i64, ptr %218, align 8, !dbg !2365, !tbaa !2487
  %220 = and i64 %219, 4294967295, !dbg !2365
  %221 = icmp eq i64 %220, 56, !dbg !2365
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !2365, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %222(ptr nonnull @.str.701), !dbg !2365
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides, null, !dbg !2365
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2365, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides, i64 1, !dbg !2365
  %224 = load i64, ptr %223, align 8, !dbg !2365, !tbaa !2489
  %225 = and i64 %224, 4294967295, !dbg !2365
  %226 = icmp eq i64 %225, 3136, !dbg !2365
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides, i64 2, !dbg !2365
  %228 = load i64, ptr %227, align 8, !dbg !2365, !tbaa !2499
  %229 = and i64 %228, 4294967295, !dbg !2365
  %230 = icmp eq i64 %229, 56, !dbg !2365
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_1.T_relu.strides, i64 3, !dbg !2365
  %232 = load i64, ptr %231, align 8, !dbg !2365, !tbaa !2502
  %233 = and i64 %232, 4294967295, !dbg !2365
  %234 = icmp eq i64 %233, 1, !dbg !2365
  %235 = and i1 %230, %234, !dbg !2365
  %236 = and i1 %226, %235, !dbg !2365
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !2365, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2365
  %238 = load i64, ptr %237, align 8, !dbg !2365
  %239 = icmp eq i64 %238, 0, !dbg !2365
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !2365, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %240(ptr nonnull @.str.702), !dbg !2365
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %241(ptr nonnull @.str.703), !dbg !2365
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2365
  %243 = load i32, ptr %242, align 4, !dbg !2365
  %244 = icmp eq i32 %243, 2, !dbg !2365
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !2365, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %245(ptr nonnull @.str.704), !dbg !2365
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2365
  %247 = load i32, ptr %246, align 4, !dbg !2365
  %248 = icmp eq i32 %dev_id, %247, !dbg !2365
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !2365, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2365, !tbaa !19
  tail call void %249(ptr nonnull @.str.705), !dbg !2365
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2365
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2365, !tbaa !2504
  %250 = sext i32 %dev_id to i64, !dbg !2365
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2365
  store i64 %250, ptr %251, align 8, !dbg !2365
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2365
  store i32 0, ptr %252, align 4, !dbg !2365, !tbaa !2515
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2365
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2365
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2365, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2365
  %.not120 = icmp eq ptr %256, null, !dbg !2365
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2365, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2365, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2365, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2365
  %260 = icmp eq i32 %259, 0, !dbg !2365
  br i1 %260, label %call_end, label %common.ret, !dbg !2365, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !2365
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !2365
  %263 = icmp eq i32 %262, 0, !dbg !2365
  br i1 %263, label %call_end106, label %common.ret, !dbg !2365, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !2365
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2365
  br label %handle_init_end, !dbg !2365

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_1_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2365
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2517 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2519, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2520, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2521, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2522, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2523, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2524, metadata !DIExpression()), !dbg !2525
  %0 = alloca ptr, align 8, !dbg !2525
  %stack_value115 = alloca [17 x %0], align 8, !dbg !2525
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !2525
  %1 = icmp eq i32 %num_args, 4, !dbg !2525
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2525, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2525

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %2(ptr nonnull @.str.707), !dbg !2525
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2525, !tbaa !2526
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2525
  %p1.code = load i32, ptr %3, align 4, !dbg !2525, !tbaa !2537
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2525
  %p2.code = load i32, ptr %4, align 4, !dbg !2525, !tbaa !2539
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2525
  %T_relu.code = load i32, ptr %5, align 4, !dbg !2525, !tbaa !2542
  %p0 = load ptr, ptr %args, align 8, !dbg !2525
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2525
  %p1 = load ptr, ptr %6, align 8, !dbg !2525
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2525
  %p2 = load ptr, ptr %7, align 8, !dbg !2525
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2525
  %T_relu = load ptr, ptr %8, align 8, !dbg !2525
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2525
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2525
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape = load ptr, ptr %9, align 8, !dbg !2525
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides = load ptr, ptr %10, align 8, !dbg !2525
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2525
  %dev_id = load i32, ptr %11, align 4, !dbg !2525
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2525
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2525
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape = load ptr, ptr %12, align 8, !dbg !2525
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides = load ptr, ptr %13, align 8, !dbg !2525
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2525
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2525
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape = load ptr, ptr %14, align 8, !dbg !2525
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.strides = load ptr, ptr %15, align 8, !dbg !2525
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !2525
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !2525
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape = load ptr, ptr %16, align 8, !dbg !2525
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2525
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides = load ptr, ptr %17, align 8, !dbg !2525
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2525

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %18(ptr nonnull @.str.708), !dbg !2525
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2525

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %19(ptr nonnull @.str.709), !dbg !2525
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2525

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %20(ptr nonnull @.str.710), !dbg !2525
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2525

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %21(ptr nonnull @.str.711), !dbg !2525
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2525
  %23 = load i32, ptr %22, align 4, !dbg !2525
  %24 = icmp eq i32 %23, 4, !dbg !2525
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2525, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %25(ptr nonnull @.str.712), !dbg !2525
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2525
  %27 = load i16, ptr %26, align 2, !dbg !2525
  %28 = icmp eq i16 %27, 1, !dbg !2525
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2525
  %30 = load i8, ptr %29, align 1, !dbg !2525
  %31 = icmp eq i8 %30, 32, !dbg !2525
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2525
  %33 = load i8, ptr %32, align 1, !dbg !2525
  %34 = icmp eq i8 %33, 2, !dbg !2525
  %35 = and i1 %31, %34, !dbg !2525
  %36 = and i1 %28, %35, !dbg !2525
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2525, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %37(ptr nonnull @.str.713), !dbg !2525
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape, align 8, !dbg !2525, !tbaa !2544
  %39 = and i64 %38, 4294967295, !dbg !2525
  %40 = icmp eq i64 %39, 1, !dbg !2525
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2525, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %41(ptr nonnull @.str.714), !dbg !2525
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape, i64 1, !dbg !2525
  %43 = load i64, ptr %42, align 8, !dbg !2525, !tbaa !2554
  %44 = and i64 %43, 4294967295, !dbg !2525
  %45 = icmp eq i64 %44, 512, !dbg !2525
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2525, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %46(ptr nonnull @.str.715), !dbg !2525
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape, i64 2, !dbg !2525
  %48 = load i64, ptr %47, align 8, !dbg !2525, !tbaa !2556
  %49 = and i64 %48, 4294967295, !dbg !2525
  %50 = icmp eq i64 %49, 14, !dbg !2525
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2525, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %51(ptr nonnull @.str.716), !dbg !2525
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.shape, i64 3, !dbg !2525
  %53 = load i64, ptr %52, align 8, !dbg !2525, !tbaa !2559
  %54 = and i64 %53, 4294967295, !dbg !2525
  %55 = icmp eq i64 %54, 14, !dbg !2525
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2525, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %56(ptr nonnull @.str.717), !dbg !2525
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides, null, !dbg !2525
  br i1 %.not, label %if_end, label %if_then, !dbg !2525, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides, i64 1, !dbg !2525
  %58 = load i64, ptr %57, align 8, !dbg !2525, !tbaa !2561
  %59 = and i64 %58, 4294967295, !dbg !2525
  %60 = icmp eq i64 %59, 196, !dbg !2525
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides, i64 2, !dbg !2525
  %62 = load i64, ptr %61, align 8, !dbg !2525, !tbaa !2571
  %63 = and i64 %62, 4294967295, !dbg !2525
  %64 = icmp eq i64 %63, 14, !dbg !2525
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p0.strides, i64 3, !dbg !2525
  %66 = load i64, ptr %65, align 8, !dbg !2525, !tbaa !2574
  %67 = and i64 %66, 4294967295, !dbg !2525
  %68 = icmp eq i64 %67, 1, !dbg !2525
  %69 = and i1 %64, %68, !dbg !2525
  %70 = and i1 %60, %69, !dbg !2525
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2525, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2525
  %72 = load i64, ptr %71, align 8, !dbg !2525
  %73 = icmp eq i64 %72, 0, !dbg !2525
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2525, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %74(ptr nonnull @.str.718), !dbg !2525
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %75(ptr nonnull @.str.719), !dbg !2525
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2525
  %77 = load i32, ptr %76, align 4, !dbg !2525
  %78 = icmp eq i32 %77, 2, !dbg !2525
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2525, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %79(ptr nonnull @.str.720), !dbg !2525
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2525
  %81 = load i32, ptr %80, align 4, !dbg !2525
  %82 = icmp eq i32 %81, 4, !dbg !2525
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2525, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %83(ptr nonnull @.str.721), !dbg !2525
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2525
  %85 = load i16, ptr %84, align 2, !dbg !2525
  %86 = icmp eq i16 %85, 1, !dbg !2525
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2525
  %88 = load i8, ptr %87, align 1, !dbg !2525
  %89 = icmp eq i8 %88, 32, !dbg !2525
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2525
  %91 = load i8, ptr %90, align 1, !dbg !2525
  %92 = icmp eq i8 %91, 2, !dbg !2525
  %93 = and i1 %89, %92, !dbg !2525
  %94 = and i1 %86, %93, !dbg !2525
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2525, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %95(ptr nonnull @.str.722), !dbg !2525
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape, align 8, !dbg !2525, !tbaa !2576
  %97 = and i64 %96, 4294967295, !dbg !2525
  %98 = icmp eq i64 %97, 512, !dbg !2525
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2525, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %99(ptr nonnull @.str.723), !dbg !2525
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape, i64 1, !dbg !2525
  %101 = load i64, ptr %100, align 8, !dbg !2525, !tbaa !2586
  %102 = and i64 %101, 4294967295, !dbg !2525
  %103 = icmp eq i64 %102, 512, !dbg !2525
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2525, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %104(ptr nonnull @.str.724), !dbg !2525
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape, i64 2, !dbg !2525
  %106 = load i64, ptr %105, align 8, !dbg !2525, !tbaa !2588
  %107 = and i64 %106, 4294967295, !dbg !2525
  %108 = icmp eq i64 %107, 3, !dbg !2525
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2525, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %109(ptr nonnull @.str.725), !dbg !2525
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.shape, i64 3, !dbg !2525
  %111 = load i64, ptr %110, align 8, !dbg !2525, !tbaa !2591
  %112 = and i64 %111, 4294967295, !dbg !2525
  %113 = icmp eq i64 %112, 3, !dbg !2525
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2525, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %114(ptr nonnull @.str.726), !dbg !2525
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides, null, !dbg !2525
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2525, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides, align 8, !dbg !2525, !tbaa !2593
  %116 = and i64 %115, 4294967295, !dbg !2525
  %117 = icmp eq i64 %116, 4608, !dbg !2525
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides, i64 1, !dbg !2525
  %119 = load i64, ptr %118, align 8, !dbg !2525, !tbaa !2603
  %120 = and i64 %119, 4294967295, !dbg !2525
  %121 = icmp eq i64 %120, 9, !dbg !2525
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides, i64 2, !dbg !2525
  %123 = load i64, ptr %122, align 8, !dbg !2525, !tbaa !2605
  %124 = and i64 %123, 4294967295, !dbg !2525
  %125 = icmp eq i64 %124, 3, !dbg !2525
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p1.strides, i64 3, !dbg !2525
  %127 = load i64, ptr %126, align 8, !dbg !2525, !tbaa !2608
  %128 = and i64 %127, 4294967295, !dbg !2525
  %129 = icmp eq i64 %128, 1, !dbg !2525
  %130 = and i1 %125, %129, !dbg !2525
  %131 = and i1 %121, %130, !dbg !2525
  %132 = and i1 %117, %131, !dbg !2525
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !2525, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2525
  %134 = load i64, ptr %133, align 8, !dbg !2525
  %135 = icmp eq i64 %134, 0, !dbg !2525
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !2525, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %136(ptr nonnull @.str.727), !dbg !2525
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %137(ptr nonnull @.str.728), !dbg !2525
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2525
  %139 = load i32, ptr %138, align 4, !dbg !2525
  %140 = icmp eq i32 %139, 2, !dbg !2525
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !2525, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %141(ptr nonnull @.str.729), !dbg !2525
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2525
  %143 = load i32, ptr %142, align 4, !dbg !2525
  %144 = icmp eq i32 %dev_id, %143, !dbg !2525
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !2525, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %145(ptr nonnull @.str.730), !dbg !2525
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2525
  %147 = load i32, ptr %146, align 4, !dbg !2525
  %148 = icmp eq i32 %147, 4, !dbg !2525
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !2525, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %149(ptr nonnull @.str.731), !dbg !2525
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2525
  %151 = load i16, ptr %150, align 2, !dbg !2525
  %152 = icmp eq i16 %151, 1, !dbg !2525
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2525
  %154 = load i8, ptr %153, align 1, !dbg !2525
  %155 = icmp eq i8 %154, 32, !dbg !2525
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2525
  %157 = load i8, ptr %156, align 1, !dbg !2525
  %158 = icmp eq i8 %157, 2, !dbg !2525
  %159 = and i1 %155, %158, !dbg !2525
  %160 = and i1 %152, %159, !dbg !2525
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !2525, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %161(ptr nonnull @.str.732), !dbg !2525
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape, align 8, !dbg !2525, !tbaa !2610
  %163 = and i64 %162, 4294967295, !dbg !2525
  %164 = icmp eq i64 %163, 1, !dbg !2525
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !2525, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %165(ptr nonnull @.str.733), !dbg !2525
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape, i64 1, !dbg !2525
  %167 = load i64, ptr %166, align 8, !dbg !2525, !tbaa !2620
  %168 = and i64 %167, 4294967295, !dbg !2525
  %169 = icmp eq i64 %168, 512, !dbg !2525
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !2525, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %170(ptr nonnull @.str.734), !dbg !2525
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape, i64 2, !dbg !2525
  %172 = load i64, ptr %171, align 8, !dbg !2525, !tbaa !2622
  %173 = and i64 %172, 4294967295, !dbg !2525
  %174 = icmp eq i64 %173, 1, !dbg !2525
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !2525, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %175(ptr nonnull @.str.735), !dbg !2525
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.shape, i64 3, !dbg !2525
  %177 = load i64, ptr %176, align 8, !dbg !2525, !tbaa !2625
  %178 = and i64 %177, 4294967295, !dbg !2525
  %179 = icmp eq i64 %178, 1, !dbg !2525
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !2525, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %180(ptr nonnull @.str.736), !dbg !2525
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.strides, null, !dbg !2525
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2525, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.p2.strides, i64 1, !dbg !2525
  %182 = load i64, ptr %181, align 8, !dbg !2525, !tbaa !2627
  %183 = and i64 %182, 4294967295, !dbg !2525
  %184 = icmp eq i64 %183, 1, !dbg !2525
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !2525, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2525
  %186 = load i64, ptr %185, align 8, !dbg !2525
  %187 = icmp eq i64 %186, 0, !dbg !2525
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !2525, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %188(ptr nonnull @.str.737), !dbg !2525
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %189(ptr nonnull @.str.738), !dbg !2525
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2525
  %191 = load i32, ptr %190, align 4, !dbg !2525
  %192 = icmp eq i32 %191, 2, !dbg !2525
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !2525, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %193(ptr nonnull @.str.739), !dbg !2525
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2525
  %195 = load i32, ptr %194, align 4, !dbg !2525
  %196 = icmp eq i32 %dev_id, %195, !dbg !2525
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !2525, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %197(ptr nonnull @.str.740), !dbg !2525
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2525
  %199 = load i32, ptr %198, align 4, !dbg !2525
  %200 = icmp eq i32 %199, 4, !dbg !2525
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !2525, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %201(ptr nonnull @.str.741), !dbg !2525
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2525
  %203 = load i16, ptr %202, align 2, !dbg !2525
  %204 = icmp eq i16 %203, 1, !dbg !2525
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2525
  %206 = load i8, ptr %205, align 1, !dbg !2525
  %207 = icmp eq i8 %206, 32, !dbg !2525
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2525
  %209 = load i8, ptr %208, align 1, !dbg !2525
  %210 = icmp eq i8 %209, 2, !dbg !2525
  %211 = and i1 %207, %210, !dbg !2525
  %212 = and i1 %204, %211, !dbg !2525
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !2525, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %213(ptr nonnull @.str.742), !dbg !2525
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape, align 8, !dbg !2525, !tbaa !2637
  %215 = and i64 %214, 4294967295, !dbg !2525
  %216 = icmp eq i64 %215, 1, !dbg !2525
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !2525, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %217(ptr nonnull @.str.743), !dbg !2525
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape, i64 1, !dbg !2525
  %219 = load i64, ptr %218, align 8, !dbg !2525, !tbaa !2647
  %220 = and i64 %219, 4294967295, !dbg !2525
  %221 = icmp eq i64 %220, 512, !dbg !2525
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !2525, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %222(ptr nonnull @.str.744), !dbg !2525
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape, i64 2, !dbg !2525
  %224 = load i64, ptr %223, align 8, !dbg !2525, !tbaa !2649
  %225 = and i64 %224, 4294967295, !dbg !2525
  %226 = icmp eq i64 %225, 7, !dbg !2525
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !2525, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %227(ptr nonnull @.str.745), !dbg !2525
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.shape, i64 3, !dbg !2525
  %229 = load i64, ptr %228, align 8, !dbg !2525, !tbaa !2652
  %230 = and i64 %229, 4294967295, !dbg !2525
  %231 = icmp eq i64 %230, 7, !dbg !2525
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !2525, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %232(ptr nonnull @.str.746), !dbg !2525
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides, null, !dbg !2525
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2525, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides, i64 1, !dbg !2525
  %234 = load i64, ptr %233, align 8, !dbg !2525, !tbaa !2654
  %235 = and i64 %234, 4294967295, !dbg !2525
  %236 = icmp eq i64 %235, 49, !dbg !2525
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides, i64 2, !dbg !2525
  %238 = load i64, ptr %237, align 8, !dbg !2525, !tbaa !2664
  %239 = and i64 %238, 4294967295, !dbg !2525
  %240 = icmp eq i64 %239, 7, !dbg !2525
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_10.T_relu.strides, i64 3, !dbg !2525
  %242 = load i64, ptr %241, align 8, !dbg !2525, !tbaa !2667
  %243 = and i64 %242, 4294967295, !dbg !2525
  %244 = icmp eq i64 %243, 1, !dbg !2525
  %245 = and i1 %240, %244, !dbg !2525
  %246 = and i1 %236, %245, !dbg !2525
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !2525, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2525
  %248 = load i64, ptr %247, align 8, !dbg !2525
  %249 = icmp eq i64 %248, 0, !dbg !2525
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !2525, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %250(ptr nonnull @.str.747), !dbg !2525
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %251(ptr nonnull @.str.748), !dbg !2525
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2525
  %253 = load i32, ptr %252, align 4, !dbg !2525
  %254 = icmp eq i32 %253, 2, !dbg !2525
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !2525, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %255(ptr nonnull @.str.749), !dbg !2525
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2525
  %257 = load i32, ptr %256, align 4, !dbg !2525
  %258 = icmp eq i32 %dev_id, %257, !dbg !2525
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !2525, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2525, !tbaa !19
  tail call void %259(ptr nonnull @.str.750), !dbg !2525
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2525
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2525, !tbaa !2669
  %260 = sext i32 %dev_id to i64, !dbg !2525
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2525
  store i64 %260, ptr %261, align 8, !dbg !2525
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2525
  store i32 0, ptr %262, align 4, !dbg !2525, !tbaa !2680
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2525
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2525
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2525, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2525
  %.not120 = icmp eq ptr %266, null, !dbg !2525
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2525, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2525, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2525, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2525
  %270 = icmp eq i32 %269, 0, !dbg !2525
  br i1 %270, label %call_end, label %common.ret, !dbg !2525, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !2525
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !2525
  %273 = icmp eq i32 %272, 0, !dbg !2525
  br i1 %273, label %call_end106, label %common.ret, !dbg !2525, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !2525
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2525
  br label %handle_init_end, !dbg !2525

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_10_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2525
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_11(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2682 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2684, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2685, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2686, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2687, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2688, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2689, metadata !DIExpression()), !dbg !2690
  %0 = alloca ptr, align 8, !dbg !2690
  %stack_value115 = alloca [17 x %0], align 8, !dbg !2690
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !2690
  %1 = icmp eq i32 %num_args, 4, !dbg !2690
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2690, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2690

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %2(ptr nonnull @.str.752), !dbg !2690
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2690, !tbaa !2691
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2690
  %p1.code = load i32, ptr %3, align 4, !dbg !2690, !tbaa !2702
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2690
  %p2.code = load i32, ptr %4, align 4, !dbg !2690, !tbaa !2704
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2690
  %T_relu.code = load i32, ptr %5, align 4, !dbg !2690, !tbaa !2707
  %p0 = load ptr, ptr %args, align 8, !dbg !2690
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2690
  %p1 = load ptr, ptr %6, align 8, !dbg !2690
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2690
  %p2 = load ptr, ptr %7, align 8, !dbg !2690
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2690
  %T_relu = load ptr, ptr %8, align 8, !dbg !2690
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2690
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2690
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape = load ptr, ptr %9, align 8, !dbg !2690
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides = load ptr, ptr %10, align 8, !dbg !2690
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2690
  %dev_id = load i32, ptr %11, align 4, !dbg !2690
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2690
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2690
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape = load ptr, ptr %12, align 8, !dbg !2690
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.strides = load ptr, ptr %13, align 8, !dbg !2690
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2690
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2690
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape = load ptr, ptr %14, align 8, !dbg !2690
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.strides = load ptr, ptr %15, align 8, !dbg !2690
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !2690
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !2690
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape = load ptr, ptr %16, align 8, !dbg !2690
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2690
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides = load ptr, ptr %17, align 8, !dbg !2690
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2690

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %18(ptr nonnull @.str.753), !dbg !2690
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2690

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %19(ptr nonnull @.str.754), !dbg !2690
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2690

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %20(ptr nonnull @.str.755), !dbg !2690
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2690

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %21(ptr nonnull @.str.756), !dbg !2690
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2690
  %23 = load i32, ptr %22, align 4, !dbg !2690
  %24 = icmp eq i32 %23, 4, !dbg !2690
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2690, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %25(ptr nonnull @.str.757), !dbg !2690
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2690
  %27 = load i16, ptr %26, align 2, !dbg !2690
  %28 = icmp eq i16 %27, 1, !dbg !2690
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2690
  %30 = load i8, ptr %29, align 1, !dbg !2690
  %31 = icmp eq i8 %30, 32, !dbg !2690
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2690
  %33 = load i8, ptr %32, align 1, !dbg !2690
  %34 = icmp eq i8 %33, 2, !dbg !2690
  %35 = and i1 %31, %34, !dbg !2690
  %36 = and i1 %28, %35, !dbg !2690
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2690, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %37(ptr nonnull @.str.758), !dbg !2690
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape, align 8, !dbg !2690, !tbaa !2709
  %39 = and i64 %38, 4294967295, !dbg !2690
  %40 = icmp eq i64 %39, 1, !dbg !2690
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2690, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %41(ptr nonnull @.str.759), !dbg !2690
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape, i64 1, !dbg !2690
  %43 = load i64, ptr %42, align 8, !dbg !2690, !tbaa !2719
  %44 = and i64 %43, 4294967295, !dbg !2690
  %45 = icmp eq i64 %44, 2048, !dbg !2690
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2690, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %46(ptr nonnull @.str.760), !dbg !2690
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape, i64 2, !dbg !2690
  %48 = load i64, ptr %47, align 8, !dbg !2690, !tbaa !2721
  %49 = and i64 %48, 4294967295, !dbg !2690
  %50 = icmp eq i64 %49, 7, !dbg !2690
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2690, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %51(ptr nonnull @.str.761), !dbg !2690
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.shape, i64 3, !dbg !2690
  %53 = load i64, ptr %52, align 8, !dbg !2690, !tbaa !2724
  %54 = and i64 %53, 4294967295, !dbg !2690
  %55 = icmp eq i64 %54, 7, !dbg !2690
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2690, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %56(ptr nonnull @.str.762), !dbg !2690
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides, null, !dbg !2690
  br i1 %.not, label %if_end, label %if_then, !dbg !2690, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides, i64 1, !dbg !2690
  %58 = load i64, ptr %57, align 8, !dbg !2690, !tbaa !2726
  %59 = and i64 %58, 4294967295, !dbg !2690
  %60 = icmp eq i64 %59, 49, !dbg !2690
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides, i64 2, !dbg !2690
  %62 = load i64, ptr %61, align 8, !dbg !2690, !tbaa !2736
  %63 = and i64 %62, 4294967295, !dbg !2690
  %64 = icmp eq i64 %63, 7, !dbg !2690
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p0.strides, i64 3, !dbg !2690
  %66 = load i64, ptr %65, align 8, !dbg !2690, !tbaa !2739
  %67 = and i64 %66, 4294967295, !dbg !2690
  %68 = icmp eq i64 %67, 1, !dbg !2690
  %69 = and i1 %64, %68, !dbg !2690
  %70 = and i1 %60, %69, !dbg !2690
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2690, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2690
  %72 = load i64, ptr %71, align 8, !dbg !2690
  %73 = icmp eq i64 %72, 0, !dbg !2690
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2690, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %74(ptr nonnull @.str.763), !dbg !2690
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %75(ptr nonnull @.str.764), !dbg !2690
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2690
  %77 = load i32, ptr %76, align 4, !dbg !2690
  %78 = icmp eq i32 %77, 2, !dbg !2690
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2690, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %79(ptr nonnull @.str.765), !dbg !2690
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2690
  %81 = load i32, ptr %80, align 4, !dbg !2690
  %82 = icmp eq i32 %81, 4, !dbg !2690
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2690, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %83(ptr nonnull @.str.766), !dbg !2690
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2690
  %85 = load i16, ptr %84, align 2, !dbg !2690
  %86 = icmp eq i16 %85, 1, !dbg !2690
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2690
  %88 = load i8, ptr %87, align 1, !dbg !2690
  %89 = icmp eq i8 %88, 32, !dbg !2690
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2690
  %91 = load i8, ptr %90, align 1, !dbg !2690
  %92 = icmp eq i8 %91, 2, !dbg !2690
  %93 = and i1 %89, %92, !dbg !2690
  %94 = and i1 %86, %93, !dbg !2690
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2690, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %95(ptr nonnull @.str.767), !dbg !2690
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape, align 8, !dbg !2690, !tbaa !2741
  %97 = and i64 %96, 4294967295, !dbg !2690
  %98 = icmp eq i64 %97, 512, !dbg !2690
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2690, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %99(ptr nonnull @.str.768), !dbg !2690
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape, i64 1, !dbg !2690
  %101 = load i64, ptr %100, align 8, !dbg !2690, !tbaa !2751
  %102 = and i64 %101, 4294967295, !dbg !2690
  %103 = icmp eq i64 %102, 2048, !dbg !2690
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2690, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %104(ptr nonnull @.str.769), !dbg !2690
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape, i64 2, !dbg !2690
  %106 = load i64, ptr %105, align 8, !dbg !2690, !tbaa !2753
  %107 = and i64 %106, 4294967295, !dbg !2690
  %108 = icmp eq i64 %107, 1, !dbg !2690
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2690, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %109(ptr nonnull @.str.770), !dbg !2690
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.shape, i64 3, !dbg !2690
  %111 = load i64, ptr %110, align 8, !dbg !2690, !tbaa !2756
  %112 = and i64 %111, 4294967295, !dbg !2690
  %113 = icmp eq i64 %112, 1, !dbg !2690
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2690, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %114(ptr nonnull @.str.771), !dbg !2690
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.strides, null, !dbg !2690
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2690, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.strides, align 8, !dbg !2690, !tbaa !2758
  %116 = and i64 %115, 4294967295, !dbg !2690
  %117 = icmp eq i64 %116, 2048, !dbg !2690
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p1.strides, i64 1, !dbg !2690
  %119 = load i64, ptr %118, align 8, !dbg !2690, !tbaa !2768
  %120 = and i64 %119, 4294967295, !dbg !2690
  %121 = icmp eq i64 %120, 1, !dbg !2690
  %122 = and i1 %117, %121, !dbg !2690
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !2690, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2690
  %124 = load i64, ptr %123, align 8, !dbg !2690
  %125 = icmp eq i64 %124, 0, !dbg !2690
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !2690, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %126(ptr nonnull @.str.772), !dbg !2690
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %127(ptr nonnull @.str.773), !dbg !2690
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2690
  %129 = load i32, ptr %128, align 4, !dbg !2690
  %130 = icmp eq i32 %129, 2, !dbg !2690
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !2690, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %131(ptr nonnull @.str.774), !dbg !2690
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2690
  %133 = load i32, ptr %132, align 4, !dbg !2690
  %134 = icmp eq i32 %dev_id, %133, !dbg !2690
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !2690, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %135(ptr nonnull @.str.775), !dbg !2690
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2690
  %137 = load i32, ptr %136, align 4, !dbg !2690
  %138 = icmp eq i32 %137, 4, !dbg !2690
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !2690, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %139(ptr nonnull @.str.776), !dbg !2690
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2690
  %141 = load i16, ptr %140, align 2, !dbg !2690
  %142 = icmp eq i16 %141, 1, !dbg !2690
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2690
  %144 = load i8, ptr %143, align 1, !dbg !2690
  %145 = icmp eq i8 %144, 32, !dbg !2690
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2690
  %147 = load i8, ptr %146, align 1, !dbg !2690
  %148 = icmp eq i8 %147, 2, !dbg !2690
  %149 = and i1 %145, %148, !dbg !2690
  %150 = and i1 %142, %149, !dbg !2690
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !2690, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %151(ptr nonnull @.str.777), !dbg !2690
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape, align 8, !dbg !2690, !tbaa !2770
  %153 = and i64 %152, 4294967295, !dbg !2690
  %154 = icmp eq i64 %153, 1, !dbg !2690
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !2690, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %155(ptr nonnull @.str.778), !dbg !2690
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape, i64 1, !dbg !2690
  %157 = load i64, ptr %156, align 8, !dbg !2690, !tbaa !2780
  %158 = and i64 %157, 4294967295, !dbg !2690
  %159 = icmp eq i64 %158, 512, !dbg !2690
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !2690, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %160(ptr nonnull @.str.779), !dbg !2690
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape, i64 2, !dbg !2690
  %162 = load i64, ptr %161, align 8, !dbg !2690, !tbaa !2782
  %163 = and i64 %162, 4294967295, !dbg !2690
  %164 = icmp eq i64 %163, 1, !dbg !2690
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !2690, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %165(ptr nonnull @.str.780), !dbg !2690
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.shape, i64 3, !dbg !2690
  %167 = load i64, ptr %166, align 8, !dbg !2690, !tbaa !2785
  %168 = and i64 %167, 4294967295, !dbg !2690
  %169 = icmp eq i64 %168, 1, !dbg !2690
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !2690, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %170(ptr nonnull @.str.781), !dbg !2690
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.strides, null, !dbg !2690
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2690, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.p2.strides, i64 1, !dbg !2690
  %172 = load i64, ptr %171, align 8, !dbg !2690, !tbaa !2787
  %173 = and i64 %172, 4294967295, !dbg !2690
  %174 = icmp eq i64 %173, 1, !dbg !2690
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !2690, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2690
  %176 = load i64, ptr %175, align 8, !dbg !2690
  %177 = icmp eq i64 %176, 0, !dbg !2690
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !2690, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %178(ptr nonnull @.str.782), !dbg !2690
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %179(ptr nonnull @.str.783), !dbg !2690
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2690
  %181 = load i32, ptr %180, align 4, !dbg !2690
  %182 = icmp eq i32 %181, 2, !dbg !2690
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !2690, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %183(ptr nonnull @.str.784), !dbg !2690
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2690
  %185 = load i32, ptr %184, align 4, !dbg !2690
  %186 = icmp eq i32 %dev_id, %185, !dbg !2690
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !2690, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %187(ptr nonnull @.str.785), !dbg !2690
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2690
  %189 = load i32, ptr %188, align 4, !dbg !2690
  %190 = icmp eq i32 %189, 4, !dbg !2690
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !2690, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %191(ptr nonnull @.str.786), !dbg !2690
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2690
  %193 = load i16, ptr %192, align 2, !dbg !2690
  %194 = icmp eq i16 %193, 1, !dbg !2690
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2690
  %196 = load i8, ptr %195, align 1, !dbg !2690
  %197 = icmp eq i8 %196, 32, !dbg !2690
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2690
  %199 = load i8, ptr %198, align 1, !dbg !2690
  %200 = icmp eq i8 %199, 2, !dbg !2690
  %201 = and i1 %197, %200, !dbg !2690
  %202 = and i1 %194, %201, !dbg !2690
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !2690, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %203(ptr nonnull @.str.787), !dbg !2690
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape, align 8, !dbg !2690, !tbaa !2797
  %205 = and i64 %204, 4294967295, !dbg !2690
  %206 = icmp eq i64 %205, 1, !dbg !2690
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !2690, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %207(ptr nonnull @.str.788), !dbg !2690
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape, i64 1, !dbg !2690
  %209 = load i64, ptr %208, align 8, !dbg !2690, !tbaa !2807
  %210 = and i64 %209, 4294967295, !dbg !2690
  %211 = icmp eq i64 %210, 512, !dbg !2690
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !2690, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %212(ptr nonnull @.str.789), !dbg !2690
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape, i64 2, !dbg !2690
  %214 = load i64, ptr %213, align 8, !dbg !2690, !tbaa !2809
  %215 = and i64 %214, 4294967295, !dbg !2690
  %216 = icmp eq i64 %215, 7, !dbg !2690
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !2690, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %217(ptr nonnull @.str.790), !dbg !2690
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.shape, i64 3, !dbg !2690
  %219 = load i64, ptr %218, align 8, !dbg !2690, !tbaa !2812
  %220 = and i64 %219, 4294967295, !dbg !2690
  %221 = icmp eq i64 %220, 7, !dbg !2690
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !2690, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %222(ptr nonnull @.str.791), !dbg !2690
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides, null, !dbg !2690
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2690, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides, i64 1, !dbg !2690
  %224 = load i64, ptr %223, align 8, !dbg !2690, !tbaa !2814
  %225 = and i64 %224, 4294967295, !dbg !2690
  %226 = icmp eq i64 %225, 49, !dbg !2690
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides, i64 2, !dbg !2690
  %228 = load i64, ptr %227, align 8, !dbg !2690, !tbaa !2824
  %229 = and i64 %228, 4294967295, !dbg !2690
  %230 = icmp eq i64 %229, 7, !dbg !2690
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_11.T_relu.strides, i64 3, !dbg !2690
  %232 = load i64, ptr %231, align 8, !dbg !2690, !tbaa !2827
  %233 = and i64 %232, 4294967295, !dbg !2690
  %234 = icmp eq i64 %233, 1, !dbg !2690
  %235 = and i1 %230, %234, !dbg !2690
  %236 = and i1 %226, %235, !dbg !2690
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !2690, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2690
  %238 = load i64, ptr %237, align 8, !dbg !2690
  %239 = icmp eq i64 %238, 0, !dbg !2690
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !2690, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %240(ptr nonnull @.str.792), !dbg !2690
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %241(ptr nonnull @.str.793), !dbg !2690
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2690
  %243 = load i32, ptr %242, align 4, !dbg !2690
  %244 = icmp eq i32 %243, 2, !dbg !2690
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !2690, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %245(ptr nonnull @.str.794), !dbg !2690
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2690
  %247 = load i32, ptr %246, align 4, !dbg !2690
  %248 = icmp eq i32 %dev_id, %247, !dbg !2690
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !2690, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2690, !tbaa !19
  tail call void %249(ptr nonnull @.str.795), !dbg !2690
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2690
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2690, !tbaa !2829
  %250 = sext i32 %dev_id to i64, !dbg !2690
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2690
  store i64 %250, ptr %251, align 8, !dbg !2690
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2690
  store i32 0, ptr %252, align 4, !dbg !2690, !tbaa !2840
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2690
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2690
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2690, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2690
  %.not120 = icmp eq ptr %256, null, !dbg !2690
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2690, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2690, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2690, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2690
  %260 = icmp eq i32 %259, 0, !dbg !2690
  br i1 %260, label %call_end, label %common.ret, !dbg !2690, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !2690
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !2690
  %263 = icmp eq i32 %262, 0, !dbg !2690
  br i1 %263, label %call_end106, label %common.ret, !dbg !2690, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !2690
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2690
  br label %handle_init_end, !dbg !2690

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_11_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2690
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2842 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2844, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2845, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2846, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2847, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2848, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2849, metadata !DIExpression()), !dbg !2850
  %0 = alloca ptr, align 8, !dbg !2850
  %stack_value115 = alloca [17 x %0], align 8, !dbg !2850
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !2850
  %1 = icmp eq i32 %num_args, 4, !dbg !2850
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2850, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2850

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %2(ptr nonnull @.str.797), !dbg !2850
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2850, !tbaa !2851
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2850
  %p1.code = load i32, ptr %3, align 4, !dbg !2850, !tbaa !2862
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2850
  %p2.code = load i32, ptr %4, align 4, !dbg !2850, !tbaa !2864
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2850
  %T_relu.code = load i32, ptr %5, align 4, !dbg !2850, !tbaa !2867
  %p0 = load ptr, ptr %args, align 8, !dbg !2850
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2850
  %p1 = load ptr, ptr %6, align 8, !dbg !2850
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2850
  %p2 = load ptr, ptr %7, align 8, !dbg !2850
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2850
  %T_relu = load ptr, ptr %8, align 8, !dbg !2850
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2850
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2850
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape = load ptr, ptr %9, align 8, !dbg !2850
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides = load ptr, ptr %10, align 8, !dbg !2850
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2850
  %dev_id = load i32, ptr %11, align 4, !dbg !2850
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2850
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2850
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape = load ptr, ptr %12, align 8, !dbg !2850
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.strides = load ptr, ptr %13, align 8, !dbg !2850
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2850
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2850
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape = load ptr, ptr %14, align 8, !dbg !2850
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.strides = load ptr, ptr %15, align 8, !dbg !2850
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !2850
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !2850
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape = load ptr, ptr %16, align 8, !dbg !2850
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !2850
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides = load ptr, ptr %17, align 8, !dbg !2850
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2850

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %18(ptr nonnull @.str.798), !dbg !2850
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2850

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %19(ptr nonnull @.str.799), !dbg !2850
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2850

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %20(ptr nonnull @.str.800), !dbg !2850
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2850

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %21(ptr nonnull @.str.801), !dbg !2850
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2850
  %23 = load i32, ptr %22, align 4, !dbg !2850
  %24 = icmp eq i32 %23, 4, !dbg !2850
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2850, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %25(ptr nonnull @.str.802), !dbg !2850
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2850
  %27 = load i16, ptr %26, align 2, !dbg !2850
  %28 = icmp eq i16 %27, 1, !dbg !2850
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2850
  %30 = load i8, ptr %29, align 1, !dbg !2850
  %31 = icmp eq i8 %30, 32, !dbg !2850
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2850
  %33 = load i8, ptr %32, align 1, !dbg !2850
  %34 = icmp eq i8 %33, 2, !dbg !2850
  %35 = and i1 %31, %34, !dbg !2850
  %36 = and i1 %28, %35, !dbg !2850
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2850, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %37(ptr nonnull @.str.803), !dbg !2850
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape, align 8, !dbg !2850, !tbaa !2869
  %39 = and i64 %38, 4294967295, !dbg !2850
  %40 = icmp eq i64 %39, 1, !dbg !2850
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2850, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %41(ptr nonnull @.str.804), !dbg !2850
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape, i64 1, !dbg !2850
  %43 = load i64, ptr %42, align 8, !dbg !2850, !tbaa !2879
  %44 = and i64 %43, 4294967295, !dbg !2850
  %45 = icmp eq i64 %44, 256, !dbg !2850
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2850, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %46(ptr nonnull @.str.805), !dbg !2850
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape, i64 2, !dbg !2850
  %48 = load i64, ptr %47, align 8, !dbg !2850, !tbaa !2881
  %49 = and i64 %48, 4294967295, !dbg !2850
  %50 = icmp eq i64 %49, 56, !dbg !2850
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2850, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %51(ptr nonnull @.str.806), !dbg !2850
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.shape, i64 3, !dbg !2850
  %53 = load i64, ptr %52, align 8, !dbg !2850, !tbaa !2884
  %54 = and i64 %53, 4294967295, !dbg !2850
  %55 = icmp eq i64 %54, 56, !dbg !2850
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2850, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %56(ptr nonnull @.str.807), !dbg !2850
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides, null, !dbg !2850
  br i1 %.not, label %if_end, label %if_then, !dbg !2850, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides, i64 1, !dbg !2850
  %58 = load i64, ptr %57, align 8, !dbg !2850, !tbaa !2886
  %59 = and i64 %58, 4294967295, !dbg !2850
  %60 = icmp eq i64 %59, 3136, !dbg !2850
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides, i64 2, !dbg !2850
  %62 = load i64, ptr %61, align 8, !dbg !2850, !tbaa !2896
  %63 = and i64 %62, 4294967295, !dbg !2850
  %64 = icmp eq i64 %63, 56, !dbg !2850
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p0.strides, i64 3, !dbg !2850
  %66 = load i64, ptr %65, align 8, !dbg !2850, !tbaa !2899
  %67 = and i64 %66, 4294967295, !dbg !2850
  %68 = icmp eq i64 %67, 1, !dbg !2850
  %69 = and i1 %64, %68, !dbg !2850
  %70 = and i1 %60, %69, !dbg !2850
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2850, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2850
  %72 = load i64, ptr %71, align 8, !dbg !2850
  %73 = icmp eq i64 %72, 0, !dbg !2850
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2850, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %74(ptr nonnull @.str.808), !dbg !2850
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %75(ptr nonnull @.str.809), !dbg !2850
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2850
  %77 = load i32, ptr %76, align 4, !dbg !2850
  %78 = icmp eq i32 %77, 2, !dbg !2850
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2850, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %79(ptr nonnull @.str.810), !dbg !2850
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2850
  %81 = load i32, ptr %80, align 4, !dbg !2850
  %82 = icmp eq i32 %81, 4, !dbg !2850
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2850, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %83(ptr nonnull @.str.811), !dbg !2850
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2850
  %85 = load i16, ptr %84, align 2, !dbg !2850
  %86 = icmp eq i16 %85, 1, !dbg !2850
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2850
  %88 = load i8, ptr %87, align 1, !dbg !2850
  %89 = icmp eq i8 %88, 32, !dbg !2850
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2850
  %91 = load i8, ptr %90, align 1, !dbg !2850
  %92 = icmp eq i8 %91, 2, !dbg !2850
  %93 = and i1 %89, %92, !dbg !2850
  %94 = and i1 %86, %93, !dbg !2850
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2850, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %95(ptr nonnull @.str.812), !dbg !2850
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape, align 8, !dbg !2850, !tbaa !2901
  %97 = and i64 %96, 4294967295, !dbg !2850
  %98 = icmp eq i64 %97, 64, !dbg !2850
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2850, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %99(ptr nonnull @.str.813), !dbg !2850
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape, i64 1, !dbg !2850
  %101 = load i64, ptr %100, align 8, !dbg !2850, !tbaa !2911
  %102 = and i64 %101, 4294967295, !dbg !2850
  %103 = icmp eq i64 %102, 256, !dbg !2850
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2850, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %104(ptr nonnull @.str.814), !dbg !2850
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape, i64 2, !dbg !2850
  %106 = load i64, ptr %105, align 8, !dbg !2850, !tbaa !2913
  %107 = and i64 %106, 4294967295, !dbg !2850
  %108 = icmp eq i64 %107, 1, !dbg !2850
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2850, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %109(ptr nonnull @.str.815), !dbg !2850
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.shape, i64 3, !dbg !2850
  %111 = load i64, ptr %110, align 8, !dbg !2850, !tbaa !2916
  %112 = and i64 %111, 4294967295, !dbg !2850
  %113 = icmp eq i64 %112, 1, !dbg !2850
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2850, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %114(ptr nonnull @.str.816), !dbg !2850
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.strides, null, !dbg !2850
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2850, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.strides, align 8, !dbg !2850, !tbaa !2918
  %116 = and i64 %115, 4294967295, !dbg !2850
  %117 = icmp eq i64 %116, 256, !dbg !2850
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p1.strides, i64 1, !dbg !2850
  %119 = load i64, ptr %118, align 8, !dbg !2850, !tbaa !2928
  %120 = and i64 %119, 4294967295, !dbg !2850
  %121 = icmp eq i64 %120, 1, !dbg !2850
  %122 = and i1 %117, %121, !dbg !2850
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !2850, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2850
  %124 = load i64, ptr %123, align 8, !dbg !2850
  %125 = icmp eq i64 %124, 0, !dbg !2850
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !2850, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %126(ptr nonnull @.str.817), !dbg !2850
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %127(ptr nonnull @.str.818), !dbg !2850
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2850
  %129 = load i32, ptr %128, align 4, !dbg !2850
  %130 = icmp eq i32 %129, 2, !dbg !2850
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !2850, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %131(ptr nonnull @.str.819), !dbg !2850
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2850
  %133 = load i32, ptr %132, align 4, !dbg !2850
  %134 = icmp eq i32 %dev_id, %133, !dbg !2850
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !2850, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %135(ptr nonnull @.str.820), !dbg !2850
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2850
  %137 = load i32, ptr %136, align 4, !dbg !2850
  %138 = icmp eq i32 %137, 4, !dbg !2850
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !2850, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %139(ptr nonnull @.str.821), !dbg !2850
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2850
  %141 = load i16, ptr %140, align 2, !dbg !2850
  %142 = icmp eq i16 %141, 1, !dbg !2850
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2850
  %144 = load i8, ptr %143, align 1, !dbg !2850
  %145 = icmp eq i8 %144, 32, !dbg !2850
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2850
  %147 = load i8, ptr %146, align 1, !dbg !2850
  %148 = icmp eq i8 %147, 2, !dbg !2850
  %149 = and i1 %145, %148, !dbg !2850
  %150 = and i1 %142, %149, !dbg !2850
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !2850, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %151(ptr nonnull @.str.822), !dbg !2850
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape, align 8, !dbg !2850, !tbaa !2930
  %153 = and i64 %152, 4294967295, !dbg !2850
  %154 = icmp eq i64 %153, 1, !dbg !2850
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !2850, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %155(ptr nonnull @.str.823), !dbg !2850
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape, i64 1, !dbg !2850
  %157 = load i64, ptr %156, align 8, !dbg !2850, !tbaa !2940
  %158 = and i64 %157, 4294967295, !dbg !2850
  %159 = icmp eq i64 %158, 64, !dbg !2850
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !2850, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %160(ptr nonnull @.str.824), !dbg !2850
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape, i64 2, !dbg !2850
  %162 = load i64, ptr %161, align 8, !dbg !2850, !tbaa !2942
  %163 = and i64 %162, 4294967295, !dbg !2850
  %164 = icmp eq i64 %163, 1, !dbg !2850
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !2850, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %165(ptr nonnull @.str.825), !dbg !2850
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.shape, i64 3, !dbg !2850
  %167 = load i64, ptr %166, align 8, !dbg !2850, !tbaa !2945
  %168 = and i64 %167, 4294967295, !dbg !2850
  %169 = icmp eq i64 %168, 1, !dbg !2850
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !2850, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %170(ptr nonnull @.str.826), !dbg !2850
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.strides, null, !dbg !2850
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2850, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.p2.strides, i64 1, !dbg !2850
  %172 = load i64, ptr %171, align 8, !dbg !2850, !tbaa !2947
  %173 = and i64 %172, 4294967295, !dbg !2850
  %174 = icmp eq i64 %173, 1, !dbg !2850
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !2850, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2850
  %176 = load i64, ptr %175, align 8, !dbg !2850
  %177 = icmp eq i64 %176, 0, !dbg !2850
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !2850, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %178(ptr nonnull @.str.827), !dbg !2850
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %179(ptr nonnull @.str.828), !dbg !2850
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2850
  %181 = load i32, ptr %180, align 4, !dbg !2850
  %182 = icmp eq i32 %181, 2, !dbg !2850
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !2850, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %183(ptr nonnull @.str.829), !dbg !2850
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2850
  %185 = load i32, ptr %184, align 4, !dbg !2850
  %186 = icmp eq i32 %dev_id, %185, !dbg !2850
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !2850, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %187(ptr nonnull @.str.830), !dbg !2850
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !2850
  %189 = load i32, ptr %188, align 4, !dbg !2850
  %190 = icmp eq i32 %189, 4, !dbg !2850
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !2850, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %191(ptr nonnull @.str.831), !dbg !2850
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !2850
  %193 = load i16, ptr %192, align 2, !dbg !2850
  %194 = icmp eq i16 %193, 1, !dbg !2850
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !2850
  %196 = load i8, ptr %195, align 1, !dbg !2850
  %197 = icmp eq i8 %196, 32, !dbg !2850
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !2850
  %199 = load i8, ptr %198, align 1, !dbg !2850
  %200 = icmp eq i8 %199, 2, !dbg !2850
  %201 = and i1 %197, %200, !dbg !2850
  %202 = and i1 %194, %201, !dbg !2850
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !2850, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %203(ptr nonnull @.str.832), !dbg !2850
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape, align 8, !dbg !2850, !tbaa !2957
  %205 = and i64 %204, 4294967295, !dbg !2850
  %206 = icmp eq i64 %205, 1, !dbg !2850
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !2850, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %207(ptr nonnull @.str.833), !dbg !2850
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape, i64 1, !dbg !2850
  %209 = load i64, ptr %208, align 8, !dbg !2850, !tbaa !2967
  %210 = and i64 %209, 4294967295, !dbg !2850
  %211 = icmp eq i64 %210, 64, !dbg !2850
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !2850, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %212(ptr nonnull @.str.834), !dbg !2850
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape, i64 2, !dbg !2850
  %214 = load i64, ptr %213, align 8, !dbg !2850, !tbaa !2969
  %215 = and i64 %214, 4294967295, !dbg !2850
  %216 = icmp eq i64 %215, 56, !dbg !2850
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !2850, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %217(ptr nonnull @.str.835), !dbg !2850
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.shape, i64 3, !dbg !2850
  %219 = load i64, ptr %218, align 8, !dbg !2850, !tbaa !2972
  %220 = and i64 %219, 4294967295, !dbg !2850
  %221 = icmp eq i64 %220, 56, !dbg !2850
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !2850, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %222(ptr nonnull @.str.836), !dbg !2850
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides, null, !dbg !2850
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2850, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides, i64 1, !dbg !2850
  %224 = load i64, ptr %223, align 8, !dbg !2850, !tbaa !2974
  %225 = and i64 %224, 4294967295, !dbg !2850
  %226 = icmp eq i64 %225, 3136, !dbg !2850
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides, i64 2, !dbg !2850
  %228 = load i64, ptr %227, align 8, !dbg !2850, !tbaa !2984
  %229 = and i64 %228, 4294967295, !dbg !2850
  %230 = icmp eq i64 %229, 56, !dbg !2850
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_2.T_relu.strides, i64 3, !dbg !2850
  %232 = load i64, ptr %231, align 8, !dbg !2850, !tbaa !2987
  %233 = and i64 %232, 4294967295, !dbg !2850
  %234 = icmp eq i64 %233, 1, !dbg !2850
  %235 = and i1 %230, %234, !dbg !2850
  %236 = and i1 %226, %235, !dbg !2850
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !2850, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !2850
  %238 = load i64, ptr %237, align 8, !dbg !2850
  %239 = icmp eq i64 %238, 0, !dbg !2850
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !2850, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %240(ptr nonnull @.str.837), !dbg !2850
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %241(ptr nonnull @.str.838), !dbg !2850
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !2850
  %243 = load i32, ptr %242, align 4, !dbg !2850
  %244 = icmp eq i32 %243, 2, !dbg !2850
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !2850, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %245(ptr nonnull @.str.839), !dbg !2850
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !2850
  %247 = load i32, ptr %246, align 4, !dbg !2850
  %248 = icmp eq i32 %dev_id, %247, !dbg !2850
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !2850, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2850, !tbaa !19
  tail call void %249(ptr nonnull @.str.840), !dbg !2850
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2850
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2850, !tbaa !2989
  %250 = sext i32 %dev_id to i64, !dbg !2850
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2850
  store i64 %250, ptr %251, align 8, !dbg !2850
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2850
  store i32 0, ptr %252, align 4, !dbg !2850, !tbaa !3000
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2850
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2850
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2850, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2850
  %.not120 = icmp eq ptr %256, null, !dbg !2850
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2850, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2850, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2850, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !2850
  %260 = icmp eq i32 %259, 0, !dbg !2850
  br i1 %260, label %call_end, label %common.ret, !dbg !2850, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !2850
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !2850
  %263 = icmp eq i32 %262, 0, !dbg !2850
  br i1 %263, label %call_end106, label %common.ret, !dbg !2850, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !2850
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2850
  br label %handle_init_end, !dbg !2850

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_2_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2850
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3002 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3004, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3005, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3006, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3007, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3008, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3009, metadata !DIExpression()), !dbg !3010
  %0 = alloca ptr, align 8, !dbg !3010
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3010
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3010
  %1 = icmp eq i32 %num_args, 4, !dbg !3010
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3010, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3010

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %2(ptr nonnull @.str.842), !dbg !3010
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3010, !tbaa !3011
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3010
  %p1.code = load i32, ptr %3, align 4, !dbg !3010, !tbaa !3022
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3010
  %p2.code = load i32, ptr %4, align 4, !dbg !3010, !tbaa !3024
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3010
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3010, !tbaa !3027
  %p0 = load ptr, ptr %args, align 8, !dbg !3010
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3010
  %p1 = load ptr, ptr %6, align 8, !dbg !3010
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3010
  %p2 = load ptr, ptr %7, align 8, !dbg !3010
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3010
  %T_relu = load ptr, ptr %8, align 8, !dbg !3010
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3010
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3010
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape = load ptr, ptr %9, align 8, !dbg !3010
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides = load ptr, ptr %10, align 8, !dbg !3010
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3010
  %dev_id = load i32, ptr %11, align 4, !dbg !3010
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3010
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3010
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape = load ptr, ptr %12, align 8, !dbg !3010
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.strides = load ptr, ptr %13, align 8, !dbg !3010
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3010
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3010
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape = load ptr, ptr %14, align 8, !dbg !3010
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.strides = load ptr, ptr %15, align 8, !dbg !3010
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3010
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3010
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3010
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3010
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3010
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3010

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %18(ptr nonnull @.str.843), !dbg !3010
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3010

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %19(ptr nonnull @.str.844), !dbg !3010
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3010

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %20(ptr nonnull @.str.845), !dbg !3010
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3010

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %21(ptr nonnull @.str.846), !dbg !3010
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3010
  %23 = load i32, ptr %22, align 4, !dbg !3010
  %24 = icmp eq i32 %23, 4, !dbg !3010
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3010, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %25(ptr nonnull @.str.847), !dbg !3010
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3010
  %27 = load i16, ptr %26, align 2, !dbg !3010
  %28 = icmp eq i16 %27, 1, !dbg !3010
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3010
  %30 = load i8, ptr %29, align 1, !dbg !3010
  %31 = icmp eq i8 %30, 32, !dbg !3010
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3010
  %33 = load i8, ptr %32, align 1, !dbg !3010
  %34 = icmp eq i8 %33, 2, !dbg !3010
  %35 = and i1 %31, %34, !dbg !3010
  %36 = and i1 %28, %35, !dbg !3010
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3010, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %37(ptr nonnull @.str.848), !dbg !3010
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape, align 8, !dbg !3010, !tbaa !3029
  %39 = and i64 %38, 4294967295, !dbg !3010
  %40 = icmp eq i64 %39, 1, !dbg !3010
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3010, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %41(ptr nonnull @.str.849), !dbg !3010
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape, i64 1, !dbg !3010
  %43 = load i64, ptr %42, align 8, !dbg !3010, !tbaa !3039
  %44 = and i64 %43, 4294967295, !dbg !3010
  %45 = icmp eq i64 %44, 256, !dbg !3010
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3010, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %46(ptr nonnull @.str.850), !dbg !3010
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape, i64 2, !dbg !3010
  %48 = load i64, ptr %47, align 8, !dbg !3010, !tbaa !3041
  %49 = and i64 %48, 4294967295, !dbg !3010
  %50 = icmp eq i64 %49, 56, !dbg !3010
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3010, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %51(ptr nonnull @.str.851), !dbg !3010
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.shape, i64 3, !dbg !3010
  %53 = load i64, ptr %52, align 8, !dbg !3010, !tbaa !3044
  %54 = and i64 %53, 4294967295, !dbg !3010
  %55 = icmp eq i64 %54, 56, !dbg !3010
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3010, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %56(ptr nonnull @.str.852), !dbg !3010
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides, null, !dbg !3010
  br i1 %.not, label %if_end, label %if_then, !dbg !3010, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides, i64 1, !dbg !3010
  %58 = load i64, ptr %57, align 8, !dbg !3010, !tbaa !3046
  %59 = and i64 %58, 4294967295, !dbg !3010
  %60 = icmp eq i64 %59, 3136, !dbg !3010
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides, i64 2, !dbg !3010
  %62 = load i64, ptr %61, align 8, !dbg !3010, !tbaa !3056
  %63 = and i64 %62, 4294967295, !dbg !3010
  %64 = icmp eq i64 %63, 56, !dbg !3010
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p0.strides, i64 3, !dbg !3010
  %66 = load i64, ptr %65, align 8, !dbg !3010, !tbaa !3059
  %67 = and i64 %66, 4294967295, !dbg !3010
  %68 = icmp eq i64 %67, 1, !dbg !3010
  %69 = and i1 %64, %68, !dbg !3010
  %70 = and i1 %60, %69, !dbg !3010
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3010, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3010
  %72 = load i64, ptr %71, align 8, !dbg !3010
  %73 = icmp eq i64 %72, 0, !dbg !3010
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3010, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %74(ptr nonnull @.str.853), !dbg !3010
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %75(ptr nonnull @.str.854), !dbg !3010
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3010
  %77 = load i32, ptr %76, align 4, !dbg !3010
  %78 = icmp eq i32 %77, 2, !dbg !3010
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3010, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %79(ptr nonnull @.str.855), !dbg !3010
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3010
  %81 = load i32, ptr %80, align 4, !dbg !3010
  %82 = icmp eq i32 %81, 4, !dbg !3010
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3010, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %83(ptr nonnull @.str.856), !dbg !3010
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3010
  %85 = load i16, ptr %84, align 2, !dbg !3010
  %86 = icmp eq i16 %85, 1, !dbg !3010
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3010
  %88 = load i8, ptr %87, align 1, !dbg !3010
  %89 = icmp eq i8 %88, 32, !dbg !3010
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3010
  %91 = load i8, ptr %90, align 1, !dbg !3010
  %92 = icmp eq i8 %91, 2, !dbg !3010
  %93 = and i1 %89, %92, !dbg !3010
  %94 = and i1 %86, %93, !dbg !3010
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3010, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %95(ptr nonnull @.str.857), !dbg !3010
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape, align 8, !dbg !3010, !tbaa !3061
  %97 = and i64 %96, 4294967295, !dbg !3010
  %98 = icmp eq i64 %97, 128, !dbg !3010
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3010, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %99(ptr nonnull @.str.858), !dbg !3010
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape, i64 1, !dbg !3010
  %101 = load i64, ptr %100, align 8, !dbg !3010, !tbaa !3071
  %102 = and i64 %101, 4294967295, !dbg !3010
  %103 = icmp eq i64 %102, 256, !dbg !3010
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3010, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %104(ptr nonnull @.str.859), !dbg !3010
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape, i64 2, !dbg !3010
  %106 = load i64, ptr %105, align 8, !dbg !3010, !tbaa !3073
  %107 = and i64 %106, 4294967295, !dbg !3010
  %108 = icmp eq i64 %107, 1, !dbg !3010
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3010, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %109(ptr nonnull @.str.860), !dbg !3010
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.shape, i64 3, !dbg !3010
  %111 = load i64, ptr %110, align 8, !dbg !3010, !tbaa !3076
  %112 = and i64 %111, 4294967295, !dbg !3010
  %113 = icmp eq i64 %112, 1, !dbg !3010
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3010, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %114(ptr nonnull @.str.861), !dbg !3010
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.strides, null, !dbg !3010
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3010, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.strides, align 8, !dbg !3010, !tbaa !3078
  %116 = and i64 %115, 4294967295, !dbg !3010
  %117 = icmp eq i64 %116, 256, !dbg !3010
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p1.strides, i64 1, !dbg !3010
  %119 = load i64, ptr %118, align 8, !dbg !3010, !tbaa !3088
  %120 = and i64 %119, 4294967295, !dbg !3010
  %121 = icmp eq i64 %120, 1, !dbg !3010
  %122 = and i1 %117, %121, !dbg !3010
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !3010, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3010
  %124 = load i64, ptr %123, align 8, !dbg !3010
  %125 = icmp eq i64 %124, 0, !dbg !3010
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !3010, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %126(ptr nonnull @.str.862), !dbg !3010
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %127(ptr nonnull @.str.863), !dbg !3010
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3010
  %129 = load i32, ptr %128, align 4, !dbg !3010
  %130 = icmp eq i32 %129, 2, !dbg !3010
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !3010, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %131(ptr nonnull @.str.864), !dbg !3010
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3010
  %133 = load i32, ptr %132, align 4, !dbg !3010
  %134 = icmp eq i32 %dev_id, %133, !dbg !3010
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !3010, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %135(ptr nonnull @.str.865), !dbg !3010
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3010
  %137 = load i32, ptr %136, align 4, !dbg !3010
  %138 = icmp eq i32 %137, 4, !dbg !3010
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !3010, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %139(ptr nonnull @.str.866), !dbg !3010
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3010
  %141 = load i16, ptr %140, align 2, !dbg !3010
  %142 = icmp eq i16 %141, 1, !dbg !3010
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3010
  %144 = load i8, ptr %143, align 1, !dbg !3010
  %145 = icmp eq i8 %144, 32, !dbg !3010
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3010
  %147 = load i8, ptr %146, align 1, !dbg !3010
  %148 = icmp eq i8 %147, 2, !dbg !3010
  %149 = and i1 %145, %148, !dbg !3010
  %150 = and i1 %142, %149, !dbg !3010
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !3010, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %151(ptr nonnull @.str.867), !dbg !3010
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape, align 8, !dbg !3010, !tbaa !3090
  %153 = and i64 %152, 4294967295, !dbg !3010
  %154 = icmp eq i64 %153, 1, !dbg !3010
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !3010, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %155(ptr nonnull @.str.868), !dbg !3010
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape, i64 1, !dbg !3010
  %157 = load i64, ptr %156, align 8, !dbg !3010, !tbaa !3100
  %158 = and i64 %157, 4294967295, !dbg !3010
  %159 = icmp eq i64 %158, 128, !dbg !3010
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !3010, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %160(ptr nonnull @.str.869), !dbg !3010
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape, i64 2, !dbg !3010
  %162 = load i64, ptr %161, align 8, !dbg !3010, !tbaa !3102
  %163 = and i64 %162, 4294967295, !dbg !3010
  %164 = icmp eq i64 %163, 1, !dbg !3010
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !3010, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %165(ptr nonnull @.str.870), !dbg !3010
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.shape, i64 3, !dbg !3010
  %167 = load i64, ptr %166, align 8, !dbg !3010, !tbaa !3105
  %168 = and i64 %167, 4294967295, !dbg !3010
  %169 = icmp eq i64 %168, 1, !dbg !3010
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !3010, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %170(ptr nonnull @.str.871), !dbg !3010
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.strides, null, !dbg !3010
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3010, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.p2.strides, i64 1, !dbg !3010
  %172 = load i64, ptr %171, align 8, !dbg !3010, !tbaa !3107
  %173 = and i64 %172, 4294967295, !dbg !3010
  %174 = icmp eq i64 %173, 1, !dbg !3010
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !3010, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3010
  %176 = load i64, ptr %175, align 8, !dbg !3010
  %177 = icmp eq i64 %176, 0, !dbg !3010
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !3010, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %178(ptr nonnull @.str.872), !dbg !3010
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %179(ptr nonnull @.str.873), !dbg !3010
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3010
  %181 = load i32, ptr %180, align 4, !dbg !3010
  %182 = icmp eq i32 %181, 2, !dbg !3010
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !3010, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %183(ptr nonnull @.str.874), !dbg !3010
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3010
  %185 = load i32, ptr %184, align 4, !dbg !3010
  %186 = icmp eq i32 %dev_id, %185, !dbg !3010
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !3010, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %187(ptr nonnull @.str.875), !dbg !3010
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3010
  %189 = load i32, ptr %188, align 4, !dbg !3010
  %190 = icmp eq i32 %189, 4, !dbg !3010
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !3010, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %191(ptr nonnull @.str.876), !dbg !3010
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3010
  %193 = load i16, ptr %192, align 2, !dbg !3010
  %194 = icmp eq i16 %193, 1, !dbg !3010
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3010
  %196 = load i8, ptr %195, align 1, !dbg !3010
  %197 = icmp eq i8 %196, 32, !dbg !3010
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3010
  %199 = load i8, ptr %198, align 1, !dbg !3010
  %200 = icmp eq i8 %199, 2, !dbg !3010
  %201 = and i1 %197, %200, !dbg !3010
  %202 = and i1 %194, %201, !dbg !3010
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !3010, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %203(ptr nonnull @.str.877), !dbg !3010
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape, align 8, !dbg !3010, !tbaa !3117
  %205 = and i64 %204, 4294967295, !dbg !3010
  %206 = icmp eq i64 %205, 1, !dbg !3010
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !3010, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %207(ptr nonnull @.str.878), !dbg !3010
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape, i64 1, !dbg !3010
  %209 = load i64, ptr %208, align 8, !dbg !3010, !tbaa !3127
  %210 = and i64 %209, 4294967295, !dbg !3010
  %211 = icmp eq i64 %210, 128, !dbg !3010
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !3010, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %212(ptr nonnull @.str.879), !dbg !3010
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape, i64 2, !dbg !3010
  %214 = load i64, ptr %213, align 8, !dbg !3010, !tbaa !3129
  %215 = and i64 %214, 4294967295, !dbg !3010
  %216 = icmp eq i64 %215, 56, !dbg !3010
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !3010, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %217(ptr nonnull @.str.880), !dbg !3010
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.shape, i64 3, !dbg !3010
  %219 = load i64, ptr %218, align 8, !dbg !3010, !tbaa !3132
  %220 = and i64 %219, 4294967295, !dbg !3010
  %221 = icmp eq i64 %220, 56, !dbg !3010
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !3010, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %222(ptr nonnull @.str.881), !dbg !3010
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides, null, !dbg !3010
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3010, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides, i64 1, !dbg !3010
  %224 = load i64, ptr %223, align 8, !dbg !3010, !tbaa !3134
  %225 = and i64 %224, 4294967295, !dbg !3010
  %226 = icmp eq i64 %225, 3136, !dbg !3010
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides, i64 2, !dbg !3010
  %228 = load i64, ptr %227, align 8, !dbg !3010, !tbaa !3144
  %229 = and i64 %228, 4294967295, !dbg !3010
  %230 = icmp eq i64 %229, 56, !dbg !3010
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_3.T_relu.strides, i64 3, !dbg !3010
  %232 = load i64, ptr %231, align 8, !dbg !3010, !tbaa !3147
  %233 = and i64 %232, 4294967295, !dbg !3010
  %234 = icmp eq i64 %233, 1, !dbg !3010
  %235 = and i1 %230, %234, !dbg !3010
  %236 = and i1 %226, %235, !dbg !3010
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !3010, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3010
  %238 = load i64, ptr %237, align 8, !dbg !3010
  %239 = icmp eq i64 %238, 0, !dbg !3010
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !3010, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %240(ptr nonnull @.str.882), !dbg !3010
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %241(ptr nonnull @.str.883), !dbg !3010
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3010
  %243 = load i32, ptr %242, align 4, !dbg !3010
  %244 = icmp eq i32 %243, 2, !dbg !3010
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !3010, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %245(ptr nonnull @.str.884), !dbg !3010
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3010
  %247 = load i32, ptr %246, align 4, !dbg !3010
  %248 = icmp eq i32 %dev_id, %247, !dbg !3010
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !3010, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3010, !tbaa !19
  tail call void %249(ptr nonnull @.str.885), !dbg !3010
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3010
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3010, !tbaa !3149
  %250 = sext i32 %dev_id to i64, !dbg !3010
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3010
  store i64 %250, ptr %251, align 8, !dbg !3010
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3010
  store i32 0, ptr %252, align 4, !dbg !3010, !tbaa !3160
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3010
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3010
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3010, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3010
  %.not120 = icmp eq ptr %256, null, !dbg !3010
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3010, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3010, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3010, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3010
  %260 = icmp eq i32 %259, 0, !dbg !3010
  br i1 %260, label %call_end, label %common.ret, !dbg !3010, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !3010
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !3010
  %263 = icmp eq i32 %262, 0, !dbg !3010
  br i1 %263, label %call_end106, label %common.ret, !dbg !3010, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !3010
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3010
  br label %handle_init_end, !dbg !3010

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_3_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3010
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3162 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3164, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3165, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3166, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3167, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3168, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3169, metadata !DIExpression()), !dbg !3170
  %0 = alloca ptr, align 8, !dbg !3170
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3170
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3170
  %1 = icmp eq i32 %num_args, 4, !dbg !3170
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3170, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3170

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %2(ptr nonnull @.str.887), !dbg !3170
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3170, !tbaa !3171
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3170
  %p1.code = load i32, ptr %3, align 4, !dbg !3170, !tbaa !3182
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3170
  %p2.code = load i32, ptr %4, align 4, !dbg !3170, !tbaa !3184
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3170
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3170, !tbaa !3187
  %p0 = load ptr, ptr %args, align 8, !dbg !3170
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3170
  %p1 = load ptr, ptr %6, align 8, !dbg !3170
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3170
  %p2 = load ptr, ptr %7, align 8, !dbg !3170
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3170
  %T_relu = load ptr, ptr %8, align 8, !dbg !3170
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3170
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3170
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape = load ptr, ptr %9, align 8, !dbg !3170
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides = load ptr, ptr %10, align 8, !dbg !3170
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3170
  %dev_id = load i32, ptr %11, align 4, !dbg !3170
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3170
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3170
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape = load ptr, ptr %12, align 8, !dbg !3170
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides = load ptr, ptr %13, align 8, !dbg !3170
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3170
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3170
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape = load ptr, ptr %14, align 8, !dbg !3170
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.strides = load ptr, ptr %15, align 8, !dbg !3170
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3170
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3170
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3170
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3170
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3170
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3170

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %18(ptr nonnull @.str.888), !dbg !3170
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3170

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %19(ptr nonnull @.str.889), !dbg !3170
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3170

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %20(ptr nonnull @.str.890), !dbg !3170
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3170

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %21(ptr nonnull @.str.891), !dbg !3170
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3170
  %23 = load i32, ptr %22, align 4, !dbg !3170
  %24 = icmp eq i32 %23, 4, !dbg !3170
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3170, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %25(ptr nonnull @.str.892), !dbg !3170
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3170
  %27 = load i16, ptr %26, align 2, !dbg !3170
  %28 = icmp eq i16 %27, 1, !dbg !3170
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3170
  %30 = load i8, ptr %29, align 1, !dbg !3170
  %31 = icmp eq i8 %30, 32, !dbg !3170
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3170
  %33 = load i8, ptr %32, align 1, !dbg !3170
  %34 = icmp eq i8 %33, 2, !dbg !3170
  %35 = and i1 %31, %34, !dbg !3170
  %36 = and i1 %28, %35, !dbg !3170
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3170, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %37(ptr nonnull @.str.893), !dbg !3170
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape, align 8, !dbg !3170, !tbaa !3189
  %39 = and i64 %38, 4294967295, !dbg !3170
  %40 = icmp eq i64 %39, 1, !dbg !3170
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3170, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %41(ptr nonnull @.str.894), !dbg !3170
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape, i64 1, !dbg !3170
  %43 = load i64, ptr %42, align 8, !dbg !3170, !tbaa !3199
  %44 = and i64 %43, 4294967295, !dbg !3170
  %45 = icmp eq i64 %44, 128, !dbg !3170
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3170, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %46(ptr nonnull @.str.895), !dbg !3170
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape, i64 2, !dbg !3170
  %48 = load i64, ptr %47, align 8, !dbg !3170, !tbaa !3201
  %49 = and i64 %48, 4294967295, !dbg !3170
  %50 = icmp eq i64 %49, 56, !dbg !3170
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3170, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %51(ptr nonnull @.str.896), !dbg !3170
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.shape, i64 3, !dbg !3170
  %53 = load i64, ptr %52, align 8, !dbg !3170, !tbaa !3204
  %54 = and i64 %53, 4294967295, !dbg !3170
  %55 = icmp eq i64 %54, 56, !dbg !3170
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3170, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %56(ptr nonnull @.str.897), !dbg !3170
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides, null, !dbg !3170
  br i1 %.not, label %if_end, label %if_then, !dbg !3170, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides, i64 1, !dbg !3170
  %58 = load i64, ptr %57, align 8, !dbg !3170, !tbaa !3206
  %59 = and i64 %58, 4294967295, !dbg !3170
  %60 = icmp eq i64 %59, 3136, !dbg !3170
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides, i64 2, !dbg !3170
  %62 = load i64, ptr %61, align 8, !dbg !3170, !tbaa !3216
  %63 = and i64 %62, 4294967295, !dbg !3170
  %64 = icmp eq i64 %63, 56, !dbg !3170
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p0.strides, i64 3, !dbg !3170
  %66 = load i64, ptr %65, align 8, !dbg !3170, !tbaa !3219
  %67 = and i64 %66, 4294967295, !dbg !3170
  %68 = icmp eq i64 %67, 1, !dbg !3170
  %69 = and i1 %64, %68, !dbg !3170
  %70 = and i1 %60, %69, !dbg !3170
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3170, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3170
  %72 = load i64, ptr %71, align 8, !dbg !3170
  %73 = icmp eq i64 %72, 0, !dbg !3170
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3170, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %74(ptr nonnull @.str.898), !dbg !3170
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %75(ptr nonnull @.str.899), !dbg !3170
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3170
  %77 = load i32, ptr %76, align 4, !dbg !3170
  %78 = icmp eq i32 %77, 2, !dbg !3170
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3170, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %79(ptr nonnull @.str.900), !dbg !3170
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3170
  %81 = load i32, ptr %80, align 4, !dbg !3170
  %82 = icmp eq i32 %81, 4, !dbg !3170
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3170, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %83(ptr nonnull @.str.901), !dbg !3170
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3170
  %85 = load i16, ptr %84, align 2, !dbg !3170
  %86 = icmp eq i16 %85, 1, !dbg !3170
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3170
  %88 = load i8, ptr %87, align 1, !dbg !3170
  %89 = icmp eq i8 %88, 32, !dbg !3170
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3170
  %91 = load i8, ptr %90, align 1, !dbg !3170
  %92 = icmp eq i8 %91, 2, !dbg !3170
  %93 = and i1 %89, %92, !dbg !3170
  %94 = and i1 %86, %93, !dbg !3170
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3170, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %95(ptr nonnull @.str.902), !dbg !3170
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape, align 8, !dbg !3170, !tbaa !3221
  %97 = and i64 %96, 4294967295, !dbg !3170
  %98 = icmp eq i64 %97, 128, !dbg !3170
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3170, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %99(ptr nonnull @.str.903), !dbg !3170
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape, i64 1, !dbg !3170
  %101 = load i64, ptr %100, align 8, !dbg !3170, !tbaa !3231
  %102 = and i64 %101, 4294967295, !dbg !3170
  %103 = icmp eq i64 %102, 128, !dbg !3170
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3170, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %104(ptr nonnull @.str.904), !dbg !3170
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape, i64 2, !dbg !3170
  %106 = load i64, ptr %105, align 8, !dbg !3170, !tbaa !3233
  %107 = and i64 %106, 4294967295, !dbg !3170
  %108 = icmp eq i64 %107, 3, !dbg !3170
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3170, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %109(ptr nonnull @.str.905), !dbg !3170
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.shape, i64 3, !dbg !3170
  %111 = load i64, ptr %110, align 8, !dbg !3170, !tbaa !3236
  %112 = and i64 %111, 4294967295, !dbg !3170
  %113 = icmp eq i64 %112, 3, !dbg !3170
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3170, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %114(ptr nonnull @.str.906), !dbg !3170
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides, null, !dbg !3170
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3170, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides, align 8, !dbg !3170, !tbaa !3238
  %116 = and i64 %115, 4294967295, !dbg !3170
  %117 = icmp eq i64 %116, 1152, !dbg !3170
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides, i64 1, !dbg !3170
  %119 = load i64, ptr %118, align 8, !dbg !3170, !tbaa !3248
  %120 = and i64 %119, 4294967295, !dbg !3170
  %121 = icmp eq i64 %120, 9, !dbg !3170
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides, i64 2, !dbg !3170
  %123 = load i64, ptr %122, align 8, !dbg !3170, !tbaa !3250
  %124 = and i64 %123, 4294967295, !dbg !3170
  %125 = icmp eq i64 %124, 3, !dbg !3170
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p1.strides, i64 3, !dbg !3170
  %127 = load i64, ptr %126, align 8, !dbg !3170, !tbaa !3253
  %128 = and i64 %127, 4294967295, !dbg !3170
  %129 = icmp eq i64 %128, 1, !dbg !3170
  %130 = and i1 %125, %129, !dbg !3170
  %131 = and i1 %121, %130, !dbg !3170
  %132 = and i1 %117, %131, !dbg !3170
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !3170, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3170
  %134 = load i64, ptr %133, align 8, !dbg !3170
  %135 = icmp eq i64 %134, 0, !dbg !3170
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !3170, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %136(ptr nonnull @.str.907), !dbg !3170
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %137(ptr nonnull @.str.908), !dbg !3170
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3170
  %139 = load i32, ptr %138, align 4, !dbg !3170
  %140 = icmp eq i32 %139, 2, !dbg !3170
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !3170, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %141(ptr nonnull @.str.909), !dbg !3170
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3170
  %143 = load i32, ptr %142, align 4, !dbg !3170
  %144 = icmp eq i32 %dev_id, %143, !dbg !3170
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !3170, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %145(ptr nonnull @.str.910), !dbg !3170
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3170
  %147 = load i32, ptr %146, align 4, !dbg !3170
  %148 = icmp eq i32 %147, 4, !dbg !3170
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !3170, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %149(ptr nonnull @.str.911), !dbg !3170
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3170
  %151 = load i16, ptr %150, align 2, !dbg !3170
  %152 = icmp eq i16 %151, 1, !dbg !3170
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3170
  %154 = load i8, ptr %153, align 1, !dbg !3170
  %155 = icmp eq i8 %154, 32, !dbg !3170
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3170
  %157 = load i8, ptr %156, align 1, !dbg !3170
  %158 = icmp eq i8 %157, 2, !dbg !3170
  %159 = and i1 %155, %158, !dbg !3170
  %160 = and i1 %152, %159, !dbg !3170
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !3170, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %161(ptr nonnull @.str.912), !dbg !3170
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape, align 8, !dbg !3170, !tbaa !3255
  %163 = and i64 %162, 4294967295, !dbg !3170
  %164 = icmp eq i64 %163, 1, !dbg !3170
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !3170, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %165(ptr nonnull @.str.913), !dbg !3170
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape, i64 1, !dbg !3170
  %167 = load i64, ptr %166, align 8, !dbg !3170, !tbaa !3265
  %168 = and i64 %167, 4294967295, !dbg !3170
  %169 = icmp eq i64 %168, 128, !dbg !3170
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !3170, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %170(ptr nonnull @.str.914), !dbg !3170
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape, i64 2, !dbg !3170
  %172 = load i64, ptr %171, align 8, !dbg !3170, !tbaa !3267
  %173 = and i64 %172, 4294967295, !dbg !3170
  %174 = icmp eq i64 %173, 1, !dbg !3170
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !3170, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %175(ptr nonnull @.str.915), !dbg !3170
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.shape, i64 3, !dbg !3170
  %177 = load i64, ptr %176, align 8, !dbg !3170, !tbaa !3270
  %178 = and i64 %177, 4294967295, !dbg !3170
  %179 = icmp eq i64 %178, 1, !dbg !3170
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !3170, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %180(ptr nonnull @.str.916), !dbg !3170
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.strides, null, !dbg !3170
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3170, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.p2.strides, i64 1, !dbg !3170
  %182 = load i64, ptr %181, align 8, !dbg !3170, !tbaa !3272
  %183 = and i64 %182, 4294967295, !dbg !3170
  %184 = icmp eq i64 %183, 1, !dbg !3170
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !3170, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3170
  %186 = load i64, ptr %185, align 8, !dbg !3170
  %187 = icmp eq i64 %186, 0, !dbg !3170
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !3170, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %188(ptr nonnull @.str.917), !dbg !3170
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %189(ptr nonnull @.str.918), !dbg !3170
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3170
  %191 = load i32, ptr %190, align 4, !dbg !3170
  %192 = icmp eq i32 %191, 2, !dbg !3170
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !3170, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %193(ptr nonnull @.str.919), !dbg !3170
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3170
  %195 = load i32, ptr %194, align 4, !dbg !3170
  %196 = icmp eq i32 %dev_id, %195, !dbg !3170
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !3170, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %197(ptr nonnull @.str.920), !dbg !3170
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3170
  %199 = load i32, ptr %198, align 4, !dbg !3170
  %200 = icmp eq i32 %199, 4, !dbg !3170
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !3170, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %201(ptr nonnull @.str.921), !dbg !3170
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3170
  %203 = load i16, ptr %202, align 2, !dbg !3170
  %204 = icmp eq i16 %203, 1, !dbg !3170
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3170
  %206 = load i8, ptr %205, align 1, !dbg !3170
  %207 = icmp eq i8 %206, 32, !dbg !3170
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3170
  %209 = load i8, ptr %208, align 1, !dbg !3170
  %210 = icmp eq i8 %209, 2, !dbg !3170
  %211 = and i1 %207, %210, !dbg !3170
  %212 = and i1 %204, %211, !dbg !3170
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !3170, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %213(ptr nonnull @.str.922), !dbg !3170
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape, align 8, !dbg !3170, !tbaa !3282
  %215 = and i64 %214, 4294967295, !dbg !3170
  %216 = icmp eq i64 %215, 1, !dbg !3170
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !3170, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %217(ptr nonnull @.str.923), !dbg !3170
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape, i64 1, !dbg !3170
  %219 = load i64, ptr %218, align 8, !dbg !3170, !tbaa !3292
  %220 = and i64 %219, 4294967295, !dbg !3170
  %221 = icmp eq i64 %220, 128, !dbg !3170
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !3170, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %222(ptr nonnull @.str.924), !dbg !3170
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape, i64 2, !dbg !3170
  %224 = load i64, ptr %223, align 8, !dbg !3170, !tbaa !3294
  %225 = and i64 %224, 4294967295, !dbg !3170
  %226 = icmp eq i64 %225, 28, !dbg !3170
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !3170, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %227(ptr nonnull @.str.925), !dbg !3170
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.shape, i64 3, !dbg !3170
  %229 = load i64, ptr %228, align 8, !dbg !3170, !tbaa !3297
  %230 = and i64 %229, 4294967295, !dbg !3170
  %231 = icmp eq i64 %230, 28, !dbg !3170
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !3170, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %232(ptr nonnull @.str.926), !dbg !3170
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides, null, !dbg !3170
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3170, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides, i64 1, !dbg !3170
  %234 = load i64, ptr %233, align 8, !dbg !3170, !tbaa !3299
  %235 = and i64 %234, 4294967295, !dbg !3170
  %236 = icmp eq i64 %235, 784, !dbg !3170
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides, i64 2, !dbg !3170
  %238 = load i64, ptr %237, align 8, !dbg !3170, !tbaa !3309
  %239 = and i64 %238, 4294967295, !dbg !3170
  %240 = icmp eq i64 %239, 28, !dbg !3170
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_4.T_relu.strides, i64 3, !dbg !3170
  %242 = load i64, ptr %241, align 8, !dbg !3170, !tbaa !3312
  %243 = and i64 %242, 4294967295, !dbg !3170
  %244 = icmp eq i64 %243, 1, !dbg !3170
  %245 = and i1 %240, %244, !dbg !3170
  %246 = and i1 %236, %245, !dbg !3170
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !3170, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3170
  %248 = load i64, ptr %247, align 8, !dbg !3170
  %249 = icmp eq i64 %248, 0, !dbg !3170
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !3170, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %250(ptr nonnull @.str.927), !dbg !3170
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %251(ptr nonnull @.str.928), !dbg !3170
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3170
  %253 = load i32, ptr %252, align 4, !dbg !3170
  %254 = icmp eq i32 %253, 2, !dbg !3170
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !3170, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %255(ptr nonnull @.str.929), !dbg !3170
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3170
  %257 = load i32, ptr %256, align 4, !dbg !3170
  %258 = icmp eq i32 %dev_id, %257, !dbg !3170
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !3170, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3170, !tbaa !19
  tail call void %259(ptr nonnull @.str.930), !dbg !3170
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3170
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3170, !tbaa !3314
  %260 = sext i32 %dev_id to i64, !dbg !3170
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3170
  store i64 %260, ptr %261, align 8, !dbg !3170
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3170
  store i32 0, ptr %262, align 4, !dbg !3170, !tbaa !3325
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3170
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3170
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3170, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3170
  %.not120 = icmp eq ptr %266, null, !dbg !3170
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3170, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3170, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3170, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3170
  %270 = icmp eq i32 %269, 0, !dbg !3170
  br i1 %270, label %call_end, label %common.ret, !dbg !3170, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !3170
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !3170
  %273 = icmp eq i32 %272, 0, !dbg !3170
  br i1 %273, label %call_end106, label %common.ret, !dbg !3170, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !3170
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3170
  br label %handle_init_end, !dbg !3170

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_4_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3170
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3327 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3329, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3330, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3331, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3332, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3333, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3334, metadata !DIExpression()), !dbg !3335
  %0 = alloca ptr, align 8, !dbg !3335
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3335
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3335
  %1 = icmp eq i32 %num_args, 4, !dbg !3335
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3335, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3335

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %2(ptr nonnull @.str.932), !dbg !3335
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3335, !tbaa !3336
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3335
  %p1.code = load i32, ptr %3, align 4, !dbg !3335, !tbaa !3347
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3335
  %p2.code = load i32, ptr %4, align 4, !dbg !3335, !tbaa !3349
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3335
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3335, !tbaa !3352
  %p0 = load ptr, ptr %args, align 8, !dbg !3335
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3335
  %p1 = load ptr, ptr %6, align 8, !dbg !3335
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3335
  %p2 = load ptr, ptr %7, align 8, !dbg !3335
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3335
  %T_relu = load ptr, ptr %8, align 8, !dbg !3335
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3335
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3335
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape = load ptr, ptr %9, align 8, !dbg !3335
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides = load ptr, ptr %10, align 8, !dbg !3335
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3335
  %dev_id = load i32, ptr %11, align 4, !dbg !3335
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3335
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3335
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape = load ptr, ptr %12, align 8, !dbg !3335
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.strides = load ptr, ptr %13, align 8, !dbg !3335
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3335
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3335
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape = load ptr, ptr %14, align 8, !dbg !3335
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.strides = load ptr, ptr %15, align 8, !dbg !3335
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3335
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3335
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3335
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3335
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3335
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3335

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %18(ptr nonnull @.str.933), !dbg !3335
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3335

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %19(ptr nonnull @.str.934), !dbg !3335
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3335

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %20(ptr nonnull @.str.935), !dbg !3335
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3335

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %21(ptr nonnull @.str.936), !dbg !3335
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3335
  %23 = load i32, ptr %22, align 4, !dbg !3335
  %24 = icmp eq i32 %23, 4, !dbg !3335
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3335, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %25(ptr nonnull @.str.937), !dbg !3335
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3335
  %27 = load i16, ptr %26, align 2, !dbg !3335
  %28 = icmp eq i16 %27, 1, !dbg !3335
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3335
  %30 = load i8, ptr %29, align 1, !dbg !3335
  %31 = icmp eq i8 %30, 32, !dbg !3335
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3335
  %33 = load i8, ptr %32, align 1, !dbg !3335
  %34 = icmp eq i8 %33, 2, !dbg !3335
  %35 = and i1 %31, %34, !dbg !3335
  %36 = and i1 %28, %35, !dbg !3335
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3335, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %37(ptr nonnull @.str.938), !dbg !3335
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape, align 8, !dbg !3335, !tbaa !3354
  %39 = and i64 %38, 4294967295, !dbg !3335
  %40 = icmp eq i64 %39, 1, !dbg !3335
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3335, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %41(ptr nonnull @.str.939), !dbg !3335
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape, i64 1, !dbg !3335
  %43 = load i64, ptr %42, align 8, !dbg !3335, !tbaa !3364
  %44 = and i64 %43, 4294967295, !dbg !3335
  %45 = icmp eq i64 %44, 512, !dbg !3335
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3335, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %46(ptr nonnull @.str.940), !dbg !3335
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape, i64 2, !dbg !3335
  %48 = load i64, ptr %47, align 8, !dbg !3335, !tbaa !3366
  %49 = and i64 %48, 4294967295, !dbg !3335
  %50 = icmp eq i64 %49, 28, !dbg !3335
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3335, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %51(ptr nonnull @.str.941), !dbg !3335
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.shape, i64 3, !dbg !3335
  %53 = load i64, ptr %52, align 8, !dbg !3335, !tbaa !3369
  %54 = and i64 %53, 4294967295, !dbg !3335
  %55 = icmp eq i64 %54, 28, !dbg !3335
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3335, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %56(ptr nonnull @.str.942), !dbg !3335
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides, null, !dbg !3335
  br i1 %.not, label %if_end, label %if_then, !dbg !3335, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides, i64 1, !dbg !3335
  %58 = load i64, ptr %57, align 8, !dbg !3335, !tbaa !3371
  %59 = and i64 %58, 4294967295, !dbg !3335
  %60 = icmp eq i64 %59, 784, !dbg !3335
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides, i64 2, !dbg !3335
  %62 = load i64, ptr %61, align 8, !dbg !3335, !tbaa !3381
  %63 = and i64 %62, 4294967295, !dbg !3335
  %64 = icmp eq i64 %63, 28, !dbg !3335
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p0.strides, i64 3, !dbg !3335
  %66 = load i64, ptr %65, align 8, !dbg !3335, !tbaa !3384
  %67 = and i64 %66, 4294967295, !dbg !3335
  %68 = icmp eq i64 %67, 1, !dbg !3335
  %69 = and i1 %64, %68, !dbg !3335
  %70 = and i1 %60, %69, !dbg !3335
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3335, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3335
  %72 = load i64, ptr %71, align 8, !dbg !3335
  %73 = icmp eq i64 %72, 0, !dbg !3335
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3335, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %74(ptr nonnull @.str.943), !dbg !3335
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %75(ptr nonnull @.str.944), !dbg !3335
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3335
  %77 = load i32, ptr %76, align 4, !dbg !3335
  %78 = icmp eq i32 %77, 2, !dbg !3335
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3335, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %79(ptr nonnull @.str.945), !dbg !3335
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3335
  %81 = load i32, ptr %80, align 4, !dbg !3335
  %82 = icmp eq i32 %81, 4, !dbg !3335
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3335, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %83(ptr nonnull @.str.946), !dbg !3335
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3335
  %85 = load i16, ptr %84, align 2, !dbg !3335
  %86 = icmp eq i16 %85, 1, !dbg !3335
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3335
  %88 = load i8, ptr %87, align 1, !dbg !3335
  %89 = icmp eq i8 %88, 32, !dbg !3335
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3335
  %91 = load i8, ptr %90, align 1, !dbg !3335
  %92 = icmp eq i8 %91, 2, !dbg !3335
  %93 = and i1 %89, %92, !dbg !3335
  %94 = and i1 %86, %93, !dbg !3335
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3335, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %95(ptr nonnull @.str.947), !dbg !3335
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape, align 8, !dbg !3335, !tbaa !3386
  %97 = and i64 %96, 4294967295, !dbg !3335
  %98 = icmp eq i64 %97, 128, !dbg !3335
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3335, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %99(ptr nonnull @.str.948), !dbg !3335
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape, i64 1, !dbg !3335
  %101 = load i64, ptr %100, align 8, !dbg !3335, !tbaa !3396
  %102 = and i64 %101, 4294967295, !dbg !3335
  %103 = icmp eq i64 %102, 512, !dbg !3335
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3335, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %104(ptr nonnull @.str.949), !dbg !3335
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape, i64 2, !dbg !3335
  %106 = load i64, ptr %105, align 8, !dbg !3335, !tbaa !3398
  %107 = and i64 %106, 4294967295, !dbg !3335
  %108 = icmp eq i64 %107, 1, !dbg !3335
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3335, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %109(ptr nonnull @.str.950), !dbg !3335
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.shape, i64 3, !dbg !3335
  %111 = load i64, ptr %110, align 8, !dbg !3335, !tbaa !3401
  %112 = and i64 %111, 4294967295, !dbg !3335
  %113 = icmp eq i64 %112, 1, !dbg !3335
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3335, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %114(ptr nonnull @.str.951), !dbg !3335
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.strides, null, !dbg !3335
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3335, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.strides, align 8, !dbg !3335, !tbaa !3403
  %116 = and i64 %115, 4294967295, !dbg !3335
  %117 = icmp eq i64 %116, 512, !dbg !3335
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p1.strides, i64 1, !dbg !3335
  %119 = load i64, ptr %118, align 8, !dbg !3335, !tbaa !3413
  %120 = and i64 %119, 4294967295, !dbg !3335
  %121 = icmp eq i64 %120, 1, !dbg !3335
  %122 = and i1 %117, %121, !dbg !3335
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !3335, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3335
  %124 = load i64, ptr %123, align 8, !dbg !3335
  %125 = icmp eq i64 %124, 0, !dbg !3335
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !3335, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %126(ptr nonnull @.str.952), !dbg !3335
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %127(ptr nonnull @.str.953), !dbg !3335
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3335
  %129 = load i32, ptr %128, align 4, !dbg !3335
  %130 = icmp eq i32 %129, 2, !dbg !3335
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !3335, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %131(ptr nonnull @.str.954), !dbg !3335
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3335
  %133 = load i32, ptr %132, align 4, !dbg !3335
  %134 = icmp eq i32 %dev_id, %133, !dbg !3335
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !3335, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %135(ptr nonnull @.str.955), !dbg !3335
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3335
  %137 = load i32, ptr %136, align 4, !dbg !3335
  %138 = icmp eq i32 %137, 4, !dbg !3335
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !3335, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %139(ptr nonnull @.str.956), !dbg !3335
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3335
  %141 = load i16, ptr %140, align 2, !dbg !3335
  %142 = icmp eq i16 %141, 1, !dbg !3335
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3335
  %144 = load i8, ptr %143, align 1, !dbg !3335
  %145 = icmp eq i8 %144, 32, !dbg !3335
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3335
  %147 = load i8, ptr %146, align 1, !dbg !3335
  %148 = icmp eq i8 %147, 2, !dbg !3335
  %149 = and i1 %145, %148, !dbg !3335
  %150 = and i1 %142, %149, !dbg !3335
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !3335, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %151(ptr nonnull @.str.957), !dbg !3335
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape, align 8, !dbg !3335, !tbaa !3415
  %153 = and i64 %152, 4294967295, !dbg !3335
  %154 = icmp eq i64 %153, 1, !dbg !3335
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !3335, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %155(ptr nonnull @.str.958), !dbg !3335
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape, i64 1, !dbg !3335
  %157 = load i64, ptr %156, align 8, !dbg !3335, !tbaa !3425
  %158 = and i64 %157, 4294967295, !dbg !3335
  %159 = icmp eq i64 %158, 128, !dbg !3335
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !3335, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %160(ptr nonnull @.str.959), !dbg !3335
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape, i64 2, !dbg !3335
  %162 = load i64, ptr %161, align 8, !dbg !3335, !tbaa !3427
  %163 = and i64 %162, 4294967295, !dbg !3335
  %164 = icmp eq i64 %163, 1, !dbg !3335
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !3335, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %165(ptr nonnull @.str.960), !dbg !3335
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.shape, i64 3, !dbg !3335
  %167 = load i64, ptr %166, align 8, !dbg !3335, !tbaa !3430
  %168 = and i64 %167, 4294967295, !dbg !3335
  %169 = icmp eq i64 %168, 1, !dbg !3335
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !3335, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %170(ptr nonnull @.str.961), !dbg !3335
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.strides, null, !dbg !3335
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3335, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.p2.strides, i64 1, !dbg !3335
  %172 = load i64, ptr %171, align 8, !dbg !3335, !tbaa !3432
  %173 = and i64 %172, 4294967295, !dbg !3335
  %174 = icmp eq i64 %173, 1, !dbg !3335
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !3335, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3335
  %176 = load i64, ptr %175, align 8, !dbg !3335
  %177 = icmp eq i64 %176, 0, !dbg !3335
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !3335, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %178(ptr nonnull @.str.962), !dbg !3335
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %179(ptr nonnull @.str.963), !dbg !3335
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3335
  %181 = load i32, ptr %180, align 4, !dbg !3335
  %182 = icmp eq i32 %181, 2, !dbg !3335
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !3335, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %183(ptr nonnull @.str.964), !dbg !3335
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3335
  %185 = load i32, ptr %184, align 4, !dbg !3335
  %186 = icmp eq i32 %dev_id, %185, !dbg !3335
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !3335, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %187(ptr nonnull @.str.965), !dbg !3335
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3335
  %189 = load i32, ptr %188, align 4, !dbg !3335
  %190 = icmp eq i32 %189, 4, !dbg !3335
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !3335, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %191(ptr nonnull @.str.966), !dbg !3335
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3335
  %193 = load i16, ptr %192, align 2, !dbg !3335
  %194 = icmp eq i16 %193, 1, !dbg !3335
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3335
  %196 = load i8, ptr %195, align 1, !dbg !3335
  %197 = icmp eq i8 %196, 32, !dbg !3335
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3335
  %199 = load i8, ptr %198, align 1, !dbg !3335
  %200 = icmp eq i8 %199, 2, !dbg !3335
  %201 = and i1 %197, %200, !dbg !3335
  %202 = and i1 %194, %201, !dbg !3335
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !3335, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %203(ptr nonnull @.str.967), !dbg !3335
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape, align 8, !dbg !3335, !tbaa !3442
  %205 = and i64 %204, 4294967295, !dbg !3335
  %206 = icmp eq i64 %205, 1, !dbg !3335
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !3335, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %207(ptr nonnull @.str.968), !dbg !3335
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape, i64 1, !dbg !3335
  %209 = load i64, ptr %208, align 8, !dbg !3335, !tbaa !3452
  %210 = and i64 %209, 4294967295, !dbg !3335
  %211 = icmp eq i64 %210, 128, !dbg !3335
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !3335, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %212(ptr nonnull @.str.969), !dbg !3335
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape, i64 2, !dbg !3335
  %214 = load i64, ptr %213, align 8, !dbg !3335, !tbaa !3454
  %215 = and i64 %214, 4294967295, !dbg !3335
  %216 = icmp eq i64 %215, 28, !dbg !3335
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !3335, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %217(ptr nonnull @.str.970), !dbg !3335
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.shape, i64 3, !dbg !3335
  %219 = load i64, ptr %218, align 8, !dbg !3335, !tbaa !3457
  %220 = and i64 %219, 4294967295, !dbg !3335
  %221 = icmp eq i64 %220, 28, !dbg !3335
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !3335, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %222(ptr nonnull @.str.971), !dbg !3335
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides, null, !dbg !3335
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3335, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides, i64 1, !dbg !3335
  %224 = load i64, ptr %223, align 8, !dbg !3335, !tbaa !3459
  %225 = and i64 %224, 4294967295, !dbg !3335
  %226 = icmp eq i64 %225, 784, !dbg !3335
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides, i64 2, !dbg !3335
  %228 = load i64, ptr %227, align 8, !dbg !3335, !tbaa !3469
  %229 = and i64 %228, 4294967295, !dbg !3335
  %230 = icmp eq i64 %229, 28, !dbg !3335
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_5.T_relu.strides, i64 3, !dbg !3335
  %232 = load i64, ptr %231, align 8, !dbg !3335, !tbaa !3472
  %233 = and i64 %232, 4294967295, !dbg !3335
  %234 = icmp eq i64 %233, 1, !dbg !3335
  %235 = and i1 %230, %234, !dbg !3335
  %236 = and i1 %226, %235, !dbg !3335
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !3335, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3335
  %238 = load i64, ptr %237, align 8, !dbg !3335
  %239 = icmp eq i64 %238, 0, !dbg !3335
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !3335, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %240(ptr nonnull @.str.972), !dbg !3335
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %241(ptr nonnull @.str.973), !dbg !3335
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3335
  %243 = load i32, ptr %242, align 4, !dbg !3335
  %244 = icmp eq i32 %243, 2, !dbg !3335
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !3335, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %245(ptr nonnull @.str.974), !dbg !3335
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3335
  %247 = load i32, ptr %246, align 4, !dbg !3335
  %248 = icmp eq i32 %dev_id, %247, !dbg !3335
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !3335, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3335, !tbaa !19
  tail call void %249(ptr nonnull @.str.975), !dbg !3335
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3335
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3335, !tbaa !3474
  %250 = sext i32 %dev_id to i64, !dbg !3335
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3335
  store i64 %250, ptr %251, align 8, !dbg !3335
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3335
  store i32 0, ptr %252, align 4, !dbg !3335, !tbaa !3485
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3335
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3335
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3335, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3335
  %.not120 = icmp eq ptr %256, null, !dbg !3335
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3335, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3335, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3335, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3335
  %260 = icmp eq i32 %259, 0, !dbg !3335
  br i1 %260, label %call_end, label %common.ret, !dbg !3335, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !3335
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !3335
  %263 = icmp eq i32 %262, 0, !dbg !3335
  br i1 %263, label %call_end106, label %common.ret, !dbg !3335, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !3335
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3335
  br label %handle_init_end, !dbg !3335

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_5_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3335
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3487 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3489, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3490, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3491, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3492, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3494, metadata !DIExpression()), !dbg !3495
  %0 = alloca ptr, align 8, !dbg !3495
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3495
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3495
  %1 = icmp eq i32 %num_args, 4, !dbg !3495
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3495, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3495

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %2(ptr nonnull @.str.977), !dbg !3495
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3495, !tbaa !3496
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3495
  %p1.code = load i32, ptr %3, align 4, !dbg !3495, !tbaa !3507
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3495
  %p2.code = load i32, ptr %4, align 4, !dbg !3495, !tbaa !3509
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3495
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3495, !tbaa !3512
  %p0 = load ptr, ptr %args, align 8, !dbg !3495
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3495
  %p1 = load ptr, ptr %6, align 8, !dbg !3495
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3495
  %p2 = load ptr, ptr %7, align 8, !dbg !3495
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3495
  %T_relu = load ptr, ptr %8, align 8, !dbg !3495
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3495
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3495
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape = load ptr, ptr %9, align 8, !dbg !3495
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides = load ptr, ptr %10, align 8, !dbg !3495
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3495
  %dev_id = load i32, ptr %11, align 4, !dbg !3495
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3495
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3495
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape = load ptr, ptr %12, align 8, !dbg !3495
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.strides = load ptr, ptr %13, align 8, !dbg !3495
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3495
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3495
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape = load ptr, ptr %14, align 8, !dbg !3495
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.strides = load ptr, ptr %15, align 8, !dbg !3495
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3495
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3495
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3495
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3495
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3495
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3495

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %18(ptr nonnull @.str.978), !dbg !3495
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3495

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %19(ptr nonnull @.str.979), !dbg !3495
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3495

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %20(ptr nonnull @.str.980), !dbg !3495
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3495

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %21(ptr nonnull @.str.981), !dbg !3495
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3495
  %23 = load i32, ptr %22, align 4, !dbg !3495
  %24 = icmp eq i32 %23, 4, !dbg !3495
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3495, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %25(ptr nonnull @.str.982), !dbg !3495
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3495
  %27 = load i16, ptr %26, align 2, !dbg !3495
  %28 = icmp eq i16 %27, 1, !dbg !3495
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3495
  %30 = load i8, ptr %29, align 1, !dbg !3495
  %31 = icmp eq i8 %30, 32, !dbg !3495
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3495
  %33 = load i8, ptr %32, align 1, !dbg !3495
  %34 = icmp eq i8 %33, 2, !dbg !3495
  %35 = and i1 %31, %34, !dbg !3495
  %36 = and i1 %28, %35, !dbg !3495
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3495, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %37(ptr nonnull @.str.983), !dbg !3495
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape, align 8, !dbg !3495, !tbaa !3514
  %39 = and i64 %38, 4294967295, !dbg !3495
  %40 = icmp eq i64 %39, 1, !dbg !3495
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3495, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %41(ptr nonnull @.str.984), !dbg !3495
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape, i64 1, !dbg !3495
  %43 = load i64, ptr %42, align 8, !dbg !3495, !tbaa !3524
  %44 = and i64 %43, 4294967295, !dbg !3495
  %45 = icmp eq i64 %44, 512, !dbg !3495
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3495, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %46(ptr nonnull @.str.985), !dbg !3495
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape, i64 2, !dbg !3495
  %48 = load i64, ptr %47, align 8, !dbg !3495, !tbaa !3526
  %49 = and i64 %48, 4294967295, !dbg !3495
  %50 = icmp eq i64 %49, 28, !dbg !3495
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3495, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %51(ptr nonnull @.str.986), !dbg !3495
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.shape, i64 3, !dbg !3495
  %53 = load i64, ptr %52, align 8, !dbg !3495, !tbaa !3529
  %54 = and i64 %53, 4294967295, !dbg !3495
  %55 = icmp eq i64 %54, 28, !dbg !3495
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3495, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %56(ptr nonnull @.str.987), !dbg !3495
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides, null, !dbg !3495
  br i1 %.not, label %if_end, label %if_then, !dbg !3495, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides, i64 1, !dbg !3495
  %58 = load i64, ptr %57, align 8, !dbg !3495, !tbaa !3531
  %59 = and i64 %58, 4294967295, !dbg !3495
  %60 = icmp eq i64 %59, 784, !dbg !3495
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides, i64 2, !dbg !3495
  %62 = load i64, ptr %61, align 8, !dbg !3495, !tbaa !3541
  %63 = and i64 %62, 4294967295, !dbg !3495
  %64 = icmp eq i64 %63, 28, !dbg !3495
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p0.strides, i64 3, !dbg !3495
  %66 = load i64, ptr %65, align 8, !dbg !3495, !tbaa !3544
  %67 = and i64 %66, 4294967295, !dbg !3495
  %68 = icmp eq i64 %67, 1, !dbg !3495
  %69 = and i1 %64, %68, !dbg !3495
  %70 = and i1 %60, %69, !dbg !3495
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3495, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3495
  %72 = load i64, ptr %71, align 8, !dbg !3495
  %73 = icmp eq i64 %72, 0, !dbg !3495
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3495, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %74(ptr nonnull @.str.988), !dbg !3495
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %75(ptr nonnull @.str.989), !dbg !3495
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3495
  %77 = load i32, ptr %76, align 4, !dbg !3495
  %78 = icmp eq i32 %77, 2, !dbg !3495
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3495, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %79(ptr nonnull @.str.990), !dbg !3495
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3495
  %81 = load i32, ptr %80, align 4, !dbg !3495
  %82 = icmp eq i32 %81, 4, !dbg !3495
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3495, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %83(ptr nonnull @.str.991), !dbg !3495
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3495
  %85 = load i16, ptr %84, align 2, !dbg !3495
  %86 = icmp eq i16 %85, 1, !dbg !3495
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3495
  %88 = load i8, ptr %87, align 1, !dbg !3495
  %89 = icmp eq i8 %88, 32, !dbg !3495
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3495
  %91 = load i8, ptr %90, align 1, !dbg !3495
  %92 = icmp eq i8 %91, 2, !dbg !3495
  %93 = and i1 %89, %92, !dbg !3495
  %94 = and i1 %86, %93, !dbg !3495
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3495, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %95(ptr nonnull @.str.992), !dbg !3495
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape, align 8, !dbg !3495, !tbaa !3546
  %97 = and i64 %96, 4294967295, !dbg !3495
  %98 = icmp eq i64 %97, 256, !dbg !3495
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3495, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %99(ptr nonnull @.str.993), !dbg !3495
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape, i64 1, !dbg !3495
  %101 = load i64, ptr %100, align 8, !dbg !3495, !tbaa !3556
  %102 = and i64 %101, 4294967295, !dbg !3495
  %103 = icmp eq i64 %102, 512, !dbg !3495
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3495, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %104(ptr nonnull @.str.994), !dbg !3495
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape, i64 2, !dbg !3495
  %106 = load i64, ptr %105, align 8, !dbg !3495, !tbaa !3558
  %107 = and i64 %106, 4294967295, !dbg !3495
  %108 = icmp eq i64 %107, 1, !dbg !3495
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3495, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %109(ptr nonnull @.str.995), !dbg !3495
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.shape, i64 3, !dbg !3495
  %111 = load i64, ptr %110, align 8, !dbg !3495, !tbaa !3561
  %112 = and i64 %111, 4294967295, !dbg !3495
  %113 = icmp eq i64 %112, 1, !dbg !3495
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3495, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %114(ptr nonnull @.str.996), !dbg !3495
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.strides, null, !dbg !3495
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3495, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.strides, align 8, !dbg !3495, !tbaa !3563
  %116 = and i64 %115, 4294967295, !dbg !3495
  %117 = icmp eq i64 %116, 512, !dbg !3495
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p1.strides, i64 1, !dbg !3495
  %119 = load i64, ptr %118, align 8, !dbg !3495, !tbaa !3573
  %120 = and i64 %119, 4294967295, !dbg !3495
  %121 = icmp eq i64 %120, 1, !dbg !3495
  %122 = and i1 %117, %121, !dbg !3495
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !3495, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3495
  %124 = load i64, ptr %123, align 8, !dbg !3495
  %125 = icmp eq i64 %124, 0, !dbg !3495
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !3495, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %126(ptr nonnull @.str.997), !dbg !3495
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %127(ptr nonnull @.str.998), !dbg !3495
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3495
  %129 = load i32, ptr %128, align 4, !dbg !3495
  %130 = icmp eq i32 %129, 2, !dbg !3495
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !3495, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %131(ptr nonnull @.str.999), !dbg !3495
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3495
  %133 = load i32, ptr %132, align 4, !dbg !3495
  %134 = icmp eq i32 %dev_id, %133, !dbg !3495
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !3495, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %135(ptr nonnull @.str.1000), !dbg !3495
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3495
  %137 = load i32, ptr %136, align 4, !dbg !3495
  %138 = icmp eq i32 %137, 4, !dbg !3495
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !3495, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %139(ptr nonnull @.str.1001), !dbg !3495
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3495
  %141 = load i16, ptr %140, align 2, !dbg !3495
  %142 = icmp eq i16 %141, 1, !dbg !3495
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3495
  %144 = load i8, ptr %143, align 1, !dbg !3495
  %145 = icmp eq i8 %144, 32, !dbg !3495
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3495
  %147 = load i8, ptr %146, align 1, !dbg !3495
  %148 = icmp eq i8 %147, 2, !dbg !3495
  %149 = and i1 %145, %148, !dbg !3495
  %150 = and i1 %142, %149, !dbg !3495
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !3495, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %151(ptr nonnull @.str.1002), !dbg !3495
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape, align 8, !dbg !3495, !tbaa !3575
  %153 = and i64 %152, 4294967295, !dbg !3495
  %154 = icmp eq i64 %153, 1, !dbg !3495
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !3495, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %155(ptr nonnull @.str.1003), !dbg !3495
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape, i64 1, !dbg !3495
  %157 = load i64, ptr %156, align 8, !dbg !3495, !tbaa !3585
  %158 = and i64 %157, 4294967295, !dbg !3495
  %159 = icmp eq i64 %158, 256, !dbg !3495
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !3495, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %160(ptr nonnull @.str.1004), !dbg !3495
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape, i64 2, !dbg !3495
  %162 = load i64, ptr %161, align 8, !dbg !3495, !tbaa !3587
  %163 = and i64 %162, 4294967295, !dbg !3495
  %164 = icmp eq i64 %163, 1, !dbg !3495
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !3495, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %165(ptr nonnull @.str.1005), !dbg !3495
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.shape, i64 3, !dbg !3495
  %167 = load i64, ptr %166, align 8, !dbg !3495, !tbaa !3590
  %168 = and i64 %167, 4294967295, !dbg !3495
  %169 = icmp eq i64 %168, 1, !dbg !3495
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !3495, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %170(ptr nonnull @.str.1006), !dbg !3495
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.strides, null, !dbg !3495
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3495, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.p2.strides, i64 1, !dbg !3495
  %172 = load i64, ptr %171, align 8, !dbg !3495, !tbaa !3592
  %173 = and i64 %172, 4294967295, !dbg !3495
  %174 = icmp eq i64 %173, 1, !dbg !3495
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !3495, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3495
  %176 = load i64, ptr %175, align 8, !dbg !3495
  %177 = icmp eq i64 %176, 0, !dbg !3495
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !3495, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %178(ptr nonnull @.str.1007), !dbg !3495
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %179(ptr nonnull @.str.1008), !dbg !3495
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3495
  %181 = load i32, ptr %180, align 4, !dbg !3495
  %182 = icmp eq i32 %181, 2, !dbg !3495
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !3495, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %183(ptr nonnull @.str.1009), !dbg !3495
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3495
  %185 = load i32, ptr %184, align 4, !dbg !3495
  %186 = icmp eq i32 %dev_id, %185, !dbg !3495
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !3495, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %187(ptr nonnull @.str.1010), !dbg !3495
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3495
  %189 = load i32, ptr %188, align 4, !dbg !3495
  %190 = icmp eq i32 %189, 4, !dbg !3495
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !3495, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %191(ptr nonnull @.str.1011), !dbg !3495
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3495
  %193 = load i16, ptr %192, align 2, !dbg !3495
  %194 = icmp eq i16 %193, 1, !dbg !3495
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3495
  %196 = load i8, ptr %195, align 1, !dbg !3495
  %197 = icmp eq i8 %196, 32, !dbg !3495
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3495
  %199 = load i8, ptr %198, align 1, !dbg !3495
  %200 = icmp eq i8 %199, 2, !dbg !3495
  %201 = and i1 %197, %200, !dbg !3495
  %202 = and i1 %194, %201, !dbg !3495
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !3495, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %203(ptr nonnull @.str.1012), !dbg !3495
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape, align 8, !dbg !3495, !tbaa !3602
  %205 = and i64 %204, 4294967295, !dbg !3495
  %206 = icmp eq i64 %205, 1, !dbg !3495
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !3495, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %207(ptr nonnull @.str.1013), !dbg !3495
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape, i64 1, !dbg !3495
  %209 = load i64, ptr %208, align 8, !dbg !3495, !tbaa !3612
  %210 = and i64 %209, 4294967295, !dbg !3495
  %211 = icmp eq i64 %210, 256, !dbg !3495
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !3495, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %212(ptr nonnull @.str.1014), !dbg !3495
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape, i64 2, !dbg !3495
  %214 = load i64, ptr %213, align 8, !dbg !3495, !tbaa !3614
  %215 = and i64 %214, 4294967295, !dbg !3495
  %216 = icmp eq i64 %215, 28, !dbg !3495
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !3495, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %217(ptr nonnull @.str.1015), !dbg !3495
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.shape, i64 3, !dbg !3495
  %219 = load i64, ptr %218, align 8, !dbg !3495, !tbaa !3617
  %220 = and i64 %219, 4294967295, !dbg !3495
  %221 = icmp eq i64 %220, 28, !dbg !3495
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !3495, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %222(ptr nonnull @.str.1016), !dbg !3495
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides, null, !dbg !3495
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3495, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides, i64 1, !dbg !3495
  %224 = load i64, ptr %223, align 8, !dbg !3495, !tbaa !3619
  %225 = and i64 %224, 4294967295, !dbg !3495
  %226 = icmp eq i64 %225, 784, !dbg !3495
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides, i64 2, !dbg !3495
  %228 = load i64, ptr %227, align 8, !dbg !3495, !tbaa !3629
  %229 = and i64 %228, 4294967295, !dbg !3495
  %230 = icmp eq i64 %229, 28, !dbg !3495
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_6.T_relu.strides, i64 3, !dbg !3495
  %232 = load i64, ptr %231, align 8, !dbg !3495, !tbaa !3632
  %233 = and i64 %232, 4294967295, !dbg !3495
  %234 = icmp eq i64 %233, 1, !dbg !3495
  %235 = and i1 %230, %234, !dbg !3495
  %236 = and i1 %226, %235, !dbg !3495
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !3495, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3495
  %238 = load i64, ptr %237, align 8, !dbg !3495
  %239 = icmp eq i64 %238, 0, !dbg !3495
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !3495, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %240(ptr nonnull @.str.1017), !dbg !3495
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %241(ptr nonnull @.str.1018), !dbg !3495
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3495
  %243 = load i32, ptr %242, align 4, !dbg !3495
  %244 = icmp eq i32 %243, 2, !dbg !3495
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !3495, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %245(ptr nonnull @.str.1019), !dbg !3495
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3495
  %247 = load i32, ptr %246, align 4, !dbg !3495
  %248 = icmp eq i32 %dev_id, %247, !dbg !3495
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !3495, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3495, !tbaa !19
  tail call void %249(ptr nonnull @.str.1020), !dbg !3495
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3495
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3495, !tbaa !3634
  %250 = sext i32 %dev_id to i64, !dbg !3495
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3495
  store i64 %250, ptr %251, align 8, !dbg !3495
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3495
  store i32 0, ptr %252, align 4, !dbg !3495, !tbaa !3645
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3495
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3495
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3495, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3495
  %.not120 = icmp eq ptr %256, null, !dbg !3495
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3495, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3495, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3495, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3495
  %260 = icmp eq i32 %259, 0, !dbg !3495
  br i1 %260, label %call_end, label %common.ret, !dbg !3495, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !3495
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !3495
  %263 = icmp eq i32 %262, 0, !dbg !3495
  br i1 %263, label %call_end106, label %common.ret, !dbg !3495, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !3495
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3495
  br label %handle_init_end, !dbg !3495

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_6_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3495
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3647 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3649, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3651, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3652, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3653, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3654, metadata !DIExpression()), !dbg !3655
  %0 = alloca ptr, align 8, !dbg !3655
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3655
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3655
  %1 = icmp eq i32 %num_args, 4, !dbg !3655
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3655, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %269, %handle_init ], [ %272, %handle_init_end ], [ %275, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3655

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %2(ptr nonnull @.str.1022), !dbg !3655
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3655, !tbaa !3656
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3655
  %p1.code = load i32, ptr %3, align 4, !dbg !3655, !tbaa !3667
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3655
  %p2.code = load i32, ptr %4, align 4, !dbg !3655, !tbaa !3669
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3655
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3655, !tbaa !3672
  %p0 = load ptr, ptr %args, align 8, !dbg !3655
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3655
  %p1 = load ptr, ptr %6, align 8, !dbg !3655
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3655
  %p2 = load ptr, ptr %7, align 8, !dbg !3655
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3655
  %T_relu = load ptr, ptr %8, align 8, !dbg !3655
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3655
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3655
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape = load ptr, ptr %9, align 8, !dbg !3655
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides = load ptr, ptr %10, align 8, !dbg !3655
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3655
  %dev_id = load i32, ptr %11, align 4, !dbg !3655
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3655
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3655
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape = load ptr, ptr %12, align 8, !dbg !3655
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides = load ptr, ptr %13, align 8, !dbg !3655
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3655
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3655
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape = load ptr, ptr %14, align 8, !dbg !3655
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.strides = load ptr, ptr %15, align 8, !dbg !3655
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3655
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3655
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3655
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3655
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3655
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3655

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %18(ptr nonnull @.str.1023), !dbg !3655
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3655

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %19(ptr nonnull @.str.1024), !dbg !3655
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3655

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %20(ptr nonnull @.str.1025), !dbg !3655
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3655

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %21(ptr nonnull @.str.1026), !dbg !3655
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3655
  %23 = load i32, ptr %22, align 4, !dbg !3655
  %24 = icmp eq i32 %23, 4, !dbg !3655
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3655, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %25(ptr nonnull @.str.1027), !dbg !3655
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3655
  %27 = load i16, ptr %26, align 2, !dbg !3655
  %28 = icmp eq i16 %27, 1, !dbg !3655
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3655
  %30 = load i8, ptr %29, align 1, !dbg !3655
  %31 = icmp eq i8 %30, 32, !dbg !3655
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3655
  %33 = load i8, ptr %32, align 1, !dbg !3655
  %34 = icmp eq i8 %33, 2, !dbg !3655
  %35 = and i1 %31, %34, !dbg !3655
  %36 = and i1 %28, %35, !dbg !3655
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3655, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %37(ptr nonnull @.str.1028), !dbg !3655
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape, align 8, !dbg !3655, !tbaa !3674
  %39 = and i64 %38, 4294967295, !dbg !3655
  %40 = icmp eq i64 %39, 1, !dbg !3655
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3655, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %41(ptr nonnull @.str.1029), !dbg !3655
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape, i64 1, !dbg !3655
  %43 = load i64, ptr %42, align 8, !dbg !3655, !tbaa !3684
  %44 = and i64 %43, 4294967295, !dbg !3655
  %45 = icmp eq i64 %44, 256, !dbg !3655
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3655, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %46(ptr nonnull @.str.1030), !dbg !3655
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape, i64 2, !dbg !3655
  %48 = load i64, ptr %47, align 8, !dbg !3655, !tbaa !3686
  %49 = and i64 %48, 4294967295, !dbg !3655
  %50 = icmp eq i64 %49, 28, !dbg !3655
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3655, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %51(ptr nonnull @.str.1031), !dbg !3655
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.shape, i64 3, !dbg !3655
  %53 = load i64, ptr %52, align 8, !dbg !3655, !tbaa !3689
  %54 = and i64 %53, 4294967295, !dbg !3655
  %55 = icmp eq i64 %54, 28, !dbg !3655
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3655, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %56(ptr nonnull @.str.1032), !dbg !3655
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides, null, !dbg !3655
  br i1 %.not, label %if_end, label %if_then, !dbg !3655, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides, i64 1, !dbg !3655
  %58 = load i64, ptr %57, align 8, !dbg !3655, !tbaa !3691
  %59 = and i64 %58, 4294967295, !dbg !3655
  %60 = icmp eq i64 %59, 784, !dbg !3655
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides, i64 2, !dbg !3655
  %62 = load i64, ptr %61, align 8, !dbg !3655, !tbaa !3701
  %63 = and i64 %62, 4294967295, !dbg !3655
  %64 = icmp eq i64 %63, 28, !dbg !3655
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p0.strides, i64 3, !dbg !3655
  %66 = load i64, ptr %65, align 8, !dbg !3655, !tbaa !3704
  %67 = and i64 %66, 4294967295, !dbg !3655
  %68 = icmp eq i64 %67, 1, !dbg !3655
  %69 = and i1 %64, %68, !dbg !3655
  %70 = and i1 %60, %69, !dbg !3655
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3655, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3655
  %72 = load i64, ptr %71, align 8, !dbg !3655
  %73 = icmp eq i64 %72, 0, !dbg !3655
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3655, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %74(ptr nonnull @.str.1033), !dbg !3655
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %75(ptr nonnull @.str.1034), !dbg !3655
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3655
  %77 = load i32, ptr %76, align 4, !dbg !3655
  %78 = icmp eq i32 %77, 2, !dbg !3655
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3655, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %79(ptr nonnull @.str.1035), !dbg !3655
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3655
  %81 = load i32, ptr %80, align 4, !dbg !3655
  %82 = icmp eq i32 %81, 4, !dbg !3655
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3655, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %83(ptr nonnull @.str.1036), !dbg !3655
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3655
  %85 = load i16, ptr %84, align 2, !dbg !3655
  %86 = icmp eq i16 %85, 1, !dbg !3655
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3655
  %88 = load i8, ptr %87, align 1, !dbg !3655
  %89 = icmp eq i8 %88, 32, !dbg !3655
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3655
  %91 = load i8, ptr %90, align 1, !dbg !3655
  %92 = icmp eq i8 %91, 2, !dbg !3655
  %93 = and i1 %89, %92, !dbg !3655
  %94 = and i1 %86, %93, !dbg !3655
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3655, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %95(ptr nonnull @.str.1037), !dbg !3655
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape, align 8, !dbg !3655, !tbaa !3706
  %97 = and i64 %96, 4294967295, !dbg !3655
  %98 = icmp eq i64 %97, 256, !dbg !3655
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3655, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %99(ptr nonnull @.str.1038), !dbg !3655
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape, i64 1, !dbg !3655
  %101 = load i64, ptr %100, align 8, !dbg !3655, !tbaa !3716
  %102 = and i64 %101, 4294967295, !dbg !3655
  %103 = icmp eq i64 %102, 256, !dbg !3655
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3655, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %104(ptr nonnull @.str.1039), !dbg !3655
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape, i64 2, !dbg !3655
  %106 = load i64, ptr %105, align 8, !dbg !3655, !tbaa !3718
  %107 = and i64 %106, 4294967295, !dbg !3655
  %108 = icmp eq i64 %107, 3, !dbg !3655
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3655, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %109(ptr nonnull @.str.1040), !dbg !3655
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.shape, i64 3, !dbg !3655
  %111 = load i64, ptr %110, align 8, !dbg !3655, !tbaa !3721
  %112 = and i64 %111, 4294967295, !dbg !3655
  %113 = icmp eq i64 %112, 3, !dbg !3655
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3655, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %114(ptr nonnull @.str.1041), !dbg !3655
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides, null, !dbg !3655
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3655, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides, align 8, !dbg !3655, !tbaa !3723
  %116 = and i64 %115, 4294967295, !dbg !3655
  %117 = icmp eq i64 %116, 2304, !dbg !3655
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides, i64 1, !dbg !3655
  %119 = load i64, ptr %118, align 8, !dbg !3655, !tbaa !3733
  %120 = and i64 %119, 4294967295, !dbg !3655
  %121 = icmp eq i64 %120, 9, !dbg !3655
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides, i64 2, !dbg !3655
  %123 = load i64, ptr %122, align 8, !dbg !3655, !tbaa !3735
  %124 = and i64 %123, 4294967295, !dbg !3655
  %125 = icmp eq i64 %124, 3, !dbg !3655
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p1.strides, i64 3, !dbg !3655
  %127 = load i64, ptr %126, align 8, !dbg !3655, !tbaa !3738
  %128 = and i64 %127, 4294967295, !dbg !3655
  %129 = icmp eq i64 %128, 1, !dbg !3655
  %130 = and i1 %125, %129, !dbg !3655
  %131 = and i1 %121, %130, !dbg !3655
  %132 = and i1 %117, %131, !dbg !3655
  br i1 %132, label %if_end48, label %assert_fail49, !dbg !3655, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3655
  %134 = load i64, ptr %133, align 8, !dbg !3655
  %135 = icmp eq i64 %134, 0, !dbg !3655
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !3655, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %136(ptr nonnull @.str.1042), !dbg !3655
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %137(ptr nonnull @.str.1043), !dbg !3655
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3655
  %139 = load i32, ptr %138, align 4, !dbg !3655
  %140 = icmp eq i32 %139, 2, !dbg !3655
  br i1 %140, label %assert_end54, label %assert_fail53, !dbg !3655, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %141(ptr nonnull @.str.1044), !dbg !3655
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3655
  %143 = load i32, ptr %142, align 4, !dbg !3655
  %144 = icmp eq i32 %dev_id, %143, !dbg !3655
  br i1 %144, label %assert_end56, label %assert_fail55, !dbg !3655, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %145(ptr nonnull @.str.1045), !dbg !3655
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3655
  %147 = load i32, ptr %146, align 4, !dbg !3655
  %148 = icmp eq i32 %147, 4, !dbg !3655
  br i1 %148, label %assert_end60, label %assert_fail57, !dbg !3655, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %149(ptr nonnull @.str.1046), !dbg !3655
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %150 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3655
  %151 = load i16, ptr %150, align 2, !dbg !3655
  %152 = icmp eq i16 %151, 1, !dbg !3655
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3655
  %154 = load i8, ptr %153, align 1, !dbg !3655
  %155 = icmp eq i8 %154, 32, !dbg !3655
  %156 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3655
  %157 = load i8, ptr %156, align 1, !dbg !3655
  %158 = icmp eq i8 %157, 2, !dbg !3655
  %159 = and i1 %155, %158, !dbg !3655
  %160 = and i1 %152, %159, !dbg !3655
  br i1 %160, label %assert_end62, label %assert_fail61, !dbg !3655, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %161(ptr nonnull @.str.1047), !dbg !3655
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %162 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape, align 8, !dbg !3655, !tbaa !3740
  %163 = and i64 %162, 4294967295, !dbg !3655
  %164 = icmp eq i64 %163, 1, !dbg !3655
  br i1 %164, label %assert_end64, label %assert_fail63, !dbg !3655, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %165(ptr nonnull @.str.1048), !dbg !3655
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape, i64 1, !dbg !3655
  %167 = load i64, ptr %166, align 8, !dbg !3655, !tbaa !3750
  %168 = and i64 %167, 4294967295, !dbg !3655
  %169 = icmp eq i64 %168, 256, !dbg !3655
  br i1 %169, label %assert_end66, label %assert_fail65, !dbg !3655, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %170(ptr nonnull @.str.1049), !dbg !3655
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape, i64 2, !dbg !3655
  %172 = load i64, ptr %171, align 8, !dbg !3655, !tbaa !3752
  %173 = and i64 %172, 4294967295, !dbg !3655
  %174 = icmp eq i64 %173, 1, !dbg !3655
  br i1 %174, label %assert_end68, label %assert_fail67, !dbg !3655, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %175(ptr nonnull @.str.1050), !dbg !3655
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.shape, i64 3, !dbg !3655
  %177 = load i64, ptr %176, align 8, !dbg !3655, !tbaa !3755
  %178 = and i64 %177, 4294967295, !dbg !3655
  %179 = icmp eq i64 %178, 1, !dbg !3655
  br i1 %179, label %assert_end70, label %assert_fail69, !dbg !3655, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %180(ptr nonnull @.str.1051), !dbg !3655
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.strides, null, !dbg !3655
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3655, !prof !52

if_then71:                                        ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.p2.strides, i64 1, !dbg !3655
  %182 = load i64, ptr %181, align 8, !dbg !3655, !tbaa !3757
  %183 = and i64 %182, 4294967295, !dbg !3655
  %184 = icmp eq i64 %183, 1, !dbg !3655
  br i1 %184, label %if_end72, label %assert_fail73, !dbg !3655, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3655
  %186 = load i64, ptr %185, align 8, !dbg !3655
  %187 = icmp eq i64 %186, 0, !dbg !3655
  br i1 %187, label %assert_end76, label %assert_fail75, !dbg !3655, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %188(ptr nonnull @.str.1052), !dbg !3655
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %189(ptr nonnull @.str.1053), !dbg !3655
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3655
  %191 = load i32, ptr %190, align 4, !dbg !3655
  %192 = icmp eq i32 %191, 2, !dbg !3655
  br i1 %192, label %assert_end78, label %assert_fail77, !dbg !3655, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %193(ptr nonnull @.str.1054), !dbg !3655
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %194 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3655
  %195 = load i32, ptr %194, align 4, !dbg !3655
  %196 = icmp eq i32 %dev_id, %195, !dbg !3655
  br i1 %196, label %assert_end80, label %assert_fail79, !dbg !3655, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %197(ptr nonnull @.str.1055), !dbg !3655
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3655
  %199 = load i32, ptr %198, align 4, !dbg !3655
  %200 = icmp eq i32 %199, 4, !dbg !3655
  br i1 %200, label %assert_end84, label %assert_fail81, !dbg !3655, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %201 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %201(ptr nonnull @.str.1056), !dbg !3655
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %202 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3655
  %203 = load i16, ptr %202, align 2, !dbg !3655
  %204 = icmp eq i16 %203, 1, !dbg !3655
  %205 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3655
  %206 = load i8, ptr %205, align 1, !dbg !3655
  %207 = icmp eq i8 %206, 32, !dbg !3655
  %208 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3655
  %209 = load i8, ptr %208, align 1, !dbg !3655
  %210 = icmp eq i8 %209, 2, !dbg !3655
  %211 = and i1 %207, %210, !dbg !3655
  %212 = and i1 %204, %211, !dbg !3655
  br i1 %212, label %assert_end86, label %assert_fail85, !dbg !3655, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %213(ptr nonnull @.str.1057), !dbg !3655
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %214 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape, align 8, !dbg !3655, !tbaa !3767
  %215 = and i64 %214, 4294967295, !dbg !3655
  %216 = icmp eq i64 %215, 1, !dbg !3655
  br i1 %216, label %assert_end88, label %assert_fail87, !dbg !3655, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %217(ptr nonnull @.str.1058), !dbg !3655
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape, i64 1, !dbg !3655
  %219 = load i64, ptr %218, align 8, !dbg !3655, !tbaa !3777
  %220 = and i64 %219, 4294967295, !dbg !3655
  %221 = icmp eq i64 %220, 256, !dbg !3655
  br i1 %221, label %assert_end90, label %assert_fail89, !dbg !3655, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %222(ptr nonnull @.str.1059), !dbg !3655
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape, i64 2, !dbg !3655
  %224 = load i64, ptr %223, align 8, !dbg !3655, !tbaa !3779
  %225 = and i64 %224, 4294967295, !dbg !3655
  %226 = icmp eq i64 %225, 14, !dbg !3655
  br i1 %226, label %assert_end92, label %assert_fail91, !dbg !3655, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %227(ptr nonnull @.str.1060), !dbg !3655
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %228 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.shape, i64 3, !dbg !3655
  %229 = load i64, ptr %228, align 8, !dbg !3655, !tbaa !3782
  %230 = and i64 %229, 4294967295, !dbg !3655
  %231 = icmp eq i64 %230, 14, !dbg !3655
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !3655, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %232(ptr nonnull @.str.1061), !dbg !3655
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides, null, !dbg !3655
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3655, !prof !52

if_then95:                                        ; preds = %assert_end94
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides, i64 1, !dbg !3655
  %234 = load i64, ptr %233, align 8, !dbg !3655, !tbaa !3784
  %235 = and i64 %234, 4294967295, !dbg !3655
  %236 = icmp eq i64 %235, 196, !dbg !3655
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides, i64 2, !dbg !3655
  %238 = load i64, ptr %237, align 8, !dbg !3655, !tbaa !3794
  %239 = and i64 %238, 4294967295, !dbg !3655
  %240 = icmp eq i64 %239, 14, !dbg !3655
  %241 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_7.T_relu.strides, i64 3, !dbg !3655
  %242 = load i64, ptr %241, align 8, !dbg !3655, !tbaa !3797
  %243 = and i64 %242, 4294967295, !dbg !3655
  %244 = icmp eq i64 %243, 1, !dbg !3655
  %245 = and i1 %240, %244, !dbg !3655
  %246 = and i1 %236, %245, !dbg !3655
  br i1 %246, label %if_end96, label %assert_fail97, !dbg !3655, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3655
  %248 = load i64, ptr %247, align 8, !dbg !3655
  %249 = icmp eq i64 %248, 0, !dbg !3655
  br i1 %249, label %assert_end100, label %assert_fail99, !dbg !3655, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %250(ptr nonnull @.str.1062), !dbg !3655
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %251(ptr nonnull @.str.1063), !dbg !3655
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %252 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3655
  %253 = load i32, ptr %252, align 4, !dbg !3655
  %254 = icmp eq i32 %253, 2, !dbg !3655
  br i1 %254, label %assert_end102, label %assert_fail101, !dbg !3655, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %255 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %255(ptr nonnull @.str.1064), !dbg !3655
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %256 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3655
  %257 = load i32, ptr %256, align 4, !dbg !3655
  %258 = icmp eq i32 %dev_id, %257, !dbg !3655
  br i1 %258, label %assert_end104, label %assert_fail103, !dbg !3655, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3655, !tbaa !19
  tail call void %259(ptr nonnull @.str.1065), !dbg !3655
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3655
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3655, !tbaa !3799
  %260 = sext i32 %dev_id to i64, !dbg !3655
  %261 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3655
  store i64 %260, ptr %261, align 8, !dbg !3655
  %262 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3655
  store i32 0, ptr %262, align 4, !dbg !3655, !tbaa !3810
  %263 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3655
  %264 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3655
  %265 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3655, !tbaa !19
  %266 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3655
  %.not120 = icmp eq ptr %266, null, !dbg !3655
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3655, !prof !52

handle_init:                                      ; preds = %assert_end104
  %267 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3655, !tbaa !19
  %268 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3655, !tbaa !19
  %269 = call i32 %268(ptr %267, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3655
  %270 = icmp eq i32 %269, 0, !dbg !3655
  br i1 %270, label %call_end, label %common.ret, !dbg !3655, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %271 = phi ptr [ %266, %assert_end104 ], [ %274, %call_end ], !dbg !3655
  %272 = call i32 %265(ptr %271, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %263, ptr nonnull %264), !dbg !3655
  %273 = icmp eq i32 %272, 0, !dbg !3655
  br i1 %273, label %call_end106, label %common.ret, !dbg !3655, !prof !18

call_end:                                         ; preds = %handle_init
  %274 = load ptr, ptr %0, align 8, !dbg !3655
  store ptr %274, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3655
  br label %handle_init_end, !dbg !3655

call_end106:                                      ; preds = %handle_init_end
  %275 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_7_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3655
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3812 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3814, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3815, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3816, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3817, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3818, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3819, metadata !DIExpression()), !dbg !3820
  %0 = alloca ptr, align 8, !dbg !3820
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3820
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3820
  %1 = icmp eq i32 %num_args, 4, !dbg !3820
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3820, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3820

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %2(ptr nonnull @.str.1067), !dbg !3820
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3820, !tbaa !3821
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3820
  %p1.code = load i32, ptr %3, align 4, !dbg !3820, !tbaa !3832
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3820
  %p2.code = load i32, ptr %4, align 4, !dbg !3820, !tbaa !3834
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3820
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3820, !tbaa !3837
  %p0 = load ptr, ptr %args, align 8, !dbg !3820
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3820
  %p1 = load ptr, ptr %6, align 8, !dbg !3820
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3820
  %p2 = load ptr, ptr %7, align 8, !dbg !3820
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3820
  %T_relu = load ptr, ptr %8, align 8, !dbg !3820
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3820
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3820
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape = load ptr, ptr %9, align 8, !dbg !3820
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides = load ptr, ptr %10, align 8, !dbg !3820
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3820
  %dev_id = load i32, ptr %11, align 4, !dbg !3820
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3820
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3820
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape = load ptr, ptr %12, align 8, !dbg !3820
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.strides = load ptr, ptr %13, align 8, !dbg !3820
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3820
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3820
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape = load ptr, ptr %14, align 8, !dbg !3820
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.strides = load ptr, ptr %15, align 8, !dbg !3820
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3820
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3820
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3820
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3820
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3820
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3820

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %18(ptr nonnull @.str.1068), !dbg !3820
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3820

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %19(ptr nonnull @.str.1069), !dbg !3820
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3820

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %20(ptr nonnull @.str.1070), !dbg !3820
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3820

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %21(ptr nonnull @.str.1071), !dbg !3820
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3820
  %23 = load i32, ptr %22, align 4, !dbg !3820
  %24 = icmp eq i32 %23, 4, !dbg !3820
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3820, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %25(ptr nonnull @.str.1072), !dbg !3820
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3820
  %27 = load i16, ptr %26, align 2, !dbg !3820
  %28 = icmp eq i16 %27, 1, !dbg !3820
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3820
  %30 = load i8, ptr %29, align 1, !dbg !3820
  %31 = icmp eq i8 %30, 32, !dbg !3820
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3820
  %33 = load i8, ptr %32, align 1, !dbg !3820
  %34 = icmp eq i8 %33, 2, !dbg !3820
  %35 = and i1 %31, %34, !dbg !3820
  %36 = and i1 %28, %35, !dbg !3820
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3820, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %37(ptr nonnull @.str.1073), !dbg !3820
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape, align 8, !dbg !3820, !tbaa !3839
  %39 = and i64 %38, 4294967295, !dbg !3820
  %40 = icmp eq i64 %39, 1, !dbg !3820
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3820, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %41(ptr nonnull @.str.1074), !dbg !3820
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape, i64 1, !dbg !3820
  %43 = load i64, ptr %42, align 8, !dbg !3820, !tbaa !3849
  %44 = and i64 %43, 4294967295, !dbg !3820
  %45 = icmp eq i64 %44, 1024, !dbg !3820
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3820, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %46(ptr nonnull @.str.1075), !dbg !3820
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape, i64 2, !dbg !3820
  %48 = load i64, ptr %47, align 8, !dbg !3820, !tbaa !3851
  %49 = and i64 %48, 4294967295, !dbg !3820
  %50 = icmp eq i64 %49, 14, !dbg !3820
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3820, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %51(ptr nonnull @.str.1076), !dbg !3820
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.shape, i64 3, !dbg !3820
  %53 = load i64, ptr %52, align 8, !dbg !3820, !tbaa !3854
  %54 = and i64 %53, 4294967295, !dbg !3820
  %55 = icmp eq i64 %54, 14, !dbg !3820
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3820, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %56(ptr nonnull @.str.1077), !dbg !3820
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides, null, !dbg !3820
  br i1 %.not, label %if_end, label %if_then, !dbg !3820, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides, i64 1, !dbg !3820
  %58 = load i64, ptr %57, align 8, !dbg !3820, !tbaa !3856
  %59 = and i64 %58, 4294967295, !dbg !3820
  %60 = icmp eq i64 %59, 196, !dbg !3820
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides, i64 2, !dbg !3820
  %62 = load i64, ptr %61, align 8, !dbg !3820, !tbaa !3866
  %63 = and i64 %62, 4294967295, !dbg !3820
  %64 = icmp eq i64 %63, 14, !dbg !3820
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p0.strides, i64 3, !dbg !3820
  %66 = load i64, ptr %65, align 8, !dbg !3820, !tbaa !3869
  %67 = and i64 %66, 4294967295, !dbg !3820
  %68 = icmp eq i64 %67, 1, !dbg !3820
  %69 = and i1 %64, %68, !dbg !3820
  %70 = and i1 %60, %69, !dbg !3820
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3820, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3820
  %72 = load i64, ptr %71, align 8, !dbg !3820
  %73 = icmp eq i64 %72, 0, !dbg !3820
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3820, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %74(ptr nonnull @.str.1078), !dbg !3820
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %75(ptr nonnull @.str.1079), !dbg !3820
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3820
  %77 = load i32, ptr %76, align 4, !dbg !3820
  %78 = icmp eq i32 %77, 2, !dbg !3820
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3820, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %79(ptr nonnull @.str.1080), !dbg !3820
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3820
  %81 = load i32, ptr %80, align 4, !dbg !3820
  %82 = icmp eq i32 %81, 4, !dbg !3820
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3820, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %83(ptr nonnull @.str.1081), !dbg !3820
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3820
  %85 = load i16, ptr %84, align 2, !dbg !3820
  %86 = icmp eq i16 %85, 1, !dbg !3820
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3820
  %88 = load i8, ptr %87, align 1, !dbg !3820
  %89 = icmp eq i8 %88, 32, !dbg !3820
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3820
  %91 = load i8, ptr %90, align 1, !dbg !3820
  %92 = icmp eq i8 %91, 2, !dbg !3820
  %93 = and i1 %89, %92, !dbg !3820
  %94 = and i1 %86, %93, !dbg !3820
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3820, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %95(ptr nonnull @.str.1082), !dbg !3820
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape, align 8, !dbg !3820, !tbaa !3871
  %97 = and i64 %96, 4294967295, !dbg !3820
  %98 = icmp eq i64 %97, 256, !dbg !3820
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3820, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %99(ptr nonnull @.str.1083), !dbg !3820
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape, i64 1, !dbg !3820
  %101 = load i64, ptr %100, align 8, !dbg !3820, !tbaa !3881
  %102 = and i64 %101, 4294967295, !dbg !3820
  %103 = icmp eq i64 %102, 1024, !dbg !3820
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3820, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %104(ptr nonnull @.str.1084), !dbg !3820
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape, i64 2, !dbg !3820
  %106 = load i64, ptr %105, align 8, !dbg !3820, !tbaa !3883
  %107 = and i64 %106, 4294967295, !dbg !3820
  %108 = icmp eq i64 %107, 1, !dbg !3820
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3820, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %109(ptr nonnull @.str.1085), !dbg !3820
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.shape, i64 3, !dbg !3820
  %111 = load i64, ptr %110, align 8, !dbg !3820, !tbaa !3886
  %112 = and i64 %111, 4294967295, !dbg !3820
  %113 = icmp eq i64 %112, 1, !dbg !3820
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3820, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %114(ptr nonnull @.str.1086), !dbg !3820
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.strides, null, !dbg !3820
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3820, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.strides, align 8, !dbg !3820, !tbaa !3888
  %116 = and i64 %115, 4294967295, !dbg !3820
  %117 = icmp eq i64 %116, 1024, !dbg !3820
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p1.strides, i64 1, !dbg !3820
  %119 = load i64, ptr %118, align 8, !dbg !3820, !tbaa !3898
  %120 = and i64 %119, 4294967295, !dbg !3820
  %121 = icmp eq i64 %120, 1, !dbg !3820
  %122 = and i1 %117, %121, !dbg !3820
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !3820, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3820
  %124 = load i64, ptr %123, align 8, !dbg !3820
  %125 = icmp eq i64 %124, 0, !dbg !3820
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !3820, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %126(ptr nonnull @.str.1087), !dbg !3820
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %127(ptr nonnull @.str.1088), !dbg !3820
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3820
  %129 = load i32, ptr %128, align 4, !dbg !3820
  %130 = icmp eq i32 %129, 2, !dbg !3820
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !3820, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %131(ptr nonnull @.str.1089), !dbg !3820
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3820
  %133 = load i32, ptr %132, align 4, !dbg !3820
  %134 = icmp eq i32 %dev_id, %133, !dbg !3820
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !3820, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %135(ptr nonnull @.str.1090), !dbg !3820
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3820
  %137 = load i32, ptr %136, align 4, !dbg !3820
  %138 = icmp eq i32 %137, 4, !dbg !3820
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !3820, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %139(ptr nonnull @.str.1091), !dbg !3820
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3820
  %141 = load i16, ptr %140, align 2, !dbg !3820
  %142 = icmp eq i16 %141, 1, !dbg !3820
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3820
  %144 = load i8, ptr %143, align 1, !dbg !3820
  %145 = icmp eq i8 %144, 32, !dbg !3820
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3820
  %147 = load i8, ptr %146, align 1, !dbg !3820
  %148 = icmp eq i8 %147, 2, !dbg !3820
  %149 = and i1 %145, %148, !dbg !3820
  %150 = and i1 %142, %149, !dbg !3820
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !3820, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %151(ptr nonnull @.str.1092), !dbg !3820
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape, align 8, !dbg !3820, !tbaa !3900
  %153 = and i64 %152, 4294967295, !dbg !3820
  %154 = icmp eq i64 %153, 1, !dbg !3820
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !3820, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %155(ptr nonnull @.str.1093), !dbg !3820
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape, i64 1, !dbg !3820
  %157 = load i64, ptr %156, align 8, !dbg !3820, !tbaa !3910
  %158 = and i64 %157, 4294967295, !dbg !3820
  %159 = icmp eq i64 %158, 256, !dbg !3820
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !3820, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %160(ptr nonnull @.str.1094), !dbg !3820
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape, i64 2, !dbg !3820
  %162 = load i64, ptr %161, align 8, !dbg !3820, !tbaa !3912
  %163 = and i64 %162, 4294967295, !dbg !3820
  %164 = icmp eq i64 %163, 1, !dbg !3820
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !3820, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %165(ptr nonnull @.str.1095), !dbg !3820
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.shape, i64 3, !dbg !3820
  %167 = load i64, ptr %166, align 8, !dbg !3820, !tbaa !3915
  %168 = and i64 %167, 4294967295, !dbg !3820
  %169 = icmp eq i64 %168, 1, !dbg !3820
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !3820, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %170(ptr nonnull @.str.1096), !dbg !3820
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.strides, null, !dbg !3820
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3820, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.p2.strides, i64 1, !dbg !3820
  %172 = load i64, ptr %171, align 8, !dbg !3820, !tbaa !3917
  %173 = and i64 %172, 4294967295, !dbg !3820
  %174 = icmp eq i64 %173, 1, !dbg !3820
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !3820, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3820
  %176 = load i64, ptr %175, align 8, !dbg !3820
  %177 = icmp eq i64 %176, 0, !dbg !3820
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !3820, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %178(ptr nonnull @.str.1097), !dbg !3820
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %179(ptr nonnull @.str.1098), !dbg !3820
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3820
  %181 = load i32, ptr %180, align 4, !dbg !3820
  %182 = icmp eq i32 %181, 2, !dbg !3820
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !3820, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %183(ptr nonnull @.str.1099), !dbg !3820
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3820
  %185 = load i32, ptr %184, align 4, !dbg !3820
  %186 = icmp eq i32 %dev_id, %185, !dbg !3820
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !3820, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %187(ptr nonnull @.str.1100), !dbg !3820
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3820
  %189 = load i32, ptr %188, align 4, !dbg !3820
  %190 = icmp eq i32 %189, 4, !dbg !3820
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !3820, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %191(ptr nonnull @.str.1101), !dbg !3820
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3820
  %193 = load i16, ptr %192, align 2, !dbg !3820
  %194 = icmp eq i16 %193, 1, !dbg !3820
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3820
  %196 = load i8, ptr %195, align 1, !dbg !3820
  %197 = icmp eq i8 %196, 32, !dbg !3820
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3820
  %199 = load i8, ptr %198, align 1, !dbg !3820
  %200 = icmp eq i8 %199, 2, !dbg !3820
  %201 = and i1 %197, %200, !dbg !3820
  %202 = and i1 %194, %201, !dbg !3820
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !3820, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %203(ptr nonnull @.str.1102), !dbg !3820
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape, align 8, !dbg !3820, !tbaa !3927
  %205 = and i64 %204, 4294967295, !dbg !3820
  %206 = icmp eq i64 %205, 1, !dbg !3820
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !3820, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %207(ptr nonnull @.str.1103), !dbg !3820
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape, i64 1, !dbg !3820
  %209 = load i64, ptr %208, align 8, !dbg !3820, !tbaa !3937
  %210 = and i64 %209, 4294967295, !dbg !3820
  %211 = icmp eq i64 %210, 256, !dbg !3820
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !3820, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %212(ptr nonnull @.str.1104), !dbg !3820
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape, i64 2, !dbg !3820
  %214 = load i64, ptr %213, align 8, !dbg !3820, !tbaa !3939
  %215 = and i64 %214, 4294967295, !dbg !3820
  %216 = icmp eq i64 %215, 14, !dbg !3820
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !3820, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %217(ptr nonnull @.str.1105), !dbg !3820
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.shape, i64 3, !dbg !3820
  %219 = load i64, ptr %218, align 8, !dbg !3820, !tbaa !3942
  %220 = and i64 %219, 4294967295, !dbg !3820
  %221 = icmp eq i64 %220, 14, !dbg !3820
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !3820, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %222(ptr nonnull @.str.1106), !dbg !3820
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides, null, !dbg !3820
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3820, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides, i64 1, !dbg !3820
  %224 = load i64, ptr %223, align 8, !dbg !3820, !tbaa !3944
  %225 = and i64 %224, 4294967295, !dbg !3820
  %226 = icmp eq i64 %225, 196, !dbg !3820
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides, i64 2, !dbg !3820
  %228 = load i64, ptr %227, align 8, !dbg !3820, !tbaa !3954
  %229 = and i64 %228, 4294967295, !dbg !3820
  %230 = icmp eq i64 %229, 14, !dbg !3820
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_8.T_relu.strides, i64 3, !dbg !3820
  %232 = load i64, ptr %231, align 8, !dbg !3820, !tbaa !3957
  %233 = and i64 %232, 4294967295, !dbg !3820
  %234 = icmp eq i64 %233, 1, !dbg !3820
  %235 = and i1 %230, %234, !dbg !3820
  %236 = and i1 %226, %235, !dbg !3820
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !3820, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3820
  %238 = load i64, ptr %237, align 8, !dbg !3820
  %239 = icmp eq i64 %238, 0, !dbg !3820
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !3820, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %240(ptr nonnull @.str.1107), !dbg !3820
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %241(ptr nonnull @.str.1108), !dbg !3820
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3820
  %243 = load i32, ptr %242, align 4, !dbg !3820
  %244 = icmp eq i32 %243, 2, !dbg !3820
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !3820, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %245(ptr nonnull @.str.1109), !dbg !3820
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3820
  %247 = load i32, ptr %246, align 4, !dbg !3820
  %248 = icmp eq i32 %dev_id, %247, !dbg !3820
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !3820, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3820, !tbaa !19
  tail call void %249(ptr nonnull @.str.1110), !dbg !3820
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3820
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3820, !tbaa !3959
  %250 = sext i32 %dev_id to i64, !dbg !3820
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3820
  store i64 %250, ptr %251, align 8, !dbg !3820
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3820
  store i32 0, ptr %252, align 4, !dbg !3820, !tbaa !3970
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3820
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3820
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3820, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3820
  %.not120 = icmp eq ptr %256, null, !dbg !3820
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3820, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3820, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3820, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3820
  %260 = icmp eq i32 %259, 0, !dbg !3820
  br i1 %260, label %call_end, label %common.ret, !dbg !3820, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !3820
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !3820
  %263 = icmp eq i32 %262, 0, !dbg !3820
  br i1 %263, label %call_end106, label %common.ret, !dbg !3820, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !3820
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3820
  br label %handle_init_end, !dbg !3820

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_8_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3820
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3972 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3974, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3975, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3976, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3977, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3978, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3979, metadata !DIExpression()), !dbg !3980
  %0 = alloca ptr, align 8, !dbg !3980
  %stack_value115 = alloca [17 x %0], align 8, !dbg !3980
  %stack_tcode116 = alloca [17 x i32], align 4, !dbg !3980
  %1 = icmp eq i32 %num_args, 4, !dbg !3980
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3980, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %259, %handle_init ], [ %262, %handle_init_end ], [ %265, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3980

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %2(ptr nonnull @.str.1112), !dbg !3980
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3980, !tbaa !3981
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3980
  %p1.code = load i32, ptr %3, align 4, !dbg !3980, !tbaa !3992
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3980
  %p2.code = load i32, ptr %4, align 4, !dbg !3980, !tbaa !3994
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3980
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3980, !tbaa !3997
  %p0 = load ptr, ptr %args, align 8, !dbg !3980
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3980
  %p1 = load ptr, ptr %6, align 8, !dbg !3980
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3980
  %p2 = load ptr, ptr %7, align 8, !dbg !3980
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3980
  %T_relu = load ptr, ptr %8, align 8, !dbg !3980
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3980
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3980
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape = load ptr, ptr %9, align 8, !dbg !3980
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides = load ptr, ptr %10, align 8, !dbg !3980
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3980
  %dev_id = load i32, ptr %11, align 4, !dbg !3980
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3980
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3980
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape = load ptr, ptr %12, align 8, !dbg !3980
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.strides = load ptr, ptr %13, align 8, !dbg !3980
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3980
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3980
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape = load ptr, ptr %14, align 8, !dbg !3980
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.strides = load ptr, ptr %15, align 8, !dbg !3980
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3980
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3980
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3980
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3980
  %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3980
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3980

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %18(ptr nonnull @.str.1113), !dbg !3980
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3980

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %19(ptr nonnull @.str.1114), !dbg !3980
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3980

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %20(ptr nonnull @.str.1115), !dbg !3980
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3980

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %21(ptr nonnull @.str.1116), !dbg !3980
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3980
  %23 = load i32, ptr %22, align 4, !dbg !3980
  %24 = icmp eq i32 %23, 4, !dbg !3980
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3980, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %25(ptr nonnull @.str.1117), !dbg !3980
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3980
  %27 = load i16, ptr %26, align 2, !dbg !3980
  %28 = icmp eq i16 %27, 1, !dbg !3980
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3980
  %30 = load i8, ptr %29, align 1, !dbg !3980
  %31 = icmp eq i8 %30, 32, !dbg !3980
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3980
  %33 = load i8, ptr %32, align 1, !dbg !3980
  %34 = icmp eq i8 %33, 2, !dbg !3980
  %35 = and i1 %31, %34, !dbg !3980
  %36 = and i1 %28, %35, !dbg !3980
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3980, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %37(ptr nonnull @.str.1118), !dbg !3980
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape, align 8, !dbg !3980, !tbaa !3999
  %39 = and i64 %38, 4294967295, !dbg !3980
  %40 = icmp eq i64 %39, 1, !dbg !3980
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3980, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %41(ptr nonnull @.str.1119), !dbg !3980
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape, i64 1, !dbg !3980
  %43 = load i64, ptr %42, align 8, !dbg !3980, !tbaa !4009
  %44 = and i64 %43, 4294967295, !dbg !3980
  %45 = icmp eq i64 %44, 1024, !dbg !3980
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3980, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %46(ptr nonnull @.str.1120), !dbg !3980
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape, i64 2, !dbg !3980
  %48 = load i64, ptr %47, align 8, !dbg !3980, !tbaa !4011
  %49 = and i64 %48, 4294967295, !dbg !3980
  %50 = icmp eq i64 %49, 14, !dbg !3980
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3980, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %51(ptr nonnull @.str.1121), !dbg !3980
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.shape, i64 3, !dbg !3980
  %53 = load i64, ptr %52, align 8, !dbg !3980, !tbaa !4014
  %54 = and i64 %53, 4294967295, !dbg !3980
  %55 = icmp eq i64 %54, 14, !dbg !3980
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3980, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %56(ptr nonnull @.str.1122), !dbg !3980
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides, null, !dbg !3980
  br i1 %.not, label %if_end, label %if_then, !dbg !3980, !prof !52

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides, i64 1, !dbg !3980
  %58 = load i64, ptr %57, align 8, !dbg !3980, !tbaa !4016
  %59 = and i64 %58, 4294967295, !dbg !3980
  %60 = icmp eq i64 %59, 196, !dbg !3980
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides, i64 2, !dbg !3980
  %62 = load i64, ptr %61, align 8, !dbg !3980, !tbaa !4026
  %63 = and i64 %62, 4294967295, !dbg !3980
  %64 = icmp eq i64 %63, 14, !dbg !3980
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p0.strides, i64 3, !dbg !3980
  %66 = load i64, ptr %65, align 8, !dbg !3980, !tbaa !4029
  %67 = and i64 %66, 4294967295, !dbg !3980
  %68 = icmp eq i64 %67, 1, !dbg !3980
  %69 = and i1 %64, %68, !dbg !3980
  %70 = and i1 %60, %69, !dbg !3980
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3980, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3980
  %72 = load i64, ptr %71, align 8, !dbg !3980
  %73 = icmp eq i64 %72, 0, !dbg !3980
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3980, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %74(ptr nonnull @.str.1123), !dbg !3980
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %75(ptr nonnull @.str.1124), !dbg !3980
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3980
  %77 = load i32, ptr %76, align 4, !dbg !3980
  %78 = icmp eq i32 %77, 2, !dbg !3980
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3980, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %79(ptr nonnull @.str.1125), !dbg !3980
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3980
  %81 = load i32, ptr %80, align 4, !dbg !3980
  %82 = icmp eq i32 %81, 4, !dbg !3980
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3980, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %83(ptr nonnull @.str.1126), !dbg !3980
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3980
  %85 = load i16, ptr %84, align 2, !dbg !3980
  %86 = icmp eq i16 %85, 1, !dbg !3980
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3980
  %88 = load i8, ptr %87, align 1, !dbg !3980
  %89 = icmp eq i8 %88, 32, !dbg !3980
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3980
  %91 = load i8, ptr %90, align 1, !dbg !3980
  %92 = icmp eq i8 %91, 2, !dbg !3980
  %93 = and i1 %89, %92, !dbg !3980
  %94 = and i1 %86, %93, !dbg !3980
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3980, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %95(ptr nonnull @.str.1127), !dbg !3980
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape, align 8, !dbg !3980, !tbaa !4031
  %97 = and i64 %96, 4294967295, !dbg !3980
  %98 = icmp eq i64 %97, 512, !dbg !3980
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3980, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %99(ptr nonnull @.str.1128), !dbg !3980
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape, i64 1, !dbg !3980
  %101 = load i64, ptr %100, align 8, !dbg !3980, !tbaa !4041
  %102 = and i64 %101, 4294967295, !dbg !3980
  %103 = icmp eq i64 %102, 1024, !dbg !3980
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3980, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %104(ptr nonnull @.str.1129), !dbg !3980
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape, i64 2, !dbg !3980
  %106 = load i64, ptr %105, align 8, !dbg !3980, !tbaa !4043
  %107 = and i64 %106, 4294967295, !dbg !3980
  %108 = icmp eq i64 %107, 1, !dbg !3980
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3980, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %109(ptr nonnull @.str.1130), !dbg !3980
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.shape, i64 3, !dbg !3980
  %111 = load i64, ptr %110, align 8, !dbg !3980, !tbaa !4046
  %112 = and i64 %111, 4294967295, !dbg !3980
  %113 = icmp eq i64 %112, 1, !dbg !3980
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3980, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %114(ptr nonnull @.str.1131), !dbg !3980
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.strides, null, !dbg !3980
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3980, !prof !52

if_then47:                                        ; preds = %assert_end46
  %115 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.strides, align 8, !dbg !3980, !tbaa !4048
  %116 = and i64 %115, 4294967295, !dbg !3980
  %117 = icmp eq i64 %116, 1024, !dbg !3980
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p1.strides, i64 1, !dbg !3980
  %119 = load i64, ptr %118, align 8, !dbg !3980, !tbaa !4058
  %120 = and i64 %119, 4294967295, !dbg !3980
  %121 = icmp eq i64 %120, 1, !dbg !3980
  %122 = and i1 %117, %121, !dbg !3980
  br i1 %122, label %if_end48, label %assert_fail49, !dbg !3980, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3980
  %124 = load i64, ptr %123, align 8, !dbg !3980
  %125 = icmp eq i64 %124, 0, !dbg !3980
  br i1 %125, label %assert_end52, label %assert_fail51, !dbg !3980, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %126(ptr nonnull @.str.1132), !dbg !3980
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %127(ptr nonnull @.str.1133), !dbg !3980
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3980
  %129 = load i32, ptr %128, align 4, !dbg !3980
  %130 = icmp eq i32 %129, 2, !dbg !3980
  br i1 %130, label %assert_end54, label %assert_fail53, !dbg !3980, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %131(ptr nonnull @.str.1134), !dbg !3980
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %132 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3980
  %133 = load i32, ptr %132, align 4, !dbg !3980
  %134 = icmp eq i32 %dev_id, %133, !dbg !3980
  br i1 %134, label %assert_end56, label %assert_fail55, !dbg !3980, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %135(ptr nonnull @.str.1135), !dbg !3980
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3980
  %137 = load i32, ptr %136, align 4, !dbg !3980
  %138 = icmp eq i32 %137, 4, !dbg !3980
  br i1 %138, label %assert_end60, label %assert_fail57, !dbg !3980, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %139(ptr nonnull @.str.1136), !dbg !3980
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3980
  %141 = load i16, ptr %140, align 2, !dbg !3980
  %142 = icmp eq i16 %141, 1, !dbg !3980
  %143 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3980
  %144 = load i8, ptr %143, align 1, !dbg !3980
  %145 = icmp eq i8 %144, 32, !dbg !3980
  %146 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3980
  %147 = load i8, ptr %146, align 1, !dbg !3980
  %148 = icmp eq i8 %147, 2, !dbg !3980
  %149 = and i1 %145, %148, !dbg !3980
  %150 = and i1 %142, %149, !dbg !3980
  br i1 %150, label %assert_end62, label %assert_fail61, !dbg !3980, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %151(ptr nonnull @.str.1137), !dbg !3980
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %152 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape, align 8, !dbg !3980, !tbaa !4060
  %153 = and i64 %152, 4294967295, !dbg !3980
  %154 = icmp eq i64 %153, 1, !dbg !3980
  br i1 %154, label %assert_end64, label %assert_fail63, !dbg !3980, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %155(ptr nonnull @.str.1138), !dbg !3980
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape, i64 1, !dbg !3980
  %157 = load i64, ptr %156, align 8, !dbg !3980, !tbaa !4070
  %158 = and i64 %157, 4294967295, !dbg !3980
  %159 = icmp eq i64 %158, 512, !dbg !3980
  br i1 %159, label %assert_end66, label %assert_fail65, !dbg !3980, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %160(ptr nonnull @.str.1139), !dbg !3980
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape, i64 2, !dbg !3980
  %162 = load i64, ptr %161, align 8, !dbg !3980, !tbaa !4072
  %163 = and i64 %162, 4294967295, !dbg !3980
  %164 = icmp eq i64 %163, 1, !dbg !3980
  br i1 %164, label %assert_end68, label %assert_fail67, !dbg !3980, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %165(ptr nonnull @.str.1140), !dbg !3980
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.shape, i64 3, !dbg !3980
  %167 = load i64, ptr %166, align 8, !dbg !3980, !tbaa !4075
  %168 = and i64 %167, 4294967295, !dbg !3980
  %169 = icmp eq i64 %168, 1, !dbg !3980
  br i1 %169, label %assert_end70, label %assert_fail69, !dbg !3980, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %170(ptr nonnull @.str.1141), !dbg !3980
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.strides, null, !dbg !3980
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3980, !prof !52

if_then71:                                        ; preds = %assert_end70
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.p2.strides, i64 1, !dbg !3980
  %172 = load i64, ptr %171, align 8, !dbg !3980, !tbaa !4077
  %173 = and i64 %172, 4294967295, !dbg !3980
  %174 = icmp eq i64 %173, 1, !dbg !3980
  br i1 %174, label %if_end72, label %assert_fail73, !dbg !3980, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3980
  %176 = load i64, ptr %175, align 8, !dbg !3980
  %177 = icmp eq i64 %176, 0, !dbg !3980
  br i1 %177, label %assert_end76, label %assert_fail75, !dbg !3980, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %178(ptr nonnull @.str.1142), !dbg !3980
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %179(ptr nonnull @.str.1143), !dbg !3980
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3980
  %181 = load i32, ptr %180, align 4, !dbg !3980
  %182 = icmp eq i32 %181, 2, !dbg !3980
  br i1 %182, label %assert_end78, label %assert_fail77, !dbg !3980, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %183(ptr nonnull @.str.1144), !dbg !3980
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %184 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3980
  %185 = load i32, ptr %184, align 4, !dbg !3980
  %186 = icmp eq i32 %dev_id, %185, !dbg !3980
  br i1 %186, label %assert_end80, label %assert_fail79, !dbg !3980, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %187(ptr nonnull @.str.1145), !dbg !3980
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3980
  %189 = load i32, ptr %188, align 4, !dbg !3980
  %190 = icmp eq i32 %189, 4, !dbg !3980
  br i1 %190, label %assert_end84, label %assert_fail81, !dbg !3980, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %191(ptr nonnull @.str.1146), !dbg !3980
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %192 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3980
  %193 = load i16, ptr %192, align 2, !dbg !3980
  %194 = icmp eq i16 %193, 1, !dbg !3980
  %195 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3980
  %196 = load i8, ptr %195, align 1, !dbg !3980
  %197 = icmp eq i8 %196, 32, !dbg !3980
  %198 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3980
  %199 = load i8, ptr %198, align 1, !dbg !3980
  %200 = icmp eq i8 %199, 2, !dbg !3980
  %201 = and i1 %197, %200, !dbg !3980
  %202 = and i1 %194, %201, !dbg !3980
  br i1 %202, label %assert_end86, label %assert_fail85, !dbg !3980, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %203(ptr nonnull @.str.1147), !dbg !3980
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %204 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape, align 8, !dbg !3980, !tbaa !4087
  %205 = and i64 %204, 4294967295, !dbg !3980
  %206 = icmp eq i64 %205, 1, !dbg !3980
  br i1 %206, label %assert_end88, label %assert_fail87, !dbg !3980, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %207(ptr nonnull @.str.1148), !dbg !3980
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape, i64 1, !dbg !3980
  %209 = load i64, ptr %208, align 8, !dbg !3980, !tbaa !4097
  %210 = and i64 %209, 4294967295, !dbg !3980
  %211 = icmp eq i64 %210, 512, !dbg !3980
  br i1 %211, label %assert_end90, label %assert_fail89, !dbg !3980, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %212(ptr nonnull @.str.1149), !dbg !3980
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %213 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape, i64 2, !dbg !3980
  %214 = load i64, ptr %213, align 8, !dbg !3980, !tbaa !4099
  %215 = and i64 %214, 4294967295, !dbg !3980
  %216 = icmp eq i64 %215, 14, !dbg !3980
  br i1 %216, label %assert_end92, label %assert_fail91, !dbg !3980, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %217(ptr nonnull @.str.1150), !dbg !3980
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %218 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.shape, i64 3, !dbg !3980
  %219 = load i64, ptr %218, align 8, !dbg !3980, !tbaa !4102
  %220 = and i64 %219, 4294967295, !dbg !3980
  %221 = icmp eq i64 %220, 14, !dbg !3980
  br i1 %221, label %assert_end94, label %assert_fail93, !dbg !3980, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %222(ptr nonnull @.str.1151), !dbg !3980
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides, null, !dbg !3980
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3980, !prof !52

if_then95:                                        ; preds = %assert_end94
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides, i64 1, !dbg !3980
  %224 = load i64, ptr %223, align 8, !dbg !3980, !tbaa !4104
  %225 = and i64 %224, 4294967295, !dbg !3980
  %226 = icmp eq i64 %225, 196, !dbg !3980
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides, i64 2, !dbg !3980
  %228 = load i64, ptr %227, align 8, !dbg !3980, !tbaa !4114
  %229 = and i64 %228, 4294967295, !dbg !3980
  %230 = icmp eq i64 %229, 14, !dbg !3980
  %231 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_nn_relu_9.T_relu.strides, i64 3, !dbg !3980
  %232 = load i64, ptr %231, align 8, !dbg !3980, !tbaa !4117
  %233 = and i64 %232, 4294967295, !dbg !3980
  %234 = icmp eq i64 %233, 1, !dbg !3980
  %235 = and i1 %230, %234, !dbg !3980
  %236 = and i1 %226, %235, !dbg !3980
  br i1 %236, label %if_end96, label %assert_fail97, !dbg !3980, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3980
  %238 = load i64, ptr %237, align 8, !dbg !3980
  %239 = icmp eq i64 %238, 0, !dbg !3980
  br i1 %239, label %assert_end100, label %assert_fail99, !dbg !3980, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %240(ptr nonnull @.str.1152), !dbg !3980
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %241(ptr nonnull @.str.1153), !dbg !3980
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3980
  %243 = load i32, ptr %242, align 4, !dbg !3980
  %244 = icmp eq i32 %243, 2, !dbg !3980
  br i1 %244, label %assert_end102, label %assert_fail101, !dbg !3980, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %245(ptr nonnull @.str.1154), !dbg !3980
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %246 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3980
  %247 = load i32, ptr %246, align 4, !dbg !3980
  %248 = icmp eq i32 %dev_id, %247, !dbg !3980
  br i1 %248, label %assert_end104, label %assert_fail103, !dbg !3980, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %249 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3980, !tbaa !19
  tail call void %249(ptr nonnull @.str.1155), !dbg !3980
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3980
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3980, !tbaa !4119
  %250 = sext i32 %dev_id to i64, !dbg !3980
  %251 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3980
  store i64 %250, ptr %251, align 8, !dbg !3980
  %252 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3980
  store i32 0, ptr %252, align 4, !dbg !3980, !tbaa !4130
  %253 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3980
  %254 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3980
  %255 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3980, !tbaa !19
  %256 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3980
  %.not120 = icmp eq ptr %256, null, !dbg !3980
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3980, !prof !52

handle_init:                                      ; preds = %assert_end104
  %257 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3980, !tbaa !19
  %258 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3980, !tbaa !19
  %259 = call i32 %258(ptr %257, ptr nonnull @.str.22, ptr nonnull %0), !dbg !3980
  %260 = icmp eq i32 %259, 0, !dbg !3980
  br i1 %260, label %call_end, label %common.ret, !dbg !3980, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %261 = phi ptr [ %256, %assert_end104 ], [ %264, %call_end ], !dbg !3980
  %262 = call i32 %255(ptr %261, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %253, ptr nonnull %254), !dbg !3980
  %263 = icmp eq i32 %262, 0, !dbg !3980
  br i1 %263, label %call_end106, label %common.ret, !dbg !3980, !prof !18

call_end:                                         ; preds = %handle_init
  %264 = load ptr, ptr %0, align 8, !dbg !3980
  store ptr %264, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3980
  br label %handle_init_end, !dbg !3980

call_end106:                                      ; preds = %handle_init_end
  %265 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_9_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3980
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_dense_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4132 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4134, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4135, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4136, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4137, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4138, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4139, metadata !DIExpression()), !dbg !4140
  %0 = alloca ptr, align 8, !dbg !4140
  %stack_value99 = alloca [8 x %0], align 8, !dbg !4140
  %stack_tcode100 = alloca [8 x i32], align 4, !dbg !4140
  %1 = icmp eq i32 %num_args, 4, !dbg !4140
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4140, !prof !18

common.ret:                                       ; preds = %call_end90, %handle_init_end, %handle_init, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ %199, %handle_init ], [ %202, %handle_init_end ], [ %205, %call_end90 ]
  ret i32 %common.ret.op, !dbg !4140

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %2(ptr nonnull @.str.1157), !dbg !4140
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4140, !tbaa !4141
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4140
  %p1.code = load i32, ptr %3, align 4, !dbg !4140, !tbaa !4152
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4140
  %p2.code = load i32, ptr %4, align 4, !dbg !4140, !tbaa !4154
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4140
  %T_add.code = load i32, ptr %5, align 4, !dbg !4140, !tbaa !4157
  %p0 = load ptr, ptr %args, align 8, !dbg !4140
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4140
  %p1 = load ptr, ptr %6, align 8, !dbg !4140
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4140
  %p2 = load ptr, ptr %7, align 8, !dbg !4140
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4140
  %T_add = load ptr, ptr %8, align 8, !dbg !4140
  %p092 = load ptr, ptr %p0, align 8, !dbg !4140
  call void @llvm.assume(i1 true) [ "align"(ptr %p092, i64 64) ], !dbg !4140
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p0.shape = load ptr, ptr %9, align 8, !dbg !4140
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p0.strides = load ptr, ptr %10, align 8, !dbg !4140
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4140
  %dev_id = load i32, ptr %11, align 4, !dbg !4140
  %p193 = load ptr, ptr %p1, align 8, !dbg !4140
  call void @llvm.assume(i1 true) [ "align"(ptr %p193, i64 64) ], !dbg !4140
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p1.shape = load ptr, ptr %12, align 8, !dbg !4140
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p1.strides = load ptr, ptr %13, align 8, !dbg !4140
  %p294 = load ptr, ptr %p2, align 8, !dbg !4140
  call void @llvm.assume(i1 true) [ "align"(ptr %p294, i64 64) ], !dbg !4140
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p2.shape = load ptr, ptr %14, align 8, !dbg !4140
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.p2.strides = load ptr, ptr %15, align 8, !dbg !4140
  %T_add91 = load ptr, ptr %T_add, align 8, !dbg !4140
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add91, i64 64) ], !dbg !4140
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.T_add.shape = load ptr, ptr %16, align 8, !dbg !4140
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !4140
  %tvmgen_default_fused_nn_dense_add.T_add.strides = load ptr, ptr %17, align 8, !dbg !4140
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4140

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %18(ptr nonnull @.str.1158), !dbg !4140
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4140

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %19(ptr nonnull @.str.1159), !dbg !4140
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4140

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %20(ptr nonnull @.str.1160), !dbg !4140
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4140

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %21(ptr nonnull @.str.1161), !dbg !4140
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4140
  %23 = load i32, ptr %22, align 4, !dbg !4140
  %24 = icmp eq i32 %23, 2, !dbg !4140
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !4140, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %25(ptr nonnull @.str.1162), !dbg !4140
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4140
  %27 = load i16, ptr %26, align 2, !dbg !4140
  %28 = icmp eq i16 %27, 1, !dbg !4140
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4140
  %30 = load i8, ptr %29, align 1, !dbg !4140
  %31 = icmp eq i8 %30, 32, !dbg !4140
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4140
  %33 = load i8, ptr %32, align 1, !dbg !4140
  %34 = icmp eq i8 %33, 2, !dbg !4140
  %35 = and i1 %31, %34, !dbg !4140
  %36 = and i1 %28, %35, !dbg !4140
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !4140, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %37(ptr nonnull @.str.1163), !dbg !4140
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p0.shape, align 8, !dbg !4140, !tbaa !4159
  %39 = and i64 %38, 4294967295, !dbg !4140
  %40 = icmp eq i64 %39, 1, !dbg !4140
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !4140, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %41(ptr nonnull @.str.1164), !dbg !4140
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p0.shape, i64 1, !dbg !4140
  %43 = load i64, ptr %42, align 8, !dbg !4140, !tbaa !4169
  %44 = and i64 %43, 4294967295, !dbg !4140
  %45 = icmp eq i64 %44, 2048, !dbg !4140
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !4140, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %46(ptr nonnull @.str.1165), !dbg !4140
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p0.strides, null, !dbg !4140
  br i1 %.not, label %if_end, label %if_then, !dbg !4140, !prof !52

if_then:                                          ; preds = %assert_end22
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p0.strides, i64 1, !dbg !4140
  %48 = load i64, ptr %47, align 8, !dbg !4140, !tbaa !4171
  %49 = and i64 %48, 4294967295, !dbg !4140
  %50 = icmp eq i64 %49, 1, !dbg !4140
  br i1 %50, label %if_end, label %assert_fail23, !dbg !4140, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %51 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4140
  %52 = load i64, ptr %51, align 8, !dbg !4140
  %53 = icmp eq i64 %52, 0, !dbg !4140
  br i1 %53, label %assert_end26, label %assert_fail25, !dbg !4140, !prof !18

assert_fail23:                                    ; preds = %if_then
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %54(ptr nonnull @.str.1166), !dbg !4140
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %55(ptr nonnull @.str.1167), !dbg !4140
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %56 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4140
  %57 = load i32, ptr %56, align 4, !dbg !4140
  %58 = icmp eq i32 %57, 2, !dbg !4140
  br i1 %58, label %assert_end28, label %assert_fail27, !dbg !4140, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %59 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %59(ptr nonnull @.str.1168), !dbg !4140
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %60 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4140
  %61 = load i32, ptr %60, align 4, !dbg !4140
  %62 = icmp eq i32 %61, 2, !dbg !4140
  br i1 %62, label %assert_end32, label %assert_fail29, !dbg !4140, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %63(ptr nonnull @.str.1169), !dbg !4140
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %64 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4140
  %65 = load i16, ptr %64, align 2, !dbg !4140
  %66 = icmp eq i16 %65, 1, !dbg !4140
  %67 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4140
  %68 = load i8, ptr %67, align 1, !dbg !4140
  %69 = icmp eq i8 %68, 32, !dbg !4140
  %70 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4140
  %71 = load i8, ptr %70, align 1, !dbg !4140
  %72 = icmp eq i8 %71, 2, !dbg !4140
  %73 = and i1 %69, %72, !dbg !4140
  %74 = and i1 %66, %73, !dbg !4140
  br i1 %74, label %assert_end34, label %assert_fail33, !dbg !4140, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %75(ptr nonnull @.str.1170), !dbg !4140
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %76 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p1.shape, align 8, !dbg !4140, !tbaa !4181
  %77 = and i64 %76, 4294967295, !dbg !4140
  %78 = icmp eq i64 %77, 1000, !dbg !4140
  br i1 %78, label %assert_end36, label %assert_fail35, !dbg !4140, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %79(ptr nonnull @.str.1171), !dbg !4140
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %80 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p1.shape, i64 1, !dbg !4140
  %81 = load i64, ptr %80, align 8, !dbg !4140, !tbaa !4191
  %82 = and i64 %81, 4294967295, !dbg !4140
  %83 = icmp eq i64 %82, 2048, !dbg !4140
  br i1 %83, label %assert_end38, label %assert_fail37, !dbg !4140, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %84(ptr nonnull @.str.1172), !dbg !4140
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %.not101 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p1.strides, null, !dbg !4140
  br i1 %.not101, label %if_end40, label %if_then39, !dbg !4140, !prof !52

if_then39:                                        ; preds = %assert_end38
  %85 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p1.strides, align 8, !dbg !4140, !tbaa !4193
  %86 = and i64 %85, 4294967295, !dbg !4140
  %87 = icmp eq i64 %86, 2048, !dbg !4140
  %88 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p1.strides, i64 1, !dbg !4140
  %89 = load i64, ptr %88, align 8, !dbg !4140, !tbaa !4203
  %90 = and i64 %89, 4294967295, !dbg !4140
  %91 = icmp eq i64 %90, 1, !dbg !4140
  %92 = and i1 %87, %91, !dbg !4140
  br i1 %92, label %if_end40, label %assert_fail41, !dbg !4140, !prof !18

if_end40:                                         ; preds = %if_then39, %assert_end38
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4140
  %94 = load i64, ptr %93, align 8, !dbg !4140
  %95 = icmp eq i64 %94, 0, !dbg !4140
  br i1 %95, label %assert_end44, label %assert_fail43, !dbg !4140, !prof !18

assert_fail41:                                    ; preds = %if_then39
  %96 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %96(ptr nonnull @.str.1173), !dbg !4140
  br label %common.ret

assert_fail43:                                    ; preds = %if_end40
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %97(ptr nonnull @.str.1174), !dbg !4140
  br label %common.ret

assert_end44:                                     ; preds = %if_end40
  %98 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4140
  %99 = load i32, ptr %98, align 4, !dbg !4140
  %100 = icmp eq i32 %99, 2, !dbg !4140
  br i1 %100, label %assert_end46, label %assert_fail45, !dbg !4140, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %101(ptr nonnull @.str.1175), !dbg !4140
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4140
  %103 = load i32, ptr %102, align 4, !dbg !4140
  %104 = icmp eq i32 %dev_id, %103, !dbg !4140
  br i1 %104, label %assert_end48, label %assert_fail47, !dbg !4140, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %105(ptr nonnull @.str.1176), !dbg !4140
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %106 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4140
  %107 = load i32, ptr %106, align 4, !dbg !4140
  %108 = icmp eq i32 %107, 2, !dbg !4140
  br i1 %108, label %assert_end52, label %assert_fail49, !dbg !4140, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %109(ptr nonnull @.str.1177), !dbg !4140
  br label %common.ret

assert_end52:                                     ; preds = %assert_end48
  %110 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4140
  %111 = load i16, ptr %110, align 2, !dbg !4140
  %112 = icmp eq i16 %111, 1, !dbg !4140
  %113 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4140
  %114 = load i8, ptr %113, align 1, !dbg !4140
  %115 = icmp eq i8 %114, 32, !dbg !4140
  %116 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4140
  %117 = load i8, ptr %116, align 1, !dbg !4140
  %118 = icmp eq i8 %117, 2, !dbg !4140
  %119 = and i1 %115, %118, !dbg !4140
  %120 = and i1 %112, %119, !dbg !4140
  br i1 %120, label %assert_end54, label %assert_fail53, !dbg !4140, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %121(ptr nonnull @.str.1178), !dbg !4140
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %122 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p2.shape, align 8, !dbg !4140, !tbaa !4205
  %123 = and i64 %122, 4294967295, !dbg !4140
  %124 = icmp eq i64 %123, 1, !dbg !4140
  br i1 %124, label %assert_end56, label %assert_fail55, !dbg !4140, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %125 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %125(ptr nonnull @.str.1179), !dbg !4140
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p2.shape, i64 1, !dbg !4140
  %127 = load i64, ptr %126, align 8, !dbg !4140, !tbaa !4215
  %128 = and i64 %127, 4294967295, !dbg !4140
  %129 = icmp eq i64 %128, 1000, !dbg !4140
  br i1 %129, label %assert_end58, label %assert_fail57, !dbg !4140, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %130(ptr nonnull @.str.1180), !dbg !4140
  br label %common.ret

assert_end58:                                     ; preds = %assert_end56
  %.not102 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p2.strides, null, !dbg !4140
  br i1 %.not102, label %if_end60, label %if_then59, !dbg !4140, !prof !52

if_then59:                                        ; preds = %assert_end58
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p2.strides, i64 1, !dbg !4140
  %132 = load i64, ptr %131, align 8, !dbg !4140, !tbaa !4217
  %133 = and i64 %132, 4294967295, !dbg !4140
  %134 = icmp eq i64 %133, 1, !dbg !4140
  br i1 %134, label %if_end60, label %assert_fail61, !dbg !4140, !prof !18

if_end60:                                         ; preds = %if_then59, %assert_end58
  %135 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4140
  %136 = load i64, ptr %135, align 8, !dbg !4140
  %137 = icmp eq i64 %136, 0, !dbg !4140
  br i1 %137, label %assert_end64, label %assert_fail63, !dbg !4140, !prof !18

assert_fail61:                                    ; preds = %if_then59
  %138 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %138(ptr nonnull @.str.1181), !dbg !4140
  br label %common.ret

assert_fail63:                                    ; preds = %if_end60
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %139(ptr nonnull @.str.1182), !dbg !4140
  br label %common.ret

assert_end64:                                     ; preds = %if_end60
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4140
  %141 = load i32, ptr %140, align 4, !dbg !4140
  %142 = icmp eq i32 %141, 2, !dbg !4140
  br i1 %142, label %assert_end66, label %assert_fail65, !dbg !4140, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %143 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %143(ptr nonnull @.str.1183), !dbg !4140
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %144 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4140
  %145 = load i32, ptr %144, align 4, !dbg !4140
  %146 = icmp eq i32 %dev_id, %145, !dbg !4140
  br i1 %146, label %assert_end68, label %assert_fail67, !dbg !4140, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %147(ptr nonnull @.str.1184), !dbg !4140
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %148 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !4140
  %149 = load i32, ptr %148, align 4, !dbg !4140
  %150 = icmp eq i32 %149, 2, !dbg !4140
  br i1 %150, label %assert_end72, label %assert_fail69, !dbg !4140, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %151(ptr nonnull @.str.1185), !dbg !4140
  br label %common.ret

assert_end72:                                     ; preds = %assert_end68
  %152 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !4140
  %153 = load i16, ptr %152, align 2, !dbg !4140
  %154 = icmp eq i16 %153, 1, !dbg !4140
  %155 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !4140
  %156 = load i8, ptr %155, align 1, !dbg !4140
  %157 = icmp eq i8 %156, 32, !dbg !4140
  %158 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !4140
  %159 = load i8, ptr %158, align 1, !dbg !4140
  %160 = icmp eq i8 %159, 2, !dbg !4140
  %161 = and i1 %157, %160, !dbg !4140
  %162 = and i1 %154, %161, !dbg !4140
  br i1 %162, label %assert_end74, label %assert_fail73, !dbg !4140, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %163 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %163(ptr nonnull @.str.1186), !dbg !4140
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %164 = load i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.shape, align 8, !dbg !4140, !tbaa !4227
  %165 = and i64 %164, 4294967295, !dbg !4140
  %166 = icmp eq i64 %165, 1, !dbg !4140
  br i1 %166, label %assert_end76, label %assert_fail75, !dbg !4140, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %167(ptr nonnull @.str.1187), !dbg !4140
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %168 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.shape, i64 1, !dbg !4140
  %169 = load i64, ptr %168, align 8, !dbg !4140, !tbaa !4237
  %170 = and i64 %169, 4294967295, !dbg !4140
  %171 = icmp eq i64 %170, 1000, !dbg !4140
  br i1 %171, label %assert_end78, label %assert_fail77, !dbg !4140, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %172(ptr nonnull @.str.1188), !dbg !4140
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not103 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.T_add.strides, null, !dbg !4140
  br i1 %.not103, label %if_end80, label %if_then79, !dbg !4140, !prof !52

if_then79:                                        ; preds = %assert_end78
  %173 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.strides, i64 1, !dbg !4140
  %174 = load i64, ptr %173, align 8, !dbg !4140, !tbaa !4239
  %175 = and i64 %174, 4294967295, !dbg !4140
  %176 = icmp eq i64 %175, 1, !dbg !4140
  br i1 %176, label %if_end80, label %assert_fail81, !dbg !4140, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %177 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !4140
  %178 = load i64, ptr %177, align 8, !dbg !4140
  %179 = icmp eq i64 %178, 0, !dbg !4140
  br i1 %179, label %assert_end84, label %assert_fail83, !dbg !4140, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %180(ptr nonnull @.str.1189), !dbg !4140
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %181(ptr nonnull @.str.1190), !dbg !4140
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %182 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !4140
  %183 = load i32, ptr %182, align 4, !dbg !4140
  %184 = icmp eq i32 %183, 2, !dbg !4140
  br i1 %184, label %assert_end86, label %assert_fail85, !dbg !4140, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %185(ptr nonnull @.str.1191), !dbg !4140
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %186 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !4140
  %187 = load i32, ptr %186, align 4, !dbg !4140
  %188 = icmp eq i32 %dev_id, %187, !dbg !4140
  br i1 %188, label %assert_end88, label %assert_fail87, !dbg !4140, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4140, !tbaa !19
  tail call void %189(ptr nonnull @.str.1192), !dbg !4140
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  store i64 2, ptr %stack_value99, align 8, !dbg !4140
  store i32 0, ptr %stack_tcode100, align 4, !dbg !4140, !tbaa !4249
  %190 = sext i32 %dev_id to i64, !dbg !4140
  %191 = getelementptr inbounds i64, ptr %stack_value99, i64 1, !dbg !4140
  store i64 %190, ptr %191, align 8, !dbg !4140
  %192 = getelementptr inbounds i32, ptr %stack_tcode100, i64 1, !dbg !4140
  store i32 0, ptr %192, align 4, !dbg !4140, !tbaa !4260
  %193 = getelementptr inbounds %0, ptr %stack_value99, i64 2, !dbg !4140
  %194 = getelementptr inbounds i32, ptr %stack_tcode100, i64 2, !dbg !4140
  %195 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4140, !tbaa !19
  %196 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4140
  %.not104 = icmp eq ptr %196, null, !dbg !4140
  br i1 %.not104, label %handle_init, label %handle_init_end, !dbg !4140, !prof !52

handle_init:                                      ; preds = %assert_end88
  %197 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4140, !tbaa !19
  %198 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4140, !tbaa !19
  %199 = call i32 %198(ptr %197, ptr nonnull @.str.22, ptr nonnull %0), !dbg !4140
  %200 = icmp eq i32 %199, 0, !dbg !4140
  br i1 %200, label %call_end, label %common.ret, !dbg !4140, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end88
  %201 = phi ptr [ %196, %assert_end88 ], [ %204, %call_end ], !dbg !4140
  %202 = call i32 %195(ptr %201, ptr nonnull %stack_value99, ptr nonnull %stack_tcode100, i32 2, ptr nonnull %193, ptr nonnull %194), !dbg !4140
  %203 = icmp eq i32 %202, 0, !dbg !4140
  br i1 %203, label %call_end90, label %common.ret, !dbg !4140, !prof !18

call_end:                                         ; preds = %handle_init
  %204 = load ptr, ptr %0, align 8, !dbg !4140
  store ptr %204, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4140
  br label %handle_init_end, !dbg !4140

call_end90:                                       ; preds = %handle_init_end
  %205 = call fastcc i32 @tvmgen_default_fused_nn_dense_add_compute_(ptr nonnull %stack_value99, ptr %T_add91, ptr nonnull %stack_tcode100, ptr %p092, ptr %p193, ptr %p294), !dbg !4140
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_max_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4262 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4264, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4265, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4266, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4267, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4268, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4269, metadata !DIExpression()), !dbg !4270
  %0 = alloca ptr, align 8, !dbg !4270
  %stack_value59 = alloca [5 x %0], align 8, !dbg !4270
  %stack_tcode60 = alloca [5 x i32], align 4, !dbg !4270
  %1 = icmp eq i32 %num_args, 2, !dbg !4270
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4270, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %141, %handle_init ], [ %144, %handle_init_end ], [ %147, %call_end52 ]
  ret i32 %common.ret.op, !dbg !4270

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %2(ptr nonnull @.str.1194), !dbg !4270
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4270, !tbaa !4271
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4270
  %pool_max.code = load i32, ptr %3, align 4, !dbg !4270, !tbaa !4282
  %p0 = load ptr, ptr %args, align 8, !dbg !4270
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4270
  %pool_max = load ptr, ptr %4, align 8, !dbg !4270
  %p053 = load ptr, ptr %p0, align 8, !dbg !4270
  call void @llvm.assume(i1 true) [ "align"(ptr %p053, i64 64) ], !dbg !4270
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4270
  %tvmgen_default_fused_nn_max_pool2d.p0.shape = load ptr, ptr %5, align 8, !dbg !4270
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4270
  %tvmgen_default_fused_nn_max_pool2d.p0.strides = load ptr, ptr %6, align 8, !dbg !4270
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4270
  %dev_id = load i32, ptr %7, align 4, !dbg !4270
  %pool_max54 = load ptr, ptr %pool_max, align 8, !dbg !4270
  call void @llvm.assume(i1 true) [ "align"(ptr %pool_max54, i64 64) ], !dbg !4270
  %8 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 4, !dbg !4270
  %tvmgen_default_fused_nn_max_pool2d.pool_max.shape = load ptr, ptr %8, align 8, !dbg !4270
  %9 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 5, !dbg !4270
  %tvmgen_default_fused_nn_max_pool2d.pool_max.strides = load ptr, ptr %9, align 8, !dbg !4270
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !4270

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %10(ptr nonnull @.str.1195), !dbg !4270
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %pool_max.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4270

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %11(ptr nonnull @.str.1196), !dbg !4270
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4270
  %13 = load i32, ptr %12, align 4, !dbg !4270
  %14 = icmp eq i32 %13, 4, !dbg !4270
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !4270, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %15(ptr nonnull @.str.1197), !dbg !4270
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4270
  %17 = load i16, ptr %16, align 2, !dbg !4270
  %18 = icmp eq i16 %17, 1, !dbg !4270
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4270
  %20 = load i8, ptr %19, align 1, !dbg !4270
  %21 = icmp eq i8 %20, 32, !dbg !4270
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4270
  %23 = load i8, ptr %22, align 1, !dbg !4270
  %24 = icmp eq i8 %23, 2, !dbg !4270
  %25 = and i1 %21, %24, !dbg !4270
  %26 = and i1 %18, %25, !dbg !4270
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !4270, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %27(ptr nonnull @.str.1198), !dbg !4270
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, align 8, !dbg !4270, !tbaa !4284
  %29 = and i64 %28, 4294967295, !dbg !4270
  %30 = icmp eq i64 %29, 1, !dbg !4270
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !4270, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %31(ptr nonnull @.str.1199), !dbg !4270
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 1, !dbg !4270
  %33 = load i64, ptr %32, align 8, !dbg !4270, !tbaa !4294
  %34 = and i64 %33, 4294967295, !dbg !4270
  %35 = icmp eq i64 %34, 64, !dbg !4270
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !4270, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %36(ptr nonnull @.str.1200), !dbg !4270
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 2, !dbg !4270
  %38 = load i64, ptr %37, align 8, !dbg !4270, !tbaa !4296
  %39 = and i64 %38, 4294967295, !dbg !4270
  %40 = icmp eq i64 %39, 112, !dbg !4270
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !4270, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %41(ptr nonnull @.str.1201), !dbg !4270
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 3, !dbg !4270
  %43 = load i64, ptr %42, align 8, !dbg !4270, !tbaa !4299
  %44 = and i64 %43, 4294967295, !dbg !4270
  %45 = icmp eq i64 %44, 112, !dbg !4270
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !4270, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %46(ptr nonnull @.str.1202), !dbg !4270
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, null, !dbg !4270
  br i1 %.not, label %if_end, label %if_then, !dbg !4270, !prof !52

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 1, !dbg !4270
  %48 = load i64, ptr %47, align 8, !dbg !4270, !tbaa !4301
  %49 = and i64 %48, 4294967295, !dbg !4270
  %50 = icmp eq i64 %49, 12544, !dbg !4270
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 2, !dbg !4270
  %52 = load i64, ptr %51, align 8, !dbg !4270, !tbaa !4311
  %53 = and i64 %52, 4294967295, !dbg !4270
  %54 = icmp eq i64 %53, 112, !dbg !4270
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 3, !dbg !4270
  %56 = load i64, ptr %55, align 8, !dbg !4270, !tbaa !4314
  %57 = and i64 %56, 4294967295, !dbg !4270
  %58 = icmp eq i64 %57, 1, !dbg !4270
  %59 = and i1 %54, %58, !dbg !4270
  %60 = and i1 %50, %59, !dbg !4270
  br i1 %60, label %if_end, label %assert_fail21, !dbg !4270, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4270
  %62 = load i64, ptr %61, align 8, !dbg !4270
  %63 = icmp eq i64 %62, 0, !dbg !4270
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !4270, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %64(ptr nonnull @.str.1203), !dbg !4270
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %65(ptr nonnull @.str.1204), !dbg !4270
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4270
  %67 = load i32, ptr %66, align 4, !dbg !4270
  %68 = icmp eq i32 %67, 2, !dbg !4270
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !4270, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %69(ptr nonnull @.str.1205), !dbg !4270
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 2, !dbg !4270
  %71 = load i32, ptr %70, align 4, !dbg !4270
  %72 = icmp eq i32 %71, 4, !dbg !4270
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !4270, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %73(ptr nonnull @.str.1206), !dbg !4270
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 2, !dbg !4270
  %75 = load i16, ptr %74, align 2, !dbg !4270
  %76 = icmp eq i16 %75, 1, !dbg !4270
  %77 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 1, !dbg !4270
  %78 = load i8, ptr %77, align 1, !dbg !4270
  %79 = icmp eq i8 %78, 32, !dbg !4270
  %80 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 0, !dbg !4270
  %81 = load i8, ptr %80, align 1, !dbg !4270
  %82 = icmp eq i8 %81, 2, !dbg !4270
  %83 = and i1 %79, %82, !dbg !4270
  %84 = and i1 %76, %83, !dbg !4270
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !4270, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %85(ptr nonnull @.str.1207), !dbg !4270
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, align 8, !dbg !4270, !tbaa !4316
  %87 = and i64 %86, 4294967295, !dbg !4270
  %88 = icmp eq i64 %87, 1, !dbg !4270
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !4270, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %89(ptr nonnull @.str.1208), !dbg !4270
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 1, !dbg !4270
  %91 = load i64, ptr %90, align 8, !dbg !4270, !tbaa !4326
  %92 = and i64 %91, 4294967295, !dbg !4270
  %93 = icmp eq i64 %92, 64, !dbg !4270
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !4270, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %94(ptr nonnull @.str.1209), !dbg !4270
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 2, !dbg !4270
  %96 = load i64, ptr %95, align 8, !dbg !4270, !tbaa !4328
  %97 = and i64 %96, 4294967295, !dbg !4270
  %98 = icmp eq i64 %97, 56, !dbg !4270
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !4270, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %99(ptr nonnull @.str.1210), !dbg !4270
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 3, !dbg !4270
  %101 = load i64, ptr %100, align 8, !dbg !4270, !tbaa !4331
  %102 = and i64 %101, 4294967295, !dbg !4270
  %103 = icmp eq i64 %102, 56, !dbg !4270
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4270, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %104(ptr nonnull @.str.1211), !dbg !4270
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, null, !dbg !4270
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !4270, !prof !52

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 1, !dbg !4270
  %106 = load i64, ptr %105, align 8, !dbg !4270, !tbaa !4333
  %107 = and i64 %106, 4294967295, !dbg !4270
  %108 = icmp eq i64 %107, 3136, !dbg !4270
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 2, !dbg !4270
  %110 = load i64, ptr %109, align 8, !dbg !4270, !tbaa !4343
  %111 = and i64 %110, 4294967295, !dbg !4270
  %112 = icmp eq i64 %111, 56, !dbg !4270
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 3, !dbg !4270
  %114 = load i64, ptr %113, align 8, !dbg !4270, !tbaa !4346
  %115 = and i64 %114, 4294967295, !dbg !4270
  %116 = icmp eq i64 %115, 1, !dbg !4270
  %117 = and i1 %112, %116, !dbg !4270
  %118 = and i1 %108, %117, !dbg !4270
  br i1 %118, label %if_end42, label %assert_fail43, !dbg !4270, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %119 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 6, !dbg !4270
  %120 = load i64, ptr %119, align 8, !dbg !4270
  %121 = icmp eq i64 %120, 0, !dbg !4270
  br i1 %121, label %assert_end46, label %assert_fail45, !dbg !4270, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %122(ptr nonnull @.str.1212), !dbg !4270
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %123(ptr nonnull @.str.1213), !dbg !4270
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %124 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 0, !dbg !4270
  %125 = load i32, ptr %124, align 4, !dbg !4270
  %126 = icmp eq i32 %125, 2, !dbg !4270
  br i1 %126, label %assert_end48, label %assert_fail47, !dbg !4270, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %127(ptr nonnull @.str.1214), !dbg !4270
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %128 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 1, !dbg !4270
  %129 = load i32, ptr %128, align 4, !dbg !4270
  %130 = icmp eq i32 %dev_id, %129, !dbg !4270
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !4270, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4270, !tbaa !19
  tail call void %131(ptr nonnull @.str.1215), !dbg !4270
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !4270
  store i32 0, ptr %stack_tcode60, align 4, !dbg !4270, !tbaa !4348
  %132 = sext i32 %dev_id to i64, !dbg !4270
  %133 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !4270
  store i64 %132, ptr %133, align 8, !dbg !4270
  %134 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !4270
  store i32 0, ptr %134, align 4, !dbg !4270, !tbaa !4359
  %135 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !4270
  %136 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !4270
  %137 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4270, !tbaa !19
  %138 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4270
  %.not62 = icmp eq ptr %138, null, !dbg !4270
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !4270, !prof !52

handle_init:                                      ; preds = %assert_end50
  %139 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4270, !tbaa !19
  %140 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4270, !tbaa !19
  %141 = call i32 %140(ptr %139, ptr nonnull @.str.22, ptr nonnull %0), !dbg !4270
  %142 = icmp eq i32 %141, 0, !dbg !4270
  br i1 %142, label %call_end, label %common.ret, !dbg !4270, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %143 = phi ptr [ %138, %assert_end50 ], [ %146, %call_end ], !dbg !4270
  %144 = call i32 %137(ptr %143, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %135, ptr nonnull %136), !dbg !4270
  %145 = icmp eq i32 %144, 0, !dbg !4270
  br i1 %145, label %call_end52, label %common.ret, !dbg !4270, !prof !18

call_end:                                         ; preds = %handle_init
  %146 = load ptr, ptr %0, align 8, !dbg !4270
  store ptr %146, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4270
  br label %handle_init_end, !dbg !4270

call_end52:                                       ; preds = %handle_init_end
  %147 = call fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr nonnull %stack_value59, ptr %p053, ptr nonnull %stack_tcode60, ptr %pool_max54), !dbg !4270
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_reshape_squeeze(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4361 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4363, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4364, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4365, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4366, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4367, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4368, metadata !DIExpression()), !dbg !4369
  %0 = alloca ptr, align 8, !dbg !4369
  %stack_value55 = alloca [5 x %0], align 8, !dbg !4369
  %stack_tcode56 = alloca [5 x i32], align 4, !dbg !4369
  %1 = icmp eq i32 %num_args, 2, !dbg !4369
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4369, !prof !18

common.ret:                                       ; preds = %call_end48, %handle_init_end, %handle_init, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ %111, %handle_init ], [ %114, %handle_init_end ], [ %117, %call_end48 ]
  ret i32 %common.ret.op, !dbg !4369

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %2(ptr nonnull @.str.1217), !dbg !4369
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4369, !tbaa !4370
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4369
  %T_squeeze.code = load i32, ptr %3, align 4, !dbg !4369, !tbaa !4381
  %p0 = load ptr, ptr %args, align 8, !dbg !4369
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4369
  %T_squeeze = load ptr, ptr %4, align 8, !dbg !4369
  %p050 = load ptr, ptr %p0, align 8, !dbg !4369
  call void @llvm.assume(i1 true) [ "align"(ptr %p050, i64 64) ], !dbg !4369
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4369
  %tvmgen_default_fused_reshape_squeeze.p0.shape = load ptr, ptr %5, align 8, !dbg !4369
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4369
  %tvmgen_default_fused_reshape_squeeze.p0.strides = load ptr, ptr %6, align 8, !dbg !4369
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4369
  %dev_id = load i32, ptr %7, align 4, !dbg !4369
  %T_squeeze49 = load ptr, ptr %T_squeeze, align 8, !dbg !4369
  call void @llvm.assume(i1 true) [ "align"(ptr %T_squeeze49, i64 64) ], !dbg !4369
  %8 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 4, !dbg !4369
  %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape = load ptr, ptr %8, align 8, !dbg !4369
  %9 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 5, !dbg !4369
  %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides = load ptr, ptr %9, align 8, !dbg !4369
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !4369

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %10(ptr nonnull @.str.1218), !dbg !4369
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_squeeze.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4369

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %11(ptr nonnull @.str.1219), !dbg !4369
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4369
  %13 = load i32, ptr %12, align 4, !dbg !4369
  %14 = icmp eq i32 %13, 4, !dbg !4369
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !4369, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %15(ptr nonnull @.str.1220), !dbg !4369
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4369
  %17 = load i16, ptr %16, align 2, !dbg !4369
  %18 = icmp eq i16 %17, 1, !dbg !4369
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4369
  %20 = load i8, ptr %19, align 1, !dbg !4369
  %21 = icmp eq i8 %20, 32, !dbg !4369
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4369
  %23 = load i8, ptr %22, align 1, !dbg !4369
  %24 = icmp eq i8 %23, 2, !dbg !4369
  %25 = and i1 %21, %24, !dbg !4369
  %26 = and i1 %18, %25, !dbg !4369
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !4369, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %27(ptr nonnull @.str.1221), !dbg !4369
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, align 8, !dbg !4369, !tbaa !4383
  %29 = and i64 %28, 4294967295, !dbg !4369
  %30 = icmp eq i64 %29, 1, !dbg !4369
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !4369, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %31(ptr nonnull @.str.1222), !dbg !4369
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 1, !dbg !4369
  %33 = load i64, ptr %32, align 8, !dbg !4369, !tbaa !4393
  %34 = and i64 %33, 4294967295, !dbg !4369
  %35 = icmp eq i64 %34, 2048, !dbg !4369
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !4369, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %36(ptr nonnull @.str.1223), !dbg !4369
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 2, !dbg !4369
  %38 = load i64, ptr %37, align 8, !dbg !4369, !tbaa !4395
  %39 = and i64 %38, 4294967295, !dbg !4369
  %40 = icmp eq i64 %39, 1, !dbg !4369
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !4369, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %41(ptr nonnull @.str.1224), !dbg !4369
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 3, !dbg !4369
  %43 = load i64, ptr %42, align 8, !dbg !4369, !tbaa !4398
  %44 = and i64 %43, 4294967295, !dbg !4369
  %45 = icmp eq i64 %44, 1, !dbg !4369
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !4369, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %46(ptr nonnull @.str.1225), !dbg !4369
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_reshape_squeeze.p0.strides, null, !dbg !4369
  br i1 %.not, label %if_end, label %if_then, !dbg !4369, !prof !52

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.strides, i64 1, !dbg !4369
  %48 = load i64, ptr %47, align 8, !dbg !4369, !tbaa !4400
  %49 = and i64 %48, 4294967295, !dbg !4369
  %50 = icmp eq i64 %49, 1, !dbg !4369
  br i1 %50, label %if_end, label %assert_fail21, !dbg !4369, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %51 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4369
  %52 = load i64, ptr %51, align 8, !dbg !4369
  %53 = icmp eq i64 %52, 0, !dbg !4369
  br i1 %53, label %assert_end24, label %assert_fail23, !dbg !4369, !prof !18

assert_fail21:                                    ; preds = %if_then
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %54(ptr nonnull @.str.1226), !dbg !4369
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %55(ptr nonnull @.str.1227), !dbg !4369
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %56 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4369
  %57 = load i32, ptr %56, align 4, !dbg !4369
  %58 = icmp eq i32 %57, 2, !dbg !4369
  br i1 %58, label %assert_end26, label %assert_fail25, !dbg !4369, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %59 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %59(ptr nonnull @.str.1228), !dbg !4369
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %60 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 2, !dbg !4369
  %61 = load i32, ptr %60, align 4, !dbg !4369
  %62 = icmp eq i32 %61, 2, !dbg !4369
  br i1 %62, label %assert_end30, label %assert_fail27, !dbg !4369, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %63(ptr nonnull @.str.1229), !dbg !4369
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %64 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 2, !dbg !4369
  %65 = load i16, ptr %64, align 2, !dbg !4369
  %66 = icmp eq i16 %65, 1, !dbg !4369
  %67 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 1, !dbg !4369
  %68 = load i8, ptr %67, align 1, !dbg !4369
  %69 = icmp eq i8 %68, 32, !dbg !4369
  %70 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 0, !dbg !4369
  %71 = load i8, ptr %70, align 1, !dbg !4369
  %72 = icmp eq i8 %71, 2, !dbg !4369
  %73 = and i1 %69, %72, !dbg !4369
  %74 = and i1 %66, %73, !dbg !4369
  br i1 %74, label %assert_end32, label %assert_fail31, !dbg !4369, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %75(ptr nonnull @.str.1230), !dbg !4369
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %76 = load i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape, align 8, !dbg !4369, !tbaa !4410
  %77 = and i64 %76, 4294967295, !dbg !4369
  %78 = icmp eq i64 %77, 1, !dbg !4369
  br i1 %78, label %assert_end34, label %assert_fail33, !dbg !4369, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %79(ptr nonnull @.str.1231), !dbg !4369
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %80 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape, i64 1, !dbg !4369
  %81 = load i64, ptr %80, align 8, !dbg !4369, !tbaa !4420
  %82 = and i64 %81, 4294967295, !dbg !4369
  %83 = icmp eq i64 %82, 2048, !dbg !4369
  br i1 %83, label %assert_end36, label %assert_fail35, !dbg !4369, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %84(ptr nonnull @.str.1232), !dbg !4369
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %.not57 = icmp eq ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides, null, !dbg !4369
  br i1 %.not57, label %if_end38, label %if_then37, !dbg !4369, !prof !52

if_then37:                                        ; preds = %assert_end36
  %85 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides, i64 1, !dbg !4369
  %86 = load i64, ptr %85, align 8, !dbg !4369, !tbaa !4422
  %87 = and i64 %86, 4294967295, !dbg !4369
  %88 = icmp eq i64 %87, 1, !dbg !4369
  br i1 %88, label %if_end38, label %assert_fail39, !dbg !4369, !prof !18

if_end38:                                         ; preds = %if_then37, %assert_end36
  %89 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 6, !dbg !4369
  %90 = load i64, ptr %89, align 8, !dbg !4369
  %91 = icmp eq i64 %90, 0, !dbg !4369
  br i1 %91, label %assert_end42, label %assert_fail41, !dbg !4369, !prof !18

assert_fail39:                                    ; preds = %if_then37
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %92(ptr nonnull @.str.1233), !dbg !4369
  br label %common.ret

assert_fail41:                                    ; preds = %if_end38
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %93(ptr nonnull @.str.1234), !dbg !4369
  br label %common.ret

assert_end42:                                     ; preds = %if_end38
  %94 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 0, !dbg !4369
  %95 = load i32, ptr %94, align 4, !dbg !4369
  %96 = icmp eq i32 %95, 2, !dbg !4369
  br i1 %96, label %assert_end44, label %assert_fail43, !dbg !4369, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %97(ptr nonnull @.str.1235), !dbg !4369
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %98 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 1, !dbg !4369
  %99 = load i32, ptr %98, align 4, !dbg !4369
  %100 = icmp eq i32 %dev_id, %99, !dbg !4369
  br i1 %100, label %assert_end46, label %assert_fail45, !dbg !4369, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4369, !tbaa !19
  tail call void %101(ptr nonnull @.str.1236), !dbg !4369
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  store i64 2, ptr %stack_value55, align 8, !dbg !4369
  store i32 0, ptr %stack_tcode56, align 4, !dbg !4369, !tbaa !4432
  %102 = sext i32 %dev_id to i64, !dbg !4369
  %103 = getelementptr inbounds i64, ptr %stack_value55, i64 1, !dbg !4369
  store i64 %102, ptr %103, align 8, !dbg !4369
  %104 = getelementptr inbounds i32, ptr %stack_tcode56, i64 1, !dbg !4369
  store i32 0, ptr %104, align 4, !dbg !4369, !tbaa !4443
  %105 = getelementptr inbounds %0, ptr %stack_value55, i64 2, !dbg !4369
  %106 = getelementptr inbounds i32, ptr %stack_tcode56, i64 2, !dbg !4369
  %107 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4369, !tbaa !19
  %108 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4369
  %.not58 = icmp eq ptr %108, null, !dbg !4369
  br i1 %.not58, label %handle_init, label %handle_init_end, !dbg !4369, !prof !52

handle_init:                                      ; preds = %assert_end46
  %109 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4369, !tbaa !19
  %110 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4369, !tbaa !19
  %111 = call i32 %110(ptr %109, ptr nonnull @.str.22, ptr nonnull %0), !dbg !4369
  %112 = icmp eq i32 %111, 0, !dbg !4369
  br i1 %112, label %call_end, label %common.ret, !dbg !4369, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end46
  %113 = phi ptr [ %108, %assert_end46 ], [ %116, %call_end ], !dbg !4369
  %114 = call i32 %107(ptr %113, ptr nonnull %stack_value55, ptr nonnull %stack_tcode56, i32 2, ptr nonnull %105, ptr nonnull %106), !dbg !4369
  %115 = icmp eq i32 %114, 0, !dbg !4369
  br i1 %115, label %call_end48, label %common.ret, !dbg !4369, !prof !18

call_end:                                         ; preds = %handle_init
  %116 = load ptr, ptr %0, align 8, !dbg !4369
  store ptr %116, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4369
  br label %handle_init_end, !dbg !4369

call_end48:                                       ; preds = %handle_init_end
  %117 = call fastcc i32 @tvmgen_default_fused_reshape_squeeze_compute_(ptr nonnull %stack_value55, ptr %T_squeeze49, ptr nonnull %stack_tcode56, ptr %p050), !dbg !4369
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %adaptive_pool_sum = tail call ptr %7(i32 2, i32 %0, i64 8192, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_sum, i64 64) ]
  %8 = icmp eq ptr %adaptive_pool_sum, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end8, %handle_init_end4, %handle_init3, %handle_init_end, %handle_init, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %20, %handle_init ], [ %23, %handle_init_end ], [ %30, %handle_init3 ], [ %33, %handle_init_end4 ], [ %., %call_end8 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %adaptive_pool_sum, ptr %1, align 8
  %9 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 64, ptr %10, align 8
  %11 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 32, ptr %11, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4445
  %12 = getelementptr inbounds i64, ptr %1, i64 4
  store i64 32, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %13, align 4, !tbaa !4446
  %14 = getelementptr inbounds %0, ptr %1, i64 5
  %15 = getelementptr inbounds i32, ptr %2, i64 5
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %if_end
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.23, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end
  %22 = phi ptr [ %17, %if_end ], [ %25, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %14, ptr nonnull %15)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end2, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %25 = load ptr, ptr %6, align 8
  store ptr %25, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel, align 8
  br label %handle_init_end

call_end2:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %adaptive_pool_sum, ptr %9, align 8
  store i64 2, ptr %10, align 8
  store i64 1024, ptr %11, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4445
  %26 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %27 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1, align 8
  %.not17 = icmp eq ptr %27, null
  br i1 %.not17, label %handle_init3, label %handle_init_end4, !prof !52

handle_init3:                                     ; preds = %call_end2
  %28 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %29 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %30 = call i32 %29(ptr %28, ptr nonnull @.str.24, ptr nonnull %5)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %call_end6, label %common.ret, !prof !18

handle_init_end4:                                 ; preds = %call_end6, %call_end2
  %32 = phi ptr [ %27, %call_end2 ], [ %35, %call_end6 ]
  %33 = call i32 %26(ptr %32, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %12, ptr nonnull %13)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %call_end8, label %common.ret, !prof !18

call_end6:                                        ; preds = %handle_init3
  %35 = load ptr, ptr %5, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1, align 8
  br label %handle_init_end4

call_end8:                                        ; preds = %handle_init_end4
  %36 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %37 = call i32 %36(i32 2, i32 %0, ptr nonnull %adaptive_pool_sum)
  %.not18 = icmp ne i32 %37, 0
  %. = sext i1 %.not18 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pack = tail call ptr %10(i32 2, i32 %0, i64 1806336, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pack, i64 64) ]
  %11 = icmp eq ptr %data_pack, null
  br i1 %11, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %23, %handle_init ], [ %26, %handle_init_end ], [ %50, %handle_init6 ], [ %53, %handle_init_end7 ], [ %60, %handle_init12 ], [ %63, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %12 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %bgemm = tail call ptr %12(i32 2, i32 %0, i64 1806336, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %bgemm, i64 64) ]
  %13 = icmp eq ptr %bgemm, null
  br i1 %13, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %data_pack, ptr %1, align 8
  %14 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %15, align 8
  %16 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 128, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4450
  %17 = getelementptr inbounds %0, ptr %1, i64 4
  %18 = getelementptr inbounds i32, ptr %2, i64 4
  %19 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %20 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel, align 8
  %.not = icmp eq ptr %20, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %if_end2
  %21 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %22 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %23 = call i32 %22(ptr %21, ptr nonnull @.str.69, ptr nonnull %9)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %25 = phi ptr [ %20, %if_end2 ], [ %28, %call_end ]
  %26 = call i32 %19(ptr %25, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %17, ptr nonnull %18)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %28 = load ptr, ptr %9, align 8
  store ptr %28, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %bgemm, ptr %1, align 8
  store ptr %data_pack, ptr %14, align 8
  store ptr %4, ptr %15, align 8
  store i64 36, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4450
  store i64 2, ptr %17, align 8
  %29 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 1, ptr %29, align 8
  %30 = getelementptr inbounds i32, ptr %2, i64 5
  %31 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %31, align 8
  %32 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 2, ptr %32, align 8
  store <4 x i32> zeroinitializer, ptr %18, align 4, !tbaa !4451
  %33 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 98, ptr %33, align 8
  %34 = getelementptr inbounds i32, ptr %2, i64 8
  %35 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %35, align 8
  %36 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 2, ptr %36, align 8
  %37 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 98, ptr %37, align 8
  store <4 x i32> zeroinitializer, ptr %34, align 4, !tbaa !4453
  %38 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %38, align 8
  %39 = getelementptr inbounds i32, ptr %2, i64 12
  store i32 0, ptr %39, align 4, !tbaa !4456
  %40 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 2, ptr %40, align 8
  %41 = getelementptr inbounds i32, ptr %2, i64 13
  store i32 0, ptr %41, align 4, !tbaa !4460
  %42 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 98, ptr %42, align 8
  %43 = getelementptr inbounds i32, ptr %2, i64 14
  store i32 0, ptr %43, align 4, !tbaa !4462
  %44 = getelementptr inbounds %0, ptr %1, i64 15
  %45 = getelementptr inbounds i32, ptr %2, i64 15
  %46 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %47 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_1, align 8
  %.not32 = icmp eq ptr %47, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !52

handle_init6:                                     ; preds = %call_end5
  %48 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %49 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %50 = call i32 %49(ptr %48, ptr nonnull @.str.70, ptr nonnull %8)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %52 = phi ptr [ %47, %call_end5 ], [ %55, %call_end9 ]
  %53 = call i32 %46(ptr %52, ptr nonnull %1, ptr nonnull %2, i32 15, ptr nonnull %44, ptr nonnull %45)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %55 = load ptr, ptr %8, align 8
  store ptr %55, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %bgemm, ptr %14, align 8
  store ptr %6, ptr %15, align 8
  store i64 98, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4450
  store i64 128, ptr %17, align 8
  store i32 0, ptr %18, align 4, !tbaa !4465
  %56 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %57 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_2, align 8
  %.not33 = icmp eq ptr %57, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !52

handle_init12:                                    ; preds = %call_end11
  %58 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %59 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %60 = call i32 %59(ptr %58, ptr nonnull @.str.71, ptr nonnull %7)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %62 = phi ptr [ %57, %call_end11 ], [ %65, %call_end15 ]
  %63 = call i32 %56(ptr %62, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %29, ptr nonnull %30)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %65 = load ptr, ptr %7, align 8
  store ptr %65, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %bgemm)
  %.not34 = icmp eq i32 %67, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !52

if_end19:                                         ; preds = %call_end17
  %68 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %69 = call i32 %68(i32 2, i32 %0, ptr nonnull %data_pack)
  %.not35 = icmp ne i32 %69, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pack = tail call ptr %10(i32 2, i32 %0, i64 1605632, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pack, i64 64) ]
  %11 = icmp eq ptr %data_pack, null
  br i1 %11, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %23, %handle_init ], [ %26, %handle_init_end ], [ %50, %handle_init6 ], [ %53, %handle_init_end7 ], [ %60, %handle_init12 ], [ %63, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %12 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %bgemm = tail call ptr %12(i32 2, i32 %0, i64 1605632, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %bgemm, i64 64) ]
  %13 = icmp eq ptr %bgemm, null
  br i1 %13, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %data_pack, ptr %1, align 8
  %14 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %15, align 8
  %16 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 128, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4468
  %17 = getelementptr inbounds %0, ptr %1, i64 4
  %18 = getelementptr inbounds i32, ptr %2, i64 4
  %19 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %20 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel, align 8
  %.not = icmp eq ptr %20, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %if_end2
  %21 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %22 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %23 = call i32 %22(ptr %21, ptr nonnull @.str.116, ptr nonnull %9)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %25 = phi ptr [ %20, %if_end2 ], [ %28, %call_end ]
  %26 = call i32 %19(ptr %25, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %17, ptr nonnull %18)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %28 = load ptr, ptr %9, align 8
  store ptr %28, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %bgemm, ptr %1, align 8
  store ptr %data_pack, ptr %14, align 8
  store ptr %4, ptr %15, align 8
  store i64 16, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4468
  store i64 4, ptr %17, align 8
  %29 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 2, ptr %29, align 8
  %30 = getelementptr inbounds i32, ptr %2, i64 5
  %31 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %31, align 8
  %32 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 4, ptr %32, align 8
  store <4 x i32> zeroinitializer, ptr %18, align 4, !tbaa !4469
  %33 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 49, ptr %33, align 8
  %34 = getelementptr inbounds i32, ptr %2, i64 8
  %35 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %35, align 8
  %36 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 4, ptr %36, align 8
  %37 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 49, ptr %37, align 8
  store <4 x i32> zeroinitializer, ptr %34, align 4, !tbaa !4471
  %38 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %38, align 8
  %39 = getelementptr inbounds i32, ptr %2, i64 12
  store i32 0, ptr %39, align 4, !tbaa !4474
  %40 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 4, ptr %40, align 8
  %41 = getelementptr inbounds i32, ptr %2, i64 13
  store i32 0, ptr %41, align 4, !tbaa !4478
  %42 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 49, ptr %42, align 8
  %43 = getelementptr inbounds i32, ptr %2, i64 14
  store i32 0, ptr %43, align 4, !tbaa !4480
  %44 = getelementptr inbounds %0, ptr %1, i64 15
  %45 = getelementptr inbounds i32, ptr %2, i64 15
  %46 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %47 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_1, align 8
  %.not32 = icmp eq ptr %47, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !52

handle_init6:                                     ; preds = %call_end5
  %48 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %49 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %50 = call i32 %49(ptr %48, ptr nonnull @.str.117, ptr nonnull %8)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %52 = phi ptr [ %47, %call_end5 ], [ %55, %call_end9 ]
  %53 = call i32 %46(ptr %52, ptr nonnull %1, ptr nonnull %2, i32 15, ptr nonnull %44, ptr nonnull %45)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %55 = load ptr, ptr %8, align 8
  store ptr %55, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %bgemm, ptr %14, align 8
  store ptr %6, ptr %15, align 8
  store i64 196, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4468
  store i64 128, ptr %17, align 8
  store i32 0, ptr %18, align 4, !tbaa !4483
  %56 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %57 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_2, align 8
  %.not33 = icmp eq ptr %57, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !52

handle_init12:                                    ; preds = %call_end11
  %58 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %59 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %60 = call i32 %59(ptr %58, ptr nonnull @.str.118, ptr nonnull %7)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %62 = phi ptr [ %57, %call_end11 ], [ %65, %call_end15 ]
  %63 = call i32 %56(ptr %62, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %29, ptr nonnull %30)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %65 = load ptr, ptr %7, align 8
  store ptr %65, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %bgemm)
  %.not34 = icmp eq i32 %67, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !52

if_end19:                                         ; preds = %call_end17
  %68 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %69 = call i32 %68(i32 2, i32 %0, ptr nonnull %data_pack)
  %.not35 = icmp ne i32 %69, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pack = tail call ptr %10(i32 2, i32 %0, i64 802816, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pack, i64 64) ]
  %11 = icmp eq ptr %data_pack, null
  br i1 %11, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %23, %handle_init ], [ %26, %handle_init_end ], [ %50, %handle_init6 ], [ %53, %handle_init_end7 ], [ %60, %handle_init12 ], [ %63, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %12 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %bgemm = tail call ptr %12(i32 2, i32 %0, i64 802816, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %bgemm, i64 64) ]
  %13 = icmp eq ptr %bgemm, null
  br i1 %13, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %data_pack, ptr %1, align 8
  %14 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %15, align 8
  %16 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 128, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4486
  %17 = getelementptr inbounds %0, ptr %1, i64 4
  %18 = getelementptr inbounds i32, ptr %2, i64 4
  %19 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %20 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel, align 8
  %.not = icmp eq ptr %20, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %if_end2
  %21 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %22 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %23 = call i32 %22(ptr %21, ptr nonnull @.str.163, ptr nonnull %9)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %25 = phi ptr [ %20, %if_end2 ], [ %28, %call_end ]
  %26 = call i32 %19(ptr %25, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %17, ptr nonnull %18)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %28 = load ptr, ptr %9, align 8
  store ptr %28, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %bgemm, ptr %1, align 8
  store ptr %data_pack, ptr %14, align 8
  store ptr %4, ptr %15, align 8
  store i64 16, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4486
  store i64 16, ptr %17, align 8
  %29 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 1, ptr %29, align 8
  %30 = getelementptr inbounds i32, ptr %2, i64 5
  %31 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %31, align 8
  %32 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %32, align 8
  store <4 x i32> zeroinitializer, ptr %18, align 4, !tbaa !4487
  %33 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 49, ptr %33, align 8
  %34 = getelementptr inbounds i32, ptr %2, i64 8
  %35 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %35, align 8
  %36 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %36, align 8
  %37 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 49, ptr %37, align 8
  store <4 x i32> zeroinitializer, ptr %34, align 4, !tbaa !4489
  %38 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %38, align 8
  %39 = getelementptr inbounds i32, ptr %2, i64 12
  store i32 0, ptr %39, align 4, !tbaa !4492
  %40 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %40, align 8
  %41 = getelementptr inbounds i32, ptr %2, i64 13
  store i32 0, ptr %41, align 4, !tbaa !4496
  %42 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 49, ptr %42, align 8
  %43 = getelementptr inbounds i32, ptr %2, i64 14
  store i32 0, ptr %43, align 4, !tbaa !4498
  %44 = getelementptr inbounds %0, ptr %1, i64 15
  %45 = getelementptr inbounds i32, ptr %2, i64 15
  %46 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %47 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_1, align 8
  %.not32 = icmp eq ptr %47, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !52

handle_init6:                                     ; preds = %call_end5
  %48 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %49 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %50 = call i32 %49(ptr %48, ptr nonnull @.str.164, ptr nonnull %8)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %52 = phi ptr [ %47, %call_end5 ], [ %55, %call_end9 ]
  %53 = call i32 %46(ptr %52, ptr nonnull %1, ptr nonnull %2, i32 15, ptr nonnull %44, ptr nonnull %45)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %55 = load ptr, ptr %8, align 8
  store ptr %55, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %bgemm, ptr %14, align 8
  store ptr %6, ptr %15, align 8
  store i64 98, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4486
  store i64 128, ptr %17, align 8
  store i32 0, ptr %18, align 4, !tbaa !4501
  %56 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %57 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_2, align 8
  %.not33 = icmp eq ptr %57, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !52

handle_init12:                                    ; preds = %call_end11
  %58 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %59 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %60 = call i32 %59(ptr %58, ptr nonnull @.str.165, ptr nonnull %7)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %62 = phi ptr [ %57, %call_end11 ], [ %65, %call_end15 ]
  %63 = call i32 %56(ptr %62, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %29, ptr nonnull %30)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %65 = load ptr, ptr %7, align 8
  store ptr %65, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %bgemm)
  %.not34 = icmp eq i32 %67, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !52

if_end19:                                         ; preds = %call_end17
  %68 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %69 = call i32 %68(i32 2, i32 %0, ptr nonnull %data_pack)
  %.not35 = icmp ne i32 %69, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pack = tail call ptr %10(i32 2, i32 %0, i64 524288, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pack, i64 64) ]
  %11 = icmp eq ptr %data_pack, null
  br i1 %11, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %23, %handle_init ], [ %26, %handle_init_end ], [ %50, %handle_init6 ], [ %53, %handle_init_end7 ], [ %60, %handle_init12 ], [ %63, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %12 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %bgemm = tail call ptr %12(i32 2, i32 %0, i64 524288, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %bgemm, i64 64) ]
  %13 = icmp eq ptr %bgemm, null
  br i1 %13, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %data_pack, ptr %1, align 8
  %14 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 64, ptr %15, align 8
  %16 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 128, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4504
  %17 = getelementptr inbounds %0, ptr %1, i64 4
  %18 = getelementptr inbounds i32, ptr %2, i64 4
  %19 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %20 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel, align 8
  %.not = icmp eq ptr %20, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %if_end2
  %21 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %22 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %23 = call i32 %22(ptr %21, ptr nonnull @.str.210, ptr nonnull %9)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %25 = phi ptr [ %20, %if_end2 ], [ %28, %call_end ]
  %26 = call i32 %19(ptr %25, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %17, ptr nonnull %18)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %28 = load ptr, ptr %9, align 8
  store ptr %28, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %bgemm, ptr %1, align 8
  store ptr %data_pack, ptr %14, align 8
  store ptr %4, ptr %15, align 8
  store i64 16, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4504
  store i64 8, ptr %17, align 8
  %29 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 1, ptr %29, align 8
  %30 = getelementptr inbounds i32, ptr %2, i64 5
  %31 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %31, align 8
  %32 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 16, ptr %32, align 8
  store <4 x i32> zeroinitializer, ptr %18, align 4, !tbaa !4505
  %33 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 8, ptr %33, align 8
  %34 = getelementptr inbounds i32, ptr %2, i64 8
  %35 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %35, align 8
  %36 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 16, ptr %36, align 8
  %37 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 8, ptr %37, align 8
  store <4 x i32> zeroinitializer, ptr %34, align 4, !tbaa !4507
  %38 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %38, align 8
  %39 = getelementptr inbounds i32, ptr %2, i64 12
  store i32 0, ptr %39, align 4, !tbaa !4510
  %40 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 16, ptr %40, align 8
  %41 = getelementptr inbounds i32, ptr %2, i64 13
  store i32 0, ptr %41, align 4, !tbaa !4514
  %42 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 8, ptr %42, align 8
  %43 = getelementptr inbounds i32, ptr %2, i64 14
  store i32 0, ptr %43, align 4, !tbaa !4516
  %44 = getelementptr inbounds %0, ptr %1, i64 15
  %45 = getelementptr inbounds i32, ptr %2, i64 15
  %46 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %47 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_1, align 8
  %.not32 = icmp eq ptr %47, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !52

handle_init6:                                     ; preds = %call_end5
  %48 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %49 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %50 = call i32 %49(ptr %48, ptr nonnull @.str.211, ptr nonnull %8)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %52 = phi ptr [ %47, %call_end5 ], [ %55, %call_end9 ]
  %53 = call i32 %46(ptr %52, ptr nonnull %1, ptr nonnull %2, i32 15, ptr nonnull %44, ptr nonnull %45)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %55 = load ptr, ptr %8, align 8
  store ptr %55, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %bgemm, ptr %14, align 8
  store ptr %6, ptr %15, align 8
  store i64 64, ptr %16, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !4504
  store i64 128, ptr %17, align 8
  store i32 0, ptr %18, align 4, !tbaa !4519
  %56 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %57 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_2, align 8
  %.not33 = icmp eq ptr %57, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !52

handle_init12:                                    ; preds = %call_end11
  %58 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %59 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %60 = call i32 %59(ptr %58, ptr nonnull @.str.212, ptr nonnull %7)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %62 = phi ptr [ %57, %call_end11 ], [ %65, %call_end15 ]
  %63 = call i32 %56(ptr %62, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %29, ptr nonnull %30)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %65 = load ptr, ptr %7, align 8
  store ptr %65, ptr @.tvm_func.tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %bgemm)
  %.not34 = icmp eq i32 %67, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !52

if_end19:                                         ; preds = %call_end17
  %68 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %69 = call i32 %68(i32 2, i32 %0, ptr nonnull %data_pack)
  %.not35 = icmp ne i32 %69, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4522
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 14, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 2, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4523
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 28, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4525
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 28, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 28, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4528
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.257, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4530
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 28, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 32, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4531
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 4, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 32, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4533
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 4, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 32, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 4, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4536
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_1_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.302, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4538
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 32, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4539
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 14, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4541
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 14, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 14, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4544
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_2_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.347, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4546
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 16, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 32, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4547
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 7, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 32, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4549
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 7, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 32, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 7, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4552
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_3_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.392, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %9, align 8
  %10 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %10, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4554
  %11 = getelementptr inbounds %0, ptr %0, i64 4
  store ptr %6, ptr %11, align 8
  %12 = getelementptr inbounds i32, ptr %2, i64 4
  %13 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 4, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 14, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 2, ptr %15, align 8
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, ptr %12, align 4, !tbaa !4555
  %16 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 16, ptr %16, align 8
  %17 = getelementptr inbounds i32, ptr %2, i64 8
  %18 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 1, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 28, ptr %19, align 8
  %20 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 16, ptr %20, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !4557
  %21 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 1, ptr %21, align 8
  %22 = getelementptr inbounds i32, ptr %2, i64 12
  %23 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 28, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 16, ptr %24, align 8
  %25 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 1, ptr %25, align 8
  store <4 x i32> zeroinitializer, ptr %22, align 4, !tbaa !4560
  %26 = getelementptr inbounds i64, ptr %0, i64 16
  store i64 28, ptr %26, align 8
  %27 = getelementptr inbounds i32, ptr %2, i64 16
  store i32 0, ptr %27, align 4, !tbaa !4562
  %28 = getelementptr inbounds %0, ptr %0, i64 17
  %29 = getelementptr inbounds i32, ptr %2, i64 17
  %30 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %31 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %32 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %33 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %34 = call i32 %33(ptr %32, ptr nonnull @.str.448, ptr nonnull %7)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %36 = phi ptr [ %31, %entry ], [ %38, %call_end ]
  %37 = call i32 %30(ptr %36, ptr nonnull %0, ptr nonnull %2, i32 17, ptr nonnull %28, ptr nonnull %29)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %34, %handle_init ], [ %37, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %38 = load ptr, ptr %7, align 8
  store ptr %38, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %9, align 8
  %10 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %10, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4568
  %11 = getelementptr inbounds %0, ptr %0, i64 4
  store ptr %6, ptr %11, align 8
  %12 = getelementptr inbounds i32, ptr %2, i64 4
  %13 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 4, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 7, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, ptr %12, align 4, !tbaa !4569
  %16 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 32, ptr %16, align 8
  %17 = getelementptr inbounds i32, ptr %2, i64 8
  %18 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 1, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 28, ptr %19, align 8
  %20 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 32, ptr %20, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !4571
  %21 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 1, ptr %21, align 8
  %22 = getelementptr inbounds i32, ptr %2, i64 12
  %23 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 28, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 32, ptr %24, align 8
  %25 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 1, ptr %25, align 8
  store <4 x i32> zeroinitializer, ptr %22, align 4, !tbaa !4574
  %26 = getelementptr inbounds i64, ptr %0, i64 16
  store i64 28, ptr %26, align 8
  %27 = getelementptr inbounds i32, ptr %2, i64 16
  store i32 0, ptr %27, align 4, !tbaa !4576
  %28 = getelementptr inbounds %0, ptr %0, i64 17
  %29 = getelementptr inbounds i32, ptr %2, i64 17
  %30 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %31 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %32 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %33 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %34 = call i32 %33(ptr %32, ptr nonnull @.str.504, ptr nonnull %7)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %36 = phi ptr [ %31, %entry ], [ %38, %call_end ]
  %37 = call i32 %30(ptr %36, ptr nonnull %0, ptr nonnull %2, i32 17, ptr nonnull %28, ptr nonnull %29)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %34, %handle_init ], [ %37, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %38 = load ptr, ptr %7, align 8
  store ptr %38, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %9, align 8
  %10 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %10, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4582
  %11 = getelementptr inbounds %0, ptr %0, i64 4
  store ptr %6, ptr %11, align 8
  %12 = getelementptr inbounds i32, ptr %2, i64 4
  %13 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 16, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 7, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, ptr %12, align 4, !tbaa !4583
  %16 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 16, ptr %16, align 8
  %17 = getelementptr inbounds i32, ptr %2, i64 8
  %18 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 2, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 7, ptr %19, align 8
  %20 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 16, ptr %20, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !4585
  %21 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 2, ptr %21, align 8
  %22 = getelementptr inbounds i32, ptr %2, i64 12
  %23 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 7, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 16, ptr %24, align 8
  %25 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 2, ptr %25, align 8
  store <4 x i32> zeroinitializer, ptr %22, align 4, !tbaa !4588
  %26 = getelementptr inbounds i64, ptr %0, i64 16
  store i64 7, ptr %26, align 8
  %27 = getelementptr inbounds i32, ptr %2, i64 16
  store i32 0, ptr %27, align 4, !tbaa !4590
  %28 = getelementptr inbounds %0, ptr %0, i64 17
  %29 = getelementptr inbounds i32, ptr %2, i64 17
  %30 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %31 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %32 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %33 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %34 = call i32 %33(ptr %32, ptr nonnull @.str.560, ptr nonnull %7)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %36 = phi ptr [ %31, %entry ], [ %38, %call_end ]
  %37 = call i32 %30(ptr %36, ptr nonnull %0, ptr nonnull %2, i32 17, ptr nonnull %28, ptr nonnull %29)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %34, %handle_init ], [ %37, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %38 = load ptr, ptr %7, align 8
  store ptr %38, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5, ptr noalias align 64 %6) unnamed_addr #2 {
entry:
  %7 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %9, align 8
  %10 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %10, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4596
  %11 = getelementptr inbounds %0, ptr %0, i64 4
  store ptr %6, ptr %11, align 8
  %12 = getelementptr inbounds i32, ptr %2, i64 4
  %13 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 64, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, ptr %12, align 4, !tbaa !4597
  %16 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 16, ptr %16, align 8
  %17 = getelementptr inbounds i32, ptr %2, i64 8
  %18 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 7, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 1, ptr %19, align 8
  %20 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 16, ptr %20, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !4599
  %21 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 7, ptr %21, align 8
  %22 = getelementptr inbounds i32, ptr %2, i64 12
  %23 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 16, ptr %24, align 8
  %25 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 7, ptr %25, align 8
  store <4 x i32> zeroinitializer, ptr %22, align 4, !tbaa !4602
  %26 = getelementptr inbounds i64, ptr %0, i64 16
  store i64 1, ptr %26, align 8
  %27 = getelementptr inbounds i32, ptr %2, i64 16
  store i32 0, ptr %27, align 4, !tbaa !4604
  %28 = getelementptr inbounds %0, ptr %0, i64 17
  %29 = getelementptr inbounds i32, ptr %2, i64 17
  %30 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %31 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %32 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %33 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %34 = call i32 %33(ptr %32, ptr nonnull @.str.616, ptr nonnull %7)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %36 = phi ptr [ %31, %entry ], [ %38, %call_end ]
  %37 = call i32 %30(ptr %36, ptr nonnull %0, ptr nonnull %2, i32 17, ptr nonnull %28, ptr nonnull %29)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %34, %handle_init ], [ %37, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %38 = load ptr, ptr %7, align 8
  store ptr %38, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4610
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 112, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4611
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 16, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4613
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 16, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 16, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4616
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.661, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4618
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 56, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4619
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 28, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4621
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 28, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 28, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4624
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.706, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_10_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4626
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 8, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 32, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4627
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 7, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 1, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 32, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 7, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4629
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 1, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 32, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 7, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 1, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4632
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.751, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_11_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4634
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 16, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 32, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4635
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 7, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 32, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4637
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 7, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 32, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 7, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4640
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.796, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4642
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 2, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 56, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4643
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 28, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4645
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 28, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 28, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4648
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.841, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4650
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 14, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 2, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4651
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 28, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4653
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 28, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 28, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4656
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.886, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_4_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4658
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 2, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 14, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4659
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 14, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4661
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 14, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 14, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4664
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.931, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_5_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4666
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 14, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4667
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 1, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 28, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 1, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4669
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 28, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 1, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 28, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4672
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.976, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_6_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4674
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 2, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4675
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 4, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 2, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 4, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4677
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 2, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 4, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 2, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4680
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.1021, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_7_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4682
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 4, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 2, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4683
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 7, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 1, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 7, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4685
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 1, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 7, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 1, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4688
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.1066, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_8_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4690
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 8, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 16, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4691
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 2, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 14, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 16, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 2, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4693
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 14, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 16, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 2, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 14, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4696
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.1111, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_nn_relu_9_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4698
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 16, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 7, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 1, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 8, ptr %14, align 8
  store <4 x i32> zeroinitializer, ptr %11, align 4, !tbaa !4699
  %15 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 2, ptr %15, align 8
  %16 = getelementptr inbounds i32, ptr %2, i64 8
  %17 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 14, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 8, ptr %18, align 8
  %19 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 2, ptr %19, align 8
  store <4 x i32> zeroinitializer, ptr %16, align 4, !tbaa !4701
  %20 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 14, ptr %20, align 8
  %21 = getelementptr inbounds i32, ptr %2, i64 12
  %22 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 8, ptr %22, align 8
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 2, ptr %23, align 8
  %24 = getelementptr inbounds i64, ptr %0, i64 15
  store i64 14, ptr %24, align 8
  store <4 x i32> zeroinitializer, ptr %21, align 4, !tbaa !4704
  %25 = getelementptr inbounds %0, ptr %0, i64 16
  %26 = getelementptr inbounds i32, ptr %2, i64 16
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.1156, ptr nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 16, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_dense_add_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !4706
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !4707
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1000, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !4711
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 64, ptr %14, align 8
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  store i32 0, ptr %15, align 4, !tbaa !4713
  %16 = getelementptr inbounds %0, ptr %0, i64 7
  %17 = getelementptr inbounds i32, ptr %2, i64 7
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_dense_add_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1193, ptr nonnull %6)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %24 = phi ptr [ %19, %entry ], [ %26, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %0, ptr nonnull %2, i32 7, ptr nonnull %16, ptr nonnull %17)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %22, %handle_init ], [ %25, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %26 = load ptr, ptr %6, align 8
  store ptr %26, ptr @.tvm_func.tvmgen_default_fused_nn_dense_add_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 196, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4716
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.1216, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_reshape_squeeze_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 2, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !4717
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !52

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.1237, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local half @__truncsfhf2(float %a0) local_unnamed_addr #3 {
b0:
  %v0 = bitcast float %a0 to i32
  %v1 = and i32 %v0, 2147483647
  %v2 = add nsw i32 %v1, -947912704
  %v3 = add nsw i32 %v1, -1199570944
  %v4 = icmp ult i32 %v2, %v3
  br i1 %v4, label %b1, label %b5

b1:                                               ; preds = %b0
  %v5 = lshr i32 %v0, 13
  %v6 = and i32 %v5, 65535
  %v7 = add nuw nsw i32 %v6, -114688
  %v8 = and i32 %v0, 8191
  %v9 = icmp ugt i32 %v8, 4096
  br i1 %v9, label %b2, label %b3

b2:                                               ; preds = %b1
  %v10 = add nuw nsw i32 %v6, -114687
  br label %b13

b3:                                               ; preds = %b1
  %v11 = icmp eq i32 %v8, 4096
  br i1 %v11, label %b4, label %b13

b4:                                               ; preds = %b3
  %v12 = and i32 %v7, 65535
  %v13 = and i32 %v5, 1
  %v14 = add nuw nsw i32 %v12, %v13
  br label %b13

b5:                                               ; preds = %b0
  %v15 = icmp ugt i32 %v1, 2139095040
  br i1 %v15, label %b6, label %b7

b6:                                               ; preds = %b5
  %v16 = lshr i32 %v0, 13
  %v17 = and i32 %v16, 511
  %v18 = or i32 %v17, 32256
  br label %b13

b7:                                               ; preds = %b5
  %v19 = icmp ugt i32 %v1, 1199570943
  br i1 %v19, label %b13, label %b8

b8:                                               ; preds = %b7
  %v20 = icmp ult i32 %v1, 754974720
  br i1 %v20, label %b13, label %b9

b9:                                               ; preds = %b8
  %v21 = lshr i32 %v1, 23
  %v22 = sub nsw i32 113, %v21
  %v23 = and i32 %v0, 8388607
  %v24 = or i32 %v23, 8388608
  %v25 = add nsw i32 %v21, -81
  %v26 = shl i32 %v24, %v25
  %v27 = icmp ne i32 %v26, 0
  %v28 = lshr i32 %v24, %v22
  %v29 = zext i1 %v27 to i32
  %v30 = lshr i32 %v28, 13
  %v31 = and i32 %v28, 8191
  %v32 = or i32 %v31, %v29
  %v33 = icmp ugt i32 %v32, 4096
  br i1 %v33, label %b10, label %b11

b10:                                              ; preds = %b9
  %v34 = add nuw nsw i32 %v30, 1
  br label %b13

b11:                                              ; preds = %b9
  %v35 = icmp eq i32 %v32, 4096
  br i1 %v35, label %b12, label %b13

b12:                                              ; preds = %b11
  %v36 = and i32 %v30, 1
  %v37 = add nuw nsw i32 %v36, %v30
  br label %b13

b13:                                              ; preds = %b12, %b11, %b10, %b8, %b7, %b6, %b4, %b3, %b2
  %v38 = phi i32 [ %v18, %b6 ], [ %v10, %b2 ], [ %v14, %b4 ], [ %v7, %b3 ], [ 31744, %b7 ], [ 0, %b8 ], [ %v34, %b10 ], [ %v37, %b12 ], [ %v30, %b11 ]
  %v39 = lshr i32 %v0, 16
  %v40 = and i32 %v39, 32768
  %v41 = or i32 %v38, %v40
  %vlast = trunc i32 %v41 to i16
  %vres = bitcast i16 %vlast to half
  ret half %vres
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local float @__extendhfsf2(half %a0) local_unnamed_addr #3 {
b0:
  %vinp = bitcast half %a0 to i16
  %v1 = and i16 %vinp, 32767
  %v2 = zext i16 %v1 to i32
  %v3 = add nsw i16 %v1, -1024
  %v4 = icmp ult i16 %v3, 30720
  br i1 %v4, label %b1, label %b2

b1:                                               ; preds = %b0
  %v5 = shl nuw nsw i32 %v2, 13
  %v6 = add nuw nsw i32 %v5, 939524096
  br label %b6

b2:                                               ; preds = %b0
  %v7 = icmp ugt i16 %v1, 31743
  br i1 %v7, label %b3, label %b4

b3:                                               ; preds = %b2
  %v8 = shl nuw nsw i32 %v2, 13
  %v9 = or i32 %v8, 2139095040
  br label %b6

b4:                                               ; preds = %b2
  %v10 = icmp eq i16 %v1, 0
  br i1 %v10, label %b6, label %b5

b5:                                               ; preds = %b4
  %v11 = icmp ult i16 %v1, 256
  %v12 = lshr i32 %v2, 8
  %v13 = select i1 %v11, i32 %v2, i32 %v12
  %v14 = select i1 %v11, i32 32, i32 24
  %v15 = icmp ult i32 %v13, 16
  %v16 = lshr i32 %v13, 4
  %v17 = add nsw i32 %v14, -4
  %v18 = select i1 %v15, i32 %v13, i32 %v16
  %v19 = select i1 %v15, i32 %v14, i32 %v17
  %v20 = icmp ult i32 %v18, 4
  %v21 = lshr i32 %v18, 2
  %v22 = add nsw i32 %v19, -2
  %v23 = select i1 %v20, i32 %v18, i32 %v21
  %v24 = select i1 %v20, i32 %v19, i32 %v22
  %v25 = icmp ult i32 %v23, 2
  %v26 = sub nsw i32 0, %v23
  %v27 = select i1 %v25, i32 %v26, i32 -2
  %v28 = add nsw i32 %v27, %v24
  %v29 = add nsw i32 %v28, -8
  %v30 = shl i32 %v2, %v29
  %v31 = xor i32 %v30, 8388608
  %v32 = shl i32 %v28, 23
  %v33 = sub i32 1124073472, %v32
  %v34 = or i32 %v31, %v33
  br label %b6

b6:                                               ; preds = %b5, %b4, %b3, %b1
  %v35 = phi i32 [ %v6, %b1 ], [ %v9, %b3 ], [ %v34, %b5 ], [ 0, %b4 ]
  %v36 = and i16 %vinp, -32768
  %v37 = zext i16 %v36 to i32
  %v38 = shl nuw i32 %v37, 16
  %v39 = or i32 %v35, %v38
  %v40 = bitcast i32 %v39 to float
  ret float %v40
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

attributes #0 = { "target-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #2 = { noinline "target-cpu"="generic" }
attributes #3 = { nofree nosync nounwind memory(none) "target-cpu"="generic" "target-features" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "TVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "main.tir", directory: ".")
!2 = !{i32 2, !"tvm_target", !"llvm -mtriple=x86_64-pc-windows-msvc"}
!3 = !{i32 4, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !8, !9, !7, !8, !9, !8}
!7 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7)
!10 = !{!11, !12, !13, !14, !15, !16}
!11 = !DILocalVariable(name: "arg1", arg: 1, scope: !4, file: !1, type: !8)
!12 = !DILocalVariable(name: "arg2", arg: 2, scope: !4, file: !1, type: !9)
!13 = !DILocalVariable(name: "arg3", arg: 3, scope: !4, file: !1, type: !7)
!14 = !DILocalVariable(name: "arg4", arg: 4, scope: !4, file: !1, type: !8)
!15 = !DILocalVariable(name: "arg5", arg: 5, scope: !4, file: !1, type: !9)
!16 = !DILocalVariable(name: "arg6", arg: 6, scope: !4, file: !1, type: !8)
!17 = !DILocation(line: 0, scope: !4)
!18 = !{!"branch_weights", i32 1048576, i32 1}
!19 = !{!20, !20, i64 0}
!20 = !{!"ctx_ptr", !21, i64 0}
!21 = !{!"tvm-tbaa"}
!22 = !{!23, !23, i64 0}
!23 = !{!"0000020E47F340A0.w4.b0", !24, i64 0}
!24 = !{!"0000020E47F340A0.w8.b0", !25, i64 0}
!25 = !{!"0000020E47F340A0.w16.b0", !26, i64 0}
!26 = !{!"0000020E47F340A0.w32.b0", !27, i64 0}
!27 = !{!"0000020E47F340A0.w64.b0", !28, i64 0}
!28 = !{!"0000020E47F340A0.w128.b0", !29, i64 0}
!29 = !{!"0000020E47F340A0.w256.b0", !30, i64 0}
!30 = !{!"0000020E47F340A0.w512.b0", !31, i64 0}
!31 = !{!"0000020E47F340A0.w1024.b0", !32, i64 0}
!32 = !{!"0000020E47F340A0", !21, i64 0}
!33 = !{!34, !34, i64 0}
!34 = !{!"0000020E47F340A0.w4.b4", !24, i64 0}
!35 = !{!36, !36, i64 0}
!36 = !{!"0000020E47F360E0.w8.b0", !37, i64 0}
!37 = !{!"0000020E47F360E0.w16.b0", !38, i64 0}
!38 = !{!"0000020E47F360E0.w32.b0", !39, i64 0}
!39 = !{!"0000020E47F360E0.w64.b0", !40, i64 0}
!40 = !{!"0000020E47F360E0.w128.b0", !41, i64 0}
!41 = !{!"0000020E47F360E0.w256.b0", !42, i64 0}
!42 = !{!"0000020E47F360E0.w512.b0", !43, i64 0}
!43 = !{!"0000020E47F360E0.w1024.b0", !44, i64 0}
!44 = !{!"0000020E47F360E0", !21, i64 0}
!45 = !{!46, !46, i64 0}
!46 = !{!"0000020E47F360E0.w8.b8", !37, i64 0}
!47 = !{!48, !48, i64 0}
!48 = !{!"0000020E47F360E0.w8.b16", !49, i64 0}
!49 = !{!"0000020E47F360E0.w16.b16", !38, i64 0}
!50 = !{!51, !51, i64 0}
!51 = !{!"0000020E47F360E0.w8.b24", !49, i64 0}
!52 = !{!"branch_weights", i32 1, i32 1048576}
!53 = !{!54, !54, i64 0}
!54 = !{!"0000020E47F35D60.w8.b8", !55, i64 0}
!55 = !{!"0000020E47F35D60.w16.b0", !56, i64 0}
!56 = !{!"0000020E47F35D60.w32.b0", !57, i64 0}
!57 = !{!"0000020E47F35D60.w64.b0", !58, i64 0}
!58 = !{!"0000020E47F35D60.w128.b0", !59, i64 0}
!59 = !{!"0000020E47F35D60.w256.b0", !60, i64 0}
!60 = !{!"0000020E47F35D60.w512.b0", !61, i64 0}
!61 = !{!"0000020E47F35D60.w1024.b0", !62, i64 0}
!62 = !{!"0000020E47F35D60", !21, i64 0}
!63 = !{!64, !64, i64 0}
!64 = !{!"0000020E47F35D60.w8.b16", !65, i64 0}
!65 = !{!"0000020E47F35D60.w16.b16", !56, i64 0}
!66 = !{!67, !67, i64 0}
!67 = !{!"0000020E47F35D60.w8.b24", !65, i64 0}
!68 = !{!69, !69, i64 0}
!69 = !{!"0000020E47F37020.w8.b0", !70, i64 0}
!70 = !{!"0000020E47F37020.w16.b0", !71, i64 0}
!71 = !{!"0000020E47F37020.w32.b0", !72, i64 0}
!72 = !{!"0000020E47F37020.w64.b0", !73, i64 0}
!73 = !{!"0000020E47F37020.w128.b0", !74, i64 0}
!74 = !{!"0000020E47F37020.w256.b0", !75, i64 0}
!75 = !{!"0000020E47F37020.w512.b0", !76, i64 0}
!76 = !{!"0000020E47F37020.w1024.b0", !77, i64 0}
!77 = !{!"0000020E47F37020", !21, i64 0}
!78 = !{!79, !79, i64 0}
!79 = !{!"0000020E47F37020.w8.b8", !70, i64 0}
!80 = !{!81, !81, i64 0}
!81 = !{!"0000020E47F37020.w8.b16", !82, i64 0}
!82 = !{!"0000020E47F37020.w16.b16", !71, i64 0}
!83 = !{!84, !84, i64 0}
!84 = !{!"0000020E47F37020.w8.b24", !82, i64 0}
!85 = !{!86, !86, i64 0}
!86 = !{!"0000020E47F36920.w8.b8", !87, i64 0}
!87 = !{!"0000020E47F36920.w16.b0", !88, i64 0}
!88 = !{!"0000020E47F36920.w32.b0", !89, i64 0}
!89 = !{!"0000020E47F36920.w64.b0", !90, i64 0}
!90 = !{!"0000020E47F36920.w128.b0", !91, i64 0}
!91 = !{!"0000020E47F36920.w256.b0", !92, i64 0}
!92 = !{!"0000020E47F36920.w512.b0", !93, i64 0}
!93 = !{!"0000020E47F36920.w1024.b0", !94, i64 0}
!94 = !{!"0000020E47F36920", !21, i64 0}
!95 = !{!96, !96, i64 0}
!96 = !{!"0000020E47FD5430.w4.b0", !97, i64 0}
!97 = !{!"0000020E47FD5430.w8.b0", !98, i64 0}
!98 = !{!"0000020E47FD5430.w16.b0", !99, i64 0}
!99 = !{!"0000020E47FD5430.w32.b0", !100, i64 0}
!100 = !{!"0000020E47FD5430.w64.b0", !101, i64 0}
!101 = !{!"0000020E47FD5430.w128.b0", !102, i64 0}
!102 = !{!"0000020E47FD5430.w256.b0", !103, i64 0}
!103 = !{!"0000020E47FD5430.w512.b0", !104, i64 0}
!104 = !{!"0000020E47FD5430.w1024.b0", !105, i64 0}
!105 = !{!"0000020E47FD5430", !21, i64 0}
!106 = !{!107, !107, i64 0}
!107 = !{!"0000020E47FD5430.w4.b4", !97, i64 0}
!108 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !109)
!109 = !{!110, !111, !112, !113, !114, !115}
!110 = !DILocalVariable(name: "arg1", arg: 1, scope: !108, file: !1, type: !8)
!111 = !DILocalVariable(name: "arg2", arg: 2, scope: !108, file: !1, type: !9)
!112 = !DILocalVariable(name: "arg3", arg: 3, scope: !108, file: !1, type: !7)
!113 = !DILocalVariable(name: "arg4", arg: 4, scope: !108, file: !1, type: !8)
!114 = !DILocalVariable(name: "arg5", arg: 5, scope: !108, file: !1, type: !9)
!115 = !DILocalVariable(name: "arg6", arg: 6, scope: !108, file: !1, type: !8)
!116 = !DILocation(line: 0, scope: !108)
!117 = !{!118, !118, i64 0}
!118 = !{!"0000020E46D7B330.w4.b0", !119, i64 0}
!119 = !{!"0000020E46D7B330.w8.b0", !120, i64 0}
!120 = !{!"0000020E46D7B330.w16.b0", !121, i64 0}
!121 = !{!"0000020E46D7B330.w32.b0", !122, i64 0}
!122 = !{!"0000020E46D7B330.w64.b0", !123, i64 0}
!123 = !{!"0000020E46D7B330.w128.b0", !124, i64 0}
!124 = !{!"0000020E46D7B330.w256.b0", !125, i64 0}
!125 = !{!"0000020E46D7B330.w512.b0", !126, i64 0}
!126 = !{!"0000020E46D7B330.w1024.b0", !127, i64 0}
!127 = !{!"0000020E46D7B330", !21, i64 0}
!128 = !{!129, !129, i64 0}
!129 = !{!"0000020E46D7B330.w4.b4", !119, i64 0}
!130 = !{!131, !131, i64 0}
!131 = !{!"0000020E46D7B330.w4.b8", !132, i64 0}
!132 = !{!"0000020E46D7B330.w8.b8", !120, i64 0}
!133 = !{!134, !134, i64 0}
!134 = !{!"0000020E46D7B330.w4.b12", !132, i64 0}
!135 = !{!136, !136, i64 0}
!136 = !{!"0000020E46D8B4B0.w8.b0", !137, i64 0}
!137 = !{!"0000020E46D8B4B0.w16.b0", !138, i64 0}
!138 = !{!"0000020E46D8B4B0.w32.b0", !139, i64 0}
!139 = !{!"0000020E46D8B4B0.w64.b0", !140, i64 0}
!140 = !{!"0000020E46D8B4B0.w128.b0", !141, i64 0}
!141 = !{!"0000020E46D8B4B0.w256.b0", !142, i64 0}
!142 = !{!"0000020E46D8B4B0.w512.b0", !143, i64 0}
!143 = !{!"0000020E46D8B4B0.w1024.b0", !144, i64 0}
!144 = !{!"0000020E46D8B4B0", !21, i64 0}
!145 = !{!146, !146, i64 0}
!146 = !{!"0000020E46D8B4B0.w8.b8", !137, i64 0}
!147 = !{!148, !148, i64 0}
!148 = !{!"0000020E46D8B4B0.w8.b16", !149, i64 0}
!149 = !{!"0000020E46D8B4B0.w16.b16", !138, i64 0}
!150 = !{!151, !151, i64 0}
!151 = !{!"0000020E46D8B4B0.w8.b24", !149, i64 0}
!152 = !{!153, !153, i64 0}
!153 = !{!"0000020E46D8CDB0.w8.b8", !154, i64 0}
!154 = !{!"0000020E46D8CDB0.w16.b0", !155, i64 0}
!155 = !{!"0000020E46D8CDB0.w32.b0", !156, i64 0}
!156 = !{!"0000020E46D8CDB0.w64.b0", !157, i64 0}
!157 = !{!"0000020E46D8CDB0.w128.b0", !158, i64 0}
!158 = !{!"0000020E46D8CDB0.w256.b0", !159, i64 0}
!159 = !{!"0000020E46D8CDB0.w512.b0", !160, i64 0}
!160 = !{!"0000020E46D8CDB0.w1024.b0", !161, i64 0}
!161 = !{!"0000020E46D8CDB0", !21, i64 0}
!162 = !{!163, !163, i64 0}
!163 = !{!"0000020E46D8CDB0.w8.b16", !164, i64 0}
!164 = !{!"0000020E46D8CDB0.w16.b16", !155, i64 0}
!165 = !{!166, !166, i64 0}
!166 = !{!"0000020E46D8CDB0.w8.b24", !164, i64 0}
!167 = !{!168, !168, i64 0}
!168 = !{!"0000020E46D8D870.w8.b0", !169, i64 0}
!169 = !{!"0000020E46D8D870.w16.b0", !170, i64 0}
!170 = !{!"0000020E46D8D870.w32.b0", !171, i64 0}
!171 = !{!"0000020E46D8D870.w64.b0", !172, i64 0}
!172 = !{!"0000020E46D8D870.w128.b0", !173, i64 0}
!173 = !{!"0000020E46D8D870.w256.b0", !174, i64 0}
!174 = !{!"0000020E46D8D870.w512.b0", !175, i64 0}
!175 = !{!"0000020E46D8D870.w1024.b0", !176, i64 0}
!176 = !{!"0000020E46D8D870", !21, i64 0}
!177 = !{!178, !178, i64 0}
!178 = !{!"0000020E46D8D870.w8.b8", !169, i64 0}
!179 = !{!180, !180, i64 0}
!180 = !{!"0000020E46D8D870.w8.b16", !181, i64 0}
!181 = !{!"0000020E46D8D870.w16.b16", !170, i64 0}
!182 = !{!183, !183, i64 0}
!183 = !{!"0000020E46D8D870.w8.b24", !181, i64 0}
!184 = !{!185, !185, i64 0}
!185 = !{!"0000020E46D8DBF0.w8.b0", !186, i64 0}
!186 = !{!"0000020E46D8DBF0.w16.b0", !187, i64 0}
!187 = !{!"0000020E46D8DBF0.w32.b0", !188, i64 0}
!188 = !{!"0000020E46D8DBF0.w64.b0", !189, i64 0}
!189 = !{!"0000020E46D8DBF0.w128.b0", !190, i64 0}
!190 = !{!"0000020E46D8DBF0.w256.b0", !191, i64 0}
!191 = !{!"0000020E46D8DBF0.w512.b0", !192, i64 0}
!192 = !{!"0000020E46D8DBF0.w1024.b0", !193, i64 0}
!193 = !{!"0000020E46D8DBF0", !21, i64 0}
!194 = !{!195, !195, i64 0}
!195 = !{!"0000020E46D8DBF0.w8.b8", !186, i64 0}
!196 = !{!197, !197, i64 0}
!197 = !{!"0000020E46D8DBF0.w8.b16", !198, i64 0}
!198 = !{!"0000020E46D8DBF0.w16.b16", !187, i64 0}
!199 = !{!200, !200, i64 0}
!200 = !{!"0000020E46D8DBF0.w8.b24", !198, i64 0}
!201 = !{!202, !202, i64 0}
!202 = !{!"0000020E46D8EEB0.w8.b0", !203, i64 0}
!203 = !{!"0000020E46D8EEB0.w16.b0", !204, i64 0}
!204 = !{!"0000020E46D8EEB0.w32.b0", !205, i64 0}
!205 = !{!"0000020E46D8EEB0.w64.b0", !206, i64 0}
!206 = !{!"0000020E46D8EEB0.w128.b0", !207, i64 0}
!207 = !{!"0000020E46D8EEB0.w256.b0", !208, i64 0}
!208 = !{!"0000020E46D8EEB0.w512.b0", !209, i64 0}
!209 = !{!"0000020E46D8EEB0.w1024.b0", !210, i64 0}
!210 = !{!"0000020E46D8EEB0", !21, i64 0}
!211 = !{!212, !212, i64 0}
!212 = !{!"0000020E46D8EEB0.w8.b8", !203, i64 0}
!213 = !{!214, !214, i64 0}
!214 = !{!"0000020E46D8EEB0.w8.b16", !215, i64 0}
!215 = !{!"0000020E46D8EEB0.w16.b16", !204, i64 0}
!216 = !{!217, !217, i64 0}
!217 = !{!"0000020E46D8EEB0.w8.b24", !215, i64 0}
!218 = !{!219, !219, i64 0}
!219 = !{!"0000020E46D8EC30.w8.b8", !220, i64 0}
!220 = !{!"0000020E46D8EC30.w16.b0", !221, i64 0}
!221 = !{!"0000020E46D8EC30.w32.b0", !222, i64 0}
!222 = !{!"0000020E46D8EC30.w64.b0", !223, i64 0}
!223 = !{!"0000020E46D8EC30.w128.b0", !224, i64 0}
!224 = !{!"0000020E46D8EC30.w256.b0", !225, i64 0}
!225 = !{!"0000020E46D8EC30.w512.b0", !226, i64 0}
!226 = !{!"0000020E46D8EC30.w1024.b0", !227, i64 0}
!227 = !{!"0000020E46D8EC30", !21, i64 0}
!228 = !{!229, !229, i64 0}
!229 = !{!"0000020E46D8FA30.w8.b0", !230, i64 0}
!230 = !{!"0000020E46D8FA30.w16.b0", !231, i64 0}
!231 = !{!"0000020E46D8FA30.w32.b0", !232, i64 0}
!232 = !{!"0000020E46D8FA30.w64.b0", !233, i64 0}
!233 = !{!"0000020E46D8FA30.w128.b0", !234, i64 0}
!234 = !{!"0000020E46D8FA30.w256.b0", !235, i64 0}
!235 = !{!"0000020E46D8FA30.w512.b0", !236, i64 0}
!236 = !{!"0000020E46D8FA30.w1024.b0", !237, i64 0}
!237 = !{!"0000020E46D8FA30", !21, i64 0}
!238 = !{!239, !239, i64 0}
!239 = !{!"0000020E46D8FA30.w8.b8", !230, i64 0}
!240 = !{!241, !241, i64 0}
!241 = !{!"0000020E46D8FA30.w8.b16", !242, i64 0}
!242 = !{!"0000020E46D8FA30.w16.b16", !231, i64 0}
!243 = !{!244, !244, i64 0}
!244 = !{!"0000020E46D8FA30.w8.b24", !242, i64 0}
!245 = !{!246, !246, i64 0}
!246 = !{!"0000020E46D8FEF0.w8.b8", !247, i64 0}
!247 = !{!"0000020E46D8FEF0.w16.b0", !248, i64 0}
!248 = !{!"0000020E46D8FEF0.w32.b0", !249, i64 0}
!249 = !{!"0000020E46D8FEF0.w64.b0", !250, i64 0}
!250 = !{!"0000020E46D8FEF0.w128.b0", !251, i64 0}
!251 = !{!"0000020E46D8FEF0.w256.b0", !252, i64 0}
!252 = !{!"0000020E46D8FEF0.w512.b0", !253, i64 0}
!253 = !{!"0000020E46D8FEF0.w1024.b0", !254, i64 0}
!254 = !{!"0000020E46D8FEF0", !21, i64 0}
!255 = !{!256, !256, i64 0}
!256 = !{!"0000020E46D8FEF0.w8.b16", !257, i64 0}
!257 = !{!"0000020E46D8FEF0.w16.b16", !248, i64 0}
!258 = !{!259, !259, i64 0}
!259 = !{!"0000020E46D8FEF0.w8.b24", !257, i64 0}
!260 = !{!261, !261, i64 0}
!261 = !{!"0000020E468E15C0.w4.b0", !262, i64 0}
!262 = !{!"0000020E468E15C0.w8.b0", !263, i64 0}
!263 = !{!"0000020E468E15C0.w16.b0", !264, i64 0}
!264 = !{!"0000020E468E15C0.w32.b0", !265, i64 0}
!265 = !{!"0000020E468E15C0.w64.b0", !266, i64 0}
!266 = !{!"0000020E468E15C0.w128.b0", !267, i64 0}
!267 = !{!"0000020E468E15C0.w256.b0", !268, i64 0}
!268 = !{!"0000020E468E15C0.w512.b0", !269, i64 0}
!269 = !{!"0000020E468E15C0.w1024.b0", !270, i64 0}
!270 = !{!"0000020E468E15C0", !21, i64 0}
!271 = !{!272, !272, i64 0}
!272 = !{!"0000020E468E15C0.w4.b4", !262, i64 0}
!273 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !274)
!274 = !{!275, !276, !277, !278, !279, !280}
!275 = !DILocalVariable(name: "arg1", arg: 1, scope: !273, file: !1, type: !8)
!276 = !DILocalVariable(name: "arg2", arg: 2, scope: !273, file: !1, type: !9)
!277 = !DILocalVariable(name: "arg3", arg: 3, scope: !273, file: !1, type: !7)
!278 = !DILocalVariable(name: "arg4", arg: 4, scope: !273, file: !1, type: !8)
!279 = !DILocalVariable(name: "arg5", arg: 5, scope: !273, file: !1, type: !9)
!280 = !DILocalVariable(name: "arg6", arg: 6, scope: !273, file: !1, type: !8)
!281 = !DILocation(line: 0, scope: !273)
!282 = !{!283, !283, i64 0}
!283 = !{!"0000020E446F5C40.w4.b0", !284, i64 0}
!284 = !{!"0000020E446F5C40.w8.b0", !285, i64 0}
!285 = !{!"0000020E446F5C40.w16.b0", !286, i64 0}
!286 = !{!"0000020E446F5C40.w32.b0", !287, i64 0}
!287 = !{!"0000020E446F5C40.w64.b0", !288, i64 0}
!288 = !{!"0000020E446F5C40.w128.b0", !289, i64 0}
!289 = !{!"0000020E446F5C40.w256.b0", !290, i64 0}
!290 = !{!"0000020E446F5C40.w512.b0", !291, i64 0}
!291 = !{!"0000020E446F5C40.w1024.b0", !292, i64 0}
!292 = !{!"0000020E446F5C40", !21, i64 0}
!293 = !{!294, !294, i64 0}
!294 = !{!"0000020E446F5C40.w4.b4", !284, i64 0}
!295 = !{!296, !296, i64 0}
!296 = !{!"0000020E446F5C40.w4.b8", !297, i64 0}
!297 = !{!"0000020E446F5C40.w8.b8", !285, i64 0}
!298 = !{!299, !299, i64 0}
!299 = !{!"0000020E446F5C40.w4.b12", !297, i64 0}
!300 = !{!301, !301, i64 0}
!301 = !{!"0000020E446EA100.w8.b0", !302, i64 0}
!302 = !{!"0000020E446EA100.w16.b0", !303, i64 0}
!303 = !{!"0000020E446EA100.w32.b0", !304, i64 0}
!304 = !{!"0000020E446EA100.w64.b0", !305, i64 0}
!305 = !{!"0000020E446EA100.w128.b0", !306, i64 0}
!306 = !{!"0000020E446EA100.w256.b0", !307, i64 0}
!307 = !{!"0000020E446EA100.w512.b0", !308, i64 0}
!308 = !{!"0000020E446EA100.w1024.b0", !309, i64 0}
!309 = !{!"0000020E446EA100", !21, i64 0}
!310 = !{!311, !311, i64 0}
!311 = !{!"0000020E446EA100.w8.b8", !302, i64 0}
!312 = !{!313, !313, i64 0}
!313 = !{!"0000020E446EA100.w8.b16", !314, i64 0}
!314 = !{!"0000020E446EA100.w16.b16", !303, i64 0}
!315 = !{!316, !316, i64 0}
!316 = !{!"0000020E446EA100.w8.b24", !314, i64 0}
!317 = !{!318, !318, i64 0}
!318 = !{!"0000020E446E9D00.w8.b8", !319, i64 0}
!319 = !{!"0000020E446E9D00.w16.b0", !320, i64 0}
!320 = !{!"0000020E446E9D00.w32.b0", !321, i64 0}
!321 = !{!"0000020E446E9D00.w64.b0", !322, i64 0}
!322 = !{!"0000020E446E9D00.w128.b0", !323, i64 0}
!323 = !{!"0000020E446E9D00.w256.b0", !324, i64 0}
!324 = !{!"0000020E446E9D00.w512.b0", !325, i64 0}
!325 = !{!"0000020E446E9D00.w1024.b0", !326, i64 0}
!326 = !{!"0000020E446E9D00", !21, i64 0}
!327 = !{!328, !328, i64 0}
!328 = !{!"0000020E446E9D00.w8.b16", !329, i64 0}
!329 = !{!"0000020E446E9D00.w16.b16", !320, i64 0}
!330 = !{!331, !331, i64 0}
!331 = !{!"0000020E446E9D00.w8.b24", !329, i64 0}
!332 = !{!333, !333, i64 0}
!333 = !{!"0000020E446EA780.w8.b0", !334, i64 0}
!334 = !{!"0000020E446EA780.w16.b0", !335, i64 0}
!335 = !{!"0000020E446EA780.w32.b0", !336, i64 0}
!336 = !{!"0000020E446EA780.w64.b0", !337, i64 0}
!337 = !{!"0000020E446EA780.w128.b0", !338, i64 0}
!338 = !{!"0000020E446EA780.w256.b0", !339, i64 0}
!339 = !{!"0000020E446EA780.w512.b0", !340, i64 0}
!340 = !{!"0000020E446EA780.w1024.b0", !341, i64 0}
!341 = !{!"0000020E446EA780", !21, i64 0}
!342 = !{!343, !343, i64 0}
!343 = !{!"0000020E446EA780.w8.b8", !334, i64 0}
!344 = !{!345, !345, i64 0}
!345 = !{!"0000020E446EA780.w8.b16", !346, i64 0}
!346 = !{!"0000020E446EA780.w16.b16", !335, i64 0}
!347 = !{!348, !348, i64 0}
!348 = !{!"0000020E446EA780.w8.b24", !346, i64 0}
!349 = !{!350, !350, i64 0}
!350 = !{!"0000020E446EAF80.w8.b0", !351, i64 0}
!351 = !{!"0000020E446EAF80.w16.b0", !352, i64 0}
!352 = !{!"0000020E446EAF80.w32.b0", !353, i64 0}
!353 = !{!"0000020E446EAF80.w64.b0", !354, i64 0}
!354 = !{!"0000020E446EAF80.w128.b0", !355, i64 0}
!355 = !{!"0000020E446EAF80.w256.b0", !356, i64 0}
!356 = !{!"0000020E446EAF80.w512.b0", !357, i64 0}
!357 = !{!"0000020E446EAF80.w1024.b0", !358, i64 0}
!358 = !{!"0000020E446EAF80", !21, i64 0}
!359 = !{!360, !360, i64 0}
!360 = !{!"0000020E446EAF80.w8.b8", !351, i64 0}
!361 = !{!362, !362, i64 0}
!362 = !{!"0000020E446EAF80.w8.b16", !363, i64 0}
!363 = !{!"0000020E446EAF80.w16.b16", !352, i64 0}
!364 = !{!365, !365, i64 0}
!365 = !{!"0000020E446EAF80.w8.b24", !363, i64 0}
!366 = !{!367, !367, i64 0}
!367 = !{!"0000020E446EB200.w8.b0", !368, i64 0}
!368 = !{!"0000020E446EB200.w16.b0", !369, i64 0}
!369 = !{!"0000020E446EB200.w32.b0", !370, i64 0}
!370 = !{!"0000020E446EB200.w64.b0", !371, i64 0}
!371 = !{!"0000020E446EB200.w128.b0", !372, i64 0}
!372 = !{!"0000020E446EB200.w256.b0", !373, i64 0}
!373 = !{!"0000020E446EB200.w512.b0", !374, i64 0}
!374 = !{!"0000020E446EB200.w1024.b0", !375, i64 0}
!375 = !{!"0000020E446EB200", !21, i64 0}
!376 = !{!377, !377, i64 0}
!377 = !{!"0000020E446EB200.w8.b8", !368, i64 0}
!378 = !{!379, !379, i64 0}
!379 = !{!"0000020E446EB200.w8.b16", !380, i64 0}
!380 = !{!"0000020E446EB200.w16.b16", !369, i64 0}
!381 = !{!382, !382, i64 0}
!382 = !{!"0000020E446EB200.w8.b24", !380, i64 0}
!383 = !{!384, !384, i64 0}
!384 = !{!"0000020E446EC4C0.w8.b8", !385, i64 0}
!385 = !{!"0000020E446EC4C0.w16.b0", !386, i64 0}
!386 = !{!"0000020E446EC4C0.w32.b0", !387, i64 0}
!387 = !{!"0000020E446EC4C0.w64.b0", !388, i64 0}
!388 = !{!"0000020E446EC4C0.w128.b0", !389, i64 0}
!389 = !{!"0000020E446EC4C0.w256.b0", !390, i64 0}
!390 = !{!"0000020E446EC4C0.w512.b0", !391, i64 0}
!391 = !{!"0000020E446EC4C0.w1024.b0", !392, i64 0}
!392 = !{!"0000020E446EC4C0", !21, i64 0}
!393 = !{!394, !394, i64 0}
!394 = !{!"0000020E446ED600.w8.b0", !395, i64 0}
!395 = !{!"0000020E446ED600.w16.b0", !396, i64 0}
!396 = !{!"0000020E446ED600.w32.b0", !397, i64 0}
!397 = !{!"0000020E446ED600.w64.b0", !398, i64 0}
!398 = !{!"0000020E446ED600.w128.b0", !399, i64 0}
!399 = !{!"0000020E446ED600.w256.b0", !400, i64 0}
!400 = !{!"0000020E446ED600.w512.b0", !401, i64 0}
!401 = !{!"0000020E446ED600.w1024.b0", !402, i64 0}
!402 = !{!"0000020E446ED600", !21, i64 0}
!403 = !{!404, !404, i64 0}
!404 = !{!"0000020E446ED600.w8.b8", !395, i64 0}
!405 = !{!406, !406, i64 0}
!406 = !{!"0000020E446ED600.w8.b16", !407, i64 0}
!407 = !{!"0000020E446ED600.w16.b16", !396, i64 0}
!408 = !{!409, !409, i64 0}
!409 = !{!"0000020E446ED600.w8.b24", !407, i64 0}
!410 = !{!411, !411, i64 0}
!411 = !{!"0000020E446EE7C0.w8.b8", !412, i64 0}
!412 = !{!"0000020E446EE7C0.w16.b0", !413, i64 0}
!413 = !{!"0000020E446EE7C0.w32.b0", !414, i64 0}
!414 = !{!"0000020E446EE7C0.w64.b0", !415, i64 0}
!415 = !{!"0000020E446EE7C0.w128.b0", !416, i64 0}
!416 = !{!"0000020E446EE7C0.w256.b0", !417, i64 0}
!417 = !{!"0000020E446EE7C0.w512.b0", !418, i64 0}
!418 = !{!"0000020E446EE7C0.w1024.b0", !419, i64 0}
!419 = !{!"0000020E446EE7C0", !21, i64 0}
!420 = !{!421, !421, i64 0}
!421 = !{!"0000020E446EE7C0.w8.b16", !422, i64 0}
!422 = !{!"0000020E446EE7C0.w16.b16", !413, i64 0}
!423 = !{!424, !424, i64 0}
!424 = !{!"0000020E446EE7C0.w8.b24", !422, i64 0}
!425 = !{!426, !426, i64 0}
!426 = !{!"0000020E46D742B0.w4.b0", !427, i64 0}
!427 = !{!"0000020E46D742B0.w8.b0", !428, i64 0}
!428 = !{!"0000020E46D742B0.w16.b0", !429, i64 0}
!429 = !{!"0000020E46D742B0.w32.b0", !430, i64 0}
!430 = !{!"0000020E46D742B0.w64.b0", !431, i64 0}
!431 = !{!"0000020E46D742B0.w128.b0", !432, i64 0}
!432 = !{!"0000020E46D742B0.w256.b0", !433, i64 0}
!433 = !{!"0000020E46D742B0.w512.b0", !434, i64 0}
!434 = !{!"0000020E46D742B0.w1024.b0", !435, i64 0}
!435 = !{!"0000020E46D742B0", !21, i64 0}
!436 = !{!437, !437, i64 0}
!437 = !{!"0000020E46D742B0.w4.b4", !427, i64 0}
!438 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !439)
!439 = !{!440, !441, !442, !443, !444, !445}
!440 = !DILocalVariable(name: "arg1", arg: 1, scope: !438, file: !1, type: !8)
!441 = !DILocalVariable(name: "arg2", arg: 2, scope: !438, file: !1, type: !9)
!442 = !DILocalVariable(name: "arg3", arg: 3, scope: !438, file: !1, type: !7)
!443 = !DILocalVariable(name: "arg4", arg: 4, scope: !438, file: !1, type: !8)
!444 = !DILocalVariable(name: "arg5", arg: 5, scope: !438, file: !1, type: !9)
!445 = !DILocalVariable(name: "arg6", arg: 6, scope: !438, file: !1, type: !8)
!446 = !DILocation(line: 0, scope: !438)
!447 = !{!448, !448, i64 0}
!448 = !{!"0000020E43B3C720.w4.b0", !449, i64 0}
!449 = !{!"0000020E43B3C720.w8.b0", !450, i64 0}
!450 = !{!"0000020E43B3C720.w16.b0", !451, i64 0}
!451 = !{!"0000020E43B3C720.w32.b0", !452, i64 0}
!452 = !{!"0000020E43B3C720.w64.b0", !453, i64 0}
!453 = !{!"0000020E43B3C720.w128.b0", !454, i64 0}
!454 = !{!"0000020E43B3C720.w256.b0", !455, i64 0}
!455 = !{!"0000020E43B3C720.w512.b0", !456, i64 0}
!456 = !{!"0000020E43B3C720.w1024.b0", !457, i64 0}
!457 = !{!"0000020E43B3C720", !21, i64 0}
!458 = !{!459, !459, i64 0}
!459 = !{!"0000020E43B3C720.w4.b4", !449, i64 0}
!460 = !{!461, !461, i64 0}
!461 = !{!"0000020E43B3C720.w4.b8", !462, i64 0}
!462 = !{!"0000020E43B3C720.w8.b8", !450, i64 0}
!463 = !{!464, !464, i64 0}
!464 = !{!"0000020E43B3C720.w4.b12", !462, i64 0}
!465 = !{!466, !466, i64 0}
!466 = !{!"0000020E43B49D20.w8.b0", !467, i64 0}
!467 = !{!"0000020E43B49D20.w16.b0", !468, i64 0}
!468 = !{!"0000020E43B49D20.w32.b0", !469, i64 0}
!469 = !{!"0000020E43B49D20.w64.b0", !470, i64 0}
!470 = !{!"0000020E43B49D20.w128.b0", !471, i64 0}
!471 = !{!"0000020E43B49D20.w256.b0", !472, i64 0}
!472 = !{!"0000020E43B49D20.w512.b0", !473, i64 0}
!473 = !{!"0000020E43B49D20.w1024.b0", !474, i64 0}
!474 = !{!"0000020E43B49D20", !21, i64 0}
!475 = !{!476, !476, i64 0}
!476 = !{!"0000020E43B49D20.w8.b8", !467, i64 0}
!477 = !{!478, !478, i64 0}
!478 = !{!"0000020E43B49D20.w8.b16", !479, i64 0}
!479 = !{!"0000020E43B49D20.w16.b16", !468, i64 0}
!480 = !{!481, !481, i64 0}
!481 = !{!"0000020E43B49D20.w8.b24", !479, i64 0}
!482 = !{!483, !483, i64 0}
!483 = !{!"0000020E43B529E0.w8.b8", !484, i64 0}
!484 = !{!"0000020E43B529E0.w16.b0", !485, i64 0}
!485 = !{!"0000020E43B529E0.w32.b0", !486, i64 0}
!486 = !{!"0000020E43B529E0.w64.b0", !487, i64 0}
!487 = !{!"0000020E43B529E0.w128.b0", !488, i64 0}
!488 = !{!"0000020E43B529E0.w256.b0", !489, i64 0}
!489 = !{!"0000020E43B529E0.w512.b0", !490, i64 0}
!490 = !{!"0000020E43B529E0.w1024.b0", !491, i64 0}
!491 = !{!"0000020E43B529E0", !21, i64 0}
!492 = !{!493, !493, i64 0}
!493 = !{!"0000020E43B529E0.w8.b16", !494, i64 0}
!494 = !{!"0000020E43B529E0.w16.b16", !485, i64 0}
!495 = !{!496, !496, i64 0}
!496 = !{!"0000020E43B529E0.w8.b24", !494, i64 0}
!497 = !{!498, !498, i64 0}
!498 = !{!"0000020E304F3A60.w8.b0", !499, i64 0}
!499 = !{!"0000020E304F3A60.w16.b0", !500, i64 0}
!500 = !{!"0000020E304F3A60.w32.b0", !501, i64 0}
!501 = !{!"0000020E304F3A60.w64.b0", !502, i64 0}
!502 = !{!"0000020E304F3A60.w128.b0", !503, i64 0}
!503 = !{!"0000020E304F3A60.w256.b0", !504, i64 0}
!504 = !{!"0000020E304F3A60.w512.b0", !505, i64 0}
!505 = !{!"0000020E304F3A60.w1024.b0", !506, i64 0}
!506 = !{!"0000020E304F3A60", !21, i64 0}
!507 = !{!508, !508, i64 0}
!508 = !{!"0000020E304F3A60.w8.b8", !499, i64 0}
!509 = !{!510, !510, i64 0}
!510 = !{!"0000020E304F3A60.w8.b16", !511, i64 0}
!511 = !{!"0000020E304F3A60.w16.b16", !500, i64 0}
!512 = !{!513, !513, i64 0}
!513 = !{!"0000020E304F3A60.w8.b24", !511, i64 0}
!514 = !{!515, !515, i64 0}
!515 = !{!"0000020E304F3EA0.w8.b0", !516, i64 0}
!516 = !{!"0000020E304F3EA0.w16.b0", !517, i64 0}
!517 = !{!"0000020E304F3EA0.w32.b0", !518, i64 0}
!518 = !{!"0000020E304F3EA0.w64.b0", !519, i64 0}
!519 = !{!"0000020E304F3EA0.w128.b0", !520, i64 0}
!520 = !{!"0000020E304F3EA0.w256.b0", !521, i64 0}
!521 = !{!"0000020E304F3EA0.w512.b0", !522, i64 0}
!522 = !{!"0000020E304F3EA0.w1024.b0", !523, i64 0}
!523 = !{!"0000020E304F3EA0", !21, i64 0}
!524 = !{!525, !525, i64 0}
!525 = !{!"0000020E304F3EA0.w8.b8", !516, i64 0}
!526 = !{!527, !527, i64 0}
!527 = !{!"0000020E304F3EA0.w8.b16", !528, i64 0}
!528 = !{!"0000020E304F3EA0.w16.b16", !517, i64 0}
!529 = !{!530, !530, i64 0}
!530 = !{!"0000020E304F3EA0.w8.b24", !528, i64 0}
!531 = !{!532, !532, i64 0}
!532 = !{!"0000020E304EADE0.w8.b0", !533, i64 0}
!533 = !{!"0000020E304EADE0.w16.b0", !534, i64 0}
!534 = !{!"0000020E304EADE0.w32.b0", !535, i64 0}
!535 = !{!"0000020E304EADE0.w64.b0", !536, i64 0}
!536 = !{!"0000020E304EADE0.w128.b0", !537, i64 0}
!537 = !{!"0000020E304EADE0.w256.b0", !538, i64 0}
!538 = !{!"0000020E304EADE0.w512.b0", !539, i64 0}
!539 = !{!"0000020E304EADE0.w1024.b0", !540, i64 0}
!540 = !{!"0000020E304EADE0", !21, i64 0}
!541 = !{!542, !542, i64 0}
!542 = !{!"0000020E304EADE0.w8.b8", !533, i64 0}
!543 = !{!544, !544, i64 0}
!544 = !{!"0000020E304EADE0.w8.b16", !545, i64 0}
!545 = !{!"0000020E304EADE0.w16.b16", !534, i64 0}
!546 = !{!547, !547, i64 0}
!547 = !{!"0000020E304EADE0.w8.b24", !545, i64 0}
!548 = !{!549, !549, i64 0}
!549 = !{!"0000020E304EB020.w8.b8", !550, i64 0}
!550 = !{!"0000020E304EB020.w16.b0", !551, i64 0}
!551 = !{!"0000020E304EB020.w32.b0", !552, i64 0}
!552 = !{!"0000020E304EB020.w64.b0", !553, i64 0}
!553 = !{!"0000020E304EB020.w128.b0", !554, i64 0}
!554 = !{!"0000020E304EB020.w256.b0", !555, i64 0}
!555 = !{!"0000020E304EB020.w512.b0", !556, i64 0}
!556 = !{!"0000020E304EB020.w1024.b0", !557, i64 0}
!557 = !{!"0000020E304EB020", !21, i64 0}
!558 = !{!559, !559, i64 0}
!559 = !{!"0000020E304EB9A0.w8.b0", !560, i64 0}
!560 = !{!"0000020E304EB9A0.w16.b0", !561, i64 0}
!561 = !{!"0000020E304EB9A0.w32.b0", !562, i64 0}
!562 = !{!"0000020E304EB9A0.w64.b0", !563, i64 0}
!563 = !{!"0000020E304EB9A0.w128.b0", !564, i64 0}
!564 = !{!"0000020E304EB9A0.w256.b0", !565, i64 0}
!565 = !{!"0000020E304EB9A0.w512.b0", !566, i64 0}
!566 = !{!"0000020E304EB9A0.w1024.b0", !567, i64 0}
!567 = !{!"0000020E304EB9A0", !21, i64 0}
!568 = !{!569, !569, i64 0}
!569 = !{!"0000020E304EB9A0.w8.b8", !560, i64 0}
!570 = !{!571, !571, i64 0}
!571 = !{!"0000020E304EB9A0.w8.b16", !572, i64 0}
!572 = !{!"0000020E304EB9A0.w16.b16", !561, i64 0}
!573 = !{!574, !574, i64 0}
!574 = !{!"0000020E304EB9A0.w8.b24", !572, i64 0}
!575 = !{!576, !576, i64 0}
!576 = !{!"0000020E304EBCE0.w8.b8", !577, i64 0}
!577 = !{!"0000020E304EBCE0.w16.b0", !578, i64 0}
!578 = !{!"0000020E304EBCE0.w32.b0", !579, i64 0}
!579 = !{!"0000020E304EBCE0.w64.b0", !580, i64 0}
!580 = !{!"0000020E304EBCE0.w128.b0", !581, i64 0}
!581 = !{!"0000020E304EBCE0.w256.b0", !582, i64 0}
!582 = !{!"0000020E304EBCE0.w512.b0", !583, i64 0}
!583 = !{!"0000020E304EBCE0.w1024.b0", !584, i64 0}
!584 = !{!"0000020E304EBCE0", !21, i64 0}
!585 = !{!586, !586, i64 0}
!586 = !{!"0000020E304EBCE0.w8.b16", !587, i64 0}
!587 = !{!"0000020E304EBCE0.w16.b16", !578, i64 0}
!588 = !{!589, !589, i64 0}
!589 = !{!"0000020E304EBCE0.w8.b24", !587, i64 0}
!590 = !{!591, !591, i64 0}
!591 = !{!"0000020E468E0180.w4.b0", !592, i64 0}
!592 = !{!"0000020E468E0180.w8.b0", !593, i64 0}
!593 = !{!"0000020E468E0180.w16.b0", !594, i64 0}
!594 = !{!"0000020E468E0180.w32.b0", !595, i64 0}
!595 = !{!"0000020E468E0180.w64.b0", !596, i64 0}
!596 = !{!"0000020E468E0180.w128.b0", !597, i64 0}
!597 = !{!"0000020E468E0180.w256.b0", !598, i64 0}
!598 = !{!"0000020E468E0180.w512.b0", !599, i64 0}
!599 = !{!"0000020E468E0180.w1024.b0", !600, i64 0}
!600 = !{!"0000020E468E0180", !21, i64 0}
!601 = !{!602, !602, i64 0}
!602 = !{!"0000020E468E0180.w4.b4", !592, i64 0}
!603 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !604)
!604 = !{!605, !606, !607, !608, !609, !610}
!605 = !DILocalVariable(name: "arg1", arg: 1, scope: !603, file: !1, type: !8)
!606 = !DILocalVariable(name: "arg2", arg: 2, scope: !603, file: !1, type: !9)
!607 = !DILocalVariable(name: "arg3", arg: 3, scope: !603, file: !1, type: !7)
!608 = !DILocalVariable(name: "arg4", arg: 4, scope: !603, file: !1, type: !8)
!609 = !DILocalVariable(name: "arg5", arg: 5, scope: !603, file: !1, type: !9)
!610 = !DILocalVariable(name: "arg6", arg: 6, scope: !603, file: !1, type: !8)
!611 = !DILocation(line: 0, scope: !603)
!612 = !{!613, !613, i64 0}
!613 = !{!"0000020E47F1E9E0.w4.b0", !614, i64 0}
!614 = !{!"0000020E47F1E9E0.w8.b0", !615, i64 0}
!615 = !{!"0000020E47F1E9E0.w16.b0", !616, i64 0}
!616 = !{!"0000020E47F1E9E0.w32.b0", !617, i64 0}
!617 = !{!"0000020E47F1E9E0.w64.b0", !618, i64 0}
!618 = !{!"0000020E47F1E9E0.w128.b0", !619, i64 0}
!619 = !{!"0000020E47F1E9E0.w256.b0", !620, i64 0}
!620 = !{!"0000020E47F1E9E0.w512.b0", !621, i64 0}
!621 = !{!"0000020E47F1E9E0.w1024.b0", !622, i64 0}
!622 = !{!"0000020E47F1E9E0", !21, i64 0}
!623 = !{!624, !624, i64 0}
!624 = !{!"0000020E47F1E9E0.w4.b4", !614, i64 0}
!625 = !{!626, !626, i64 0}
!626 = !{!"0000020E47F1E9E0.w4.b8", !627, i64 0}
!627 = !{!"0000020E47F1E9E0.w8.b8", !615, i64 0}
!628 = !{!629, !629, i64 0}
!629 = !{!"0000020E47F1E9E0.w4.b12", !627, i64 0}
!630 = !{!631, !631, i64 0}
!631 = !{!"0000020E47F29320.w8.b0", !632, i64 0}
!632 = !{!"0000020E47F29320.w16.b0", !633, i64 0}
!633 = !{!"0000020E47F29320.w32.b0", !634, i64 0}
!634 = !{!"0000020E47F29320.w64.b0", !635, i64 0}
!635 = !{!"0000020E47F29320.w128.b0", !636, i64 0}
!636 = !{!"0000020E47F29320.w256.b0", !637, i64 0}
!637 = !{!"0000020E47F29320.w512.b0", !638, i64 0}
!638 = !{!"0000020E47F29320.w1024.b0", !639, i64 0}
!639 = !{!"0000020E47F29320", !21, i64 0}
!640 = !{!641, !641, i64 0}
!641 = !{!"0000020E47F29320.w8.b8", !632, i64 0}
!642 = !{!643, !643, i64 0}
!643 = !{!"0000020E47F29320.w8.b16", !644, i64 0}
!644 = !{!"0000020E47F29320.w16.b16", !633, i64 0}
!645 = !{!646, !646, i64 0}
!646 = !{!"0000020E47F29320.w8.b24", !644, i64 0}
!647 = !{!648, !648, i64 0}
!648 = !{!"0000020E47F2BEA0.w8.b8", !649, i64 0}
!649 = !{!"0000020E47F2BEA0.w16.b0", !650, i64 0}
!650 = !{!"0000020E47F2BEA0.w32.b0", !651, i64 0}
!651 = !{!"0000020E47F2BEA0.w64.b0", !652, i64 0}
!652 = !{!"0000020E47F2BEA0.w128.b0", !653, i64 0}
!653 = !{!"0000020E47F2BEA0.w256.b0", !654, i64 0}
!654 = !{!"0000020E47F2BEA0.w512.b0", !655, i64 0}
!655 = !{!"0000020E47F2BEA0.w1024.b0", !656, i64 0}
!656 = !{!"0000020E47F2BEA0", !21, i64 0}
!657 = !{!658, !658, i64 0}
!658 = !{!"0000020E47F2BEA0.w8.b16", !659, i64 0}
!659 = !{!"0000020E47F2BEA0.w16.b16", !650, i64 0}
!660 = !{!661, !661, i64 0}
!661 = !{!"0000020E47F2BEA0.w8.b24", !659, i64 0}
!662 = !{!663, !663, i64 0}
!663 = !{!"0000020E47F2B3E0.w8.b0", !664, i64 0}
!664 = !{!"0000020E47F2B3E0.w16.b0", !665, i64 0}
!665 = !{!"0000020E47F2B3E0.w32.b0", !666, i64 0}
!666 = !{!"0000020E47F2B3E0.w64.b0", !667, i64 0}
!667 = !{!"0000020E47F2B3E0.w128.b0", !668, i64 0}
!668 = !{!"0000020E47F2B3E0.w256.b0", !669, i64 0}
!669 = !{!"0000020E47F2B3E0.w512.b0", !670, i64 0}
!670 = !{!"0000020E47F2B3E0.w1024.b0", !671, i64 0}
!671 = !{!"0000020E47F2B3E0", !21, i64 0}
!672 = !{!673, !673, i64 0}
!673 = !{!"0000020E47F2B3E0.w8.b8", !664, i64 0}
!674 = !{!675, !675, i64 0}
!675 = !{!"0000020E47F2B3E0.w8.b16", !676, i64 0}
!676 = !{!"0000020E47F2B3E0.w16.b16", !665, i64 0}
!677 = !{!678, !678, i64 0}
!678 = !{!"0000020E47F2B3E0.w8.b24", !676, i64 0}
!679 = !{!680, !680, i64 0}
!680 = !{!"0000020E47F2C920.w8.b0", !681, i64 0}
!681 = !{!"0000020E47F2C920.w16.b0", !682, i64 0}
!682 = !{!"0000020E47F2C920.w32.b0", !683, i64 0}
!683 = !{!"0000020E47F2C920.w64.b0", !684, i64 0}
!684 = !{!"0000020E47F2C920.w128.b0", !685, i64 0}
!685 = !{!"0000020E47F2C920.w256.b0", !686, i64 0}
!686 = !{!"0000020E47F2C920.w512.b0", !687, i64 0}
!687 = !{!"0000020E47F2C920.w1024.b0", !688, i64 0}
!688 = !{!"0000020E47F2C920", !21, i64 0}
!689 = !{!690, !690, i64 0}
!690 = !{!"0000020E47F2C920.w8.b8", !681, i64 0}
!691 = !{!692, !692, i64 0}
!692 = !{!"0000020E47F2C920.w8.b16", !693, i64 0}
!693 = !{!"0000020E47F2C920.w16.b16", !682, i64 0}
!694 = !{!695, !695, i64 0}
!695 = !{!"0000020E47F2C920.w8.b24", !693, i64 0}
!696 = !{!697, !697, i64 0}
!697 = !{!"0000020E47F2DBA0.w8.b0", !698, i64 0}
!698 = !{!"0000020E47F2DBA0.w16.b0", !699, i64 0}
!699 = !{!"0000020E47F2DBA0.w32.b0", !700, i64 0}
!700 = !{!"0000020E47F2DBA0.w64.b0", !701, i64 0}
!701 = !{!"0000020E47F2DBA0.w128.b0", !702, i64 0}
!702 = !{!"0000020E47F2DBA0.w256.b0", !703, i64 0}
!703 = !{!"0000020E47F2DBA0.w512.b0", !704, i64 0}
!704 = !{!"0000020E47F2DBA0.w1024.b0", !705, i64 0}
!705 = !{!"0000020E47F2DBA0", !21, i64 0}
!706 = !{!707, !707, i64 0}
!707 = !{!"0000020E47F2DBA0.w8.b8", !698, i64 0}
!708 = !{!709, !709, i64 0}
!709 = !{!"0000020E47F2DBA0.w8.b16", !710, i64 0}
!710 = !{!"0000020E47F2DBA0.w16.b16", !699, i64 0}
!711 = !{!712, !712, i64 0}
!712 = !{!"0000020E47F2DBA0.w8.b24", !710, i64 0}
!713 = !{!714, !714, i64 0}
!714 = !{!"0000020E47F2D220.w8.b8", !715, i64 0}
!715 = !{!"0000020E47F2D220.w16.b0", !716, i64 0}
!716 = !{!"0000020E47F2D220.w32.b0", !717, i64 0}
!717 = !{!"0000020E47F2D220.w64.b0", !718, i64 0}
!718 = !{!"0000020E47F2D220.w128.b0", !719, i64 0}
!719 = !{!"0000020E47F2D220.w256.b0", !720, i64 0}
!720 = !{!"0000020E47F2D220.w512.b0", !721, i64 0}
!721 = !{!"0000020E47F2D220.w1024.b0", !722, i64 0}
!722 = !{!"0000020E47F2D220", !21, i64 0}
!723 = !{!724, !724, i64 0}
!724 = !{!"0000020E47F2D660.w8.b0", !725, i64 0}
!725 = !{!"0000020E47F2D660.w16.b0", !726, i64 0}
!726 = !{!"0000020E47F2D660.w32.b0", !727, i64 0}
!727 = !{!"0000020E47F2D660.w64.b0", !728, i64 0}
!728 = !{!"0000020E47F2D660.w128.b0", !729, i64 0}
!729 = !{!"0000020E47F2D660.w256.b0", !730, i64 0}
!730 = !{!"0000020E47F2D660.w512.b0", !731, i64 0}
!731 = !{!"0000020E47F2D660.w1024.b0", !732, i64 0}
!732 = !{!"0000020E47F2D660", !21, i64 0}
!733 = !{!734, !734, i64 0}
!734 = !{!"0000020E47F2D660.w8.b8", !725, i64 0}
!735 = !{!736, !736, i64 0}
!736 = !{!"0000020E47F2D660.w8.b16", !737, i64 0}
!737 = !{!"0000020E47F2D660.w16.b16", !726, i64 0}
!738 = !{!739, !739, i64 0}
!739 = !{!"0000020E47F2D660.w8.b24", !737, i64 0}
!740 = !{!741, !741, i64 0}
!741 = !{!"0000020E47F2EBA0.w8.b8", !742, i64 0}
!742 = !{!"0000020E47F2EBA0.w16.b0", !743, i64 0}
!743 = !{!"0000020E47F2EBA0.w32.b0", !744, i64 0}
!744 = !{!"0000020E47F2EBA0.w64.b0", !745, i64 0}
!745 = !{!"0000020E47F2EBA0.w128.b0", !746, i64 0}
!746 = !{!"0000020E47F2EBA0.w256.b0", !747, i64 0}
!747 = !{!"0000020E47F2EBA0.w512.b0", !748, i64 0}
!748 = !{!"0000020E47F2EBA0.w1024.b0", !749, i64 0}
!749 = !{!"0000020E47F2EBA0", !21, i64 0}
!750 = !{!751, !751, i64 0}
!751 = !{!"0000020E47F2EBA0.w8.b16", !752, i64 0}
!752 = !{!"0000020E47F2EBA0.w16.b16", !743, i64 0}
!753 = !{!754, !754, i64 0}
!754 = !{!"0000020E47F2EBA0.w8.b24", !752, i64 0}
!755 = !{!756, !756, i64 0}
!756 = !{!"0000020E47F25520.w4.b0", !757, i64 0}
!757 = !{!"0000020E47F25520.w8.b0", !758, i64 0}
!758 = !{!"0000020E47F25520.w16.b0", !759, i64 0}
!759 = !{!"0000020E47F25520.w32.b0", !760, i64 0}
!760 = !{!"0000020E47F25520.w64.b0", !761, i64 0}
!761 = !{!"0000020E47F25520.w128.b0", !762, i64 0}
!762 = !{!"0000020E47F25520.w256.b0", !763, i64 0}
!763 = !{!"0000020E47F25520.w512.b0", !764, i64 0}
!764 = !{!"0000020E47F25520.w1024.b0", !765, i64 0}
!765 = !{!"0000020E47F25520", !21, i64 0}
!766 = !{!767, !767, i64 0}
!767 = !{!"0000020E47F25520.w4.b4", !757, i64 0}
!768 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !769)
!769 = !{!770, !771, !772, !773, !774, !775}
!770 = !DILocalVariable(name: "arg1", arg: 1, scope: !768, file: !1, type: !8)
!771 = !DILocalVariable(name: "arg2", arg: 2, scope: !768, file: !1, type: !9)
!772 = !DILocalVariable(name: "arg3", arg: 3, scope: !768, file: !1, type: !7)
!773 = !DILocalVariable(name: "arg4", arg: 4, scope: !768, file: !1, type: !8)
!774 = !DILocalVariable(name: "arg5", arg: 5, scope: !768, file: !1, type: !9)
!775 = !DILocalVariable(name: "arg6", arg: 6, scope: !768, file: !1, type: !8)
!776 = !DILocation(line: 0, scope: !768)
!777 = !{!778, !778, i64 0}
!778 = !{!"0000020E47F38420.w4.b0", !779, i64 0}
!779 = !{!"0000020E47F38420.w8.b0", !780, i64 0}
!780 = !{!"0000020E47F38420.w16.b0", !781, i64 0}
!781 = !{!"0000020E47F38420.w32.b0", !782, i64 0}
!782 = !{!"0000020E47F38420.w64.b0", !783, i64 0}
!783 = !{!"0000020E47F38420.w128.b0", !784, i64 0}
!784 = !{!"0000020E47F38420.w256.b0", !785, i64 0}
!785 = !{!"0000020E47F38420.w512.b0", !786, i64 0}
!786 = !{!"0000020E47F38420.w1024.b0", !787, i64 0}
!787 = !{!"0000020E47F38420", !21, i64 0}
!788 = !{!789, !789, i64 0}
!789 = !{!"0000020E47F38420.w4.b4", !779, i64 0}
!790 = !{!791, !791, i64 0}
!791 = !{!"0000020E47F38420.w4.b8", !792, i64 0}
!792 = !{!"0000020E47F38420.w8.b8", !780, i64 0}
!793 = !{!794, !794, i64 0}
!794 = !{!"0000020E47F38420.w4.b12", !792, i64 0}
!795 = !{!796, !796, i64 0}
!796 = !{!"0000020E47F200E0.w8.b0", !797, i64 0}
!797 = !{!"0000020E47F200E0.w16.b0", !798, i64 0}
!798 = !{!"0000020E47F200E0.w32.b0", !799, i64 0}
!799 = !{!"0000020E47F200E0.w64.b0", !800, i64 0}
!800 = !{!"0000020E47F200E0.w128.b0", !801, i64 0}
!801 = !{!"0000020E47F200E0.w256.b0", !802, i64 0}
!802 = !{!"0000020E47F200E0.w512.b0", !803, i64 0}
!803 = !{!"0000020E47F200E0.w1024.b0", !804, i64 0}
!804 = !{!"0000020E47F200E0", !21, i64 0}
!805 = !{!806, !806, i64 0}
!806 = !{!"0000020E47F200E0.w8.b8", !797, i64 0}
!807 = !{!808, !808, i64 0}
!808 = !{!"0000020E47F200E0.w8.b16", !809, i64 0}
!809 = !{!"0000020E47F200E0.w16.b16", !798, i64 0}
!810 = !{!811, !811, i64 0}
!811 = !{!"0000020E47F200E0.w8.b24", !809, i64 0}
!812 = !{!813, !813, i64 0}
!813 = !{!"0000020E47F217A0.w8.b8", !814, i64 0}
!814 = !{!"0000020E47F217A0.w16.b0", !815, i64 0}
!815 = !{!"0000020E47F217A0.w32.b0", !816, i64 0}
!816 = !{!"0000020E47F217A0.w64.b0", !817, i64 0}
!817 = !{!"0000020E47F217A0.w128.b0", !818, i64 0}
!818 = !{!"0000020E47F217A0.w256.b0", !819, i64 0}
!819 = !{!"0000020E47F217A0.w512.b0", !820, i64 0}
!820 = !{!"0000020E47F217A0.w1024.b0", !821, i64 0}
!821 = !{!"0000020E47F217A0", !21, i64 0}
!822 = !{!823, !823, i64 0}
!823 = !{!"0000020E47F217A0.w8.b16", !824, i64 0}
!824 = !{!"0000020E47F217A0.w16.b16", !815, i64 0}
!825 = !{!826, !826, i64 0}
!826 = !{!"0000020E47F217A0.w8.b24", !824, i64 0}
!827 = !{!828, !828, i64 0}
!828 = !{!"0000020E47F21460.w8.b0", !829, i64 0}
!829 = !{!"0000020E47F21460.w16.b0", !830, i64 0}
!830 = !{!"0000020E47F21460.w32.b0", !831, i64 0}
!831 = !{!"0000020E47F21460.w64.b0", !832, i64 0}
!832 = !{!"0000020E47F21460.w128.b0", !833, i64 0}
!833 = !{!"0000020E47F21460.w256.b0", !834, i64 0}
!834 = !{!"0000020E47F21460.w512.b0", !835, i64 0}
!835 = !{!"0000020E47F21460.w1024.b0", !836, i64 0}
!836 = !{!"0000020E47F21460", !21, i64 0}
!837 = !{!838, !838, i64 0}
!838 = !{!"0000020E47F21460.w8.b8", !829, i64 0}
!839 = !{!840, !840, i64 0}
!840 = !{!"0000020E47F21460.w8.b16", !841, i64 0}
!841 = !{!"0000020E47F21460.w16.b16", !830, i64 0}
!842 = !{!843, !843, i64 0}
!843 = !{!"0000020E47F21460.w8.b24", !841, i64 0}
!844 = !{!845, !845, i64 0}
!845 = !{!"0000020E47F22820.w8.b0", !846, i64 0}
!846 = !{!"0000020E47F22820.w16.b0", !847, i64 0}
!847 = !{!"0000020E47F22820.w32.b0", !848, i64 0}
!848 = !{!"0000020E47F22820.w64.b0", !849, i64 0}
!849 = !{!"0000020E47F22820.w128.b0", !850, i64 0}
!850 = !{!"0000020E47F22820.w256.b0", !851, i64 0}
!851 = !{!"0000020E47F22820.w512.b0", !852, i64 0}
!852 = !{!"0000020E47F22820.w1024.b0", !853, i64 0}
!853 = !{!"0000020E47F22820", !21, i64 0}
!854 = !{!855, !855, i64 0}
!855 = !{!"0000020E47F22820.w8.b8", !846, i64 0}
!856 = !{!857, !857, i64 0}
!857 = !{!"0000020E47F22220.w8.b0", !858, i64 0}
!858 = !{!"0000020E47F22220.w16.b0", !859, i64 0}
!859 = !{!"0000020E47F22220.w32.b0", !860, i64 0}
!860 = !{!"0000020E47F22220.w64.b0", !861, i64 0}
!861 = !{!"0000020E47F22220.w128.b0", !862, i64 0}
!862 = !{!"0000020E47F22220.w256.b0", !863, i64 0}
!863 = !{!"0000020E47F22220.w512.b0", !864, i64 0}
!864 = !{!"0000020E47F22220.w1024.b0", !865, i64 0}
!865 = !{!"0000020E47F22220", !21, i64 0}
!866 = !{!867, !867, i64 0}
!867 = !{!"0000020E47F22220.w8.b8", !858, i64 0}
!868 = !{!869, !869, i64 0}
!869 = !{!"0000020E47F22220.w8.b16", !870, i64 0}
!870 = !{!"0000020E47F22220.w16.b16", !859, i64 0}
!871 = !{!872, !872, i64 0}
!872 = !{!"0000020E47F22220.w8.b24", !870, i64 0}
!873 = !{!874, !874, i64 0}
!874 = !{!"0000020E47F23CA0.w8.b8", !875, i64 0}
!875 = !{!"0000020E47F23CA0.w16.b0", !876, i64 0}
!876 = !{!"0000020E47F23CA0.w32.b0", !877, i64 0}
!877 = !{!"0000020E47F23CA0.w64.b0", !878, i64 0}
!878 = !{!"0000020E47F23CA0.w128.b0", !879, i64 0}
!879 = !{!"0000020E47F23CA0.w256.b0", !880, i64 0}
!880 = !{!"0000020E47F23CA0.w512.b0", !881, i64 0}
!881 = !{!"0000020E47F23CA0.w1024.b0", !882, i64 0}
!882 = !{!"0000020E47F23CA0", !21, i64 0}
!883 = !{!884, !884, i64 0}
!884 = !{!"0000020E47F23E60.w8.b0", !885, i64 0}
!885 = !{!"0000020E47F23E60.w16.b0", !886, i64 0}
!886 = !{!"0000020E47F23E60.w32.b0", !887, i64 0}
!887 = !{!"0000020E47F23E60.w64.b0", !888, i64 0}
!888 = !{!"0000020E47F23E60.w128.b0", !889, i64 0}
!889 = !{!"0000020E47F23E60.w256.b0", !890, i64 0}
!890 = !{!"0000020E47F23E60.w512.b0", !891, i64 0}
!891 = !{!"0000020E47F23E60.w1024.b0", !892, i64 0}
!892 = !{!"0000020E47F23E60", !21, i64 0}
!893 = !{!894, !894, i64 0}
!894 = !{!"0000020E47F23E60.w8.b8", !885, i64 0}
!895 = !{!896, !896, i64 0}
!896 = !{!"0000020E47F23E60.w8.b16", !897, i64 0}
!897 = !{!"0000020E47F23E60.w16.b16", !886, i64 0}
!898 = !{!899, !899, i64 0}
!899 = !{!"0000020E47F23E60.w8.b24", !897, i64 0}
!900 = !{!901, !901, i64 0}
!901 = !{!"0000020E47F242A0.w8.b8", !902, i64 0}
!902 = !{!"0000020E47F242A0.w16.b0", !903, i64 0}
!903 = !{!"0000020E47F242A0.w32.b0", !904, i64 0}
!904 = !{!"0000020E47F242A0.w64.b0", !905, i64 0}
!905 = !{!"0000020E47F242A0.w128.b0", !906, i64 0}
!906 = !{!"0000020E47F242A0.w256.b0", !907, i64 0}
!907 = !{!"0000020E47F242A0.w512.b0", !908, i64 0}
!908 = !{!"0000020E47F242A0.w1024.b0", !909, i64 0}
!909 = !{!"0000020E47F242A0", !21, i64 0}
!910 = !{!911, !911, i64 0}
!911 = !{!"0000020E47F242A0.w8.b16", !912, i64 0}
!912 = !{!"0000020E47F242A0.w16.b16", !903, i64 0}
!913 = !{!914, !914, i64 0}
!914 = !{!"0000020E47F242A0.w8.b24", !912, i64 0}
!915 = !{!916, !916, i64 0}
!916 = !{!"0000020E47F377E0.w4.b0", !917, i64 0}
!917 = !{!"0000020E47F377E0.w8.b0", !918, i64 0}
!918 = !{!"0000020E47F377E0.w16.b0", !919, i64 0}
!919 = !{!"0000020E47F377E0.w32.b0", !920, i64 0}
!920 = !{!"0000020E47F377E0.w64.b0", !921, i64 0}
!921 = !{!"0000020E47F377E0.w128.b0", !922, i64 0}
!922 = !{!"0000020E47F377E0.w256.b0", !923, i64 0}
!923 = !{!"0000020E47F377E0.w512.b0", !924, i64 0}
!924 = !{!"0000020E47F377E0.w1024.b0", !925, i64 0}
!925 = !{!"0000020E47F377E0", !21, i64 0}
!926 = !{!927, !927, i64 0}
!927 = !{!"0000020E47F377E0.w4.b4", !917, i64 0}
!928 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !929)
!929 = !{!930, !931, !932, !933, !934, !935}
!930 = !DILocalVariable(name: "arg1", arg: 1, scope: !928, file: !1, type: !8)
!931 = !DILocalVariable(name: "arg2", arg: 2, scope: !928, file: !1, type: !9)
!932 = !DILocalVariable(name: "arg3", arg: 3, scope: !928, file: !1, type: !7)
!933 = !DILocalVariable(name: "arg4", arg: 4, scope: !928, file: !1, type: !8)
!934 = !DILocalVariable(name: "arg5", arg: 5, scope: !928, file: !1, type: !9)
!935 = !DILocalVariable(name: "arg6", arg: 6, scope: !928, file: !1, type: !8)
!936 = !DILocation(line: 0, scope: !928)
!937 = !{!938, !938, i64 0}
!938 = !{!"0000020E46D789B0.w4.b0", !939, i64 0}
!939 = !{!"0000020E46D789B0.w8.b0", !940, i64 0}
!940 = !{!"0000020E46D789B0.w16.b0", !941, i64 0}
!941 = !{!"0000020E46D789B0.w32.b0", !942, i64 0}
!942 = !{!"0000020E46D789B0.w64.b0", !943, i64 0}
!943 = !{!"0000020E46D789B0.w128.b0", !944, i64 0}
!944 = !{!"0000020E46D789B0.w256.b0", !945, i64 0}
!945 = !{!"0000020E46D789B0.w512.b0", !946, i64 0}
!946 = !{!"0000020E46D789B0.w1024.b0", !947, i64 0}
!947 = !{!"0000020E46D789B0", !21, i64 0}
!948 = !{!949, !949, i64 0}
!949 = !{!"0000020E46D789B0.w4.b4", !939, i64 0}
!950 = !{!951, !951, i64 0}
!951 = !{!"0000020E46D789B0.w4.b8", !952, i64 0}
!952 = !{!"0000020E46D789B0.w8.b8", !940, i64 0}
!953 = !{!954, !954, i64 0}
!954 = !{!"0000020E46D789B0.w4.b12", !952, i64 0}
!955 = !{!956, !956, i64 0}
!956 = !{!"0000020E46D7D470.w8.b0", !957, i64 0}
!957 = !{!"0000020E46D7D470.w16.b0", !958, i64 0}
!958 = !{!"0000020E46D7D470.w32.b0", !959, i64 0}
!959 = !{!"0000020E46D7D470.w64.b0", !960, i64 0}
!960 = !{!"0000020E46D7D470.w128.b0", !961, i64 0}
!961 = !{!"0000020E46D7D470.w256.b0", !962, i64 0}
!962 = !{!"0000020E46D7D470.w512.b0", !963, i64 0}
!963 = !{!"0000020E46D7D470.w1024.b0", !964, i64 0}
!964 = !{!"0000020E46D7D470", !21, i64 0}
!965 = !{!966, !966, i64 0}
!966 = !{!"0000020E46D7D470.w8.b8", !957, i64 0}
!967 = !{!968, !968, i64 0}
!968 = !{!"0000020E46D7D470.w8.b16", !969, i64 0}
!969 = !{!"0000020E46D7D470.w16.b16", !958, i64 0}
!970 = !{!971, !971, i64 0}
!971 = !{!"0000020E46D7D470.w8.b24", !969, i64 0}
!972 = !{!973, !973, i64 0}
!973 = !{!"0000020E46D7E730.w8.b8", !974, i64 0}
!974 = !{!"0000020E46D7E730.w16.b0", !975, i64 0}
!975 = !{!"0000020E46D7E730.w32.b0", !976, i64 0}
!976 = !{!"0000020E46D7E730.w64.b0", !977, i64 0}
!977 = !{!"0000020E46D7E730.w128.b0", !978, i64 0}
!978 = !{!"0000020E46D7E730.w256.b0", !979, i64 0}
!979 = !{!"0000020E46D7E730.w512.b0", !980, i64 0}
!980 = !{!"0000020E46D7E730.w1024.b0", !981, i64 0}
!981 = !{!"0000020E46D7E730", !21, i64 0}
!982 = !{!983, !983, i64 0}
!983 = !{!"0000020E46D7E730.w8.b16", !984, i64 0}
!984 = !{!"0000020E46D7E730.w16.b16", !975, i64 0}
!985 = !{!986, !986, i64 0}
!986 = !{!"0000020E46D7E730.w8.b24", !984, i64 0}
!987 = !{!988, !988, i64 0}
!988 = !{!"0000020E46D7F530.w8.b0", !989, i64 0}
!989 = !{!"0000020E46D7F530.w16.b0", !990, i64 0}
!990 = !{!"0000020E46D7F530.w32.b0", !991, i64 0}
!991 = !{!"0000020E46D7F530.w64.b0", !992, i64 0}
!992 = !{!"0000020E46D7F530.w128.b0", !993, i64 0}
!993 = !{!"0000020E46D7F530.w256.b0", !994, i64 0}
!994 = !{!"0000020E46D7F530.w512.b0", !995, i64 0}
!995 = !{!"0000020E46D7F530.w1024.b0", !996, i64 0}
!996 = !{!"0000020E46D7F530", !21, i64 0}
!997 = !{!998, !998, i64 0}
!998 = !{!"0000020E46D7F530.w8.b8", !989, i64 0}
!999 = !{!1000, !1000, i64 0}
!1000 = !{!"0000020E46D7F530.w8.b16", !1001, i64 0}
!1001 = !{!"0000020E46D7F530.w16.b16", !990, i64 0}
!1002 = !{!1003, !1003, i64 0}
!1003 = !{!"0000020E46D7F530.w8.b24", !1001, i64 0}
!1004 = !{!1005, !1005, i64 0}
!1005 = !{!"0000020E46D7F5F0.w8.b0", !1006, i64 0}
!1006 = !{!"0000020E46D7F5F0.w16.b0", !1007, i64 0}
!1007 = !{!"0000020E46D7F5F0.w32.b0", !1008, i64 0}
!1008 = !{!"0000020E46D7F5F0.w64.b0", !1009, i64 0}
!1009 = !{!"0000020E46D7F5F0.w128.b0", !1010, i64 0}
!1010 = !{!"0000020E46D7F5F0.w256.b0", !1011, i64 0}
!1011 = !{!"0000020E46D7F5F0.w512.b0", !1012, i64 0}
!1012 = !{!"0000020E46D7F5F0.w1024.b0", !1013, i64 0}
!1013 = !{!"0000020E46D7F5F0", !21, i64 0}
!1014 = !{!1015, !1015, i64 0}
!1015 = !{!"0000020E46D7F5F0.w8.b8", !1006, i64 0}
!1016 = !{!1017, !1017, i64 0}
!1017 = !{!"0000020E46D80370.w8.b0", !1018, i64 0}
!1018 = !{!"0000020E46D80370.w16.b0", !1019, i64 0}
!1019 = !{!"0000020E46D80370.w32.b0", !1020, i64 0}
!1020 = !{!"0000020E46D80370.w64.b0", !1021, i64 0}
!1021 = !{!"0000020E46D80370.w128.b0", !1022, i64 0}
!1022 = !{!"0000020E46D80370.w256.b0", !1023, i64 0}
!1023 = !{!"0000020E46D80370.w512.b0", !1024, i64 0}
!1024 = !{!"0000020E46D80370.w1024.b0", !1025, i64 0}
!1025 = !{!"0000020E46D80370", !21, i64 0}
!1026 = !{!1027, !1027, i64 0}
!1027 = !{!"0000020E46D80370.w8.b8", !1018, i64 0}
!1028 = !{!1029, !1029, i64 0}
!1029 = !{!"0000020E46D80370.w8.b16", !1030, i64 0}
!1030 = !{!"0000020E46D80370.w16.b16", !1019, i64 0}
!1031 = !{!1032, !1032, i64 0}
!1032 = !{!"0000020E46D80370.w8.b24", !1030, i64 0}
!1033 = !{!1034, !1034, i64 0}
!1034 = !{!"0000020E46D802F0.w8.b8", !1035, i64 0}
!1035 = !{!"0000020E46D802F0.w16.b0", !1036, i64 0}
!1036 = !{!"0000020E46D802F0.w32.b0", !1037, i64 0}
!1037 = !{!"0000020E46D802F0.w64.b0", !1038, i64 0}
!1038 = !{!"0000020E46D802F0.w128.b0", !1039, i64 0}
!1039 = !{!"0000020E46D802F0.w256.b0", !1040, i64 0}
!1040 = !{!"0000020E46D802F0.w512.b0", !1041, i64 0}
!1041 = !{!"0000020E46D802F0.w1024.b0", !1042, i64 0}
!1042 = !{!"0000020E46D802F0", !21, i64 0}
!1043 = !{!1044, !1044, i64 0}
!1044 = !{!"0000020E46D81FB0.w8.b0", !1045, i64 0}
!1045 = !{!"0000020E46D81FB0.w16.b0", !1046, i64 0}
!1046 = !{!"0000020E46D81FB0.w32.b0", !1047, i64 0}
!1047 = !{!"0000020E46D81FB0.w64.b0", !1048, i64 0}
!1048 = !{!"0000020E46D81FB0.w128.b0", !1049, i64 0}
!1049 = !{!"0000020E46D81FB0.w256.b0", !1050, i64 0}
!1050 = !{!"0000020E46D81FB0.w512.b0", !1051, i64 0}
!1051 = !{!"0000020E46D81FB0.w1024.b0", !1052, i64 0}
!1052 = !{!"0000020E46D81FB0", !21, i64 0}
!1053 = !{!1054, !1054, i64 0}
!1054 = !{!"0000020E46D81FB0.w8.b8", !1045, i64 0}
!1055 = !{!1056, !1056, i64 0}
!1056 = !{!"0000020E46D81FB0.w8.b16", !1057, i64 0}
!1057 = !{!"0000020E46D81FB0.w16.b16", !1046, i64 0}
!1058 = !{!1059, !1059, i64 0}
!1059 = !{!"0000020E46D81FB0.w8.b24", !1057, i64 0}
!1060 = !{!1061, !1061, i64 0}
!1061 = !{!"0000020E46D816F0.w8.b8", !1062, i64 0}
!1062 = !{!"0000020E46D816F0.w16.b0", !1063, i64 0}
!1063 = !{!"0000020E46D816F0.w32.b0", !1064, i64 0}
!1064 = !{!"0000020E46D816F0.w64.b0", !1065, i64 0}
!1065 = !{!"0000020E46D816F0.w128.b0", !1066, i64 0}
!1066 = !{!"0000020E46D816F0.w256.b0", !1067, i64 0}
!1067 = !{!"0000020E46D816F0.w512.b0", !1068, i64 0}
!1068 = !{!"0000020E46D816F0.w1024.b0", !1069, i64 0}
!1069 = !{!"0000020E46D816F0", !21, i64 0}
!1070 = !{!1071, !1071, i64 0}
!1071 = !{!"0000020E46D816F0.w8.b16", !1072, i64 0}
!1072 = !{!"0000020E46D816F0.w16.b16", !1063, i64 0}
!1073 = !{!1074, !1074, i64 0}
!1074 = !{!"0000020E46D816F0.w8.b24", !1072, i64 0}
!1075 = !{!1076, !1076, i64 0}
!1076 = !{!"0000020E304EEC20.w4.b0", !1077, i64 0}
!1077 = !{!"0000020E304EEC20.w8.b0", !1078, i64 0}
!1078 = !{!"0000020E304EEC20.w16.b0", !1079, i64 0}
!1079 = !{!"0000020E304EEC20.w32.b0", !1080, i64 0}
!1080 = !{!"0000020E304EEC20.w64.b0", !1081, i64 0}
!1081 = !{!"0000020E304EEC20.w128.b0", !1082, i64 0}
!1082 = !{!"0000020E304EEC20.w256.b0", !1083, i64 0}
!1083 = !{!"0000020E304EEC20.w512.b0", !1084, i64 0}
!1084 = !{!"0000020E304EEC20.w1024.b0", !1085, i64 0}
!1085 = !{!"0000020E304EEC20", !21, i64 0}
!1086 = !{!1087, !1087, i64 0}
!1087 = !{!"0000020E304EEC20.w4.b4", !1077, i64 0}
!1088 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1094, !1095}
!1090 = !DILocalVariable(name: "arg1", arg: 1, scope: !1088, file: !1, type: !8)
!1091 = !DILocalVariable(name: "arg2", arg: 2, scope: !1088, file: !1, type: !9)
!1092 = !DILocalVariable(name: "arg3", arg: 3, scope: !1088, file: !1, type: !7)
!1093 = !DILocalVariable(name: "arg4", arg: 4, scope: !1088, file: !1, type: !8)
!1094 = !DILocalVariable(name: "arg5", arg: 5, scope: !1088, file: !1, type: !9)
!1095 = !DILocalVariable(name: "arg6", arg: 6, scope: !1088, file: !1, type: !8)
!1096 = !DILocation(line: 0, scope: !1088)
!1097 = !{!1098, !1098, i64 0}
!1098 = !{!"0000020E43B3C9E0.w4.b0", !1099, i64 0}
!1099 = !{!"0000020E43B3C9E0.w8.b0", !1100, i64 0}
!1100 = !{!"0000020E43B3C9E0.w16.b0", !1101, i64 0}
!1101 = !{!"0000020E43B3C9E0.w32.b0", !1102, i64 0}
!1102 = !{!"0000020E43B3C9E0.w64.b0", !1103, i64 0}
!1103 = !{!"0000020E43B3C9E0.w128.b0", !1104, i64 0}
!1104 = !{!"0000020E43B3C9E0.w256.b0", !1105, i64 0}
!1105 = !{!"0000020E43B3C9E0.w512.b0", !1106, i64 0}
!1106 = !{!"0000020E43B3C9E0.w1024.b0", !1107, i64 0}
!1107 = !{!"0000020E43B3C9E0", !21, i64 0}
!1108 = !{!1109, !1109, i64 0}
!1109 = !{!"0000020E43B3C9E0.w4.b4", !1099, i64 0}
!1110 = !{!1111, !1111, i64 0}
!1111 = !{!"0000020E43B3C9E0.w4.b8", !1112, i64 0}
!1112 = !{!"0000020E43B3C9E0.w8.b8", !1100, i64 0}
!1113 = !{!1114, !1114, i64 0}
!1114 = !{!"0000020E43B3C9E0.w4.b12", !1112, i64 0}
!1115 = !{!1116, !1116, i64 0}
!1116 = !{!"0000020E43B3D7E0.w8.b0", !1117, i64 0}
!1117 = !{!"0000020E43B3D7E0.w16.b0", !1118, i64 0}
!1118 = !{!"0000020E43B3D7E0.w32.b0", !1119, i64 0}
!1119 = !{!"0000020E43B3D7E0.w64.b0", !1120, i64 0}
!1120 = !{!"0000020E43B3D7E0.w128.b0", !1121, i64 0}
!1121 = !{!"0000020E43B3D7E0.w256.b0", !1122, i64 0}
!1122 = !{!"0000020E43B3D7E0.w512.b0", !1123, i64 0}
!1123 = !{!"0000020E43B3D7E0.w1024.b0", !1124, i64 0}
!1124 = !{!"0000020E43B3D7E0", !21, i64 0}
!1125 = !{!1126, !1126, i64 0}
!1126 = !{!"0000020E43B3D7E0.w8.b8", !1117, i64 0}
!1127 = !{!1128, !1128, i64 0}
!1128 = !{!"0000020E43B3D7E0.w8.b16", !1129, i64 0}
!1129 = !{!"0000020E43B3D7E0.w16.b16", !1118, i64 0}
!1130 = !{!1131, !1131, i64 0}
!1131 = !{!"0000020E43B3D7E0.w8.b24", !1129, i64 0}
!1132 = !{!1133, !1133, i64 0}
!1133 = !{!"0000020E43B3E6E0.w8.b8", !1134, i64 0}
!1134 = !{!"0000020E43B3E6E0.w16.b0", !1135, i64 0}
!1135 = !{!"0000020E43B3E6E0.w32.b0", !1136, i64 0}
!1136 = !{!"0000020E43B3E6E0.w64.b0", !1137, i64 0}
!1137 = !{!"0000020E43B3E6E0.w128.b0", !1138, i64 0}
!1138 = !{!"0000020E43B3E6E0.w256.b0", !1139, i64 0}
!1139 = !{!"0000020E43B3E6E0.w512.b0", !1140, i64 0}
!1140 = !{!"0000020E43B3E6E0.w1024.b0", !1141, i64 0}
!1141 = !{!"0000020E43B3E6E0", !21, i64 0}
!1142 = !{!1143, !1143, i64 0}
!1143 = !{!"0000020E43B3E6E0.w8.b16", !1144, i64 0}
!1144 = !{!"0000020E43B3E6E0.w16.b16", !1135, i64 0}
!1145 = !{!1146, !1146, i64 0}
!1146 = !{!"0000020E43B3E6E0.w8.b24", !1144, i64 0}
!1147 = !{!1148, !1148, i64 0}
!1148 = !{!"0000020E43B40020.w8.b0", !1149, i64 0}
!1149 = !{!"0000020E43B40020.w16.b0", !1150, i64 0}
!1150 = !{!"0000020E43B40020.w32.b0", !1151, i64 0}
!1151 = !{!"0000020E43B40020.w64.b0", !1152, i64 0}
!1152 = !{!"0000020E43B40020.w128.b0", !1153, i64 0}
!1153 = !{!"0000020E43B40020.w256.b0", !1154, i64 0}
!1154 = !{!"0000020E43B40020.w512.b0", !1155, i64 0}
!1155 = !{!"0000020E43B40020.w1024.b0", !1156, i64 0}
!1156 = !{!"0000020E43B40020", !21, i64 0}
!1157 = !{!1158, !1158, i64 0}
!1158 = !{!"0000020E43B40020.w8.b8", !1149, i64 0}
!1159 = !{!1160, !1160, i64 0}
!1160 = !{!"0000020E43B40020.w8.b16", !1161, i64 0}
!1161 = !{!"0000020E43B40020.w16.b16", !1150, i64 0}
!1162 = !{!1163, !1163, i64 0}
!1163 = !{!"0000020E43B40020.w8.b24", !1161, i64 0}
!1164 = !{!1165, !1165, i64 0}
!1165 = !{!"0000020E43B3F520.w8.b0", !1166, i64 0}
!1166 = !{!"0000020E43B3F520.w16.b0", !1167, i64 0}
!1167 = !{!"0000020E43B3F520.w32.b0", !1168, i64 0}
!1168 = !{!"0000020E43B3F520.w64.b0", !1169, i64 0}
!1169 = !{!"0000020E43B3F520.w128.b0", !1170, i64 0}
!1170 = !{!"0000020E43B3F520.w256.b0", !1171, i64 0}
!1171 = !{!"0000020E43B3F520.w512.b0", !1172, i64 0}
!1172 = !{!"0000020E43B3F520.w1024.b0", !1173, i64 0}
!1173 = !{!"0000020E43B3F520", !21, i64 0}
!1174 = !{!1175, !1175, i64 0}
!1175 = !{!"0000020E43B3F520.w8.b8", !1166, i64 0}
!1176 = !{!1177, !1177, i64 0}
!1177 = !{!"0000020E43B40920.w8.b0", !1178, i64 0}
!1178 = !{!"0000020E43B40920.w16.b0", !1179, i64 0}
!1179 = !{!"0000020E43B40920.w32.b0", !1180, i64 0}
!1180 = !{!"0000020E43B40920.w64.b0", !1181, i64 0}
!1181 = !{!"0000020E43B40920.w128.b0", !1182, i64 0}
!1182 = !{!"0000020E43B40920.w256.b0", !1183, i64 0}
!1183 = !{!"0000020E43B40920.w512.b0", !1184, i64 0}
!1184 = !{!"0000020E43B40920.w1024.b0", !1185, i64 0}
!1185 = !{!"0000020E43B40920", !21, i64 0}
!1186 = !{!1187, !1187, i64 0}
!1187 = !{!"0000020E43B40920.w8.b8", !1178, i64 0}
!1188 = !{!1189, !1189, i64 0}
!1189 = !{!"0000020E43B40920.w8.b16", !1190, i64 0}
!1190 = !{!"0000020E43B40920.w16.b16", !1179, i64 0}
!1191 = !{!1192, !1192, i64 0}
!1192 = !{!"0000020E43B40920.w8.b24", !1190, i64 0}
!1193 = !{!1194, !1194, i64 0}
!1194 = !{!"0000020E43B40D20.w8.b8", !1195, i64 0}
!1195 = !{!"0000020E43B40D20.w16.b0", !1196, i64 0}
!1196 = !{!"0000020E43B40D20.w32.b0", !1197, i64 0}
!1197 = !{!"0000020E43B40D20.w64.b0", !1198, i64 0}
!1198 = !{!"0000020E43B40D20.w128.b0", !1199, i64 0}
!1199 = !{!"0000020E43B40D20.w256.b0", !1200, i64 0}
!1200 = !{!"0000020E43B40D20.w512.b0", !1201, i64 0}
!1201 = !{!"0000020E43B40D20.w1024.b0", !1202, i64 0}
!1202 = !{!"0000020E43B40D20", !21, i64 0}
!1203 = !{!1204, !1204, i64 0}
!1204 = !{!"0000020E43B44820.w8.b0", !1205, i64 0}
!1205 = !{!"0000020E43B44820.w16.b0", !1206, i64 0}
!1206 = !{!"0000020E43B44820.w32.b0", !1207, i64 0}
!1207 = !{!"0000020E43B44820.w64.b0", !1208, i64 0}
!1208 = !{!"0000020E43B44820.w128.b0", !1209, i64 0}
!1209 = !{!"0000020E43B44820.w256.b0", !1210, i64 0}
!1210 = !{!"0000020E43B44820.w512.b0", !1211, i64 0}
!1211 = !{!"0000020E43B44820.w1024.b0", !1212, i64 0}
!1212 = !{!"0000020E43B44820", !21, i64 0}
!1213 = !{!1214, !1214, i64 0}
!1214 = !{!"0000020E43B44820.w8.b8", !1205, i64 0}
!1215 = !{!1216, !1216, i64 0}
!1216 = !{!"0000020E43B44820.w8.b16", !1217, i64 0}
!1217 = !{!"0000020E43B44820.w16.b16", !1206, i64 0}
!1218 = !{!1219, !1219, i64 0}
!1219 = !{!"0000020E43B44820.w8.b24", !1217, i64 0}
!1220 = !{!1221, !1221, i64 0}
!1221 = !{!"0000020E43B4A120.w8.b8", !1222, i64 0}
!1222 = !{!"0000020E43B4A120.w16.b0", !1223, i64 0}
!1223 = !{!"0000020E43B4A120.w32.b0", !1224, i64 0}
!1224 = !{!"0000020E43B4A120.w64.b0", !1225, i64 0}
!1225 = !{!"0000020E43B4A120.w128.b0", !1226, i64 0}
!1226 = !{!"0000020E43B4A120.w256.b0", !1227, i64 0}
!1227 = !{!"0000020E43B4A120.w512.b0", !1228, i64 0}
!1228 = !{!"0000020E43B4A120.w1024.b0", !1229, i64 0}
!1229 = !{!"0000020E43B4A120", !21, i64 0}
!1230 = !{!1231, !1231, i64 0}
!1231 = !{!"0000020E43B4A120.w8.b16", !1232, i64 0}
!1232 = !{!"0000020E43B4A120.w16.b16", !1223, i64 0}
!1233 = !{!1234, !1234, i64 0}
!1234 = !{!"0000020E43B4A120.w8.b24", !1232, i64 0}
!1235 = !{!1236, !1236, i64 0}
!1236 = !{!"0000020E4463A1F0.w4.b0", !1237, i64 0}
!1237 = !{!"0000020E4463A1F0.w8.b0", !1238, i64 0}
!1238 = !{!"0000020E4463A1F0.w16.b0", !1239, i64 0}
!1239 = !{!"0000020E4463A1F0.w32.b0", !1240, i64 0}
!1240 = !{!"0000020E4463A1F0.w64.b0", !1241, i64 0}
!1241 = !{!"0000020E4463A1F0.w128.b0", !1242, i64 0}
!1242 = !{!"0000020E4463A1F0.w256.b0", !1243, i64 0}
!1243 = !{!"0000020E4463A1F0.w512.b0", !1244, i64 0}
!1244 = !{!"0000020E4463A1F0.w1024.b0", !1245, i64 0}
!1245 = !{!"0000020E4463A1F0", !21, i64 0}
!1246 = !{!1247, !1247, i64 0}
!1247 = !{!"0000020E4463A1F0.w4.b4", !1237, i64 0}
!1248 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255}
!1250 = !DILocalVariable(name: "arg1", arg: 1, scope: !1248, file: !1, type: !8)
!1251 = !DILocalVariable(name: "arg2", arg: 2, scope: !1248, file: !1, type: !9)
!1252 = !DILocalVariable(name: "arg3", arg: 3, scope: !1248, file: !1, type: !7)
!1253 = !DILocalVariable(name: "arg4", arg: 4, scope: !1248, file: !1, type: !8)
!1254 = !DILocalVariable(name: "arg5", arg: 5, scope: !1248, file: !1, type: !9)
!1255 = !DILocalVariable(name: "arg6", arg: 6, scope: !1248, file: !1, type: !8)
!1256 = !DILocation(line: 0, scope: !1248)
!1257 = !{!1258, !1258, i64 0}
!1258 = !{!"0000020E304CA1B0.w4.b0", !1259, i64 0}
!1259 = !{!"0000020E304CA1B0.w8.b0", !1260, i64 0}
!1260 = !{!"0000020E304CA1B0.w16.b0", !1261, i64 0}
!1261 = !{!"0000020E304CA1B0.w32.b0", !1262, i64 0}
!1262 = !{!"0000020E304CA1B0.w64.b0", !1263, i64 0}
!1263 = !{!"0000020E304CA1B0.w128.b0", !1264, i64 0}
!1264 = !{!"0000020E304CA1B0.w256.b0", !1265, i64 0}
!1265 = !{!"0000020E304CA1B0.w512.b0", !1266, i64 0}
!1266 = !{!"0000020E304CA1B0.w1024.b0", !1267, i64 0}
!1267 = !{!"0000020E304CA1B0", !21, i64 0}
!1268 = !{!1269, !1269, i64 0}
!1269 = !{!"0000020E304CA1B0.w4.b4", !1259, i64 0}
!1270 = !{!1271, !1271, i64 0}
!1271 = !{!"0000020E304CA1B0.w4.b8", !1272, i64 0}
!1272 = !{!"0000020E304CA1B0.w8.b8", !1260, i64 0}
!1273 = !{!1274, !1274, i64 0}
!1274 = !{!"0000020E304CA1B0.w4.b12", !1272, i64 0}
!1275 = !{!1276, !1276, i64 0}
!1276 = !{!"0000020E304D02B0.w8.b0", !1277, i64 0}
!1277 = !{!"0000020E304D02B0.w16.b0", !1278, i64 0}
!1278 = !{!"0000020E304D02B0.w32.b0", !1279, i64 0}
!1279 = !{!"0000020E304D02B0.w64.b0", !1280, i64 0}
!1280 = !{!"0000020E304D02B0.w128.b0", !1281, i64 0}
!1281 = !{!"0000020E304D02B0.w256.b0", !1282, i64 0}
!1282 = !{!"0000020E304D02B0.w512.b0", !1283, i64 0}
!1283 = !{!"0000020E304D02B0.w1024.b0", !1284, i64 0}
!1284 = !{!"0000020E304D02B0", !21, i64 0}
!1285 = !{!1286, !1286, i64 0}
!1286 = !{!"0000020E304D02B0.w8.b8", !1277, i64 0}
!1287 = !{!1288, !1288, i64 0}
!1288 = !{!"0000020E304D02B0.w8.b16", !1289, i64 0}
!1289 = !{!"0000020E304D02B0.w16.b16", !1278, i64 0}
!1290 = !{!1291, !1291, i64 0}
!1291 = !{!"0000020E304D02B0.w8.b24", !1289, i64 0}
!1292 = !{!1293, !1293, i64 0}
!1293 = !{!"0000020E304D0170.w8.b8", !1294, i64 0}
!1294 = !{!"0000020E304D0170.w16.b0", !1295, i64 0}
!1295 = !{!"0000020E304D0170.w32.b0", !1296, i64 0}
!1296 = !{!"0000020E304D0170.w64.b0", !1297, i64 0}
!1297 = !{!"0000020E304D0170.w128.b0", !1298, i64 0}
!1298 = !{!"0000020E304D0170.w256.b0", !1299, i64 0}
!1299 = !{!"0000020E304D0170.w512.b0", !1300, i64 0}
!1300 = !{!"0000020E304D0170.w1024.b0", !1301, i64 0}
!1301 = !{!"0000020E304D0170", !21, i64 0}
!1302 = !{!1303, !1303, i64 0}
!1303 = !{!"0000020E304D0170.w8.b16", !1304, i64 0}
!1304 = !{!"0000020E304D0170.w16.b16", !1295, i64 0}
!1305 = !{!1306, !1306, i64 0}
!1306 = !{!"0000020E304D0170.w8.b24", !1304, i64 0}
!1307 = !{!1308, !1308, i64 0}
!1308 = !{!"0000020E304D1830.w8.b0", !1309, i64 0}
!1309 = !{!"0000020E304D1830.w16.b0", !1310, i64 0}
!1310 = !{!"0000020E304D1830.w32.b0", !1311, i64 0}
!1311 = !{!"0000020E304D1830.w64.b0", !1312, i64 0}
!1312 = !{!"0000020E304D1830.w128.b0", !1313, i64 0}
!1313 = !{!"0000020E304D1830.w256.b0", !1314, i64 0}
!1314 = !{!"0000020E304D1830.w512.b0", !1315, i64 0}
!1315 = !{!"0000020E304D1830.w1024.b0", !1316, i64 0}
!1316 = !{!"0000020E304D1830", !21, i64 0}
!1317 = !{!1318, !1318, i64 0}
!1318 = !{!"0000020E304D1830.w8.b8", !1309, i64 0}
!1319 = !{!1320, !1320, i64 0}
!1320 = !{!"0000020E304D1830.w8.b16", !1321, i64 0}
!1321 = !{!"0000020E304D1830.w16.b16", !1310, i64 0}
!1322 = !{!1323, !1323, i64 0}
!1323 = !{!"0000020E304D1830.w8.b24", !1321, i64 0}
!1324 = !{!1325, !1325, i64 0}
!1325 = !{!"0000020E304D1370.w8.b0", !1326, i64 0}
!1326 = !{!"0000020E304D1370.w16.b0", !1327, i64 0}
!1327 = !{!"0000020E304D1370.w32.b0", !1328, i64 0}
!1328 = !{!"0000020E304D1370.w64.b0", !1329, i64 0}
!1329 = !{!"0000020E304D1370.w128.b0", !1330, i64 0}
!1330 = !{!"0000020E304D1370.w256.b0", !1331, i64 0}
!1331 = !{!"0000020E304D1370.w512.b0", !1332, i64 0}
!1332 = !{!"0000020E304D1370.w1024.b0", !1333, i64 0}
!1333 = !{!"0000020E304D1370", !21, i64 0}
!1334 = !{!1335, !1335, i64 0}
!1335 = !{!"0000020E304D1370.w8.b8", !1326, i64 0}
!1336 = !{!1337, !1337, i64 0}
!1337 = !{!"0000020E304D2B70.w8.b0", !1338, i64 0}
!1338 = !{!"0000020E304D2B70.w16.b0", !1339, i64 0}
!1339 = !{!"0000020E304D2B70.w32.b0", !1340, i64 0}
!1340 = !{!"0000020E304D2B70.w64.b0", !1341, i64 0}
!1341 = !{!"0000020E304D2B70.w128.b0", !1342, i64 0}
!1342 = !{!"0000020E304D2B70.w256.b0", !1343, i64 0}
!1343 = !{!"0000020E304D2B70.w512.b0", !1344, i64 0}
!1344 = !{!"0000020E304D2B70.w1024.b0", !1345, i64 0}
!1345 = !{!"0000020E304D2B70", !21, i64 0}
!1346 = !{!1347, !1347, i64 0}
!1347 = !{!"0000020E304D2B70.w8.b8", !1338, i64 0}
!1348 = !{!1349, !1349, i64 0}
!1349 = !{!"0000020E304D2B70.w8.b16", !1350, i64 0}
!1350 = !{!"0000020E304D2B70.w16.b16", !1339, i64 0}
!1351 = !{!1352, !1352, i64 0}
!1352 = !{!"0000020E304D2B70.w8.b24", !1350, i64 0}
!1353 = !{!1354, !1354, i64 0}
!1354 = !{!"0000020E304D2F70.w8.b8", !1355, i64 0}
!1355 = !{!"0000020E304D2F70.w16.b0", !1356, i64 0}
!1356 = !{!"0000020E304D2F70.w32.b0", !1357, i64 0}
!1357 = !{!"0000020E304D2F70.w64.b0", !1358, i64 0}
!1358 = !{!"0000020E304D2F70.w128.b0", !1359, i64 0}
!1359 = !{!"0000020E304D2F70.w256.b0", !1360, i64 0}
!1360 = !{!"0000020E304D2F70.w512.b0", !1361, i64 0}
!1361 = !{!"0000020E304D2F70.w1024.b0", !1362, i64 0}
!1362 = !{!"0000020E304D2F70", !21, i64 0}
!1363 = !{!1364, !1364, i64 0}
!1364 = !{!"0000020E304D3730.w8.b0", !1365, i64 0}
!1365 = !{!"0000020E304D3730.w16.b0", !1366, i64 0}
!1366 = !{!"0000020E304D3730.w32.b0", !1367, i64 0}
!1367 = !{!"0000020E304D3730.w64.b0", !1368, i64 0}
!1368 = !{!"0000020E304D3730.w128.b0", !1369, i64 0}
!1369 = !{!"0000020E304D3730.w256.b0", !1370, i64 0}
!1370 = !{!"0000020E304D3730.w512.b0", !1371, i64 0}
!1371 = !{!"0000020E304D3730.w1024.b0", !1372, i64 0}
!1372 = !{!"0000020E304D3730", !21, i64 0}
!1373 = !{!1374, !1374, i64 0}
!1374 = !{!"0000020E304D3730.w8.b8", !1365, i64 0}
!1375 = !{!1376, !1376, i64 0}
!1376 = !{!"0000020E304D3730.w8.b16", !1377, i64 0}
!1377 = !{!"0000020E304D3730.w16.b16", !1366, i64 0}
!1378 = !{!1379, !1379, i64 0}
!1379 = !{!"0000020E304D3730.w8.b24", !1377, i64 0}
!1380 = !{!1381, !1381, i64 0}
!1381 = !{!"0000020E304D3F30.w8.b8", !1382, i64 0}
!1382 = !{!"0000020E304D3F30.w16.b0", !1383, i64 0}
!1383 = !{!"0000020E304D3F30.w32.b0", !1384, i64 0}
!1384 = !{!"0000020E304D3F30.w64.b0", !1385, i64 0}
!1385 = !{!"0000020E304D3F30.w128.b0", !1386, i64 0}
!1386 = !{!"0000020E304D3F30.w256.b0", !1387, i64 0}
!1387 = !{!"0000020E304D3F30.w512.b0", !1388, i64 0}
!1388 = !{!"0000020E304D3F30.w1024.b0", !1389, i64 0}
!1389 = !{!"0000020E304D3F30", !21, i64 0}
!1390 = !{!1391, !1391, i64 0}
!1391 = !{!"0000020E304D3F30.w8.b16", !1392, i64 0}
!1392 = !{!"0000020E304D3F30.w16.b16", !1383, i64 0}
!1393 = !{!1394, !1394, i64 0}
!1394 = !{!"0000020E304D3F30.w8.b24", !1392, i64 0}
!1395 = !{!1396, !1396, i64 0}
!1396 = !{!"0000020E43B44E20.w4.b0", !1397, i64 0}
!1397 = !{!"0000020E43B44E20.w8.b0", !1398, i64 0}
!1398 = !{!"0000020E43B44E20.w16.b0", !1399, i64 0}
!1399 = !{!"0000020E43B44E20.w32.b0", !1400, i64 0}
!1400 = !{!"0000020E43B44E20.w64.b0", !1401, i64 0}
!1401 = !{!"0000020E43B44E20.w128.b0", !1402, i64 0}
!1402 = !{!"0000020E43B44E20.w256.b0", !1403, i64 0}
!1403 = !{!"0000020E43B44E20.w512.b0", !1404, i64 0}
!1404 = !{!"0000020E43B44E20.w1024.b0", !1405, i64 0}
!1405 = !{!"0000020E43B44E20", !21, i64 0}
!1406 = !{!1407, !1407, i64 0}
!1407 = !{!"0000020E43B44E20.w4.b4", !1397, i64 0}
!1408 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1415}
!1410 = !DILocalVariable(name: "arg1", arg: 1, scope: !1408, file: !1, type: !8)
!1411 = !DILocalVariable(name: "arg2", arg: 2, scope: !1408, file: !1, type: !9)
!1412 = !DILocalVariable(name: "arg3", arg: 3, scope: !1408, file: !1, type: !7)
!1413 = !DILocalVariable(name: "arg4", arg: 4, scope: !1408, file: !1, type: !8)
!1414 = !DILocalVariable(name: "arg5", arg: 5, scope: !1408, file: !1, type: !9)
!1415 = !DILocalVariable(name: "arg6", arg: 6, scope: !1408, file: !1, type: !8)
!1416 = !DILocation(line: 0, scope: !1408)
!1417 = !{!1418, !1418, i64 0}
!1418 = !{!"0000020E304AA260.w4.b0", !1419, i64 0}
!1419 = !{!"0000020E304AA260.w8.b0", !1420, i64 0}
!1420 = !{!"0000020E304AA260.w16.b0", !1421, i64 0}
!1421 = !{!"0000020E304AA260.w32.b0", !1422, i64 0}
!1422 = !{!"0000020E304AA260.w64.b0", !1423, i64 0}
!1423 = !{!"0000020E304AA260.w128.b0", !1424, i64 0}
!1424 = !{!"0000020E304AA260.w256.b0", !1425, i64 0}
!1425 = !{!"0000020E304AA260.w512.b0", !1426, i64 0}
!1426 = !{!"0000020E304AA260.w1024.b0", !1427, i64 0}
!1427 = !{!"0000020E304AA260", !21, i64 0}
!1428 = !{!1429, !1429, i64 0}
!1429 = !{!"0000020E304AA260.w4.b4", !1419, i64 0}
!1430 = !{!1431, !1431, i64 0}
!1431 = !{!"0000020E304AA260.w4.b8", !1432, i64 0}
!1432 = !{!"0000020E304AA260.w8.b8", !1420, i64 0}
!1433 = !{!1434, !1434, i64 0}
!1434 = !{!"0000020E304AA260.w4.b12", !1432, i64 0}
!1435 = !{!1436, !1436, i64 0}
!1436 = !{!"0000020E304AA260.w4.b16", !1437, i64 0}
!1437 = !{!"0000020E304AA260.w8.b16", !1438, i64 0}
!1438 = !{!"0000020E304AA260.w16.b16", !1421, i64 0}
!1439 = !{!1440, !1440, i64 0}
!1440 = !{!"0000020E304ACAE0.w8.b0", !1441, i64 0}
!1441 = !{!"0000020E304ACAE0.w16.b0", !1442, i64 0}
!1442 = !{!"0000020E304ACAE0.w32.b0", !1443, i64 0}
!1443 = !{!"0000020E304ACAE0.w64.b0", !1444, i64 0}
!1444 = !{!"0000020E304ACAE0.w128.b0", !1445, i64 0}
!1445 = !{!"0000020E304ACAE0.w256.b0", !1446, i64 0}
!1446 = !{!"0000020E304ACAE0.w512.b0", !1447, i64 0}
!1447 = !{!"0000020E304ACAE0.w1024.b0", !1448, i64 0}
!1448 = !{!"0000020E304ACAE0", !21, i64 0}
!1449 = !{!1450, !1450, i64 0}
!1450 = !{!"0000020E304ACAE0.w8.b8", !1441, i64 0}
!1451 = !{!1452, !1452, i64 0}
!1452 = !{!"0000020E304ACAE0.w8.b16", !1453, i64 0}
!1453 = !{!"0000020E304ACAE0.w16.b16", !1442, i64 0}
!1454 = !{!1455, !1455, i64 0}
!1455 = !{!"0000020E304ACAE0.w8.b24", !1453, i64 0}
!1456 = !{!1457, !1457, i64 0}
!1457 = !{!"0000020E304ACF60.w8.b8", !1458, i64 0}
!1458 = !{!"0000020E304ACF60.w16.b0", !1459, i64 0}
!1459 = !{!"0000020E304ACF60.w32.b0", !1460, i64 0}
!1460 = !{!"0000020E304ACF60.w64.b0", !1461, i64 0}
!1461 = !{!"0000020E304ACF60.w128.b0", !1462, i64 0}
!1462 = !{!"0000020E304ACF60.w256.b0", !1463, i64 0}
!1463 = !{!"0000020E304ACF60.w512.b0", !1464, i64 0}
!1464 = !{!"0000020E304ACF60.w1024.b0", !1465, i64 0}
!1465 = !{!"0000020E304ACF60", !21, i64 0}
!1466 = !{!1467, !1467, i64 0}
!1467 = !{!"0000020E304ACF60.w8.b16", !1468, i64 0}
!1468 = !{!"0000020E304ACF60.w16.b16", !1459, i64 0}
!1469 = !{!1470, !1470, i64 0}
!1470 = !{!"0000020E304ACF60.w8.b24", !1468, i64 0}
!1471 = !{!1472, !1472, i64 0}
!1472 = !{!"0000020E304AD720.w8.b0", !1473, i64 0}
!1473 = !{!"0000020E304AD720.w16.b0", !1474, i64 0}
!1474 = !{!"0000020E304AD720.w32.b0", !1475, i64 0}
!1475 = !{!"0000020E304AD720.w64.b0", !1476, i64 0}
!1476 = !{!"0000020E304AD720.w128.b0", !1477, i64 0}
!1477 = !{!"0000020E304AD720.w256.b0", !1478, i64 0}
!1478 = !{!"0000020E304AD720.w512.b0", !1479, i64 0}
!1479 = !{!"0000020E304AD720.w1024.b0", !1480, i64 0}
!1480 = !{!"0000020E304AD720", !21, i64 0}
!1481 = !{!1482, !1482, i64 0}
!1482 = !{!"0000020E304AD720.w8.b8", !1473, i64 0}
!1483 = !{!1484, !1484, i64 0}
!1484 = !{!"0000020E304AD720.w8.b16", !1485, i64 0}
!1485 = !{!"0000020E304AD720.w16.b16", !1474, i64 0}
!1486 = !{!1487, !1487, i64 0}
!1487 = !{!"0000020E304AD720.w8.b24", !1485, i64 0}
!1488 = !{!1489, !1489, i64 0}
!1489 = !{!"0000020E304ADBA0.w8.b0", !1490, i64 0}
!1490 = !{!"0000020E304ADBA0.w16.b0", !1491, i64 0}
!1491 = !{!"0000020E304ADBA0.w32.b0", !1492, i64 0}
!1492 = !{!"0000020E304ADBA0.w64.b0", !1493, i64 0}
!1493 = !{!"0000020E304ADBA0.w128.b0", !1494, i64 0}
!1494 = !{!"0000020E304ADBA0.w256.b0", !1495, i64 0}
!1495 = !{!"0000020E304ADBA0.w512.b0", !1496, i64 0}
!1496 = !{!"0000020E304ADBA0.w1024.b0", !1497, i64 0}
!1497 = !{!"0000020E304ADBA0", !21, i64 0}
!1498 = !{!1499, !1499, i64 0}
!1499 = !{!"0000020E304ADBA0.w8.b8", !1490, i64 0}
!1500 = !{!1501, !1501, i64 0}
!1501 = !{!"0000020E304AEEE0.w8.b0", !1502, i64 0}
!1502 = !{!"0000020E304AEEE0.w16.b0", !1503, i64 0}
!1503 = !{!"0000020E304AEEE0.w32.b0", !1504, i64 0}
!1504 = !{!"0000020E304AEEE0.w64.b0", !1505, i64 0}
!1505 = !{!"0000020E304AEEE0.w128.b0", !1506, i64 0}
!1506 = !{!"0000020E304AEEE0.w256.b0", !1507, i64 0}
!1507 = !{!"0000020E304AEEE0.w512.b0", !1508, i64 0}
!1508 = !{!"0000020E304AEEE0.w1024.b0", !1509, i64 0}
!1509 = !{!"0000020E304AEEE0", !21, i64 0}
!1510 = !{!1511, !1511, i64 0}
!1511 = !{!"0000020E304AEEE0.w8.b8", !1502, i64 0}
!1512 = !{!1513, !1513, i64 0}
!1513 = !{!"0000020E304AEEE0.w8.b16", !1514, i64 0}
!1514 = !{!"0000020E304AEEE0.w16.b16", !1503, i64 0}
!1515 = !{!1516, !1516, i64 0}
!1516 = !{!"0000020E304AEEE0.w8.b24", !1514, i64 0}
!1517 = !{!1518, !1518, i64 0}
!1518 = !{!"0000020E304AEC20.w8.b8", !1519, i64 0}
!1519 = !{!"0000020E304AEC20.w16.b0", !1520, i64 0}
!1520 = !{!"0000020E304AEC20.w32.b0", !1521, i64 0}
!1521 = !{!"0000020E304AEC20.w64.b0", !1522, i64 0}
!1522 = !{!"0000020E304AEC20.w128.b0", !1523, i64 0}
!1523 = !{!"0000020E304AEC20.w256.b0", !1524, i64 0}
!1524 = !{!"0000020E304AEC20.w512.b0", !1525, i64 0}
!1525 = !{!"0000020E304AEC20.w1024.b0", !1526, i64 0}
!1526 = !{!"0000020E304AEC20", !21, i64 0}
!1527 = !{!1528, !1528, i64 0}
!1528 = !{!"0000020E304AF660.w8.b0", !1529, i64 0}
!1529 = !{!"0000020E304AF660.w16.b0", !1530, i64 0}
!1530 = !{!"0000020E304AF660.w32.b0", !1531, i64 0}
!1531 = !{!"0000020E304AF660.w64.b0", !1532, i64 0}
!1532 = !{!"0000020E304AF660.w128.b0", !1533, i64 0}
!1533 = !{!"0000020E304AF660.w256.b0", !1534, i64 0}
!1534 = !{!"0000020E304AF660.w512.b0", !1535, i64 0}
!1535 = !{!"0000020E304AF660.w1024.b0", !1536, i64 0}
!1536 = !{!"0000020E304AF660", !21, i64 0}
!1537 = !{!1538, !1538, i64 0}
!1538 = !{!"0000020E304AF660.w8.b8", !1529, i64 0}
!1539 = !{!1540, !1540, i64 0}
!1540 = !{!"0000020E304AF660.w8.b16", !1541, i64 0}
!1541 = !{!"0000020E304AF660.w16.b16", !1530, i64 0}
!1542 = !{!1543, !1543, i64 0}
!1543 = !{!"0000020E304AF660.w8.b24", !1541, i64 0}
!1544 = !{!1545, !1545, i64 0}
!1545 = !{!"0000020E304AF9E0.w8.b8", !1546, i64 0}
!1546 = !{!"0000020E304AF9E0.w16.b0", !1547, i64 0}
!1547 = !{!"0000020E304AF9E0.w32.b0", !1548, i64 0}
!1548 = !{!"0000020E304AF9E0.w64.b0", !1549, i64 0}
!1549 = !{!"0000020E304AF9E0.w128.b0", !1550, i64 0}
!1550 = !{!"0000020E304AF9E0.w256.b0", !1551, i64 0}
!1551 = !{!"0000020E304AF9E0.w512.b0", !1552, i64 0}
!1552 = !{!"0000020E304AF9E0.w1024.b0", !1553, i64 0}
!1553 = !{!"0000020E304AF9E0", !21, i64 0}
!1554 = !{!1555, !1555, i64 0}
!1555 = !{!"0000020E304AF9E0.w8.b16", !1556, i64 0}
!1556 = !{!"0000020E304AF9E0.w16.b16", !1547, i64 0}
!1557 = !{!1558, !1558, i64 0}
!1558 = !{!"0000020E304AF9E0.w8.b24", !1556, i64 0}
!1559 = !{!1560, !1560, i64 0}
!1560 = !{!"0000020E304AFD20.w8.b0", !1561, i64 0}
!1561 = !{!"0000020E304AFD20.w16.b0", !1562, i64 0}
!1562 = !{!"0000020E304AFD20.w32.b0", !1563, i64 0}
!1563 = !{!"0000020E304AFD20.w64.b0", !1564, i64 0}
!1564 = !{!"0000020E304AFD20.w128.b0", !1565, i64 0}
!1565 = !{!"0000020E304AFD20.w256.b0", !1566, i64 0}
!1566 = !{!"0000020E304AFD20.w512.b0", !1567, i64 0}
!1567 = !{!"0000020E304AFD20.w1024.b0", !1568, i64 0}
!1568 = !{!"0000020E304AFD20", !21, i64 0}
!1569 = !{!1570, !1570, i64 0}
!1570 = !{!"0000020E304AFD20.w8.b8", !1561, i64 0}
!1571 = !{!1572, !1572, i64 0}
!1572 = !{!"0000020E304AFD20.w8.b16", !1573, i64 0}
!1573 = !{!"0000020E304AFD20.w16.b16", !1562, i64 0}
!1574 = !{!1575, !1575, i64 0}
!1575 = !{!"0000020E304AFD20.w8.b24", !1573, i64 0}
!1576 = !{!1577, !1577, i64 0}
!1577 = !{!"0000020E304B01A0.w8.b8", !1578, i64 0}
!1578 = !{!"0000020E304B01A0.w16.b0", !1579, i64 0}
!1579 = !{!"0000020E304B01A0.w32.b0", !1580, i64 0}
!1580 = !{!"0000020E304B01A0.w64.b0", !1581, i64 0}
!1581 = !{!"0000020E304B01A0.w128.b0", !1582, i64 0}
!1582 = !{!"0000020E304B01A0.w256.b0", !1583, i64 0}
!1583 = !{!"0000020E304B01A0.w512.b0", !1584, i64 0}
!1584 = !{!"0000020E304B01A0.w1024.b0", !1585, i64 0}
!1585 = !{!"0000020E304B01A0", !21, i64 0}
!1586 = !{!1587, !1587, i64 0}
!1587 = !{!"0000020E304B01A0.w8.b16", !1588, i64 0}
!1588 = !{!"0000020E304B01A0.w16.b16", !1579, i64 0}
!1589 = !{!1590, !1590, i64 0}
!1590 = !{!"0000020E304B01A0.w8.b24", !1588, i64 0}
!1591 = !{!1592, !1592, i64 0}
!1592 = !{!"0000020E47FD13B0.w4.b0", !1593, i64 0}
!1593 = !{!"0000020E47FD13B0.w8.b0", !1594, i64 0}
!1594 = !{!"0000020E47FD13B0.w16.b0", !1595, i64 0}
!1595 = !{!"0000020E47FD13B0.w32.b0", !1596, i64 0}
!1596 = !{!"0000020E47FD13B0.w64.b0", !1597, i64 0}
!1597 = !{!"0000020E47FD13B0.w128.b0", !1598, i64 0}
!1598 = !{!"0000020E47FD13B0.w256.b0", !1599, i64 0}
!1599 = !{!"0000020E47FD13B0.w512.b0", !1600, i64 0}
!1600 = !{!"0000020E47FD13B0.w1024.b0", !1601, i64 0}
!1601 = !{!"0000020E47FD13B0", !21, i64 0}
!1602 = !{!1603, !1603, i64 0}
!1603 = !{!"0000020E47FD13B0.w4.b4", !1593, i64 0}
!1604 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611}
!1606 = !DILocalVariable(name: "arg1", arg: 1, scope: !1604, file: !1, type: !8)
!1607 = !DILocalVariable(name: "arg2", arg: 2, scope: !1604, file: !1, type: !9)
!1608 = !DILocalVariable(name: "arg3", arg: 3, scope: !1604, file: !1, type: !7)
!1609 = !DILocalVariable(name: "arg4", arg: 4, scope: !1604, file: !1, type: !8)
!1610 = !DILocalVariable(name: "arg5", arg: 5, scope: !1604, file: !1, type: !9)
!1611 = !DILocalVariable(name: "arg6", arg: 6, scope: !1604, file: !1, type: !8)
!1612 = !DILocation(line: 0, scope: !1604)
!1613 = !{!1614, !1614, i64 0}
!1614 = !{!"0000020E304AAFE0.w4.b0", !1615, i64 0}
!1615 = !{!"0000020E304AAFE0.w8.b0", !1616, i64 0}
!1616 = !{!"0000020E304AAFE0.w16.b0", !1617, i64 0}
!1617 = !{!"0000020E304AAFE0.w32.b0", !1618, i64 0}
!1618 = !{!"0000020E304AAFE0.w64.b0", !1619, i64 0}
!1619 = !{!"0000020E304AAFE0.w128.b0", !1620, i64 0}
!1620 = !{!"0000020E304AAFE0.w256.b0", !1621, i64 0}
!1621 = !{!"0000020E304AAFE0.w512.b0", !1622, i64 0}
!1622 = !{!"0000020E304AAFE0.w1024.b0", !1623, i64 0}
!1623 = !{!"0000020E304AAFE0", !21, i64 0}
!1624 = !{!1625, !1625, i64 0}
!1625 = !{!"0000020E304AAFE0.w4.b4", !1615, i64 0}
!1626 = !{!1627, !1627, i64 0}
!1627 = !{!"0000020E304AAFE0.w4.b8", !1628, i64 0}
!1628 = !{!"0000020E304AAFE0.w8.b8", !1616, i64 0}
!1629 = !{!1630, !1630, i64 0}
!1630 = !{!"0000020E304AAFE0.w4.b12", !1628, i64 0}
!1631 = !{!1632, !1632, i64 0}
!1632 = !{!"0000020E304AAFE0.w4.b16", !1633, i64 0}
!1633 = !{!"0000020E304AAFE0.w8.b16", !1634, i64 0}
!1634 = !{!"0000020E304AAFE0.w16.b16", !1617, i64 0}
!1635 = !{!1636, !1636, i64 0}
!1636 = !{!"0000020E304AFFE0.w8.b0", !1637, i64 0}
!1637 = !{!"0000020E304AFFE0.w16.b0", !1638, i64 0}
!1638 = !{!"0000020E304AFFE0.w32.b0", !1639, i64 0}
!1639 = !{!"0000020E304AFFE0.w64.b0", !1640, i64 0}
!1640 = !{!"0000020E304AFFE0.w128.b0", !1641, i64 0}
!1641 = !{!"0000020E304AFFE0.w256.b0", !1642, i64 0}
!1642 = !{!"0000020E304AFFE0.w512.b0", !1643, i64 0}
!1643 = !{!"0000020E304AFFE0.w1024.b0", !1644, i64 0}
!1644 = !{!"0000020E304AFFE0", !21, i64 0}
!1645 = !{!1646, !1646, i64 0}
!1646 = !{!"0000020E304AFFE0.w8.b8", !1637, i64 0}
!1647 = !{!1648, !1648, i64 0}
!1648 = !{!"0000020E304AFFE0.w8.b16", !1649, i64 0}
!1649 = !{!"0000020E304AFFE0.w16.b16", !1638, i64 0}
!1650 = !{!1651, !1651, i64 0}
!1651 = !{!"0000020E304AFFE0.w8.b24", !1649, i64 0}
!1652 = !{!1653, !1653, i64 0}
!1653 = !{!"0000020E304B0660.w8.b8", !1654, i64 0}
!1654 = !{!"0000020E304B0660.w16.b0", !1655, i64 0}
!1655 = !{!"0000020E304B0660.w32.b0", !1656, i64 0}
!1656 = !{!"0000020E304B0660.w64.b0", !1657, i64 0}
!1657 = !{!"0000020E304B0660.w128.b0", !1658, i64 0}
!1658 = !{!"0000020E304B0660.w256.b0", !1659, i64 0}
!1659 = !{!"0000020E304B0660.w512.b0", !1660, i64 0}
!1660 = !{!"0000020E304B0660.w1024.b0", !1661, i64 0}
!1661 = !{!"0000020E304B0660", !21, i64 0}
!1662 = !{!1663, !1663, i64 0}
!1663 = !{!"0000020E304B0660.w8.b16", !1664, i64 0}
!1664 = !{!"0000020E304B0660.w16.b16", !1655, i64 0}
!1665 = !{!1666, !1666, i64 0}
!1666 = !{!"0000020E304B0660.w8.b24", !1664, i64 0}
!1667 = !{!1668, !1668, i64 0}
!1668 = !{!"0000020E304B2C60.w8.b0", !1669, i64 0}
!1669 = !{!"0000020E304B2C60.w16.b0", !1670, i64 0}
!1670 = !{!"0000020E304B2C60.w32.b0", !1671, i64 0}
!1671 = !{!"0000020E304B2C60.w64.b0", !1672, i64 0}
!1672 = !{!"0000020E304B2C60.w128.b0", !1673, i64 0}
!1673 = !{!"0000020E304B2C60.w256.b0", !1674, i64 0}
!1674 = !{!"0000020E304B2C60.w512.b0", !1675, i64 0}
!1675 = !{!"0000020E304B2C60.w1024.b0", !1676, i64 0}
!1676 = !{!"0000020E304B2C60", !21, i64 0}
!1677 = !{!1678, !1678, i64 0}
!1678 = !{!"0000020E304B2C60.w8.b8", !1669, i64 0}
!1679 = !{!1680, !1680, i64 0}
!1680 = !{!"0000020E304B2C60.w8.b16", !1681, i64 0}
!1681 = !{!"0000020E304B2C60.w16.b16", !1670, i64 0}
!1682 = !{!1683, !1683, i64 0}
!1683 = !{!"0000020E304B2C60.w8.b24", !1681, i64 0}
!1684 = !{!1685, !1685, i64 0}
!1685 = !{!"0000020E304B2320.w8.b0", !1686, i64 0}
!1686 = !{!"0000020E304B2320.w16.b0", !1687, i64 0}
!1687 = !{!"0000020E304B2320.w32.b0", !1688, i64 0}
!1688 = !{!"0000020E304B2320.w64.b0", !1689, i64 0}
!1689 = !{!"0000020E304B2320.w128.b0", !1690, i64 0}
!1690 = !{!"0000020E304B2320.w256.b0", !1691, i64 0}
!1691 = !{!"0000020E304B2320.w512.b0", !1692, i64 0}
!1692 = !{!"0000020E304B2320.w1024.b0", !1693, i64 0}
!1693 = !{!"0000020E304B2320", !21, i64 0}
!1694 = !{!1695, !1695, i64 0}
!1695 = !{!"0000020E304B2320.w8.b8", !1686, i64 0}
!1696 = !{!1697, !1697, i64 0}
!1697 = !{!"0000020E304B3420.w8.b0", !1698, i64 0}
!1698 = !{!"0000020E304B3420.w16.b0", !1699, i64 0}
!1699 = !{!"0000020E304B3420.w32.b0", !1700, i64 0}
!1700 = !{!"0000020E304B3420.w64.b0", !1701, i64 0}
!1701 = !{!"0000020E304B3420.w128.b0", !1702, i64 0}
!1702 = !{!"0000020E304B3420.w256.b0", !1703, i64 0}
!1703 = !{!"0000020E304B3420.w512.b0", !1704, i64 0}
!1704 = !{!"0000020E304B3420.w1024.b0", !1705, i64 0}
!1705 = !{!"0000020E304B3420", !21, i64 0}
!1706 = !{!1707, !1707, i64 0}
!1707 = !{!"0000020E304B3420.w8.b8", !1698, i64 0}
!1708 = !{!1709, !1709, i64 0}
!1709 = !{!"0000020E304B3420.w8.b16", !1710, i64 0}
!1710 = !{!"0000020E304B3420.w16.b16", !1699, i64 0}
!1711 = !{!1712, !1712, i64 0}
!1712 = !{!"0000020E304B3420.w8.b24", !1710, i64 0}
!1713 = !{!1714, !1714, i64 0}
!1714 = !{!"0000020E304B3320.w8.b8", !1715, i64 0}
!1715 = !{!"0000020E304B3320.w16.b0", !1716, i64 0}
!1716 = !{!"0000020E304B3320.w32.b0", !1717, i64 0}
!1717 = !{!"0000020E304B3320.w64.b0", !1718, i64 0}
!1718 = !{!"0000020E304B3320.w128.b0", !1719, i64 0}
!1719 = !{!"0000020E304B3320.w256.b0", !1720, i64 0}
!1720 = !{!"0000020E304B3320.w512.b0", !1721, i64 0}
!1721 = !{!"0000020E304B3320.w1024.b0", !1722, i64 0}
!1722 = !{!"0000020E304B3320", !21, i64 0}
!1723 = !{!1724, !1724, i64 0}
!1724 = !{!"0000020E304B46A0.w8.b0", !1725, i64 0}
!1725 = !{!"0000020E304B46A0.w16.b0", !1726, i64 0}
!1726 = !{!"0000020E304B46A0.w32.b0", !1727, i64 0}
!1727 = !{!"0000020E304B46A0.w64.b0", !1728, i64 0}
!1728 = !{!"0000020E304B46A0.w128.b0", !1729, i64 0}
!1729 = !{!"0000020E304B46A0.w256.b0", !1730, i64 0}
!1730 = !{!"0000020E304B46A0.w512.b0", !1731, i64 0}
!1731 = !{!"0000020E304B46A0.w1024.b0", !1732, i64 0}
!1732 = !{!"0000020E304B46A0", !21, i64 0}
!1733 = !{!1734, !1734, i64 0}
!1734 = !{!"0000020E304B46A0.w8.b8", !1725, i64 0}
!1735 = !{!1736, !1736, i64 0}
!1736 = !{!"0000020E304B46A0.w8.b16", !1737, i64 0}
!1737 = !{!"0000020E304B46A0.w16.b16", !1726, i64 0}
!1738 = !{!1739, !1739, i64 0}
!1739 = !{!"0000020E304B46A0.w8.b24", !1737, i64 0}
!1740 = !{!1741, !1741, i64 0}
!1741 = !{!"0000020E304B4FE0.w8.b8", !1742, i64 0}
!1742 = !{!"0000020E304B4FE0.w16.b0", !1743, i64 0}
!1743 = !{!"0000020E304B4FE0.w32.b0", !1744, i64 0}
!1744 = !{!"0000020E304B4FE0.w64.b0", !1745, i64 0}
!1745 = !{!"0000020E304B4FE0.w128.b0", !1746, i64 0}
!1746 = !{!"0000020E304B4FE0.w256.b0", !1747, i64 0}
!1747 = !{!"0000020E304B4FE0.w512.b0", !1748, i64 0}
!1748 = !{!"0000020E304B4FE0.w1024.b0", !1749, i64 0}
!1749 = !{!"0000020E304B4FE0", !21, i64 0}
!1750 = !{!1751, !1751, i64 0}
!1751 = !{!"0000020E304B4FE0.w8.b16", !1752, i64 0}
!1752 = !{!"0000020E304B4FE0.w16.b16", !1743, i64 0}
!1753 = !{!1754, !1754, i64 0}
!1754 = !{!"0000020E304B4FE0.w8.b24", !1752, i64 0}
!1755 = !{!1756, !1756, i64 0}
!1756 = !{!"0000020E304B5AE0.w8.b0", !1757, i64 0}
!1757 = !{!"0000020E304B5AE0.w16.b0", !1758, i64 0}
!1758 = !{!"0000020E304B5AE0.w32.b0", !1759, i64 0}
!1759 = !{!"0000020E304B5AE0.w64.b0", !1760, i64 0}
!1760 = !{!"0000020E304B5AE0.w128.b0", !1761, i64 0}
!1761 = !{!"0000020E304B5AE0.w256.b0", !1762, i64 0}
!1762 = !{!"0000020E304B5AE0.w512.b0", !1763, i64 0}
!1763 = !{!"0000020E304B5AE0.w1024.b0", !1764, i64 0}
!1764 = !{!"0000020E304B5AE0", !21, i64 0}
!1765 = !{!1766, !1766, i64 0}
!1766 = !{!"0000020E304B5AE0.w8.b8", !1757, i64 0}
!1767 = !{!1768, !1768, i64 0}
!1768 = !{!"0000020E304B5AE0.w8.b16", !1769, i64 0}
!1769 = !{!"0000020E304B5AE0.w16.b16", !1758, i64 0}
!1770 = !{!1771, !1771, i64 0}
!1771 = !{!"0000020E304B5AE0.w8.b24", !1769, i64 0}
!1772 = !{!1773, !1773, i64 0}
!1773 = !{!"0000020E304B58E0.w8.b8", !1774, i64 0}
!1774 = !{!"0000020E304B58E0.w16.b0", !1775, i64 0}
!1775 = !{!"0000020E304B58E0.w32.b0", !1776, i64 0}
!1776 = !{!"0000020E304B58E0.w64.b0", !1777, i64 0}
!1777 = !{!"0000020E304B58E0.w128.b0", !1778, i64 0}
!1778 = !{!"0000020E304B58E0.w256.b0", !1779, i64 0}
!1779 = !{!"0000020E304B58E0.w512.b0", !1780, i64 0}
!1780 = !{!"0000020E304B58E0.w1024.b0", !1781, i64 0}
!1781 = !{!"0000020E304B58E0", !21, i64 0}
!1782 = !{!1783, !1783, i64 0}
!1783 = !{!"0000020E304B58E0.w8.b16", !1784, i64 0}
!1784 = !{!"0000020E304B58E0.w16.b16", !1775, i64 0}
!1785 = !{!1786, !1786, i64 0}
!1786 = !{!"0000020E304B58E0.w8.b24", !1784, i64 0}
!1787 = !{!1788, !1788, i64 0}
!1788 = !{!"0000020E47FD3970.w4.b0", !1789, i64 0}
!1789 = !{!"0000020E47FD3970.w8.b0", !1790, i64 0}
!1790 = !{!"0000020E47FD3970.w16.b0", !1791, i64 0}
!1791 = !{!"0000020E47FD3970.w32.b0", !1792, i64 0}
!1792 = !{!"0000020E47FD3970.w64.b0", !1793, i64 0}
!1793 = !{!"0000020E47FD3970.w128.b0", !1794, i64 0}
!1794 = !{!"0000020E47FD3970.w256.b0", !1795, i64 0}
!1795 = !{!"0000020E47FD3970.w512.b0", !1796, i64 0}
!1796 = !{!"0000020E47FD3970.w1024.b0", !1797, i64 0}
!1797 = !{!"0000020E47FD3970", !21, i64 0}
!1798 = !{!1799, !1799, i64 0}
!1799 = !{!"0000020E47FD3970.w4.b4", !1789, i64 0}
!1800 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807}
!1802 = !DILocalVariable(name: "arg1", arg: 1, scope: !1800, file: !1, type: !8)
!1803 = !DILocalVariable(name: "arg2", arg: 2, scope: !1800, file: !1, type: !9)
!1804 = !DILocalVariable(name: "arg3", arg: 3, scope: !1800, file: !1, type: !7)
!1805 = !DILocalVariable(name: "arg4", arg: 4, scope: !1800, file: !1, type: !8)
!1806 = !DILocalVariable(name: "arg5", arg: 5, scope: !1800, file: !1, type: !9)
!1807 = !DILocalVariable(name: "arg6", arg: 6, scope: !1800, file: !1, type: !8)
!1808 = !DILocation(line: 0, scope: !1800)
!1809 = !{!1810, !1810, i64 0}
!1810 = !{!"0000020E4690C760.w4.b0", !1811, i64 0}
!1811 = !{!"0000020E4690C760.w8.b0", !1812, i64 0}
!1812 = !{!"0000020E4690C760.w16.b0", !1813, i64 0}
!1813 = !{!"0000020E4690C760.w32.b0", !1814, i64 0}
!1814 = !{!"0000020E4690C760.w64.b0", !1815, i64 0}
!1815 = !{!"0000020E4690C760.w128.b0", !1816, i64 0}
!1816 = !{!"0000020E4690C760.w256.b0", !1817, i64 0}
!1817 = !{!"0000020E4690C760.w512.b0", !1818, i64 0}
!1818 = !{!"0000020E4690C760.w1024.b0", !1819, i64 0}
!1819 = !{!"0000020E4690C760", !21, i64 0}
!1820 = !{!1821, !1821, i64 0}
!1821 = !{!"0000020E4690C760.w4.b4", !1811, i64 0}
!1822 = !{!1823, !1823, i64 0}
!1823 = !{!"0000020E4690C760.w4.b8", !1824, i64 0}
!1824 = !{!"0000020E4690C760.w8.b8", !1812, i64 0}
!1825 = !{!1826, !1826, i64 0}
!1826 = !{!"0000020E4690C760.w4.b12", !1824, i64 0}
!1827 = !{!1828, !1828, i64 0}
!1828 = !{!"0000020E4690C760.w4.b16", !1829, i64 0}
!1829 = !{!"0000020E4690C760.w8.b16", !1830, i64 0}
!1830 = !{!"0000020E4690C760.w16.b16", !1813, i64 0}
!1831 = !{!1832, !1832, i64 0}
!1832 = !{!"0000020E304D26F0.w8.b0", !1833, i64 0}
!1833 = !{!"0000020E304D26F0.w16.b0", !1834, i64 0}
!1834 = !{!"0000020E304D26F0.w32.b0", !1835, i64 0}
!1835 = !{!"0000020E304D26F0.w64.b0", !1836, i64 0}
!1836 = !{!"0000020E304D26F0.w128.b0", !1837, i64 0}
!1837 = !{!"0000020E304D26F0.w256.b0", !1838, i64 0}
!1838 = !{!"0000020E304D26F0.w512.b0", !1839, i64 0}
!1839 = !{!"0000020E304D26F0.w1024.b0", !1840, i64 0}
!1840 = !{!"0000020E304D26F0", !21, i64 0}
!1841 = !{!1842, !1842, i64 0}
!1842 = !{!"0000020E304D26F0.w8.b8", !1833, i64 0}
!1843 = !{!1844, !1844, i64 0}
!1844 = !{!"0000020E304D26F0.w8.b16", !1845, i64 0}
!1845 = !{!"0000020E304D26F0.w16.b16", !1834, i64 0}
!1846 = !{!1847, !1847, i64 0}
!1847 = !{!"0000020E304D26F0.w8.b24", !1845, i64 0}
!1848 = !{!1849, !1849, i64 0}
!1849 = !{!"0000020E304D51F0.w8.b8", !1850, i64 0}
!1850 = !{!"0000020E304D51F0.w16.b0", !1851, i64 0}
!1851 = !{!"0000020E304D51F0.w32.b0", !1852, i64 0}
!1852 = !{!"0000020E304D51F0.w64.b0", !1853, i64 0}
!1853 = !{!"0000020E304D51F0.w128.b0", !1854, i64 0}
!1854 = !{!"0000020E304D51F0.w256.b0", !1855, i64 0}
!1855 = !{!"0000020E304D51F0.w512.b0", !1856, i64 0}
!1856 = !{!"0000020E304D51F0.w1024.b0", !1857, i64 0}
!1857 = !{!"0000020E304D51F0", !21, i64 0}
!1858 = !{!1859, !1859, i64 0}
!1859 = !{!"0000020E304D51F0.w8.b16", !1860, i64 0}
!1860 = !{!"0000020E304D51F0.w16.b16", !1851, i64 0}
!1861 = !{!1862, !1862, i64 0}
!1862 = !{!"0000020E304D51F0.w8.b24", !1860, i64 0}
!1863 = !{!1864, !1864, i64 0}
!1864 = !{!"0000020E304D8B70.w8.b0", !1865, i64 0}
!1865 = !{!"0000020E304D8B70.w16.b0", !1866, i64 0}
!1866 = !{!"0000020E304D8B70.w32.b0", !1867, i64 0}
!1867 = !{!"0000020E304D8B70.w64.b0", !1868, i64 0}
!1868 = !{!"0000020E304D8B70.w128.b0", !1869, i64 0}
!1869 = !{!"0000020E304D8B70.w256.b0", !1870, i64 0}
!1870 = !{!"0000020E304D8B70.w512.b0", !1871, i64 0}
!1871 = !{!"0000020E304D8B70.w1024.b0", !1872, i64 0}
!1872 = !{!"0000020E304D8B70", !21, i64 0}
!1873 = !{!1874, !1874, i64 0}
!1874 = !{!"0000020E304D8B70.w8.b8", !1865, i64 0}
!1875 = !{!1876, !1876, i64 0}
!1876 = !{!"0000020E304D8B70.w8.b16", !1877, i64 0}
!1877 = !{!"0000020E304D8B70.w16.b16", !1866, i64 0}
!1878 = !{!1879, !1879, i64 0}
!1879 = !{!"0000020E304D8B70.w8.b24", !1877, i64 0}
!1880 = !{!1881, !1881, i64 0}
!1881 = !{!"0000020E467CA7B0.w8.b0", !1882, i64 0}
!1882 = !{!"0000020E467CA7B0.w16.b0", !1883, i64 0}
!1883 = !{!"0000020E467CA7B0.w32.b0", !1884, i64 0}
!1884 = !{!"0000020E467CA7B0.w64.b0", !1885, i64 0}
!1885 = !{!"0000020E467CA7B0.w128.b0", !1886, i64 0}
!1886 = !{!"0000020E467CA7B0.w256.b0", !1887, i64 0}
!1887 = !{!"0000020E467CA7B0.w512.b0", !1888, i64 0}
!1888 = !{!"0000020E467CA7B0.w1024.b0", !1889, i64 0}
!1889 = !{!"0000020E467CA7B0", !21, i64 0}
!1890 = !{!1891, !1891, i64 0}
!1891 = !{!"0000020E467CA7B0.w8.b8", !1882, i64 0}
!1892 = !{!1893, !1893, i64 0}
!1893 = !{!"0000020E467CC170.w8.b0", !1894, i64 0}
!1894 = !{!"0000020E467CC170.w16.b0", !1895, i64 0}
!1895 = !{!"0000020E467CC170.w32.b0", !1896, i64 0}
!1896 = !{!"0000020E467CC170.w64.b0", !1897, i64 0}
!1897 = !{!"0000020E467CC170.w128.b0", !1898, i64 0}
!1898 = !{!"0000020E467CC170.w256.b0", !1899, i64 0}
!1899 = !{!"0000020E467CC170.w512.b0", !1900, i64 0}
!1900 = !{!"0000020E467CC170.w1024.b0", !1901, i64 0}
!1901 = !{!"0000020E467CC170", !21, i64 0}
!1902 = !{!1903, !1903, i64 0}
!1903 = !{!"0000020E467CC170.w8.b8", !1894, i64 0}
!1904 = !{!1905, !1905, i64 0}
!1905 = !{!"0000020E467CC170.w8.b16", !1906, i64 0}
!1906 = !{!"0000020E467CC170.w16.b16", !1895, i64 0}
!1907 = !{!1908, !1908, i64 0}
!1908 = !{!"0000020E467CC170.w8.b24", !1906, i64 0}
!1909 = !{!1910, !1910, i64 0}
!1910 = !{!"0000020E468F9040.w8.b8", !1911, i64 0}
!1911 = !{!"0000020E468F9040.w16.b0", !1912, i64 0}
!1912 = !{!"0000020E468F9040.w32.b0", !1913, i64 0}
!1913 = !{!"0000020E468F9040.w64.b0", !1914, i64 0}
!1914 = !{!"0000020E468F9040.w128.b0", !1915, i64 0}
!1915 = !{!"0000020E468F9040.w256.b0", !1916, i64 0}
!1916 = !{!"0000020E468F9040.w512.b0", !1917, i64 0}
!1917 = !{!"0000020E468F9040.w1024.b0", !1918, i64 0}
!1918 = !{!"0000020E468F9040", !21, i64 0}
!1919 = !{!1920, !1920, i64 0}
!1920 = !{!"0000020E468E5380.w8.b0", !1921, i64 0}
!1921 = !{!"0000020E468E5380.w16.b0", !1922, i64 0}
!1922 = !{!"0000020E468E5380.w32.b0", !1923, i64 0}
!1923 = !{!"0000020E468E5380.w64.b0", !1924, i64 0}
!1924 = !{!"0000020E468E5380.w128.b0", !1925, i64 0}
!1925 = !{!"0000020E468E5380.w256.b0", !1926, i64 0}
!1926 = !{!"0000020E468E5380.w512.b0", !1927, i64 0}
!1927 = !{!"0000020E468E5380.w1024.b0", !1928, i64 0}
!1928 = !{!"0000020E468E5380", !21, i64 0}
!1929 = !{!1930, !1930, i64 0}
!1930 = !{!"0000020E468E5380.w8.b8", !1921, i64 0}
!1931 = !{!1932, !1932, i64 0}
!1932 = !{!"0000020E468E5380.w8.b16", !1933, i64 0}
!1933 = !{!"0000020E468E5380.w16.b16", !1922, i64 0}
!1934 = !{!1935, !1935, i64 0}
!1935 = !{!"0000020E468E5380.w8.b24", !1933, i64 0}
!1936 = !{!1937, !1937, i64 0}
!1937 = !{!"0000020E468E6280.w8.b8", !1938, i64 0}
!1938 = !{!"0000020E468E6280.w16.b0", !1939, i64 0}
!1939 = !{!"0000020E468E6280.w32.b0", !1940, i64 0}
!1940 = !{!"0000020E468E6280.w64.b0", !1941, i64 0}
!1941 = !{!"0000020E468E6280.w128.b0", !1942, i64 0}
!1942 = !{!"0000020E468E6280.w256.b0", !1943, i64 0}
!1943 = !{!"0000020E468E6280.w512.b0", !1944, i64 0}
!1944 = !{!"0000020E468E6280.w1024.b0", !1945, i64 0}
!1945 = !{!"0000020E468E6280", !21, i64 0}
!1946 = !{!1947, !1947, i64 0}
!1947 = !{!"0000020E468E6280.w8.b16", !1948, i64 0}
!1948 = !{!"0000020E468E6280.w16.b16", !1939, i64 0}
!1949 = !{!1950, !1950, i64 0}
!1950 = !{!"0000020E468E6280.w8.b24", !1948, i64 0}
!1951 = !{!1952, !1952, i64 0}
!1952 = !{!"0000020E446EAE80.w8.b0", !1953, i64 0}
!1953 = !{!"0000020E446EAE80.w16.b0", !1954, i64 0}
!1954 = !{!"0000020E446EAE80.w32.b0", !1955, i64 0}
!1955 = !{!"0000020E446EAE80.w64.b0", !1956, i64 0}
!1956 = !{!"0000020E446EAE80.w128.b0", !1957, i64 0}
!1957 = !{!"0000020E446EAE80.w256.b0", !1958, i64 0}
!1958 = !{!"0000020E446EAE80.w512.b0", !1959, i64 0}
!1959 = !{!"0000020E446EAE80.w1024.b0", !1960, i64 0}
!1960 = !{!"0000020E446EAE80", !21, i64 0}
!1961 = !{!1962, !1962, i64 0}
!1962 = !{!"0000020E446EAE80.w8.b8", !1953, i64 0}
!1963 = !{!1964, !1964, i64 0}
!1964 = !{!"0000020E446EAE80.w8.b16", !1965, i64 0}
!1965 = !{!"0000020E446EAE80.w16.b16", !1954, i64 0}
!1966 = !{!1967, !1967, i64 0}
!1967 = !{!"0000020E446EAE80.w8.b24", !1965, i64 0}
!1968 = !{!1969, !1969, i64 0}
!1969 = !{!"0000020E446EBD40.w8.b8", !1970, i64 0}
!1970 = !{!"0000020E446EBD40.w16.b0", !1971, i64 0}
!1971 = !{!"0000020E446EBD40.w32.b0", !1972, i64 0}
!1972 = !{!"0000020E446EBD40.w64.b0", !1973, i64 0}
!1973 = !{!"0000020E446EBD40.w128.b0", !1974, i64 0}
!1974 = !{!"0000020E446EBD40.w256.b0", !1975, i64 0}
!1975 = !{!"0000020E446EBD40.w512.b0", !1976, i64 0}
!1976 = !{!"0000020E446EBD40.w1024.b0", !1977, i64 0}
!1977 = !{!"0000020E446EBD40", !21, i64 0}
!1978 = !{!1979, !1979, i64 0}
!1979 = !{!"0000020E446EBD40.w8.b16", !1980, i64 0}
!1980 = !{!"0000020E446EBD40.w16.b16", !1971, i64 0}
!1981 = !{!1982, !1982, i64 0}
!1982 = !{!"0000020E446EBD40.w8.b24", !1980, i64 0}
!1983 = !{!1984, !1984, i64 0}
!1984 = !{!"0000020E480CD2F0.w4.b0", !1985, i64 0}
!1985 = !{!"0000020E480CD2F0.w8.b0", !1986, i64 0}
!1986 = !{!"0000020E480CD2F0.w16.b0", !1987, i64 0}
!1987 = !{!"0000020E480CD2F0.w32.b0", !1988, i64 0}
!1988 = !{!"0000020E480CD2F0.w64.b0", !1989, i64 0}
!1989 = !{!"0000020E480CD2F0.w128.b0", !1990, i64 0}
!1990 = !{!"0000020E480CD2F0.w256.b0", !1991, i64 0}
!1991 = !{!"0000020E480CD2F0.w512.b0", !1992, i64 0}
!1992 = !{!"0000020E480CD2F0.w1024.b0", !1993, i64 0}
!1993 = !{!"0000020E480CD2F0", !21, i64 0}
!1994 = !{!1995, !1995, i64 0}
!1995 = !{!"0000020E480CD2F0.w4.b4", !1985, i64 0}
!1996 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003}
!1998 = !DILocalVariable(name: "arg1", arg: 1, scope: !1996, file: !1, type: !8)
!1999 = !DILocalVariable(name: "arg2", arg: 2, scope: !1996, file: !1, type: !9)
!2000 = !DILocalVariable(name: "arg3", arg: 3, scope: !1996, file: !1, type: !7)
!2001 = !DILocalVariable(name: "arg4", arg: 4, scope: !1996, file: !1, type: !8)
!2002 = !DILocalVariable(name: "arg5", arg: 5, scope: !1996, file: !1, type: !9)
!2003 = !DILocalVariable(name: "arg6", arg: 6, scope: !1996, file: !1, type: !8)
!2004 = !DILocation(line: 0, scope: !1996)
!2005 = !{!2006, !2006, i64 0}
!2006 = !{!"0000020E304B7820.w4.b0", !2007, i64 0}
!2007 = !{!"0000020E304B7820.w8.b0", !2008, i64 0}
!2008 = !{!"0000020E304B7820.w16.b0", !2009, i64 0}
!2009 = !{!"0000020E304B7820.w32.b0", !2010, i64 0}
!2010 = !{!"0000020E304B7820.w64.b0", !2011, i64 0}
!2011 = !{!"0000020E304B7820.w128.b0", !2012, i64 0}
!2012 = !{!"0000020E304B7820.w256.b0", !2013, i64 0}
!2013 = !{!"0000020E304B7820.w512.b0", !2014, i64 0}
!2014 = !{!"0000020E304B7820.w1024.b0", !2015, i64 0}
!2015 = !{!"0000020E304B7820", !21, i64 0}
!2016 = !{!2017, !2017, i64 0}
!2017 = !{!"0000020E304B7820.w4.b4", !2007, i64 0}
!2018 = !{!2019, !2019, i64 0}
!2019 = !{!"0000020E304B7820.w4.b8", !2020, i64 0}
!2020 = !{!"0000020E304B7820.w8.b8", !2008, i64 0}
!2021 = !{!2022, !2022, i64 0}
!2022 = !{!"0000020E304B7820.w4.b12", !2020, i64 0}
!2023 = !{!2024, !2024, i64 0}
!2024 = !{!"0000020E304B7820.w4.b16", !2025, i64 0}
!2025 = !{!"0000020E304B7820.w8.b16", !2026, i64 0}
!2026 = !{!"0000020E304B7820.w16.b16", !2009, i64 0}
!2027 = !{!2028, !2028, i64 0}
!2028 = !{!"0000020E46D90730.w8.b0", !2029, i64 0}
!2029 = !{!"0000020E46D90730.w16.b0", !2030, i64 0}
!2030 = !{!"0000020E46D90730.w32.b0", !2031, i64 0}
!2031 = !{!"0000020E46D90730.w64.b0", !2032, i64 0}
!2032 = !{!"0000020E46D90730.w128.b0", !2033, i64 0}
!2033 = !{!"0000020E46D90730.w256.b0", !2034, i64 0}
!2034 = !{!"0000020E46D90730.w512.b0", !2035, i64 0}
!2035 = !{!"0000020E46D90730.w1024.b0", !2036, i64 0}
!2036 = !{!"0000020E46D90730", !21, i64 0}
!2037 = !{!2038, !2038, i64 0}
!2038 = !{!"0000020E46D90730.w8.b8", !2029, i64 0}
!2039 = !{!2040, !2040, i64 0}
!2040 = !{!"0000020E46D90730.w8.b16", !2041, i64 0}
!2041 = !{!"0000020E46D90730.w16.b16", !2030, i64 0}
!2042 = !{!2043, !2043, i64 0}
!2043 = !{!"0000020E46D90730.w8.b24", !2041, i64 0}
!2044 = !{!2045, !2045, i64 0}
!2045 = !{!"0000020E46D72F30.w8.b8", !2046, i64 0}
!2046 = !{!"0000020E46D72F30.w16.b0", !2047, i64 0}
!2047 = !{!"0000020E46D72F30.w32.b0", !2048, i64 0}
!2048 = !{!"0000020E46D72F30.w64.b0", !2049, i64 0}
!2049 = !{!"0000020E46D72F30.w128.b0", !2050, i64 0}
!2050 = !{!"0000020E46D72F30.w256.b0", !2051, i64 0}
!2051 = !{!"0000020E46D72F30.w512.b0", !2052, i64 0}
!2052 = !{!"0000020E46D72F30.w1024.b0", !2053, i64 0}
!2053 = !{!"0000020E46D72F30", !21, i64 0}
!2054 = !{!2055, !2055, i64 0}
!2055 = !{!"0000020E46D72F30.w8.b16", !2056, i64 0}
!2056 = !{!"0000020E46D72F30.w16.b16", !2047, i64 0}
!2057 = !{!2058, !2058, i64 0}
!2058 = !{!"0000020E46D72F30.w8.b24", !2056, i64 0}
!2059 = !{!2060, !2060, i64 0}
!2060 = !{!"0000020E43B3A020.w8.b0", !2061, i64 0}
!2061 = !{!"0000020E43B3A020.w16.b0", !2062, i64 0}
!2062 = !{!"0000020E43B3A020.w32.b0", !2063, i64 0}
!2063 = !{!"0000020E43B3A020.w64.b0", !2064, i64 0}
!2064 = !{!"0000020E43B3A020.w128.b0", !2065, i64 0}
!2065 = !{!"0000020E43B3A020.w256.b0", !2066, i64 0}
!2066 = !{!"0000020E43B3A020.w512.b0", !2067, i64 0}
!2067 = !{!"0000020E43B3A020.w1024.b0", !2068, i64 0}
!2068 = !{!"0000020E43B3A020", !21, i64 0}
!2069 = !{!2070, !2070, i64 0}
!2070 = !{!"0000020E43B3A020.w8.b8", !2061, i64 0}
!2071 = !{!2072, !2072, i64 0}
!2072 = !{!"0000020E43B3A020.w8.b16", !2073, i64 0}
!2073 = !{!"0000020E43B3A020.w16.b16", !2062, i64 0}
!2074 = !{!2075, !2075, i64 0}
!2075 = !{!"0000020E43B3A020.w8.b24", !2073, i64 0}
!2076 = !{!2077, !2077, i64 0}
!2077 = !{!"0000020E304D8E70.w8.b0", !2078, i64 0}
!2078 = !{!"0000020E304D8E70.w16.b0", !2079, i64 0}
!2079 = !{!"0000020E304D8E70.w32.b0", !2080, i64 0}
!2080 = !{!"0000020E304D8E70.w64.b0", !2081, i64 0}
!2081 = !{!"0000020E304D8E70.w128.b0", !2082, i64 0}
!2082 = !{!"0000020E304D8E70.w256.b0", !2083, i64 0}
!2083 = !{!"0000020E304D8E70.w512.b0", !2084, i64 0}
!2084 = !{!"0000020E304D8E70.w1024.b0", !2085, i64 0}
!2085 = !{!"0000020E304D8E70", !21, i64 0}
!2086 = !{!2087, !2087, i64 0}
!2087 = !{!"0000020E304D8E70.w8.b8", !2078, i64 0}
!2088 = !{!2089, !2089, i64 0}
!2089 = !{!"0000020E467CA970.w8.b0", !2090, i64 0}
!2090 = !{!"0000020E467CA970.w16.b0", !2091, i64 0}
!2091 = !{!"0000020E467CA970.w32.b0", !2092, i64 0}
!2092 = !{!"0000020E467CA970.w64.b0", !2093, i64 0}
!2093 = !{!"0000020E467CA970.w128.b0", !2094, i64 0}
!2094 = !{!"0000020E467CA970.w256.b0", !2095, i64 0}
!2095 = !{!"0000020E467CA970.w512.b0", !2096, i64 0}
!2096 = !{!"0000020E467CA970.w1024.b0", !2097, i64 0}
!2097 = !{!"0000020E467CA970", !21, i64 0}
!2098 = !{!2099, !2099, i64 0}
!2099 = !{!"0000020E467CA970.w8.b8", !2090, i64 0}
!2100 = !{!2101, !2101, i64 0}
!2101 = !{!"0000020E467CA970.w8.b16", !2102, i64 0}
!2102 = !{!"0000020E467CA970.w16.b16", !2091, i64 0}
!2103 = !{!2104, !2104, i64 0}
!2104 = !{!"0000020E467CA970.w8.b24", !2102, i64 0}
!2105 = !{!2106, !2106, i64 0}
!2106 = !{!"0000020E446EB700.w8.b8", !2107, i64 0}
!2107 = !{!"0000020E446EB700.w16.b0", !2108, i64 0}
!2108 = !{!"0000020E446EB700.w32.b0", !2109, i64 0}
!2109 = !{!"0000020E446EB700.w64.b0", !2110, i64 0}
!2110 = !{!"0000020E446EB700.w128.b0", !2111, i64 0}
!2111 = !{!"0000020E446EB700.w256.b0", !2112, i64 0}
!2112 = !{!"0000020E446EB700.w512.b0", !2113, i64 0}
!2113 = !{!"0000020E446EB700.w1024.b0", !2114, i64 0}
!2114 = !{!"0000020E446EB700", !21, i64 0}
!2115 = !{!2116, !2116, i64 0}
!2116 = !{!"0000020E468E7100.w8.b0", !2117, i64 0}
!2117 = !{!"0000020E468E7100.w16.b0", !2118, i64 0}
!2118 = !{!"0000020E468E7100.w32.b0", !2119, i64 0}
!2119 = !{!"0000020E468E7100.w64.b0", !2120, i64 0}
!2120 = !{!"0000020E468E7100.w128.b0", !2121, i64 0}
!2121 = !{!"0000020E468E7100.w256.b0", !2122, i64 0}
!2122 = !{!"0000020E468E7100.w512.b0", !2123, i64 0}
!2123 = !{!"0000020E468E7100.w1024.b0", !2124, i64 0}
!2124 = !{!"0000020E468E7100", !21, i64 0}
!2125 = !{!2126, !2126, i64 0}
!2126 = !{!"0000020E468E7100.w8.b8", !2117, i64 0}
!2127 = !{!2128, !2128, i64 0}
!2128 = !{!"0000020E468E7100.w8.b16", !2129, i64 0}
!2129 = !{!"0000020E468E7100.w16.b16", !2118, i64 0}
!2130 = !{!2131, !2131, i64 0}
!2131 = !{!"0000020E468E7100.w8.b24", !2129, i64 0}
!2132 = !{!2133, !2133, i64 0}
!2133 = !{!"0000020E3051BFB0.w8.b8", !2134, i64 0}
!2134 = !{!"0000020E3051BFB0.w16.b0", !2135, i64 0}
!2135 = !{!"0000020E3051BFB0.w32.b0", !2136, i64 0}
!2136 = !{!"0000020E3051BFB0.w64.b0", !2137, i64 0}
!2137 = !{!"0000020E3051BFB0.w128.b0", !2138, i64 0}
!2138 = !{!"0000020E3051BFB0.w256.b0", !2139, i64 0}
!2139 = !{!"0000020E3051BFB0.w512.b0", !2140, i64 0}
!2140 = !{!"0000020E3051BFB0.w1024.b0", !2141, i64 0}
!2141 = !{!"0000020E3051BFB0", !21, i64 0}
!2142 = !{!2143, !2143, i64 0}
!2143 = !{!"0000020E3051BFB0.w8.b16", !2144, i64 0}
!2144 = !{!"0000020E3051BFB0.w16.b16", !2135, i64 0}
!2145 = !{!2146, !2146, i64 0}
!2146 = !{!"0000020E3051BFB0.w8.b24", !2144, i64 0}
!2147 = !{!2148, !2148, i64 0}
!2148 = !{!"0000020E46903960.w8.b0", !2149, i64 0}
!2149 = !{!"0000020E46903960.w16.b0", !2150, i64 0}
!2150 = !{!"0000020E46903960.w32.b0", !2151, i64 0}
!2151 = !{!"0000020E46903960.w64.b0", !2152, i64 0}
!2152 = !{!"0000020E46903960.w128.b0", !2153, i64 0}
!2153 = !{!"0000020E46903960.w256.b0", !2154, i64 0}
!2154 = !{!"0000020E46903960.w512.b0", !2155, i64 0}
!2155 = !{!"0000020E46903960.w1024.b0", !2156, i64 0}
!2156 = !{!"0000020E46903960", !21, i64 0}
!2157 = !{!2158, !2158, i64 0}
!2158 = !{!"0000020E46903960.w8.b8", !2149, i64 0}
!2159 = !{!2160, !2160, i64 0}
!2160 = !{!"0000020E46903960.w8.b16", !2161, i64 0}
!2161 = !{!"0000020E46903960.w16.b16", !2150, i64 0}
!2162 = !{!2163, !2163, i64 0}
!2163 = !{!"0000020E46903960.w8.b24", !2161, i64 0}
!2164 = !{!2165, !2165, i64 0}
!2165 = !{!"0000020E46935D70.w8.b8", !2166, i64 0}
!2166 = !{!"0000020E46935D70.w16.b0", !2167, i64 0}
!2167 = !{!"0000020E46935D70.w32.b0", !2168, i64 0}
!2168 = !{!"0000020E46935D70.w64.b0", !2169, i64 0}
!2169 = !{!"0000020E46935D70.w128.b0", !2170, i64 0}
!2170 = !{!"0000020E46935D70.w256.b0", !2171, i64 0}
!2171 = !{!"0000020E46935D70.w512.b0", !2172, i64 0}
!2172 = !{!"0000020E46935D70.w1024.b0", !2173, i64 0}
!2173 = !{!"0000020E46935D70", !21, i64 0}
!2174 = !{!2175, !2175, i64 0}
!2175 = !{!"0000020E46935D70.w8.b16", !2176, i64 0}
!2176 = !{!"0000020E46935D70.w16.b16", !2167, i64 0}
!2177 = !{!2178, !2178, i64 0}
!2178 = !{!"0000020E46935D70.w8.b24", !2176, i64 0}
!2179 = !{!2180, !2180, i64 0}
!2180 = !{!"0000020E480CFC30.w4.b0", !2181, i64 0}
!2181 = !{!"0000020E480CFC30.w8.b0", !2182, i64 0}
!2182 = !{!"0000020E480CFC30.w16.b0", !2183, i64 0}
!2183 = !{!"0000020E480CFC30.w32.b0", !2184, i64 0}
!2184 = !{!"0000020E480CFC30.w64.b0", !2185, i64 0}
!2185 = !{!"0000020E480CFC30.w128.b0", !2186, i64 0}
!2186 = !{!"0000020E480CFC30.w256.b0", !2187, i64 0}
!2187 = !{!"0000020E480CFC30.w512.b0", !2188, i64 0}
!2188 = !{!"0000020E480CFC30.w1024.b0", !2189, i64 0}
!2189 = !{!"0000020E480CFC30", !21, i64 0}
!2190 = !{!2191, !2191, i64 0}
!2191 = !{!"0000020E480CFC30.w4.b4", !2181, i64 0}
!2192 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2199}
!2194 = !DILocalVariable(name: "arg1", arg: 1, scope: !2192, file: !1, type: !8)
!2195 = !DILocalVariable(name: "arg2", arg: 2, scope: !2192, file: !1, type: !9)
!2196 = !DILocalVariable(name: "arg3", arg: 3, scope: !2192, file: !1, type: !7)
!2197 = !DILocalVariable(name: "arg4", arg: 4, scope: !2192, file: !1, type: !8)
!2198 = !DILocalVariable(name: "arg5", arg: 5, scope: !2192, file: !1, type: !9)
!2199 = !DILocalVariable(name: "arg6", arg: 6, scope: !2192, file: !1, type: !8)
!2200 = !DILocation(line: 0, scope: !2192)
!2201 = !{!2202, !2202, i64 0}
!2202 = !{!"0000020E468F8C00.w4.b0", !2203, i64 0}
!2203 = !{!"0000020E468F8C00.w8.b0", !2204, i64 0}
!2204 = !{!"0000020E468F8C00.w16.b0", !2205, i64 0}
!2205 = !{!"0000020E468F8C00.w32.b0", !2206, i64 0}
!2206 = !{!"0000020E468F8C00.w64.b0", !2207, i64 0}
!2207 = !{!"0000020E468F8C00.w128.b0", !2208, i64 0}
!2208 = !{!"0000020E468F8C00.w256.b0", !2209, i64 0}
!2209 = !{!"0000020E468F8C00.w512.b0", !2210, i64 0}
!2210 = !{!"0000020E468F8C00.w1024.b0", !2211, i64 0}
!2211 = !{!"0000020E468F8C00", !21, i64 0}
!2212 = !{!2213, !2213, i64 0}
!2213 = !{!"0000020E468F8C00.w4.b4", !2203, i64 0}
!2214 = !{!2215, !2215, i64 0}
!2215 = !{!"0000020E468F8C00.w4.b8", !2216, i64 0}
!2216 = !{!"0000020E468F8C00.w8.b8", !2204, i64 0}
!2217 = !{!2218, !2218, i64 0}
!2218 = !{!"0000020E468F8C00.w4.b12", !2216, i64 0}
!2219 = !{!2220, !2220, i64 0}
!2220 = !{!"0000020E468E0300.w8.b0", !2221, i64 0}
!2221 = !{!"0000020E468E0300.w16.b0", !2222, i64 0}
!2222 = !{!"0000020E468E0300.w32.b0", !2223, i64 0}
!2223 = !{!"0000020E468E0300.w64.b0", !2224, i64 0}
!2224 = !{!"0000020E468E0300.w128.b0", !2225, i64 0}
!2225 = !{!"0000020E468E0300.w256.b0", !2226, i64 0}
!2226 = !{!"0000020E468E0300.w512.b0", !2227, i64 0}
!2227 = !{!"0000020E468E0300.w1024.b0", !2228, i64 0}
!2228 = !{!"0000020E468E0300", !21, i64 0}
!2229 = !{!2230, !2230, i64 0}
!2230 = !{!"0000020E468E0300.w8.b8", !2221, i64 0}
!2231 = !{!2232, !2232, i64 0}
!2232 = !{!"0000020E468E0300.w8.b16", !2233, i64 0}
!2233 = !{!"0000020E468E0300.w16.b16", !2222, i64 0}
!2234 = !{!2235, !2235, i64 0}
!2235 = !{!"0000020E468E0300.w8.b24", !2233, i64 0}
!2236 = !{!2237, !2237, i64 0}
!2237 = !{!"0000020E468E1E40.w8.b8", !2238, i64 0}
!2238 = !{!"0000020E468E1E40.w16.b0", !2239, i64 0}
!2239 = !{!"0000020E468E1E40.w32.b0", !2240, i64 0}
!2240 = !{!"0000020E468E1E40.w64.b0", !2241, i64 0}
!2241 = !{!"0000020E468E1E40.w128.b0", !2242, i64 0}
!2242 = !{!"0000020E468E1E40.w256.b0", !2243, i64 0}
!2243 = !{!"0000020E468E1E40.w512.b0", !2244, i64 0}
!2244 = !{!"0000020E468E1E40.w1024.b0", !2245, i64 0}
!2245 = !{!"0000020E468E1E40", !21, i64 0}
!2246 = !{!2247, !2247, i64 0}
!2247 = !{!"0000020E468E1E40.w8.b16", !2248, i64 0}
!2248 = !{!"0000020E468E1E40.w16.b16", !2239, i64 0}
!2249 = !{!2250, !2250, i64 0}
!2250 = !{!"0000020E468E1E40.w8.b24", !2248, i64 0}
!2251 = !{!2252, !2252, i64 0}
!2252 = !{!"0000020E468E3400.w8.b0", !2253, i64 0}
!2253 = !{!"0000020E468E3400.w16.b0", !2254, i64 0}
!2254 = !{!"0000020E468E3400.w32.b0", !2255, i64 0}
!2255 = !{!"0000020E468E3400.w64.b0", !2256, i64 0}
!2256 = !{!"0000020E468E3400.w128.b0", !2257, i64 0}
!2257 = !{!"0000020E468E3400.w256.b0", !2258, i64 0}
!2258 = !{!"0000020E468E3400.w512.b0", !2259, i64 0}
!2259 = !{!"0000020E468E3400.w1024.b0", !2260, i64 0}
!2260 = !{!"0000020E468E3400", !21, i64 0}
!2261 = !{!2262, !2262, i64 0}
!2262 = !{!"0000020E468E3400.w8.b8", !2253, i64 0}
!2263 = !{!2264, !2264, i64 0}
!2264 = !{!"0000020E468E3400.w8.b16", !2265, i64 0}
!2265 = !{!"0000020E468E3400.w16.b16", !2254, i64 0}
!2266 = !{!2267, !2267, i64 0}
!2267 = !{!"0000020E468E3400.w8.b24", !2265, i64 0}
!2268 = !{!2269, !2269, i64 0}
!2269 = !{!"0000020E468E5000.w8.b0", !2270, i64 0}
!2270 = !{!"0000020E468E5000.w16.b0", !2271, i64 0}
!2271 = !{!"0000020E468E5000.w32.b0", !2272, i64 0}
!2272 = !{!"0000020E468E5000.w64.b0", !2273, i64 0}
!2273 = !{!"0000020E468E5000.w128.b0", !2274, i64 0}
!2274 = !{!"0000020E468E5000.w256.b0", !2275, i64 0}
!2275 = !{!"0000020E468E5000.w512.b0", !2276, i64 0}
!2276 = !{!"0000020E468E5000.w1024.b0", !2277, i64 0}
!2277 = !{!"0000020E468E5000", !21, i64 0}
!2278 = !{!2279, !2279, i64 0}
!2279 = !{!"0000020E468E5000.w8.b8", !2270, i64 0}
!2280 = !{!2281, !2281, i64 0}
!2281 = !{!"0000020E468E5000.w8.b16", !2282, i64 0}
!2282 = !{!"0000020E468E5000.w16.b16", !2271, i64 0}
!2283 = !{!2284, !2284, i64 0}
!2284 = !{!"0000020E468E5000.w8.b24", !2282, i64 0}
!2285 = !{!2286, !2286, i64 0}
!2286 = !{!"0000020E468E5FC0.w8.b0", !2287, i64 0}
!2287 = !{!"0000020E468E5FC0.w16.b0", !2288, i64 0}
!2288 = !{!"0000020E468E5FC0.w32.b0", !2289, i64 0}
!2289 = !{!"0000020E468E5FC0.w64.b0", !2290, i64 0}
!2290 = !{!"0000020E468E5FC0.w128.b0", !2291, i64 0}
!2291 = !{!"0000020E468E5FC0.w256.b0", !2292, i64 0}
!2292 = !{!"0000020E468E5FC0.w512.b0", !2293, i64 0}
!2293 = !{!"0000020E468E5FC0.w1024.b0", !2294, i64 0}
!2294 = !{!"0000020E468E5FC0", !21, i64 0}
!2295 = !{!2296, !2296, i64 0}
!2296 = !{!"0000020E468E5FC0.w8.b8", !2287, i64 0}
!2297 = !{!2298, !2298, i64 0}
!2298 = !{!"0000020E468E5FC0.w8.b16", !2299, i64 0}
!2299 = !{!"0000020E468E5FC0.w16.b16", !2288, i64 0}
!2300 = !{!2301, !2301, i64 0}
!2301 = !{!"0000020E468E5FC0.w8.b24", !2299, i64 0}
!2302 = !{!2303, !2303, i64 0}
!2303 = !{!"0000020E468E6880.w8.b8", !2304, i64 0}
!2304 = !{!"0000020E468E6880.w16.b0", !2305, i64 0}
!2305 = !{!"0000020E468E6880.w32.b0", !2306, i64 0}
!2306 = !{!"0000020E468E6880.w64.b0", !2307, i64 0}
!2307 = !{!"0000020E468E6880.w128.b0", !2308, i64 0}
!2308 = !{!"0000020E468E6880.w256.b0", !2309, i64 0}
!2309 = !{!"0000020E468E6880.w512.b0", !2310, i64 0}
!2310 = !{!"0000020E468E6880.w1024.b0", !2311, i64 0}
!2311 = !{!"0000020E468E6880", !21, i64 0}
!2312 = !{!2313, !2313, i64 0}
!2313 = !{!"0000020E468E6EC0.w8.b0", !2314, i64 0}
!2314 = !{!"0000020E468E6EC0.w16.b0", !2315, i64 0}
!2315 = !{!"0000020E468E6EC0.w32.b0", !2316, i64 0}
!2316 = !{!"0000020E468E6EC0.w64.b0", !2317, i64 0}
!2317 = !{!"0000020E468E6EC0.w128.b0", !2318, i64 0}
!2318 = !{!"0000020E468E6EC0.w256.b0", !2319, i64 0}
!2319 = !{!"0000020E468E6EC0.w512.b0", !2320, i64 0}
!2320 = !{!"0000020E468E6EC0.w1024.b0", !2321, i64 0}
!2321 = !{!"0000020E468E6EC0", !21, i64 0}
!2322 = !{!2323, !2323, i64 0}
!2323 = !{!"0000020E468E6EC0.w8.b8", !2314, i64 0}
!2324 = !{!2325, !2325, i64 0}
!2325 = !{!"0000020E468E6EC0.w8.b16", !2326, i64 0}
!2326 = !{!"0000020E468E6EC0.w16.b16", !2315, i64 0}
!2327 = !{!2328, !2328, i64 0}
!2328 = !{!"0000020E468E6EC0.w8.b24", !2326, i64 0}
!2329 = !{!2330, !2330, i64 0}
!2330 = !{!"0000020E468E6F80.w8.b8", !2331, i64 0}
!2331 = !{!"0000020E468E6F80.w16.b0", !2332, i64 0}
!2332 = !{!"0000020E468E6F80.w32.b0", !2333, i64 0}
!2333 = !{!"0000020E468E6F80.w64.b0", !2334, i64 0}
!2334 = !{!"0000020E468E6F80.w128.b0", !2335, i64 0}
!2335 = !{!"0000020E468E6F80.w256.b0", !2336, i64 0}
!2336 = !{!"0000020E468E6F80.w512.b0", !2337, i64 0}
!2337 = !{!"0000020E468E6F80.w1024.b0", !2338, i64 0}
!2338 = !{!"0000020E468E6F80", !21, i64 0}
!2339 = !{!2340, !2340, i64 0}
!2340 = !{!"0000020E468E6F80.w8.b16", !2341, i64 0}
!2341 = !{!"0000020E468E6F80.w16.b16", !2332, i64 0}
!2342 = !{!2343, !2343, i64 0}
!2343 = !{!"0000020E468E6F80.w8.b24", !2341, i64 0}
!2344 = !{!2345, !2345, i64 0}
!2345 = !{!"0000020E304B0320.w4.b0", !2346, i64 0}
!2346 = !{!"0000020E304B0320.w8.b0", !2347, i64 0}
!2347 = !{!"0000020E304B0320.w16.b0", !2348, i64 0}
!2348 = !{!"0000020E304B0320.w32.b0", !2349, i64 0}
!2349 = !{!"0000020E304B0320.w64.b0", !2350, i64 0}
!2350 = !{!"0000020E304B0320.w128.b0", !2351, i64 0}
!2351 = !{!"0000020E304B0320.w256.b0", !2352, i64 0}
!2352 = !{!"0000020E304B0320.w512.b0", !2353, i64 0}
!2353 = !{!"0000020E304B0320.w1024.b0", !2354, i64 0}
!2354 = !{!"0000020E304B0320", !21, i64 0}
!2355 = !{!2356, !2356, i64 0}
!2356 = !{!"0000020E304B0320.w4.b4", !2346, i64 0}
!2357 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2358)
!2358 = !{!2359, !2360, !2361, !2362, !2363, !2364}
!2359 = !DILocalVariable(name: "arg1", arg: 1, scope: !2357, file: !1, type: !8)
!2360 = !DILocalVariable(name: "arg2", arg: 2, scope: !2357, file: !1, type: !9)
!2361 = !DILocalVariable(name: "arg3", arg: 3, scope: !2357, file: !1, type: !7)
!2362 = !DILocalVariable(name: "arg4", arg: 4, scope: !2357, file: !1, type: !8)
!2363 = !DILocalVariable(name: "arg5", arg: 5, scope: !2357, file: !1, type: !9)
!2364 = !DILocalVariable(name: "arg6", arg: 6, scope: !2357, file: !1, type: !8)
!2365 = !DILocation(line: 0, scope: !2357)
!2366 = !{!2367, !2367, i64 0}
!2367 = !{!"0000020E46D771F0.w4.b0", !2368, i64 0}
!2368 = !{!"0000020E46D771F0.w8.b0", !2369, i64 0}
!2369 = !{!"0000020E46D771F0.w16.b0", !2370, i64 0}
!2370 = !{!"0000020E46D771F0.w32.b0", !2371, i64 0}
!2371 = !{!"0000020E46D771F0.w64.b0", !2372, i64 0}
!2372 = !{!"0000020E46D771F0.w128.b0", !2373, i64 0}
!2373 = !{!"0000020E46D771F0.w256.b0", !2374, i64 0}
!2374 = !{!"0000020E46D771F0.w512.b0", !2375, i64 0}
!2375 = !{!"0000020E46D771F0.w1024.b0", !2376, i64 0}
!2376 = !{!"0000020E46D771F0", !21, i64 0}
!2377 = !{!2378, !2378, i64 0}
!2378 = !{!"0000020E46D771F0.w4.b4", !2368, i64 0}
!2379 = !{!2380, !2380, i64 0}
!2380 = !{!"0000020E46D771F0.w4.b8", !2381, i64 0}
!2381 = !{!"0000020E46D771F0.w8.b8", !2369, i64 0}
!2382 = !{!2383, !2383, i64 0}
!2383 = !{!"0000020E46D771F0.w4.b12", !2381, i64 0}
!2384 = !{!2385, !2385, i64 0}
!2385 = !{!"0000020E46D791B0.w8.b0", !2386, i64 0}
!2386 = !{!"0000020E46D791B0.w16.b0", !2387, i64 0}
!2387 = !{!"0000020E46D791B0.w32.b0", !2388, i64 0}
!2388 = !{!"0000020E46D791B0.w64.b0", !2389, i64 0}
!2389 = !{!"0000020E46D791B0.w128.b0", !2390, i64 0}
!2390 = !{!"0000020E46D791B0.w256.b0", !2391, i64 0}
!2391 = !{!"0000020E46D791B0.w512.b0", !2392, i64 0}
!2392 = !{!"0000020E46D791B0.w1024.b0", !2393, i64 0}
!2393 = !{!"0000020E46D791B0", !21, i64 0}
!2394 = !{!2395, !2395, i64 0}
!2395 = !{!"0000020E46D791B0.w8.b8", !2386, i64 0}
!2396 = !{!2397, !2397, i64 0}
!2397 = !{!"0000020E46D791B0.w8.b16", !2398, i64 0}
!2398 = !{!"0000020E46D791B0.w16.b16", !2387, i64 0}
!2399 = !{!2400, !2400, i64 0}
!2400 = !{!"0000020E46D791B0.w8.b24", !2398, i64 0}
!2401 = !{!2402, !2402, i64 0}
!2402 = !{!"0000020E46D7A170.w8.b8", !2403, i64 0}
!2403 = !{!"0000020E46D7A170.w16.b0", !2404, i64 0}
!2404 = !{!"0000020E46D7A170.w32.b0", !2405, i64 0}
!2405 = !{!"0000020E46D7A170.w64.b0", !2406, i64 0}
!2406 = !{!"0000020E46D7A170.w128.b0", !2407, i64 0}
!2407 = !{!"0000020E46D7A170.w256.b0", !2408, i64 0}
!2408 = !{!"0000020E46D7A170.w512.b0", !2409, i64 0}
!2409 = !{!"0000020E46D7A170.w1024.b0", !2410, i64 0}
!2410 = !{!"0000020E46D7A170", !21, i64 0}
!2411 = !{!2412, !2412, i64 0}
!2412 = !{!"0000020E46D7A170.w8.b16", !2413, i64 0}
!2413 = !{!"0000020E46D7A170.w16.b16", !2404, i64 0}
!2414 = !{!2415, !2415, i64 0}
!2415 = !{!"0000020E46D7A170.w8.b24", !2413, i64 0}
!2416 = !{!2417, !2417, i64 0}
!2417 = !{!"0000020E46D7AD70.w8.b0", !2418, i64 0}
!2418 = !{!"0000020E46D7AD70.w16.b0", !2419, i64 0}
!2419 = !{!"0000020E46D7AD70.w32.b0", !2420, i64 0}
!2420 = !{!"0000020E46D7AD70.w64.b0", !2421, i64 0}
!2421 = !{!"0000020E46D7AD70.w128.b0", !2422, i64 0}
!2422 = !{!"0000020E46D7AD70.w256.b0", !2423, i64 0}
!2423 = !{!"0000020E46D7AD70.w512.b0", !2424, i64 0}
!2424 = !{!"0000020E46D7AD70.w1024.b0", !2425, i64 0}
!2425 = !{!"0000020E46D7AD70", !21, i64 0}
!2426 = !{!2427, !2427, i64 0}
!2427 = !{!"0000020E46D7AD70.w8.b8", !2418, i64 0}
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"0000020E46D7AD70.w8.b16", !2430, i64 0}
!2430 = !{!"0000020E46D7AD70.w16.b16", !2419, i64 0}
!2431 = !{!2432, !2432, i64 0}
!2432 = !{!"0000020E46D7AD70.w8.b24", !2430, i64 0}
!2433 = !{!2434, !2434, i64 0}
!2434 = !{!"0000020E46D7AE70.w8.b0", !2435, i64 0}
!2435 = !{!"0000020E46D7AE70.w16.b0", !2436, i64 0}
!2436 = !{!"0000020E46D7AE70.w32.b0", !2437, i64 0}
!2437 = !{!"0000020E46D7AE70.w64.b0", !2438, i64 0}
!2438 = !{!"0000020E46D7AE70.w128.b0", !2439, i64 0}
!2439 = !{!"0000020E46D7AE70.w256.b0", !2440, i64 0}
!2440 = !{!"0000020E46D7AE70.w512.b0", !2441, i64 0}
!2441 = !{!"0000020E46D7AE70.w1024.b0", !2442, i64 0}
!2442 = !{!"0000020E46D7AE70", !21, i64 0}
!2443 = !{!2444, !2444, i64 0}
!2444 = !{!"0000020E46D7AE70.w8.b8", !2435, i64 0}
!2445 = !{!2446, !2446, i64 0}
!2446 = !{!"0000020E46D7BAF0.w8.b0", !2447, i64 0}
!2447 = !{!"0000020E46D7BAF0.w16.b0", !2448, i64 0}
!2448 = !{!"0000020E46D7BAF0.w32.b0", !2449, i64 0}
!2449 = !{!"0000020E46D7BAF0.w64.b0", !2450, i64 0}
!2450 = !{!"0000020E46D7BAF0.w128.b0", !2451, i64 0}
!2451 = !{!"0000020E46D7BAF0.w256.b0", !2452, i64 0}
!2452 = !{!"0000020E46D7BAF0.w512.b0", !2453, i64 0}
!2453 = !{!"0000020E46D7BAF0.w1024.b0", !2454, i64 0}
!2454 = !{!"0000020E46D7BAF0", !21, i64 0}
!2455 = !{!2456, !2456, i64 0}
!2456 = !{!"0000020E46D7BAF0.w8.b8", !2447, i64 0}
!2457 = !{!2458, !2458, i64 0}
!2458 = !{!"0000020E46D7BAF0.w8.b16", !2459, i64 0}
!2459 = !{!"0000020E46D7BAF0.w16.b16", !2448, i64 0}
!2460 = !{!2461, !2461, i64 0}
!2461 = !{!"0000020E46D7BAF0.w8.b24", !2459, i64 0}
!2462 = !{!2463, !2463, i64 0}
!2463 = !{!"0000020E46D7B8B0.w8.b8", !2464, i64 0}
!2464 = !{!"0000020E46D7B8B0.w16.b0", !2465, i64 0}
!2465 = !{!"0000020E46D7B8B0.w32.b0", !2466, i64 0}
!2466 = !{!"0000020E46D7B8B0.w64.b0", !2467, i64 0}
!2467 = !{!"0000020E46D7B8B0.w128.b0", !2468, i64 0}
!2468 = !{!"0000020E46D7B8B0.w256.b0", !2469, i64 0}
!2469 = !{!"0000020E46D7B8B0.w512.b0", !2470, i64 0}
!2470 = !{!"0000020E46D7B8B0.w1024.b0", !2471, i64 0}
!2471 = !{!"0000020E46D7B8B0", !21, i64 0}
!2472 = !{!2473, !2473, i64 0}
!2473 = !{!"0000020E46D7C7F0.w8.b0", !2474, i64 0}
!2474 = !{!"0000020E46D7C7F0.w16.b0", !2475, i64 0}
!2475 = !{!"0000020E46D7C7F0.w32.b0", !2476, i64 0}
!2476 = !{!"0000020E46D7C7F0.w64.b0", !2477, i64 0}
!2477 = !{!"0000020E46D7C7F0.w128.b0", !2478, i64 0}
!2478 = !{!"0000020E46D7C7F0.w256.b0", !2479, i64 0}
!2479 = !{!"0000020E46D7C7F0.w512.b0", !2480, i64 0}
!2480 = !{!"0000020E46D7C7F0.w1024.b0", !2481, i64 0}
!2481 = !{!"0000020E46D7C7F0", !21, i64 0}
!2482 = !{!2483, !2483, i64 0}
!2483 = !{!"0000020E46D7C7F0.w8.b8", !2474, i64 0}
!2484 = !{!2485, !2485, i64 0}
!2485 = !{!"0000020E46D7C7F0.w8.b16", !2486, i64 0}
!2486 = !{!"0000020E46D7C7F0.w16.b16", !2475, i64 0}
!2487 = !{!2488, !2488, i64 0}
!2488 = !{!"0000020E46D7C7F0.w8.b24", !2486, i64 0}
!2489 = !{!2490, !2490, i64 0}
!2490 = !{!"0000020E46D7CCB0.w8.b8", !2491, i64 0}
!2491 = !{!"0000020E46D7CCB0.w16.b0", !2492, i64 0}
!2492 = !{!"0000020E46D7CCB0.w32.b0", !2493, i64 0}
!2493 = !{!"0000020E46D7CCB0.w64.b0", !2494, i64 0}
!2494 = !{!"0000020E46D7CCB0.w128.b0", !2495, i64 0}
!2495 = !{!"0000020E46D7CCB0.w256.b0", !2496, i64 0}
!2496 = !{!"0000020E46D7CCB0.w512.b0", !2497, i64 0}
!2497 = !{!"0000020E46D7CCB0.w1024.b0", !2498, i64 0}
!2498 = !{!"0000020E46D7CCB0", !21, i64 0}
!2499 = !{!2500, !2500, i64 0}
!2500 = !{!"0000020E46D7CCB0.w8.b16", !2501, i64 0}
!2501 = !{!"0000020E46D7CCB0.w16.b16", !2492, i64 0}
!2502 = !{!2503, !2503, i64 0}
!2503 = !{!"0000020E46D7CCB0.w8.b24", !2501, i64 0}
!2504 = !{!2505, !2505, i64 0}
!2505 = !{!"0000020E304D5430.w4.b0", !2506, i64 0}
!2506 = !{!"0000020E304D5430.w8.b0", !2507, i64 0}
!2507 = !{!"0000020E304D5430.w16.b0", !2508, i64 0}
!2508 = !{!"0000020E304D5430.w32.b0", !2509, i64 0}
!2509 = !{!"0000020E304D5430.w64.b0", !2510, i64 0}
!2510 = !{!"0000020E304D5430.w128.b0", !2511, i64 0}
!2511 = !{!"0000020E304D5430.w256.b0", !2512, i64 0}
!2512 = !{!"0000020E304D5430.w512.b0", !2513, i64 0}
!2513 = !{!"0000020E304D5430.w1024.b0", !2514, i64 0}
!2514 = !{!"0000020E304D5430", !21, i64 0}
!2515 = !{!2516, !2516, i64 0}
!2516 = !{!"0000020E304D5430.w4.b4", !2506, i64 0}
!2517 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524}
!2519 = !DILocalVariable(name: "arg1", arg: 1, scope: !2517, file: !1, type: !8)
!2520 = !DILocalVariable(name: "arg2", arg: 2, scope: !2517, file: !1, type: !9)
!2521 = !DILocalVariable(name: "arg3", arg: 3, scope: !2517, file: !1, type: !7)
!2522 = !DILocalVariable(name: "arg4", arg: 4, scope: !2517, file: !1, type: !8)
!2523 = !DILocalVariable(name: "arg5", arg: 5, scope: !2517, file: !1, type: !9)
!2524 = !DILocalVariable(name: "arg6", arg: 6, scope: !2517, file: !1, type: !8)
!2525 = !DILocation(line: 0, scope: !2517)
!2526 = !{!2527, !2527, i64 0}
!2527 = !{!"0000020E468F7F40.w4.b0", !2528, i64 0}
!2528 = !{!"0000020E468F7F40.w8.b0", !2529, i64 0}
!2529 = !{!"0000020E468F7F40.w16.b0", !2530, i64 0}
!2530 = !{!"0000020E468F7F40.w32.b0", !2531, i64 0}
!2531 = !{!"0000020E468F7F40.w64.b0", !2532, i64 0}
!2532 = !{!"0000020E468F7F40.w128.b0", !2533, i64 0}
!2533 = !{!"0000020E468F7F40.w256.b0", !2534, i64 0}
!2534 = !{!"0000020E468F7F40.w512.b0", !2535, i64 0}
!2535 = !{!"0000020E468F7F40.w1024.b0", !2536, i64 0}
!2536 = !{!"0000020E468F7F40", !21, i64 0}
!2537 = !{!2538, !2538, i64 0}
!2538 = !{!"0000020E468F7F40.w4.b4", !2528, i64 0}
!2539 = !{!2540, !2540, i64 0}
!2540 = !{!"0000020E468F7F40.w4.b8", !2541, i64 0}
!2541 = !{!"0000020E468F7F40.w8.b8", !2529, i64 0}
!2542 = !{!2543, !2543, i64 0}
!2543 = !{!"0000020E468F7F40.w4.b12", !2541, i64 0}
!2544 = !{!2545, !2545, i64 0}
!2545 = !{!"0000020E468F9440.w8.b0", !2546, i64 0}
!2546 = !{!"0000020E468F9440.w16.b0", !2547, i64 0}
!2547 = !{!"0000020E468F9440.w32.b0", !2548, i64 0}
!2548 = !{!"0000020E468F9440.w64.b0", !2549, i64 0}
!2549 = !{!"0000020E468F9440.w128.b0", !2550, i64 0}
!2550 = !{!"0000020E468F9440.w256.b0", !2551, i64 0}
!2551 = !{!"0000020E468F9440.w512.b0", !2552, i64 0}
!2552 = !{!"0000020E468F9440.w1024.b0", !2553, i64 0}
!2553 = !{!"0000020E468F9440", !21, i64 0}
!2554 = !{!2555, !2555, i64 0}
!2555 = !{!"0000020E468F9440.w8.b8", !2546, i64 0}
!2556 = !{!2557, !2557, i64 0}
!2557 = !{!"0000020E468F9440.w8.b16", !2558, i64 0}
!2558 = !{!"0000020E468F9440.w16.b16", !2547, i64 0}
!2559 = !{!2560, !2560, i64 0}
!2560 = !{!"0000020E468F9440.w8.b24", !2558, i64 0}
!2561 = !{!2562, !2562, i64 0}
!2562 = !{!"0000020E468F9740.w8.b8", !2563, i64 0}
!2563 = !{!"0000020E468F9740.w16.b0", !2564, i64 0}
!2564 = !{!"0000020E468F9740.w32.b0", !2565, i64 0}
!2565 = !{!"0000020E468F9740.w64.b0", !2566, i64 0}
!2566 = !{!"0000020E468F9740.w128.b0", !2567, i64 0}
!2567 = !{!"0000020E468F9740.w256.b0", !2568, i64 0}
!2568 = !{!"0000020E468F9740.w512.b0", !2569, i64 0}
!2569 = !{!"0000020E468F9740.w1024.b0", !2570, i64 0}
!2570 = !{!"0000020E468F9740", !21, i64 0}
!2571 = !{!2572, !2572, i64 0}
!2572 = !{!"0000020E468F9740.w8.b16", !2573, i64 0}
!2573 = !{!"0000020E468F9740.w16.b16", !2564, i64 0}
!2574 = !{!2575, !2575, i64 0}
!2575 = !{!"0000020E468F9740.w8.b24", !2573, i64 0}
!2576 = !{!2577, !2577, i64 0}
!2577 = !{!"0000020E468FC500.w8.b0", !2578, i64 0}
!2578 = !{!"0000020E468FC500.w16.b0", !2579, i64 0}
!2579 = !{!"0000020E468FC500.w32.b0", !2580, i64 0}
!2580 = !{!"0000020E468FC500.w64.b0", !2581, i64 0}
!2581 = !{!"0000020E468FC500.w128.b0", !2582, i64 0}
!2582 = !{!"0000020E468FC500.w256.b0", !2583, i64 0}
!2583 = !{!"0000020E468FC500.w512.b0", !2584, i64 0}
!2584 = !{!"0000020E468FC500.w1024.b0", !2585, i64 0}
!2585 = !{!"0000020E468FC500", !21, i64 0}
!2586 = !{!2587, !2587, i64 0}
!2587 = !{!"0000020E468FC500.w8.b8", !2578, i64 0}
!2588 = !{!2589, !2589, i64 0}
!2589 = !{!"0000020E468FC500.w8.b16", !2590, i64 0}
!2590 = !{!"0000020E468FC500.w16.b16", !2579, i64 0}
!2591 = !{!2592, !2592, i64 0}
!2592 = !{!"0000020E468FC500.w8.b24", !2590, i64 0}
!2593 = !{!2594, !2594, i64 0}
!2594 = !{!"0000020E468FC8C0.w8.b0", !2595, i64 0}
!2595 = !{!"0000020E468FC8C0.w16.b0", !2596, i64 0}
!2596 = !{!"0000020E468FC8C0.w32.b0", !2597, i64 0}
!2597 = !{!"0000020E468FC8C0.w64.b0", !2598, i64 0}
!2598 = !{!"0000020E468FC8C0.w128.b0", !2599, i64 0}
!2599 = !{!"0000020E468FC8C0.w256.b0", !2600, i64 0}
!2600 = !{!"0000020E468FC8C0.w512.b0", !2601, i64 0}
!2601 = !{!"0000020E468FC8C0.w1024.b0", !2602, i64 0}
!2602 = !{!"0000020E468FC8C0", !21, i64 0}
!2603 = !{!2604, !2604, i64 0}
!2604 = !{!"0000020E468FC8C0.w8.b8", !2595, i64 0}
!2605 = !{!2606, !2606, i64 0}
!2606 = !{!"0000020E468FC8C0.w8.b16", !2607, i64 0}
!2607 = !{!"0000020E468FC8C0.w16.b16", !2596, i64 0}
!2608 = !{!2609, !2609, i64 0}
!2609 = !{!"0000020E468FC8C0.w8.b24", !2607, i64 0}
!2610 = !{!2611, !2611, i64 0}
!2611 = !{!"0000020E468DCB40.w8.b0", !2612, i64 0}
!2612 = !{!"0000020E468DCB40.w16.b0", !2613, i64 0}
!2613 = !{!"0000020E468DCB40.w32.b0", !2614, i64 0}
!2614 = !{!"0000020E468DCB40.w64.b0", !2615, i64 0}
!2615 = !{!"0000020E468DCB40.w128.b0", !2616, i64 0}
!2616 = !{!"0000020E468DCB40.w256.b0", !2617, i64 0}
!2617 = !{!"0000020E468DCB40.w512.b0", !2618, i64 0}
!2618 = !{!"0000020E468DCB40.w1024.b0", !2619, i64 0}
!2619 = !{!"0000020E468DCB40", !21, i64 0}
!2620 = !{!2621, !2621, i64 0}
!2621 = !{!"0000020E468DCB40.w8.b8", !2612, i64 0}
!2622 = !{!2623, !2623, i64 0}
!2623 = !{!"0000020E468DCB40.w8.b16", !2624, i64 0}
!2624 = !{!"0000020E468DCB40.w16.b16", !2613, i64 0}
!2625 = !{!2626, !2626, i64 0}
!2626 = !{!"0000020E468DCB40.w8.b24", !2624, i64 0}
!2627 = !{!2628, !2628, i64 0}
!2628 = !{!"0000020E468DD480.w8.b8", !2629, i64 0}
!2629 = !{!"0000020E468DD480.w16.b0", !2630, i64 0}
!2630 = !{!"0000020E468DD480.w32.b0", !2631, i64 0}
!2631 = !{!"0000020E468DD480.w64.b0", !2632, i64 0}
!2632 = !{!"0000020E468DD480.w128.b0", !2633, i64 0}
!2633 = !{!"0000020E468DD480.w256.b0", !2634, i64 0}
!2634 = !{!"0000020E468DD480.w512.b0", !2635, i64 0}
!2635 = !{!"0000020E468DD480.w1024.b0", !2636, i64 0}
!2636 = !{!"0000020E468DD480", !21, i64 0}
!2637 = !{!2638, !2638, i64 0}
!2638 = !{!"0000020E468DEEC0.w8.b0", !2639, i64 0}
!2639 = !{!"0000020E468DEEC0.w16.b0", !2640, i64 0}
!2640 = !{!"0000020E468DEEC0.w32.b0", !2641, i64 0}
!2641 = !{!"0000020E468DEEC0.w64.b0", !2642, i64 0}
!2642 = !{!"0000020E468DEEC0.w128.b0", !2643, i64 0}
!2643 = !{!"0000020E468DEEC0.w256.b0", !2644, i64 0}
!2644 = !{!"0000020E468DEEC0.w512.b0", !2645, i64 0}
!2645 = !{!"0000020E468DEEC0.w1024.b0", !2646, i64 0}
!2646 = !{!"0000020E468DEEC0", !21, i64 0}
!2647 = !{!2648, !2648, i64 0}
!2648 = !{!"0000020E468DEEC0.w8.b8", !2639, i64 0}
!2649 = !{!2650, !2650, i64 0}
!2650 = !{!"0000020E468DEEC0.w8.b16", !2651, i64 0}
!2651 = !{!"0000020E468DEEC0.w16.b16", !2640, i64 0}
!2652 = !{!2653, !2653, i64 0}
!2653 = !{!"0000020E468DEEC0.w8.b24", !2651, i64 0}
!2654 = !{!2655, !2655, i64 0}
!2655 = !{!"0000020E468E0000.w8.b8", !2656, i64 0}
!2656 = !{!"0000020E468E0000.w16.b0", !2657, i64 0}
!2657 = !{!"0000020E468E0000.w32.b0", !2658, i64 0}
!2658 = !{!"0000020E468E0000.w64.b0", !2659, i64 0}
!2659 = !{!"0000020E468E0000.w128.b0", !2660, i64 0}
!2660 = !{!"0000020E468E0000.w256.b0", !2661, i64 0}
!2661 = !{!"0000020E468E0000.w512.b0", !2662, i64 0}
!2662 = !{!"0000020E468E0000.w1024.b0", !2663, i64 0}
!2663 = !{!"0000020E468E0000", !21, i64 0}
!2664 = !{!2665, !2665, i64 0}
!2665 = !{!"0000020E468E0000.w8.b16", !2666, i64 0}
!2666 = !{!"0000020E468E0000.w16.b16", !2657, i64 0}
!2667 = !{!2668, !2668, i64 0}
!2668 = !{!"0000020E468E0000.w8.b24", !2666, i64 0}
!2669 = !{!2670, !2670, i64 0}
!2670 = !{!"0000020E46D743B0.w4.b0", !2671, i64 0}
!2671 = !{!"0000020E46D743B0.w8.b0", !2672, i64 0}
!2672 = !{!"0000020E46D743B0.w16.b0", !2673, i64 0}
!2673 = !{!"0000020E46D743B0.w32.b0", !2674, i64 0}
!2674 = !{!"0000020E46D743B0.w64.b0", !2675, i64 0}
!2675 = !{!"0000020E46D743B0.w128.b0", !2676, i64 0}
!2676 = !{!"0000020E46D743B0.w256.b0", !2677, i64 0}
!2677 = !{!"0000020E46D743B0.w512.b0", !2678, i64 0}
!2678 = !{!"0000020E46D743B0.w1024.b0", !2679, i64 0}
!2679 = !{!"0000020E46D743B0", !21, i64 0}
!2680 = !{!2681, !2681, i64 0}
!2681 = !{!"0000020E46D743B0.w4.b4", !2671, i64 0}
!2682 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2683)
!2683 = !{!2684, !2685, !2686, !2687, !2688, !2689}
!2684 = !DILocalVariable(name: "arg1", arg: 1, scope: !2682, file: !1, type: !8)
!2685 = !DILocalVariable(name: "arg2", arg: 2, scope: !2682, file: !1, type: !9)
!2686 = !DILocalVariable(name: "arg3", arg: 3, scope: !2682, file: !1, type: !7)
!2687 = !DILocalVariable(name: "arg4", arg: 4, scope: !2682, file: !1, type: !8)
!2688 = !DILocalVariable(name: "arg5", arg: 5, scope: !2682, file: !1, type: !9)
!2689 = !DILocalVariable(name: "arg6", arg: 6, scope: !2682, file: !1, type: !8)
!2690 = !DILocation(line: 0, scope: !2682)
!2691 = !{!2692, !2692, i64 0}
!2692 = !{!"0000020E47F37120.w4.b0", !2693, i64 0}
!2693 = !{!"0000020E47F37120.w8.b0", !2694, i64 0}
!2694 = !{!"0000020E47F37120.w16.b0", !2695, i64 0}
!2695 = !{!"0000020E47F37120.w32.b0", !2696, i64 0}
!2696 = !{!"0000020E47F37120.w64.b0", !2697, i64 0}
!2697 = !{!"0000020E47F37120.w128.b0", !2698, i64 0}
!2698 = !{!"0000020E47F37120.w256.b0", !2699, i64 0}
!2699 = !{!"0000020E47F37120.w512.b0", !2700, i64 0}
!2700 = !{!"0000020E47F37120.w1024.b0", !2701, i64 0}
!2701 = !{!"0000020E47F37120", !21, i64 0}
!2702 = !{!2703, !2703, i64 0}
!2703 = !{!"0000020E47F37120.w4.b4", !2693, i64 0}
!2704 = !{!2705, !2705, i64 0}
!2705 = !{!"0000020E47F37120.w4.b8", !2706, i64 0}
!2706 = !{!"0000020E47F37120.w8.b8", !2694, i64 0}
!2707 = !{!2708, !2708, i64 0}
!2708 = !{!"0000020E47F37120.w4.b12", !2706, i64 0}
!2709 = !{!2710, !2710, i64 0}
!2710 = !{!"0000020E47F1B220.w8.b0", !2711, i64 0}
!2711 = !{!"0000020E47F1B220.w16.b0", !2712, i64 0}
!2712 = !{!"0000020E47F1B220.w32.b0", !2713, i64 0}
!2713 = !{!"0000020E47F1B220.w64.b0", !2714, i64 0}
!2714 = !{!"0000020E47F1B220.w128.b0", !2715, i64 0}
!2715 = !{!"0000020E47F1B220.w256.b0", !2716, i64 0}
!2716 = !{!"0000020E47F1B220.w512.b0", !2717, i64 0}
!2717 = !{!"0000020E47F1B220.w1024.b0", !2718, i64 0}
!2718 = !{!"0000020E47F1B220", !21, i64 0}
!2719 = !{!2720, !2720, i64 0}
!2720 = !{!"0000020E47F1B220.w8.b8", !2711, i64 0}
!2721 = !{!2722, !2722, i64 0}
!2722 = !{!"0000020E47F1B220.w8.b16", !2723, i64 0}
!2723 = !{!"0000020E47F1B220.w16.b16", !2712, i64 0}
!2724 = !{!2725, !2725, i64 0}
!2725 = !{!"0000020E47F1B220.w8.b24", !2723, i64 0}
!2726 = !{!2727, !2727, i64 0}
!2727 = !{!"0000020E47F1C160.w8.b8", !2728, i64 0}
!2728 = !{!"0000020E47F1C160.w16.b0", !2729, i64 0}
!2729 = !{!"0000020E47F1C160.w32.b0", !2730, i64 0}
!2730 = !{!"0000020E47F1C160.w64.b0", !2731, i64 0}
!2731 = !{!"0000020E47F1C160.w128.b0", !2732, i64 0}
!2732 = !{!"0000020E47F1C160.w256.b0", !2733, i64 0}
!2733 = !{!"0000020E47F1C160.w512.b0", !2734, i64 0}
!2734 = !{!"0000020E47F1C160.w1024.b0", !2735, i64 0}
!2735 = !{!"0000020E47F1C160", !21, i64 0}
!2736 = !{!2737, !2737, i64 0}
!2737 = !{!"0000020E47F1C160.w8.b16", !2738, i64 0}
!2738 = !{!"0000020E47F1C160.w16.b16", !2729, i64 0}
!2739 = !{!2740, !2740, i64 0}
!2740 = !{!"0000020E47F1C160.w8.b24", !2738, i64 0}
!2741 = !{!2742, !2742, i64 0}
!2742 = !{!"0000020E47F1C460.w8.b0", !2743, i64 0}
!2743 = !{!"0000020E47F1C460.w16.b0", !2744, i64 0}
!2744 = !{!"0000020E47F1C460.w32.b0", !2745, i64 0}
!2745 = !{!"0000020E47F1C460.w64.b0", !2746, i64 0}
!2746 = !{!"0000020E47F1C460.w128.b0", !2747, i64 0}
!2747 = !{!"0000020E47F1C460.w256.b0", !2748, i64 0}
!2748 = !{!"0000020E47F1C460.w512.b0", !2749, i64 0}
!2749 = !{!"0000020E47F1C460.w1024.b0", !2750, i64 0}
!2750 = !{!"0000020E47F1C460", !21, i64 0}
!2751 = !{!2752, !2752, i64 0}
!2752 = !{!"0000020E47F1C460.w8.b8", !2743, i64 0}
!2753 = !{!2754, !2754, i64 0}
!2754 = !{!"0000020E47F1C460.w8.b16", !2755, i64 0}
!2755 = !{!"0000020E47F1C460.w16.b16", !2744, i64 0}
!2756 = !{!2757, !2757, i64 0}
!2757 = !{!"0000020E47F1C460.w8.b24", !2755, i64 0}
!2758 = !{!2759, !2759, i64 0}
!2759 = !{!"0000020E47F1DF20.w8.b0", !2760, i64 0}
!2760 = !{!"0000020E47F1DF20.w16.b0", !2761, i64 0}
!2761 = !{!"0000020E47F1DF20.w32.b0", !2762, i64 0}
!2762 = !{!"0000020E47F1DF20.w64.b0", !2763, i64 0}
!2763 = !{!"0000020E47F1DF20.w128.b0", !2764, i64 0}
!2764 = !{!"0000020E47F1DF20.w256.b0", !2765, i64 0}
!2765 = !{!"0000020E47F1DF20.w512.b0", !2766, i64 0}
!2766 = !{!"0000020E47F1DF20.w1024.b0", !2767, i64 0}
!2767 = !{!"0000020E47F1DF20", !21, i64 0}
!2768 = !{!2769, !2769, i64 0}
!2769 = !{!"0000020E47F1DF20.w8.b8", !2760, i64 0}
!2770 = !{!2771, !2771, i64 0}
!2771 = !{!"0000020E47F1D3E0.w8.b0", !2772, i64 0}
!2772 = !{!"0000020E47F1D3E0.w16.b0", !2773, i64 0}
!2773 = !{!"0000020E47F1D3E0.w32.b0", !2774, i64 0}
!2774 = !{!"0000020E47F1D3E0.w64.b0", !2775, i64 0}
!2775 = !{!"0000020E47F1D3E0.w128.b0", !2776, i64 0}
!2776 = !{!"0000020E47F1D3E0.w256.b0", !2777, i64 0}
!2777 = !{!"0000020E47F1D3E0.w512.b0", !2778, i64 0}
!2778 = !{!"0000020E47F1D3E0.w1024.b0", !2779, i64 0}
!2779 = !{!"0000020E47F1D3E0", !21, i64 0}
!2780 = !{!2781, !2781, i64 0}
!2781 = !{!"0000020E47F1D3E0.w8.b8", !2772, i64 0}
!2782 = !{!2783, !2783, i64 0}
!2783 = !{!"0000020E47F1D3E0.w8.b16", !2784, i64 0}
!2784 = !{!"0000020E47F1D3E0.w16.b16", !2773, i64 0}
!2785 = !{!2786, !2786, i64 0}
!2786 = !{!"0000020E47F1D3E0.w8.b24", !2784, i64 0}
!2787 = !{!2788, !2788, i64 0}
!2788 = !{!"0000020E47F1E560.w8.b8", !2789, i64 0}
!2789 = !{!"0000020E47F1E560.w16.b0", !2790, i64 0}
!2790 = !{!"0000020E47F1E560.w32.b0", !2791, i64 0}
!2791 = !{!"0000020E47F1E560.w64.b0", !2792, i64 0}
!2792 = !{!"0000020E47F1E560.w128.b0", !2793, i64 0}
!2793 = !{!"0000020E47F1E560.w256.b0", !2794, i64 0}
!2794 = !{!"0000020E47F1E560.w512.b0", !2795, i64 0}
!2795 = !{!"0000020E47F1E560.w1024.b0", !2796, i64 0}
!2796 = !{!"0000020E47F1E560", !21, i64 0}
!2797 = !{!2798, !2798, i64 0}
!2798 = !{!"0000020E47F1E5E0.w8.b0", !2799, i64 0}
!2799 = !{!"0000020E47F1E5E0.w16.b0", !2800, i64 0}
!2800 = !{!"0000020E47F1E5E0.w32.b0", !2801, i64 0}
!2801 = !{!"0000020E47F1E5E0.w64.b0", !2802, i64 0}
!2802 = !{!"0000020E47F1E5E0.w128.b0", !2803, i64 0}
!2803 = !{!"0000020E47F1E5E0.w256.b0", !2804, i64 0}
!2804 = !{!"0000020E47F1E5E0.w512.b0", !2805, i64 0}
!2805 = !{!"0000020E47F1E5E0.w1024.b0", !2806, i64 0}
!2806 = !{!"0000020E47F1E5E0", !21, i64 0}
!2807 = !{!2808, !2808, i64 0}
!2808 = !{!"0000020E47F1E5E0.w8.b8", !2799, i64 0}
!2809 = !{!2810, !2810, i64 0}
!2810 = !{!"0000020E47F1E5E0.w8.b16", !2811, i64 0}
!2811 = !{!"0000020E47F1E5E0.w16.b16", !2800, i64 0}
!2812 = !{!2813, !2813, i64 0}
!2813 = !{!"0000020E47F1E5E0.w8.b24", !2811, i64 0}
!2814 = !{!2815, !2815, i64 0}
!2815 = !{!"0000020E47F1F060.w8.b8", !2816, i64 0}
!2816 = !{!"0000020E47F1F060.w16.b0", !2817, i64 0}
!2817 = !{!"0000020E47F1F060.w32.b0", !2818, i64 0}
!2818 = !{!"0000020E47F1F060.w64.b0", !2819, i64 0}
!2819 = !{!"0000020E47F1F060.w128.b0", !2820, i64 0}
!2820 = !{!"0000020E47F1F060.w256.b0", !2821, i64 0}
!2821 = !{!"0000020E47F1F060.w512.b0", !2822, i64 0}
!2822 = !{!"0000020E47F1F060.w1024.b0", !2823, i64 0}
!2823 = !{!"0000020E47F1F060", !21, i64 0}
!2824 = !{!2825, !2825, i64 0}
!2825 = !{!"0000020E47F1F060.w8.b16", !2826, i64 0}
!2826 = !{!"0000020E47F1F060.w16.b16", !2817, i64 0}
!2827 = !{!2828, !2828, i64 0}
!2828 = !{!"0000020E47F1F060.w8.b24", !2826, i64 0}
!2829 = !{!2830, !2830, i64 0}
!2830 = !{!"0000020E47FDD4B0.w4.b0", !2831, i64 0}
!2831 = !{!"0000020E47FDD4B0.w8.b0", !2832, i64 0}
!2832 = !{!"0000020E47FDD4B0.w16.b0", !2833, i64 0}
!2833 = !{!"0000020E47FDD4B0.w32.b0", !2834, i64 0}
!2834 = !{!"0000020E47FDD4B0.w64.b0", !2835, i64 0}
!2835 = !{!"0000020E47FDD4B0.w128.b0", !2836, i64 0}
!2836 = !{!"0000020E47FDD4B0.w256.b0", !2837, i64 0}
!2837 = !{!"0000020E47FDD4B0.w512.b0", !2838, i64 0}
!2838 = !{!"0000020E47FDD4B0.w1024.b0", !2839, i64 0}
!2839 = !{!"0000020E47FDD4B0", !21, i64 0}
!2840 = !{!2841, !2841, i64 0}
!2841 = !{!"0000020E47FDD4B0.w4.b4", !2831, i64 0}
!2842 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2843)
!2843 = !{!2844, !2845, !2846, !2847, !2848, !2849}
!2844 = !DILocalVariable(name: "arg1", arg: 1, scope: !2842, file: !1, type: !8)
!2845 = !DILocalVariable(name: "arg2", arg: 2, scope: !2842, file: !1, type: !9)
!2846 = !DILocalVariable(name: "arg3", arg: 3, scope: !2842, file: !1, type: !7)
!2847 = !DILocalVariable(name: "arg4", arg: 4, scope: !2842, file: !1, type: !8)
!2848 = !DILocalVariable(name: "arg5", arg: 5, scope: !2842, file: !1, type: !9)
!2849 = !DILocalVariable(name: "arg6", arg: 6, scope: !2842, file: !1, type: !8)
!2850 = !DILocation(line: 0, scope: !2842)
!2851 = !{!2852, !2852, i64 0}
!2852 = !{!"0000020E47F27620.w4.b0", !2853, i64 0}
!2853 = !{!"0000020E47F27620.w8.b0", !2854, i64 0}
!2854 = !{!"0000020E47F27620.w16.b0", !2855, i64 0}
!2855 = !{!"0000020E47F27620.w32.b0", !2856, i64 0}
!2856 = !{!"0000020E47F27620.w64.b0", !2857, i64 0}
!2857 = !{!"0000020E47F27620.w128.b0", !2858, i64 0}
!2858 = !{!"0000020E47F27620.w256.b0", !2859, i64 0}
!2859 = !{!"0000020E47F27620.w512.b0", !2860, i64 0}
!2860 = !{!"0000020E47F27620.w1024.b0", !2861, i64 0}
!2861 = !{!"0000020E47F27620", !21, i64 0}
!2862 = !{!2863, !2863, i64 0}
!2863 = !{!"0000020E47F27620.w4.b4", !2853, i64 0}
!2864 = !{!2865, !2865, i64 0}
!2865 = !{!"0000020E47F27620.w4.b8", !2866, i64 0}
!2866 = !{!"0000020E47F27620.w8.b8", !2854, i64 0}
!2867 = !{!2868, !2868, i64 0}
!2868 = !{!"0000020E47F27620.w4.b12", !2866, i64 0}
!2869 = !{!2870, !2870, i64 0}
!2870 = !{!"0000020E47F310E0.w8.b0", !2871, i64 0}
!2871 = !{!"0000020E47F310E0.w16.b0", !2872, i64 0}
!2872 = !{!"0000020E47F310E0.w32.b0", !2873, i64 0}
!2873 = !{!"0000020E47F310E0.w64.b0", !2874, i64 0}
!2874 = !{!"0000020E47F310E0.w128.b0", !2875, i64 0}
!2875 = !{!"0000020E47F310E0.w256.b0", !2876, i64 0}
!2876 = !{!"0000020E47F310E0.w512.b0", !2877, i64 0}
!2877 = !{!"0000020E47F310E0.w1024.b0", !2878, i64 0}
!2878 = !{!"0000020E47F310E0", !21, i64 0}
!2879 = !{!2880, !2880, i64 0}
!2880 = !{!"0000020E47F310E0.w8.b8", !2871, i64 0}
!2881 = !{!2882, !2882, i64 0}
!2882 = !{!"0000020E47F310E0.w8.b16", !2883, i64 0}
!2883 = !{!"0000020E47F310E0.w16.b16", !2872, i64 0}
!2884 = !{!2885, !2885, i64 0}
!2885 = !{!"0000020E47F310E0.w8.b24", !2883, i64 0}
!2886 = !{!2887, !2887, i64 0}
!2887 = !{!"0000020E47F309A0.w8.b8", !2888, i64 0}
!2888 = !{!"0000020E47F309A0.w16.b0", !2889, i64 0}
!2889 = !{!"0000020E47F309A0.w32.b0", !2890, i64 0}
!2890 = !{!"0000020E47F309A0.w64.b0", !2891, i64 0}
!2891 = !{!"0000020E47F309A0.w128.b0", !2892, i64 0}
!2892 = !{!"0000020E47F309A0.w256.b0", !2893, i64 0}
!2893 = !{!"0000020E47F309A0.w512.b0", !2894, i64 0}
!2894 = !{!"0000020E47F309A0.w1024.b0", !2895, i64 0}
!2895 = !{!"0000020E47F309A0", !21, i64 0}
!2896 = !{!2897, !2897, i64 0}
!2897 = !{!"0000020E47F309A0.w8.b16", !2898, i64 0}
!2898 = !{!"0000020E47F309A0.w16.b16", !2889, i64 0}
!2899 = !{!2900, !2900, i64 0}
!2900 = !{!"0000020E47F309A0.w8.b24", !2898, i64 0}
!2901 = !{!2902, !2902, i64 0}
!2902 = !{!"0000020E47F31CE0.w8.b0", !2903, i64 0}
!2903 = !{!"0000020E47F31CE0.w16.b0", !2904, i64 0}
!2904 = !{!"0000020E47F31CE0.w32.b0", !2905, i64 0}
!2905 = !{!"0000020E47F31CE0.w64.b0", !2906, i64 0}
!2906 = !{!"0000020E47F31CE0.w128.b0", !2907, i64 0}
!2907 = !{!"0000020E47F31CE0.w256.b0", !2908, i64 0}
!2908 = !{!"0000020E47F31CE0.w512.b0", !2909, i64 0}
!2909 = !{!"0000020E47F31CE0.w1024.b0", !2910, i64 0}
!2910 = !{!"0000020E47F31CE0", !21, i64 0}
!2911 = !{!2912, !2912, i64 0}
!2912 = !{!"0000020E47F31CE0.w8.b8", !2903, i64 0}
!2913 = !{!2914, !2914, i64 0}
!2914 = !{!"0000020E47F31CE0.w8.b16", !2915, i64 0}
!2915 = !{!"0000020E47F31CE0.w16.b16", !2904, i64 0}
!2916 = !{!2917, !2917, i64 0}
!2917 = !{!"0000020E47F31CE0.w8.b24", !2915, i64 0}
!2918 = !{!2919, !2919, i64 0}
!2919 = !{!"0000020E47F32120.w8.b0", !2920, i64 0}
!2920 = !{!"0000020E47F32120.w16.b0", !2921, i64 0}
!2921 = !{!"0000020E47F32120.w32.b0", !2922, i64 0}
!2922 = !{!"0000020E47F32120.w64.b0", !2923, i64 0}
!2923 = !{!"0000020E47F32120.w128.b0", !2924, i64 0}
!2924 = !{!"0000020E47F32120.w256.b0", !2925, i64 0}
!2925 = !{!"0000020E47F32120.w512.b0", !2926, i64 0}
!2926 = !{!"0000020E47F32120.w1024.b0", !2927, i64 0}
!2927 = !{!"0000020E47F32120", !21, i64 0}
!2928 = !{!2929, !2929, i64 0}
!2929 = !{!"0000020E47F32120.w8.b8", !2920, i64 0}
!2930 = !{!2931, !2931, i64 0}
!2931 = !{!"0000020E47F32720.w8.b0", !2932, i64 0}
!2932 = !{!"0000020E47F32720.w16.b0", !2933, i64 0}
!2933 = !{!"0000020E47F32720.w32.b0", !2934, i64 0}
!2934 = !{!"0000020E47F32720.w64.b0", !2935, i64 0}
!2935 = !{!"0000020E47F32720.w128.b0", !2936, i64 0}
!2936 = !{!"0000020E47F32720.w256.b0", !2937, i64 0}
!2937 = !{!"0000020E47F32720.w512.b0", !2938, i64 0}
!2938 = !{!"0000020E47F32720.w1024.b0", !2939, i64 0}
!2939 = !{!"0000020E47F32720", !21, i64 0}
!2940 = !{!2941, !2941, i64 0}
!2941 = !{!"0000020E47F32720.w8.b8", !2932, i64 0}
!2942 = !{!2943, !2943, i64 0}
!2943 = !{!"0000020E47F32720.w8.b16", !2944, i64 0}
!2944 = !{!"0000020E47F32720.w16.b16", !2933, i64 0}
!2945 = !{!2946, !2946, i64 0}
!2946 = !{!"0000020E47F32720.w8.b24", !2944, i64 0}
!2947 = !{!2948, !2948, i64 0}
!2948 = !{!"0000020E46D76730.w8.b8", !2949, i64 0}
!2949 = !{!"0000020E46D76730.w16.b0", !2950, i64 0}
!2950 = !{!"0000020E46D76730.w32.b0", !2951, i64 0}
!2951 = !{!"0000020E46D76730.w64.b0", !2952, i64 0}
!2952 = !{!"0000020E46D76730.w128.b0", !2953, i64 0}
!2953 = !{!"0000020E46D76730.w256.b0", !2954, i64 0}
!2954 = !{!"0000020E46D76730.w512.b0", !2955, i64 0}
!2955 = !{!"0000020E46D76730.w1024.b0", !2956, i64 0}
!2956 = !{!"0000020E46D76730", !21, i64 0}
!2957 = !{!2958, !2958, i64 0}
!2958 = !{!"0000020E46D76230.w8.b0", !2959, i64 0}
!2959 = !{!"0000020E46D76230.w16.b0", !2960, i64 0}
!2960 = !{!"0000020E46D76230.w32.b0", !2961, i64 0}
!2961 = !{!"0000020E46D76230.w64.b0", !2962, i64 0}
!2962 = !{!"0000020E46D76230.w128.b0", !2963, i64 0}
!2963 = !{!"0000020E46D76230.w256.b0", !2964, i64 0}
!2964 = !{!"0000020E46D76230.w512.b0", !2965, i64 0}
!2965 = !{!"0000020E46D76230.w1024.b0", !2966, i64 0}
!2966 = !{!"0000020E46D76230", !21, i64 0}
!2967 = !{!2968, !2968, i64 0}
!2968 = !{!"0000020E46D76230.w8.b8", !2959, i64 0}
!2969 = !{!2970, !2970, i64 0}
!2970 = !{!"0000020E46D76230.w8.b16", !2971, i64 0}
!2971 = !{!"0000020E46D76230.w16.b16", !2960, i64 0}
!2972 = !{!2973, !2973, i64 0}
!2973 = !{!"0000020E46D76230.w8.b24", !2971, i64 0}
!2974 = !{!2975, !2975, i64 0}
!2975 = !{!"0000020E46D76670.w8.b8", !2976, i64 0}
!2976 = !{!"0000020E46D76670.w16.b0", !2977, i64 0}
!2977 = !{!"0000020E46D76670.w32.b0", !2978, i64 0}
!2978 = !{!"0000020E46D76670.w64.b0", !2979, i64 0}
!2979 = !{!"0000020E46D76670.w128.b0", !2980, i64 0}
!2980 = !{!"0000020E46D76670.w256.b0", !2981, i64 0}
!2981 = !{!"0000020E46D76670.w512.b0", !2982, i64 0}
!2982 = !{!"0000020E46D76670.w1024.b0", !2983, i64 0}
!2983 = !{!"0000020E46D76670", !21, i64 0}
!2984 = !{!2985, !2985, i64 0}
!2985 = !{!"0000020E46D76670.w8.b16", !2986, i64 0}
!2986 = !{!"0000020E46D76670.w16.b16", !2977, i64 0}
!2987 = !{!2988, !2988, i64 0}
!2988 = !{!"0000020E46D76670.w8.b24", !2986, i64 0}
!2989 = !{!2990, !2990, i64 0}
!2990 = !{!"0000020E47F2F660.w4.b0", !2991, i64 0}
!2991 = !{!"0000020E47F2F660.w8.b0", !2992, i64 0}
!2992 = !{!"0000020E47F2F660.w16.b0", !2993, i64 0}
!2993 = !{!"0000020E47F2F660.w32.b0", !2994, i64 0}
!2994 = !{!"0000020E47F2F660.w64.b0", !2995, i64 0}
!2995 = !{!"0000020E47F2F660.w128.b0", !2996, i64 0}
!2996 = !{!"0000020E47F2F660.w256.b0", !2997, i64 0}
!2997 = !{!"0000020E47F2F660.w512.b0", !2998, i64 0}
!2998 = !{!"0000020E47F2F660.w1024.b0", !2999, i64 0}
!2999 = !{!"0000020E47F2F660", !21, i64 0}
!3000 = !{!3001, !3001, i64 0}
!3001 = !{!"0000020E47F2F660.w4.b4", !2991, i64 0}
!3002 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009}
!3004 = !DILocalVariable(name: "arg1", arg: 1, scope: !3002, file: !1, type: !8)
!3005 = !DILocalVariable(name: "arg2", arg: 2, scope: !3002, file: !1, type: !9)
!3006 = !DILocalVariable(name: "arg3", arg: 3, scope: !3002, file: !1, type: !7)
!3007 = !DILocalVariable(name: "arg4", arg: 4, scope: !3002, file: !1, type: !8)
!3008 = !DILocalVariable(name: "arg5", arg: 5, scope: !3002, file: !1, type: !9)
!3009 = !DILocalVariable(name: "arg6", arg: 6, scope: !3002, file: !1, type: !8)
!3010 = !DILocation(line: 0, scope: !3002)
!3011 = !{!3012, !3012, i64 0}
!3012 = !{!"0000020E467C82B0.w4.b0", !3013, i64 0}
!3013 = !{!"0000020E467C82B0.w8.b0", !3014, i64 0}
!3014 = !{!"0000020E467C82B0.w16.b0", !3015, i64 0}
!3015 = !{!"0000020E467C82B0.w32.b0", !3016, i64 0}
!3016 = !{!"0000020E467C82B0.w64.b0", !3017, i64 0}
!3017 = !{!"0000020E467C82B0.w128.b0", !3018, i64 0}
!3018 = !{!"0000020E467C82B0.w256.b0", !3019, i64 0}
!3019 = !{!"0000020E467C82B0.w512.b0", !3020, i64 0}
!3020 = !{!"0000020E467C82B0.w1024.b0", !3021, i64 0}
!3021 = !{!"0000020E467C82B0", !21, i64 0}
!3022 = !{!3023, !3023, i64 0}
!3023 = !{!"0000020E467C82B0.w4.b4", !3013, i64 0}
!3024 = !{!3025, !3025, i64 0}
!3025 = !{!"0000020E467C82B0.w4.b8", !3026, i64 0}
!3026 = !{!"0000020E467C82B0.w8.b8", !3014, i64 0}
!3027 = !{!3028, !3028, i64 0}
!3028 = !{!"0000020E467C82B0.w4.b12", !3026, i64 0}
!3029 = !{!3030, !3030, i64 0}
!3030 = !{!"0000020E467CB8F0.w8.b0", !3031, i64 0}
!3031 = !{!"0000020E467CB8F0.w16.b0", !3032, i64 0}
!3032 = !{!"0000020E467CB8F0.w32.b0", !3033, i64 0}
!3033 = !{!"0000020E467CB8F0.w64.b0", !3034, i64 0}
!3034 = !{!"0000020E467CB8F0.w128.b0", !3035, i64 0}
!3035 = !{!"0000020E467CB8F0.w256.b0", !3036, i64 0}
!3036 = !{!"0000020E467CB8F0.w512.b0", !3037, i64 0}
!3037 = !{!"0000020E467CB8F0.w1024.b0", !3038, i64 0}
!3038 = !{!"0000020E467CB8F0", !21, i64 0}
!3039 = !{!3040, !3040, i64 0}
!3040 = !{!"0000020E467CB8F0.w8.b8", !3031, i64 0}
!3041 = !{!3042, !3042, i64 0}
!3042 = !{!"0000020E467CB8F0.w8.b16", !3043, i64 0}
!3043 = !{!"0000020E467CB8F0.w16.b16", !3032, i64 0}
!3044 = !{!3045, !3045, i64 0}
!3045 = !{!"0000020E467CB8F0.w8.b24", !3043, i64 0}
!3046 = !{!3047, !3047, i64 0}
!3047 = !{!"0000020E467CBE30.w8.b8", !3048, i64 0}
!3048 = !{!"0000020E467CBE30.w16.b0", !3049, i64 0}
!3049 = !{!"0000020E467CBE30.w32.b0", !3050, i64 0}
!3050 = !{!"0000020E467CBE30.w64.b0", !3051, i64 0}
!3051 = !{!"0000020E467CBE30.w128.b0", !3052, i64 0}
!3052 = !{!"0000020E467CBE30.w256.b0", !3053, i64 0}
!3053 = !{!"0000020E467CBE30.w512.b0", !3054, i64 0}
!3054 = !{!"0000020E467CBE30.w1024.b0", !3055, i64 0}
!3055 = !{!"0000020E467CBE30", !21, i64 0}
!3056 = !{!3057, !3057, i64 0}
!3057 = !{!"0000020E467CBE30.w8.b16", !3058, i64 0}
!3058 = !{!"0000020E467CBE30.w16.b16", !3049, i64 0}
!3059 = !{!3060, !3060, i64 0}
!3060 = !{!"0000020E467CBE30.w8.b24", !3058, i64 0}
!3061 = !{!3062, !3062, i64 0}
!3062 = !{!"0000020E467CC830.w8.b0", !3063, i64 0}
!3063 = !{!"0000020E467CC830.w16.b0", !3064, i64 0}
!3064 = !{!"0000020E467CC830.w32.b0", !3065, i64 0}
!3065 = !{!"0000020E467CC830.w64.b0", !3066, i64 0}
!3066 = !{!"0000020E467CC830.w128.b0", !3067, i64 0}
!3067 = !{!"0000020E467CC830.w256.b0", !3068, i64 0}
!3068 = !{!"0000020E467CC830.w512.b0", !3069, i64 0}
!3069 = !{!"0000020E467CC830.w1024.b0", !3070, i64 0}
!3070 = !{!"0000020E467CC830", !21, i64 0}
!3071 = !{!3072, !3072, i64 0}
!3072 = !{!"0000020E467CC830.w8.b8", !3063, i64 0}
!3073 = !{!3074, !3074, i64 0}
!3074 = !{!"0000020E467CC830.w8.b16", !3075, i64 0}
!3075 = !{!"0000020E467CC830.w16.b16", !3064, i64 0}
!3076 = !{!3077, !3077, i64 0}
!3077 = !{!"0000020E467CC830.w8.b24", !3075, i64 0}
!3078 = !{!3079, !3079, i64 0}
!3079 = !{!"0000020E467CCDF0.w8.b0", !3080, i64 0}
!3080 = !{!"0000020E467CCDF0.w16.b0", !3081, i64 0}
!3081 = !{!"0000020E467CCDF0.w32.b0", !3082, i64 0}
!3082 = !{!"0000020E467CCDF0.w64.b0", !3083, i64 0}
!3083 = !{!"0000020E467CCDF0.w128.b0", !3084, i64 0}
!3084 = !{!"0000020E467CCDF0.w256.b0", !3085, i64 0}
!3085 = !{!"0000020E467CCDF0.w512.b0", !3086, i64 0}
!3086 = !{!"0000020E467CCDF0.w1024.b0", !3087, i64 0}
!3087 = !{!"0000020E467CCDF0", !21, i64 0}
!3088 = !{!3089, !3089, i64 0}
!3089 = !{!"0000020E467CCDF0.w8.b8", !3080, i64 0}
!3090 = !{!3091, !3091, i64 0}
!3091 = !{!"0000020E467CC6B0.w8.b0", !3092, i64 0}
!3092 = !{!"0000020E467CC6B0.w16.b0", !3093, i64 0}
!3093 = !{!"0000020E467CC6B0.w32.b0", !3094, i64 0}
!3094 = !{!"0000020E467CC6B0.w64.b0", !3095, i64 0}
!3095 = !{!"0000020E467CC6B0.w128.b0", !3096, i64 0}
!3096 = !{!"0000020E467CC6B0.w256.b0", !3097, i64 0}
!3097 = !{!"0000020E467CC6B0.w512.b0", !3098, i64 0}
!3098 = !{!"0000020E467CC6B0.w1024.b0", !3099, i64 0}
!3099 = !{!"0000020E467CC6B0", !21, i64 0}
!3100 = !{!3101, !3101, i64 0}
!3101 = !{!"0000020E467CC6B0.w8.b8", !3092, i64 0}
!3102 = !{!3103, !3103, i64 0}
!3103 = !{!"0000020E467CC6B0.w8.b16", !3104, i64 0}
!3104 = !{!"0000020E467CC6B0.w16.b16", !3093, i64 0}
!3105 = !{!3106, !3106, i64 0}
!3106 = !{!"0000020E467CC6B0.w8.b24", !3104, i64 0}
!3107 = !{!3108, !3108, i64 0}
!3108 = !{!"0000020E467CDB70.w8.b8", !3109, i64 0}
!3109 = !{!"0000020E467CDB70.w16.b0", !3110, i64 0}
!3110 = !{!"0000020E467CDB70.w32.b0", !3111, i64 0}
!3111 = !{!"0000020E467CDB70.w64.b0", !3112, i64 0}
!3112 = !{!"0000020E467CDB70.w128.b0", !3113, i64 0}
!3113 = !{!"0000020E467CDB70.w256.b0", !3114, i64 0}
!3114 = !{!"0000020E467CDB70.w512.b0", !3115, i64 0}
!3115 = !{!"0000020E467CDB70.w1024.b0", !3116, i64 0}
!3116 = !{!"0000020E467CDB70", !21, i64 0}
!3117 = !{!3118, !3118, i64 0}
!3118 = !{!"0000020E467CD230.w8.b0", !3119, i64 0}
!3119 = !{!"0000020E467CD230.w16.b0", !3120, i64 0}
!3120 = !{!"0000020E467CD230.w32.b0", !3121, i64 0}
!3121 = !{!"0000020E467CD230.w64.b0", !3122, i64 0}
!3122 = !{!"0000020E467CD230.w128.b0", !3123, i64 0}
!3123 = !{!"0000020E467CD230.w256.b0", !3124, i64 0}
!3124 = !{!"0000020E467CD230.w512.b0", !3125, i64 0}
!3125 = !{!"0000020E467CD230.w1024.b0", !3126, i64 0}
!3126 = !{!"0000020E467CD230", !21, i64 0}
!3127 = !{!3128, !3128, i64 0}
!3128 = !{!"0000020E467CD230.w8.b8", !3119, i64 0}
!3129 = !{!3130, !3130, i64 0}
!3130 = !{!"0000020E467CD230.w8.b16", !3131, i64 0}
!3131 = !{!"0000020E467CD230.w16.b16", !3120, i64 0}
!3132 = !{!3133, !3133, i64 0}
!3133 = !{!"0000020E467CD230.w8.b24", !3131, i64 0}
!3134 = !{!3135, !3135, i64 0}
!3135 = !{!"0000020E467CD430.w8.b8", !3136, i64 0}
!3136 = !{!"0000020E467CD430.w16.b0", !3137, i64 0}
!3137 = !{!"0000020E467CD430.w32.b0", !3138, i64 0}
!3138 = !{!"0000020E467CD430.w64.b0", !3139, i64 0}
!3139 = !{!"0000020E467CD430.w128.b0", !3140, i64 0}
!3140 = !{!"0000020E467CD430.w256.b0", !3141, i64 0}
!3141 = !{!"0000020E467CD430.w512.b0", !3142, i64 0}
!3142 = !{!"0000020E467CD430.w1024.b0", !3143, i64 0}
!3143 = !{!"0000020E467CD430", !21, i64 0}
!3144 = !{!3145, !3145, i64 0}
!3145 = !{!"0000020E467CD430.w8.b16", !3146, i64 0}
!3146 = !{!"0000020E467CD430.w16.b16", !3137, i64 0}
!3147 = !{!3148, !3148, i64 0}
!3148 = !{!"0000020E467CD430.w8.b24", !3146, i64 0}
!3149 = !{!3150, !3150, i64 0}
!3150 = !{!"0000020E444F9A10.w4.b0", !3151, i64 0}
!3151 = !{!"0000020E444F9A10.w8.b0", !3152, i64 0}
!3152 = !{!"0000020E444F9A10.w16.b0", !3153, i64 0}
!3153 = !{!"0000020E444F9A10.w32.b0", !3154, i64 0}
!3154 = !{!"0000020E444F9A10.w64.b0", !3155, i64 0}
!3155 = !{!"0000020E444F9A10.w128.b0", !3156, i64 0}
!3156 = !{!"0000020E444F9A10.w256.b0", !3157, i64 0}
!3157 = !{!"0000020E444F9A10.w512.b0", !3158, i64 0}
!3158 = !{!"0000020E444F9A10.w1024.b0", !3159, i64 0}
!3159 = !{!"0000020E444F9A10", !21, i64 0}
!3160 = !{!3161, !3161, i64 0}
!3161 = !{!"0000020E444F9A10.w4.b4", !3151, i64 0}
!3162 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3163)
!3163 = !{!3164, !3165, !3166, !3167, !3168, !3169}
!3164 = !DILocalVariable(name: "arg1", arg: 1, scope: !3162, file: !1, type: !8)
!3165 = !DILocalVariable(name: "arg2", arg: 2, scope: !3162, file: !1, type: !9)
!3166 = !DILocalVariable(name: "arg3", arg: 3, scope: !3162, file: !1, type: !7)
!3167 = !DILocalVariable(name: "arg4", arg: 4, scope: !3162, file: !1, type: !8)
!3168 = !DILocalVariable(name: "arg5", arg: 5, scope: !3162, file: !1, type: !9)
!3169 = !DILocalVariable(name: "arg6", arg: 6, scope: !3162, file: !1, type: !8)
!3170 = !DILocation(line: 0, scope: !3162)
!3171 = !{!3172, !3172, i64 0}
!3172 = !{!"0000020E46D79170.w4.b0", !3173, i64 0}
!3173 = !{!"0000020E46D79170.w8.b0", !3174, i64 0}
!3174 = !{!"0000020E46D79170.w16.b0", !3175, i64 0}
!3175 = !{!"0000020E46D79170.w32.b0", !3176, i64 0}
!3176 = !{!"0000020E46D79170.w64.b0", !3177, i64 0}
!3177 = !{!"0000020E46D79170.w128.b0", !3178, i64 0}
!3178 = !{!"0000020E46D79170.w256.b0", !3179, i64 0}
!3179 = !{!"0000020E46D79170.w512.b0", !3180, i64 0}
!3180 = !{!"0000020E46D79170.w1024.b0", !3181, i64 0}
!3181 = !{!"0000020E46D79170", !21, i64 0}
!3182 = !{!3183, !3183, i64 0}
!3183 = !{!"0000020E46D79170.w4.b4", !3173, i64 0}
!3184 = !{!3185, !3185, i64 0}
!3185 = !{!"0000020E46D79170.w4.b8", !3186, i64 0}
!3186 = !{!"0000020E46D79170.w8.b8", !3174, i64 0}
!3187 = !{!3188, !3188, i64 0}
!3188 = !{!"0000020E46D79170.w4.b12", !3186, i64 0}
!3189 = !{!3190, !3190, i64 0}
!3190 = !{!"0000020E46D816B0.w8.b0", !3191, i64 0}
!3191 = !{!"0000020E46D816B0.w16.b0", !3192, i64 0}
!3192 = !{!"0000020E46D816B0.w32.b0", !3193, i64 0}
!3193 = !{!"0000020E46D816B0.w64.b0", !3194, i64 0}
!3194 = !{!"0000020E46D816B0.w128.b0", !3195, i64 0}
!3195 = !{!"0000020E46D816B0.w256.b0", !3196, i64 0}
!3196 = !{!"0000020E46D816B0.w512.b0", !3197, i64 0}
!3197 = !{!"0000020E46D816B0.w1024.b0", !3198, i64 0}
!3198 = !{!"0000020E46D816B0", !21, i64 0}
!3199 = !{!3200, !3200, i64 0}
!3200 = !{!"0000020E46D816B0.w8.b8", !3191, i64 0}
!3201 = !{!3202, !3202, i64 0}
!3202 = !{!"0000020E46D816B0.w8.b16", !3203, i64 0}
!3203 = !{!"0000020E46D816B0.w16.b16", !3192, i64 0}
!3204 = !{!3205, !3205, i64 0}
!3205 = !{!"0000020E46D816B0.w8.b24", !3203, i64 0}
!3206 = !{!3207, !3207, i64 0}
!3207 = !{!"0000020E46D83A30.w8.b8", !3208, i64 0}
!3208 = !{!"0000020E46D83A30.w16.b0", !3209, i64 0}
!3209 = !{!"0000020E46D83A30.w32.b0", !3210, i64 0}
!3210 = !{!"0000020E46D83A30.w64.b0", !3211, i64 0}
!3211 = !{!"0000020E46D83A30.w128.b0", !3212, i64 0}
!3212 = !{!"0000020E46D83A30.w256.b0", !3213, i64 0}
!3213 = !{!"0000020E46D83A30.w512.b0", !3214, i64 0}
!3214 = !{!"0000020E46D83A30.w1024.b0", !3215, i64 0}
!3215 = !{!"0000020E46D83A30", !21, i64 0}
!3216 = !{!3217, !3217, i64 0}
!3217 = !{!"0000020E46D83A30.w8.b16", !3218, i64 0}
!3218 = !{!"0000020E46D83A30.w16.b16", !3209, i64 0}
!3219 = !{!3220, !3220, i64 0}
!3220 = !{!"0000020E46D83A30.w8.b24", !3218, i64 0}
!3221 = !{!3222, !3222, i64 0}
!3222 = !{!"0000020E46D88FB0.w8.b0", !3223, i64 0}
!3223 = !{!"0000020E46D88FB0.w16.b0", !3224, i64 0}
!3224 = !{!"0000020E46D88FB0.w32.b0", !3225, i64 0}
!3225 = !{!"0000020E46D88FB0.w64.b0", !3226, i64 0}
!3226 = !{!"0000020E46D88FB0.w128.b0", !3227, i64 0}
!3227 = !{!"0000020E46D88FB0.w256.b0", !3228, i64 0}
!3228 = !{!"0000020E46D88FB0.w512.b0", !3229, i64 0}
!3229 = !{!"0000020E46D88FB0.w1024.b0", !3230, i64 0}
!3230 = !{!"0000020E46D88FB0", !21, i64 0}
!3231 = !{!3232, !3232, i64 0}
!3232 = !{!"0000020E46D88FB0.w8.b8", !3223, i64 0}
!3233 = !{!3234, !3234, i64 0}
!3234 = !{!"0000020E46D88FB0.w8.b16", !3235, i64 0}
!3235 = !{!"0000020E46D88FB0.w16.b16", !3224, i64 0}
!3236 = !{!3237, !3237, i64 0}
!3237 = !{!"0000020E46D88FB0.w8.b24", !3235, i64 0}
!3238 = !{!3239, !3239, i64 0}
!3239 = !{!"0000020E46D88670.w8.b0", !3240, i64 0}
!3240 = !{!"0000020E46D88670.w16.b0", !3241, i64 0}
!3241 = !{!"0000020E46D88670.w32.b0", !3242, i64 0}
!3242 = !{!"0000020E46D88670.w64.b0", !3243, i64 0}
!3243 = !{!"0000020E46D88670.w128.b0", !3244, i64 0}
!3244 = !{!"0000020E46D88670.w256.b0", !3245, i64 0}
!3245 = !{!"0000020E46D88670.w512.b0", !3246, i64 0}
!3246 = !{!"0000020E46D88670.w1024.b0", !3247, i64 0}
!3247 = !{!"0000020E46D88670", !21, i64 0}
!3248 = !{!3249, !3249, i64 0}
!3249 = !{!"0000020E46D88670.w8.b8", !3240, i64 0}
!3250 = !{!3251, !3251, i64 0}
!3251 = !{!"0000020E46D88670.w8.b16", !3252, i64 0}
!3252 = !{!"0000020E46D88670.w16.b16", !3241, i64 0}
!3253 = !{!3254, !3254, i64 0}
!3254 = !{!"0000020E46D88670.w8.b24", !3252, i64 0}
!3255 = !{!3256, !3256, i64 0}
!3256 = !{!"0000020E46D89770.w8.b0", !3257, i64 0}
!3257 = !{!"0000020E46D89770.w16.b0", !3258, i64 0}
!3258 = !{!"0000020E46D89770.w32.b0", !3259, i64 0}
!3259 = !{!"0000020E46D89770.w64.b0", !3260, i64 0}
!3260 = !{!"0000020E46D89770.w128.b0", !3261, i64 0}
!3261 = !{!"0000020E46D89770.w256.b0", !3262, i64 0}
!3262 = !{!"0000020E46D89770.w512.b0", !3263, i64 0}
!3263 = !{!"0000020E46D89770.w1024.b0", !3264, i64 0}
!3264 = !{!"0000020E46D89770", !21, i64 0}
!3265 = !{!3266, !3266, i64 0}
!3266 = !{!"0000020E46D89770.w8.b8", !3257, i64 0}
!3267 = !{!3268, !3268, i64 0}
!3268 = !{!"0000020E46D89770.w8.b16", !3269, i64 0}
!3269 = !{!"0000020E46D89770.w16.b16", !3258, i64 0}
!3270 = !{!3271, !3271, i64 0}
!3271 = !{!"0000020E46D89770.w8.b24", !3269, i64 0}
!3272 = !{!3273, !3273, i64 0}
!3273 = !{!"0000020E46D89AF0.w8.b8", !3274, i64 0}
!3274 = !{!"0000020E46D89AF0.w16.b0", !3275, i64 0}
!3275 = !{!"0000020E46D89AF0.w32.b0", !3276, i64 0}
!3276 = !{!"0000020E46D89AF0.w64.b0", !3277, i64 0}
!3277 = !{!"0000020E46D89AF0.w128.b0", !3278, i64 0}
!3278 = !{!"0000020E46D89AF0.w256.b0", !3279, i64 0}
!3279 = !{!"0000020E46D89AF0.w512.b0", !3280, i64 0}
!3280 = !{!"0000020E46D89AF0.w1024.b0", !3281, i64 0}
!3281 = !{!"0000020E46D89AF0", !21, i64 0}
!3282 = !{!3283, !3283, i64 0}
!3283 = !{!"0000020E46D8A5B0.w8.b0", !3284, i64 0}
!3284 = !{!"0000020E46D8A5B0.w16.b0", !3285, i64 0}
!3285 = !{!"0000020E46D8A5B0.w32.b0", !3286, i64 0}
!3286 = !{!"0000020E46D8A5B0.w64.b0", !3287, i64 0}
!3287 = !{!"0000020E46D8A5B0.w128.b0", !3288, i64 0}
!3288 = !{!"0000020E46D8A5B0.w256.b0", !3289, i64 0}
!3289 = !{!"0000020E46D8A5B0.w512.b0", !3290, i64 0}
!3290 = !{!"0000020E46D8A5B0.w1024.b0", !3291, i64 0}
!3291 = !{!"0000020E46D8A5B0", !21, i64 0}
!3292 = !{!3293, !3293, i64 0}
!3293 = !{!"0000020E46D8A5B0.w8.b8", !3284, i64 0}
!3294 = !{!3295, !3295, i64 0}
!3295 = !{!"0000020E46D8A5B0.w8.b16", !3296, i64 0}
!3296 = !{!"0000020E46D8A5B0.w16.b16", !3285, i64 0}
!3297 = !{!3298, !3298, i64 0}
!3298 = !{!"0000020E46D8A5B0.w8.b24", !3296, i64 0}
!3299 = !{!3300, !3300, i64 0}
!3300 = !{!"0000020E46D8AAF0.w8.b8", !3301, i64 0}
!3301 = !{!"0000020E46D8AAF0.w16.b0", !3302, i64 0}
!3302 = !{!"0000020E46D8AAF0.w32.b0", !3303, i64 0}
!3303 = !{!"0000020E46D8AAF0.w64.b0", !3304, i64 0}
!3304 = !{!"0000020E46D8AAF0.w128.b0", !3305, i64 0}
!3305 = !{!"0000020E46D8AAF0.w256.b0", !3306, i64 0}
!3306 = !{!"0000020E46D8AAF0.w512.b0", !3307, i64 0}
!3307 = !{!"0000020E46D8AAF0.w1024.b0", !3308, i64 0}
!3308 = !{!"0000020E46D8AAF0", !21, i64 0}
!3309 = !{!3310, !3310, i64 0}
!3310 = !{!"0000020E46D8AAF0.w8.b16", !3311, i64 0}
!3311 = !{!"0000020E46D8AAF0.w16.b16", !3302, i64 0}
!3312 = !{!3313, !3313, i64 0}
!3313 = !{!"0000020E46D8AAF0.w8.b24", !3311, i64 0}
!3314 = !{!3315, !3315, i64 0}
!3315 = !{!"0000020E47F347A0.w4.b0", !3316, i64 0}
!3316 = !{!"0000020E47F347A0.w8.b0", !3317, i64 0}
!3317 = !{!"0000020E47F347A0.w16.b0", !3318, i64 0}
!3318 = !{!"0000020E47F347A0.w32.b0", !3319, i64 0}
!3319 = !{!"0000020E47F347A0.w64.b0", !3320, i64 0}
!3320 = !{!"0000020E47F347A0.w128.b0", !3321, i64 0}
!3321 = !{!"0000020E47F347A0.w256.b0", !3322, i64 0}
!3322 = !{!"0000020E47F347A0.w512.b0", !3323, i64 0}
!3323 = !{!"0000020E47F347A0.w1024.b0", !3324, i64 0}
!3324 = !{!"0000020E47F347A0", !21, i64 0}
!3325 = !{!3326, !3326, i64 0}
!3326 = !{!"0000020E47F347A0.w4.b4", !3316, i64 0}
!3327 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334}
!3329 = !DILocalVariable(name: "arg1", arg: 1, scope: !3327, file: !1, type: !8)
!3330 = !DILocalVariable(name: "arg2", arg: 2, scope: !3327, file: !1, type: !9)
!3331 = !DILocalVariable(name: "arg3", arg: 3, scope: !3327, file: !1, type: !7)
!3332 = !DILocalVariable(name: "arg4", arg: 4, scope: !3327, file: !1, type: !8)
!3333 = !DILocalVariable(name: "arg5", arg: 5, scope: !3327, file: !1, type: !9)
!3334 = !DILocalVariable(name: "arg6", arg: 6, scope: !3327, file: !1, type: !8)
!3335 = !DILocation(line: 0, scope: !3327)
!3336 = !{!3337, !3337, i64 0}
!3337 = !{!"0000020E304AE0E0.w4.b0", !3338, i64 0}
!3338 = !{!"0000020E304AE0E0.w8.b0", !3339, i64 0}
!3339 = !{!"0000020E304AE0E0.w16.b0", !3340, i64 0}
!3340 = !{!"0000020E304AE0E0.w32.b0", !3341, i64 0}
!3341 = !{!"0000020E304AE0E0.w64.b0", !3342, i64 0}
!3342 = !{!"0000020E304AE0E0.w128.b0", !3343, i64 0}
!3343 = !{!"0000020E304AE0E0.w256.b0", !3344, i64 0}
!3344 = !{!"0000020E304AE0E0.w512.b0", !3345, i64 0}
!3345 = !{!"0000020E304AE0E0.w1024.b0", !3346, i64 0}
!3346 = !{!"0000020E304AE0E0", !21, i64 0}
!3347 = !{!3348, !3348, i64 0}
!3348 = !{!"0000020E304AE0E0.w4.b4", !3338, i64 0}
!3349 = !{!3350, !3350, i64 0}
!3350 = !{!"0000020E304AE0E0.w4.b8", !3351, i64 0}
!3351 = !{!"0000020E304AE0E0.w8.b8", !3339, i64 0}
!3352 = !{!3353, !3353, i64 0}
!3353 = !{!"0000020E304AE0E0.w4.b12", !3351, i64 0}
!3354 = !{!3355, !3355, i64 0}
!3355 = !{!"0000020E304B5B60.w8.b0", !3356, i64 0}
!3356 = !{!"0000020E304B5B60.w16.b0", !3357, i64 0}
!3357 = !{!"0000020E304B5B60.w32.b0", !3358, i64 0}
!3358 = !{!"0000020E304B5B60.w64.b0", !3359, i64 0}
!3359 = !{!"0000020E304B5B60.w128.b0", !3360, i64 0}
!3360 = !{!"0000020E304B5B60.w256.b0", !3361, i64 0}
!3361 = !{!"0000020E304B5B60.w512.b0", !3362, i64 0}
!3362 = !{!"0000020E304B5B60.w1024.b0", !3363, i64 0}
!3363 = !{!"0000020E304B5B60", !21, i64 0}
!3364 = !{!3365, !3365, i64 0}
!3365 = !{!"0000020E304B5B60.w8.b8", !3356, i64 0}
!3366 = !{!3367, !3367, i64 0}
!3367 = !{!"0000020E304B5B60.w8.b16", !3368, i64 0}
!3368 = !{!"0000020E304B5B60.w16.b16", !3357, i64 0}
!3369 = !{!3370, !3370, i64 0}
!3370 = !{!"0000020E304B5B60.w8.b24", !3368, i64 0}
!3371 = !{!3372, !3372, i64 0}
!3372 = !{!"0000020E304B6F20.w8.b8", !3373, i64 0}
!3373 = !{!"0000020E304B6F20.w16.b0", !3374, i64 0}
!3374 = !{!"0000020E304B6F20.w32.b0", !3375, i64 0}
!3375 = !{!"0000020E304B6F20.w64.b0", !3376, i64 0}
!3376 = !{!"0000020E304B6F20.w128.b0", !3377, i64 0}
!3377 = !{!"0000020E304B6F20.w256.b0", !3378, i64 0}
!3378 = !{!"0000020E304B6F20.w512.b0", !3379, i64 0}
!3379 = !{!"0000020E304B6F20.w1024.b0", !3380, i64 0}
!3380 = !{!"0000020E304B6F20", !21, i64 0}
!3381 = !{!3382, !3382, i64 0}
!3382 = !{!"0000020E304B6F20.w8.b16", !3383, i64 0}
!3383 = !{!"0000020E304B6F20.w16.b16", !3374, i64 0}
!3384 = !{!3385, !3385, i64 0}
!3385 = !{!"0000020E304B6F20.w8.b24", !3383, i64 0}
!3386 = !{!3387, !3387, i64 0}
!3387 = !{!"0000020E304A66A0.w8.b0", !3388, i64 0}
!3388 = !{!"0000020E304A66A0.w16.b0", !3389, i64 0}
!3389 = !{!"0000020E304A66A0.w32.b0", !3390, i64 0}
!3390 = !{!"0000020E304A66A0.w64.b0", !3391, i64 0}
!3391 = !{!"0000020E304A66A0.w128.b0", !3392, i64 0}
!3392 = !{!"0000020E304A66A0.w256.b0", !3393, i64 0}
!3393 = !{!"0000020E304A66A0.w512.b0", !3394, i64 0}
!3394 = !{!"0000020E304A66A0.w1024.b0", !3395, i64 0}
!3395 = !{!"0000020E304A66A0", !21, i64 0}
!3396 = !{!3397, !3397, i64 0}
!3397 = !{!"0000020E304A66A0.w8.b8", !3388, i64 0}
!3398 = !{!3399, !3399, i64 0}
!3399 = !{!"0000020E304A66A0.w8.b16", !3400, i64 0}
!3400 = !{!"0000020E304A66A0.w16.b16", !3389, i64 0}
!3401 = !{!3402, !3402, i64 0}
!3402 = !{!"0000020E304A66A0.w8.b24", !3400, i64 0}
!3403 = !{!3404, !3404, i64 0}
!3404 = !{!"0000020E304A66E0.w8.b0", !3405, i64 0}
!3405 = !{!"0000020E304A66E0.w16.b0", !3406, i64 0}
!3406 = !{!"0000020E304A66E0.w32.b0", !3407, i64 0}
!3407 = !{!"0000020E304A66E0.w64.b0", !3408, i64 0}
!3408 = !{!"0000020E304A66E0.w128.b0", !3409, i64 0}
!3409 = !{!"0000020E304A66E0.w256.b0", !3410, i64 0}
!3410 = !{!"0000020E304A66E0.w512.b0", !3411, i64 0}
!3411 = !{!"0000020E304A66E0.w1024.b0", !3412, i64 0}
!3412 = !{!"0000020E304A66E0", !21, i64 0}
!3413 = !{!3414, !3414, i64 0}
!3414 = !{!"0000020E304A66E0.w8.b8", !3405, i64 0}
!3415 = !{!3416, !3416, i64 0}
!3416 = !{!"0000020E304A9920.w8.b0", !3417, i64 0}
!3417 = !{!"0000020E304A9920.w16.b0", !3418, i64 0}
!3418 = !{!"0000020E304A9920.w32.b0", !3419, i64 0}
!3419 = !{!"0000020E304A9920.w64.b0", !3420, i64 0}
!3420 = !{!"0000020E304A9920.w128.b0", !3421, i64 0}
!3421 = !{!"0000020E304A9920.w256.b0", !3422, i64 0}
!3422 = !{!"0000020E304A9920.w512.b0", !3423, i64 0}
!3423 = !{!"0000020E304A9920.w1024.b0", !3424, i64 0}
!3424 = !{!"0000020E304A9920", !21, i64 0}
!3425 = !{!3426, !3426, i64 0}
!3426 = !{!"0000020E304A9920.w8.b8", !3417, i64 0}
!3427 = !{!3428, !3428, i64 0}
!3428 = !{!"0000020E304A9920.w8.b16", !3429, i64 0}
!3429 = !{!"0000020E304A9920.w16.b16", !3418, i64 0}
!3430 = !{!3431, !3431, i64 0}
!3431 = !{!"0000020E304A9920.w8.b24", !3429, i64 0}
!3432 = !{!3433, !3433, i64 0}
!3433 = !{!"0000020E47F33060.w8.b8", !3434, i64 0}
!3434 = !{!"0000020E47F33060.w16.b0", !3435, i64 0}
!3435 = !{!"0000020E47F33060.w32.b0", !3436, i64 0}
!3436 = !{!"0000020E47F33060.w64.b0", !3437, i64 0}
!3437 = !{!"0000020E47F33060.w128.b0", !3438, i64 0}
!3438 = !{!"0000020E47F33060.w256.b0", !3439, i64 0}
!3439 = !{!"0000020E47F33060.w512.b0", !3440, i64 0}
!3440 = !{!"0000020E47F33060.w1024.b0", !3441, i64 0}
!3441 = !{!"0000020E47F33060", !21, i64 0}
!3442 = !{!3443, !3443, i64 0}
!3443 = !{!"0000020E47F32260.w8.b0", !3444, i64 0}
!3444 = !{!"0000020E47F32260.w16.b0", !3445, i64 0}
!3445 = !{!"0000020E47F32260.w32.b0", !3446, i64 0}
!3446 = !{!"0000020E47F32260.w64.b0", !3447, i64 0}
!3447 = !{!"0000020E47F32260.w128.b0", !3448, i64 0}
!3448 = !{!"0000020E47F32260.w256.b0", !3449, i64 0}
!3449 = !{!"0000020E47F32260.w512.b0", !3450, i64 0}
!3450 = !{!"0000020E47F32260.w1024.b0", !3451, i64 0}
!3451 = !{!"0000020E47F32260", !21, i64 0}
!3452 = !{!3453, !3453, i64 0}
!3453 = !{!"0000020E47F32260.w8.b8", !3444, i64 0}
!3454 = !{!3455, !3455, i64 0}
!3455 = !{!"0000020E47F32260.w8.b16", !3456, i64 0}
!3456 = !{!"0000020E47F32260.w16.b16", !3445, i64 0}
!3457 = !{!3458, !3458, i64 0}
!3458 = !{!"0000020E47F32260.w8.b24", !3456, i64 0}
!3459 = !{!3460, !3460, i64 0}
!3460 = !{!"0000020E47F33BA0.w8.b8", !3461, i64 0}
!3461 = !{!"0000020E47F33BA0.w16.b0", !3462, i64 0}
!3462 = !{!"0000020E47F33BA0.w32.b0", !3463, i64 0}
!3463 = !{!"0000020E47F33BA0.w64.b0", !3464, i64 0}
!3464 = !{!"0000020E47F33BA0.w128.b0", !3465, i64 0}
!3465 = !{!"0000020E47F33BA0.w256.b0", !3466, i64 0}
!3466 = !{!"0000020E47F33BA0.w512.b0", !3467, i64 0}
!3467 = !{!"0000020E47F33BA0.w1024.b0", !3468, i64 0}
!3468 = !{!"0000020E47F33BA0", !21, i64 0}
!3469 = !{!3470, !3470, i64 0}
!3470 = !{!"0000020E47F33BA0.w8.b16", !3471, i64 0}
!3471 = !{!"0000020E47F33BA0.w16.b16", !3462, i64 0}
!3472 = !{!3473, !3473, i64 0}
!3473 = !{!"0000020E47F33BA0.w8.b24", !3471, i64 0}
!3474 = !{!3475, !3475, i64 0}
!3475 = !{!"0000020E47FD57F0.w4.b0", !3476, i64 0}
!3476 = !{!"0000020E47FD57F0.w8.b0", !3477, i64 0}
!3477 = !{!"0000020E47FD57F0.w16.b0", !3478, i64 0}
!3478 = !{!"0000020E47FD57F0.w32.b0", !3479, i64 0}
!3479 = !{!"0000020E47FD57F0.w64.b0", !3480, i64 0}
!3480 = !{!"0000020E47FD57F0.w128.b0", !3481, i64 0}
!3481 = !{!"0000020E47FD57F0.w256.b0", !3482, i64 0}
!3482 = !{!"0000020E47FD57F0.w512.b0", !3483, i64 0}
!3483 = !{!"0000020E47FD57F0.w1024.b0", !3484, i64 0}
!3484 = !{!"0000020E47FD57F0", !21, i64 0}
!3485 = !{!3486, !3486, i64 0}
!3486 = !{!"0000020E47FD57F0.w4.b4", !3476, i64 0}
!3487 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3488)
!3488 = !{!3489, !3490, !3491, !3492, !3493, !3494}
!3489 = !DILocalVariable(name: "arg1", arg: 1, scope: !3487, file: !1, type: !8)
!3490 = !DILocalVariable(name: "arg2", arg: 2, scope: !3487, file: !1, type: !9)
!3491 = !DILocalVariable(name: "arg3", arg: 3, scope: !3487, file: !1, type: !7)
!3492 = !DILocalVariable(name: "arg4", arg: 4, scope: !3487, file: !1, type: !8)
!3493 = !DILocalVariable(name: "arg5", arg: 5, scope: !3487, file: !1, type: !9)
!3494 = !DILocalVariable(name: "arg6", arg: 6, scope: !3487, file: !1, type: !8)
!3495 = !DILocation(line: 0, scope: !3487)
!3496 = !{!3497, !3497, i64 0}
!3497 = !{!"0000020E446F10C0.w4.b0", !3498, i64 0}
!3498 = !{!"0000020E446F10C0.w8.b0", !3499, i64 0}
!3499 = !{!"0000020E446F10C0.w16.b0", !3500, i64 0}
!3500 = !{!"0000020E446F10C0.w32.b0", !3501, i64 0}
!3501 = !{!"0000020E446F10C0.w64.b0", !3502, i64 0}
!3502 = !{!"0000020E446F10C0.w128.b0", !3503, i64 0}
!3503 = !{!"0000020E446F10C0.w256.b0", !3504, i64 0}
!3504 = !{!"0000020E446F10C0.w512.b0", !3505, i64 0}
!3505 = !{!"0000020E446F10C0.w1024.b0", !3506, i64 0}
!3506 = !{!"0000020E446F10C0", !21, i64 0}
!3507 = !{!3508, !3508, i64 0}
!3508 = !{!"0000020E446F10C0.w4.b4", !3498, i64 0}
!3509 = !{!3510, !3510, i64 0}
!3510 = !{!"0000020E446F10C0.w4.b8", !3511, i64 0}
!3511 = !{!"0000020E446F10C0.w8.b8", !3499, i64 0}
!3512 = !{!3513, !3513, i64 0}
!3513 = !{!"0000020E446F10C0.w4.b12", !3511, i64 0}
!3514 = !{!3515, !3515, i64 0}
!3515 = !{!"0000020E446F7CC0.w8.b0", !3516, i64 0}
!3516 = !{!"0000020E446F7CC0.w16.b0", !3517, i64 0}
!3517 = !{!"0000020E446F7CC0.w32.b0", !3518, i64 0}
!3518 = !{!"0000020E446F7CC0.w64.b0", !3519, i64 0}
!3519 = !{!"0000020E446F7CC0.w128.b0", !3520, i64 0}
!3520 = !{!"0000020E446F7CC0.w256.b0", !3521, i64 0}
!3521 = !{!"0000020E446F7CC0.w512.b0", !3522, i64 0}
!3522 = !{!"0000020E446F7CC0.w1024.b0", !3523, i64 0}
!3523 = !{!"0000020E446F7CC0", !21, i64 0}
!3524 = !{!3525, !3525, i64 0}
!3525 = !{!"0000020E446F7CC0.w8.b8", !3516, i64 0}
!3526 = !{!3527, !3527, i64 0}
!3527 = !{!"0000020E446F7CC0.w8.b16", !3528, i64 0}
!3528 = !{!"0000020E446F7CC0.w16.b16", !3517, i64 0}
!3529 = !{!3530, !3530, i64 0}
!3530 = !{!"0000020E446F7CC0.w8.b24", !3528, i64 0}
!3531 = !{!3532, !3532, i64 0}
!3532 = !{!"0000020E446F7C40.w8.b8", !3533, i64 0}
!3533 = !{!"0000020E446F7C40.w16.b0", !3534, i64 0}
!3534 = !{!"0000020E446F7C40.w32.b0", !3535, i64 0}
!3535 = !{!"0000020E446F7C40.w64.b0", !3536, i64 0}
!3536 = !{!"0000020E446F7C40.w128.b0", !3537, i64 0}
!3537 = !{!"0000020E446F7C40.w256.b0", !3538, i64 0}
!3538 = !{!"0000020E446F7C40.w512.b0", !3539, i64 0}
!3539 = !{!"0000020E446F7C40.w1024.b0", !3540, i64 0}
!3540 = !{!"0000020E446F7C40", !21, i64 0}
!3541 = !{!3542, !3542, i64 0}
!3542 = !{!"0000020E446F7C40.w8.b16", !3543, i64 0}
!3543 = !{!"0000020E446F7C40.w16.b16", !3534, i64 0}
!3544 = !{!3545, !3545, i64 0}
!3545 = !{!"0000020E446F7C40.w8.b24", !3543, i64 0}
!3546 = !{!3547, !3547, i64 0}
!3547 = !{!"0000020E446F8B00.w8.b0", !3548, i64 0}
!3548 = !{!"0000020E446F8B00.w16.b0", !3549, i64 0}
!3549 = !{!"0000020E446F8B00.w32.b0", !3550, i64 0}
!3550 = !{!"0000020E446F8B00.w64.b0", !3551, i64 0}
!3551 = !{!"0000020E446F8B00.w128.b0", !3552, i64 0}
!3552 = !{!"0000020E446F8B00.w256.b0", !3553, i64 0}
!3553 = !{!"0000020E446F8B00.w512.b0", !3554, i64 0}
!3554 = !{!"0000020E446F8B00.w1024.b0", !3555, i64 0}
!3555 = !{!"0000020E446F8B00", !21, i64 0}
!3556 = !{!3557, !3557, i64 0}
!3557 = !{!"0000020E446F8B00.w8.b8", !3548, i64 0}
!3558 = !{!3559, !3559, i64 0}
!3559 = !{!"0000020E446F8B00.w8.b16", !3560, i64 0}
!3560 = !{!"0000020E446F8B00.w16.b16", !3549, i64 0}
!3561 = !{!3562, !3562, i64 0}
!3562 = !{!"0000020E446F8B00.w8.b24", !3560, i64 0}
!3563 = !{!3564, !3564, i64 0}
!3564 = !{!"0000020E446F9140.w8.b0", !3565, i64 0}
!3565 = !{!"0000020E446F9140.w16.b0", !3566, i64 0}
!3566 = !{!"0000020E446F9140.w32.b0", !3567, i64 0}
!3567 = !{!"0000020E446F9140.w64.b0", !3568, i64 0}
!3568 = !{!"0000020E446F9140.w128.b0", !3569, i64 0}
!3569 = !{!"0000020E446F9140.w256.b0", !3570, i64 0}
!3570 = !{!"0000020E446F9140.w512.b0", !3571, i64 0}
!3571 = !{!"0000020E446F9140.w1024.b0", !3572, i64 0}
!3572 = !{!"0000020E446F9140", !21, i64 0}
!3573 = !{!3574, !3574, i64 0}
!3574 = !{!"0000020E446F9140.w8.b8", !3565, i64 0}
!3575 = !{!3576, !3576, i64 0}
!3576 = !{!"0000020E446F9800.w8.b0", !3577, i64 0}
!3577 = !{!"0000020E446F9800.w16.b0", !3578, i64 0}
!3578 = !{!"0000020E446F9800.w32.b0", !3579, i64 0}
!3579 = !{!"0000020E446F9800.w64.b0", !3580, i64 0}
!3580 = !{!"0000020E446F9800.w128.b0", !3581, i64 0}
!3581 = !{!"0000020E446F9800.w256.b0", !3582, i64 0}
!3582 = !{!"0000020E446F9800.w512.b0", !3583, i64 0}
!3583 = !{!"0000020E446F9800.w1024.b0", !3584, i64 0}
!3584 = !{!"0000020E446F9800", !21, i64 0}
!3585 = !{!3586, !3586, i64 0}
!3586 = !{!"0000020E446F9800.w8.b8", !3577, i64 0}
!3587 = !{!3588, !3588, i64 0}
!3588 = !{!"0000020E446F9800.w8.b16", !3589, i64 0}
!3589 = !{!"0000020E446F9800.w16.b16", !3578, i64 0}
!3590 = !{!3591, !3591, i64 0}
!3591 = !{!"0000020E446F9800.w8.b24", !3589, i64 0}
!3592 = !{!3593, !3593, i64 0}
!3593 = !{!"0000020E446F9BC0.w8.b8", !3594, i64 0}
!3594 = !{!"0000020E446F9BC0.w16.b0", !3595, i64 0}
!3595 = !{!"0000020E446F9BC0.w32.b0", !3596, i64 0}
!3596 = !{!"0000020E446F9BC0.w64.b0", !3597, i64 0}
!3597 = !{!"0000020E446F9BC0.w128.b0", !3598, i64 0}
!3598 = !{!"0000020E446F9BC0.w256.b0", !3599, i64 0}
!3599 = !{!"0000020E446F9BC0.w512.b0", !3600, i64 0}
!3600 = !{!"0000020E446F9BC0.w1024.b0", !3601, i64 0}
!3601 = !{!"0000020E446F9BC0", !21, i64 0}
!3602 = !{!3603, !3603, i64 0}
!3603 = !{!"0000020E44704B00.w8.b0", !3604, i64 0}
!3604 = !{!"0000020E44704B00.w16.b0", !3605, i64 0}
!3605 = !{!"0000020E44704B00.w32.b0", !3606, i64 0}
!3606 = !{!"0000020E44704B00.w64.b0", !3607, i64 0}
!3607 = !{!"0000020E44704B00.w128.b0", !3608, i64 0}
!3608 = !{!"0000020E44704B00.w256.b0", !3609, i64 0}
!3609 = !{!"0000020E44704B00.w512.b0", !3610, i64 0}
!3610 = !{!"0000020E44704B00.w1024.b0", !3611, i64 0}
!3611 = !{!"0000020E44704B00", !21, i64 0}
!3612 = !{!3613, !3613, i64 0}
!3613 = !{!"0000020E44704B00.w8.b8", !3604, i64 0}
!3614 = !{!3615, !3615, i64 0}
!3615 = !{!"0000020E44704B00.w8.b16", !3616, i64 0}
!3616 = !{!"0000020E44704B00.w16.b16", !3605, i64 0}
!3617 = !{!3618, !3618, i64 0}
!3618 = !{!"0000020E44704B00.w8.b24", !3616, i64 0}
!3619 = !{!3620, !3620, i64 0}
!3620 = !{!"0000020E446E4800.w8.b8", !3621, i64 0}
!3621 = !{!"0000020E446E4800.w16.b0", !3622, i64 0}
!3622 = !{!"0000020E446E4800.w32.b0", !3623, i64 0}
!3623 = !{!"0000020E446E4800.w64.b0", !3624, i64 0}
!3624 = !{!"0000020E446E4800.w128.b0", !3625, i64 0}
!3625 = !{!"0000020E446E4800.w256.b0", !3626, i64 0}
!3626 = !{!"0000020E446E4800.w512.b0", !3627, i64 0}
!3627 = !{!"0000020E446E4800.w1024.b0", !3628, i64 0}
!3628 = !{!"0000020E446E4800", !21, i64 0}
!3629 = !{!3630, !3630, i64 0}
!3630 = !{!"0000020E446E4800.w8.b16", !3631, i64 0}
!3631 = !{!"0000020E446E4800.w16.b16", !3622, i64 0}
!3632 = !{!3633, !3633, i64 0}
!3633 = !{!"0000020E446E4800.w8.b24", !3631, i64 0}
!3634 = !{!3635, !3635, i64 0}
!3635 = !{!"0000020E46D8C030.w4.b0", !3636, i64 0}
!3636 = !{!"0000020E46D8C030.w8.b0", !3637, i64 0}
!3637 = !{!"0000020E46D8C030.w16.b0", !3638, i64 0}
!3638 = !{!"0000020E46D8C030.w32.b0", !3639, i64 0}
!3639 = !{!"0000020E46D8C030.w64.b0", !3640, i64 0}
!3640 = !{!"0000020E46D8C030.w128.b0", !3641, i64 0}
!3641 = !{!"0000020E46D8C030.w256.b0", !3642, i64 0}
!3642 = !{!"0000020E46D8C030.w512.b0", !3643, i64 0}
!3643 = !{!"0000020E46D8C030.w1024.b0", !3644, i64 0}
!3644 = !{!"0000020E46D8C030", !21, i64 0}
!3645 = !{!3646, !3646, i64 0}
!3646 = !{!"0000020E46D8C030.w4.b4", !3636, i64 0}
!3647 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3648)
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3654}
!3649 = !DILocalVariable(name: "arg1", arg: 1, scope: !3647, file: !1, type: !8)
!3650 = !DILocalVariable(name: "arg2", arg: 2, scope: !3647, file: !1, type: !9)
!3651 = !DILocalVariable(name: "arg3", arg: 3, scope: !3647, file: !1, type: !7)
!3652 = !DILocalVariable(name: "arg4", arg: 4, scope: !3647, file: !1, type: !8)
!3653 = !DILocalVariable(name: "arg5", arg: 5, scope: !3647, file: !1, type: !9)
!3654 = !DILocalVariable(name: "arg6", arg: 6, scope: !3647, file: !1, type: !8)
!3655 = !DILocation(line: 0, scope: !3647)
!3656 = !{!3657, !3657, i64 0}
!3657 = !{!"0000020E47F1A560.w4.b0", !3658, i64 0}
!3658 = !{!"0000020E47F1A560.w8.b0", !3659, i64 0}
!3659 = !{!"0000020E47F1A560.w16.b0", !3660, i64 0}
!3660 = !{!"0000020E47F1A560.w32.b0", !3661, i64 0}
!3661 = !{!"0000020E47F1A560.w64.b0", !3662, i64 0}
!3662 = !{!"0000020E47F1A560.w128.b0", !3663, i64 0}
!3663 = !{!"0000020E47F1A560.w256.b0", !3664, i64 0}
!3664 = !{!"0000020E47F1A560.w512.b0", !3665, i64 0}
!3665 = !{!"0000020E47F1A560.w1024.b0", !3666, i64 0}
!3666 = !{!"0000020E47F1A560", !21, i64 0}
!3667 = !{!3668, !3668, i64 0}
!3668 = !{!"0000020E47F1A560.w4.b4", !3658, i64 0}
!3669 = !{!3670, !3670, i64 0}
!3670 = !{!"0000020E47F1A560.w4.b8", !3671, i64 0}
!3671 = !{!"0000020E47F1A560.w8.b8", !3659, i64 0}
!3672 = !{!3673, !3673, i64 0}
!3673 = !{!"0000020E47F1A560.w4.b12", !3671, i64 0}
!3674 = !{!3675, !3675, i64 0}
!3675 = !{!"0000020E47F243E0.w8.b0", !3676, i64 0}
!3676 = !{!"0000020E47F243E0.w16.b0", !3677, i64 0}
!3677 = !{!"0000020E47F243E0.w32.b0", !3678, i64 0}
!3678 = !{!"0000020E47F243E0.w64.b0", !3679, i64 0}
!3679 = !{!"0000020E47F243E0.w128.b0", !3680, i64 0}
!3680 = !{!"0000020E47F243E0.w256.b0", !3681, i64 0}
!3681 = !{!"0000020E47F243E0.w512.b0", !3682, i64 0}
!3682 = !{!"0000020E47F243E0.w1024.b0", !3683, i64 0}
!3683 = !{!"0000020E47F243E0", !21, i64 0}
!3684 = !{!3685, !3685, i64 0}
!3685 = !{!"0000020E47F243E0.w8.b8", !3676, i64 0}
!3686 = !{!3687, !3687, i64 0}
!3687 = !{!"0000020E47F243E0.w8.b16", !3688, i64 0}
!3688 = !{!"0000020E47F243E0.w16.b16", !3677, i64 0}
!3689 = !{!3690, !3690, i64 0}
!3690 = !{!"0000020E47F243E0.w8.b24", !3688, i64 0}
!3691 = !{!3692, !3692, i64 0}
!3692 = !{!"0000020E47F267A0.w8.b8", !3693, i64 0}
!3693 = !{!"0000020E47F267A0.w16.b0", !3694, i64 0}
!3694 = !{!"0000020E47F267A0.w32.b0", !3695, i64 0}
!3695 = !{!"0000020E47F267A0.w64.b0", !3696, i64 0}
!3696 = !{!"0000020E47F267A0.w128.b0", !3697, i64 0}
!3697 = !{!"0000020E47F267A0.w256.b0", !3698, i64 0}
!3698 = !{!"0000020E47F267A0.w512.b0", !3699, i64 0}
!3699 = !{!"0000020E47F267A0.w1024.b0", !3700, i64 0}
!3700 = !{!"0000020E47F267A0", !21, i64 0}
!3701 = !{!3702, !3702, i64 0}
!3702 = !{!"0000020E47F267A0.w8.b16", !3703, i64 0}
!3703 = !{!"0000020E47F267A0.w16.b16", !3694, i64 0}
!3704 = !{!3705, !3705, i64 0}
!3705 = !{!"0000020E47F267A0.w8.b24", !3703, i64 0}
!3706 = !{!3707, !3707, i64 0}
!3707 = !{!"0000020E47F262A0.w8.b0", !3708, i64 0}
!3708 = !{!"0000020E47F262A0.w16.b0", !3709, i64 0}
!3709 = !{!"0000020E47F262A0.w32.b0", !3710, i64 0}
!3710 = !{!"0000020E47F262A0.w64.b0", !3711, i64 0}
!3711 = !{!"0000020E47F262A0.w128.b0", !3712, i64 0}
!3712 = !{!"0000020E47F262A0.w256.b0", !3713, i64 0}
!3713 = !{!"0000020E47F262A0.w512.b0", !3714, i64 0}
!3714 = !{!"0000020E47F262A0.w1024.b0", !3715, i64 0}
!3715 = !{!"0000020E47F262A0", !21, i64 0}
!3716 = !{!3717, !3717, i64 0}
!3717 = !{!"0000020E47F262A0.w8.b8", !3708, i64 0}
!3718 = !{!3719, !3719, i64 0}
!3719 = !{!"0000020E47F262A0.w8.b16", !3720, i64 0}
!3720 = !{!"0000020E47F262A0.w16.b16", !3709, i64 0}
!3721 = !{!3722, !3722, i64 0}
!3722 = !{!"0000020E47F262A0.w8.b24", !3720, i64 0}
!3723 = !{!3724, !3724, i64 0}
!3724 = !{!"0000020E47F278A0.w8.b0", !3725, i64 0}
!3725 = !{!"0000020E47F278A0.w16.b0", !3726, i64 0}
!3726 = !{!"0000020E47F278A0.w32.b0", !3727, i64 0}
!3727 = !{!"0000020E47F278A0.w64.b0", !3728, i64 0}
!3728 = !{!"0000020E47F278A0.w128.b0", !3729, i64 0}
!3729 = !{!"0000020E47F278A0.w256.b0", !3730, i64 0}
!3730 = !{!"0000020E47F278A0.w512.b0", !3731, i64 0}
!3731 = !{!"0000020E47F278A0.w1024.b0", !3732, i64 0}
!3732 = !{!"0000020E47F278A0", !21, i64 0}
!3733 = !{!3734, !3734, i64 0}
!3734 = !{!"0000020E47F278A0.w8.b8", !3725, i64 0}
!3735 = !{!3736, !3736, i64 0}
!3736 = !{!"0000020E47F278A0.w8.b16", !3737, i64 0}
!3737 = !{!"0000020E47F278A0.w16.b16", !3726, i64 0}
!3738 = !{!3739, !3739, i64 0}
!3739 = !{!"0000020E47F278A0.w8.b24", !3737, i64 0}
!3740 = !{!3741, !3741, i64 0}
!3741 = !{!"0000020E47F28320.w8.b0", !3742, i64 0}
!3742 = !{!"0000020E47F28320.w16.b0", !3743, i64 0}
!3743 = !{!"0000020E47F28320.w32.b0", !3744, i64 0}
!3744 = !{!"0000020E47F28320.w64.b0", !3745, i64 0}
!3745 = !{!"0000020E47F28320.w128.b0", !3746, i64 0}
!3746 = !{!"0000020E47F28320.w256.b0", !3747, i64 0}
!3747 = !{!"0000020E47F28320.w512.b0", !3748, i64 0}
!3748 = !{!"0000020E47F28320.w1024.b0", !3749, i64 0}
!3749 = !{!"0000020E47F28320", !21, i64 0}
!3750 = !{!3751, !3751, i64 0}
!3751 = !{!"0000020E47F28320.w8.b8", !3742, i64 0}
!3752 = !{!3753, !3753, i64 0}
!3753 = !{!"0000020E47F28320.w8.b16", !3754, i64 0}
!3754 = !{!"0000020E47F28320.w16.b16", !3743, i64 0}
!3755 = !{!3756, !3756, i64 0}
!3756 = !{!"0000020E47F28320.w8.b24", !3754, i64 0}
!3757 = !{!3758, !3758, i64 0}
!3758 = !{!"0000020E47F28460.w8.b8", !3759, i64 0}
!3759 = !{!"0000020E47F28460.w16.b0", !3760, i64 0}
!3760 = !{!"0000020E47F28460.w32.b0", !3761, i64 0}
!3761 = !{!"0000020E47F28460.w64.b0", !3762, i64 0}
!3762 = !{!"0000020E47F28460.w128.b0", !3763, i64 0}
!3763 = !{!"0000020E47F28460.w256.b0", !3764, i64 0}
!3764 = !{!"0000020E47F28460.w512.b0", !3765, i64 0}
!3765 = !{!"0000020E47F28460.w1024.b0", !3766, i64 0}
!3766 = !{!"0000020E47F28460", !21, i64 0}
!3767 = !{!3768, !3768, i64 0}
!3768 = !{!"0000020E47F289E0.w8.b0", !3769, i64 0}
!3769 = !{!"0000020E47F289E0.w16.b0", !3770, i64 0}
!3770 = !{!"0000020E47F289E0.w32.b0", !3771, i64 0}
!3771 = !{!"0000020E47F289E0.w64.b0", !3772, i64 0}
!3772 = !{!"0000020E47F289E0.w128.b0", !3773, i64 0}
!3773 = !{!"0000020E47F289E0.w256.b0", !3774, i64 0}
!3774 = !{!"0000020E47F289E0.w512.b0", !3775, i64 0}
!3775 = !{!"0000020E47F289E0.w1024.b0", !3776, i64 0}
!3776 = !{!"0000020E47F289E0", !21, i64 0}
!3777 = !{!3778, !3778, i64 0}
!3778 = !{!"0000020E47F289E0.w8.b8", !3769, i64 0}
!3779 = !{!3780, !3780, i64 0}
!3780 = !{!"0000020E47F289E0.w8.b16", !3781, i64 0}
!3781 = !{!"0000020E47F289E0.w16.b16", !3770, i64 0}
!3782 = !{!3783, !3783, i64 0}
!3783 = !{!"0000020E47F289E0.w8.b24", !3781, i64 0}
!3784 = !{!3785, !3785, i64 0}
!3785 = !{!"0000020E47F29720.w8.b8", !3786, i64 0}
!3786 = !{!"0000020E47F29720.w16.b0", !3787, i64 0}
!3787 = !{!"0000020E47F29720.w32.b0", !3788, i64 0}
!3788 = !{!"0000020E47F29720.w64.b0", !3789, i64 0}
!3789 = !{!"0000020E47F29720.w128.b0", !3790, i64 0}
!3790 = !{!"0000020E47F29720.w256.b0", !3791, i64 0}
!3791 = !{!"0000020E47F29720.w512.b0", !3792, i64 0}
!3792 = !{!"0000020E47F29720.w1024.b0", !3793, i64 0}
!3793 = !{!"0000020E47F29720", !21, i64 0}
!3794 = !{!3795, !3795, i64 0}
!3795 = !{!"0000020E47F29720.w8.b16", !3796, i64 0}
!3796 = !{!"0000020E47F29720.w16.b16", !3787, i64 0}
!3797 = !{!3798, !3798, i64 0}
!3798 = !{!"0000020E47F29720.w8.b24", !3796, i64 0}
!3799 = !{!3800, !3800, i64 0}
!3800 = !{!"0000020E47F1F5A0.w4.b0", !3801, i64 0}
!3801 = !{!"0000020E47F1F5A0.w8.b0", !3802, i64 0}
!3802 = !{!"0000020E47F1F5A0.w16.b0", !3803, i64 0}
!3803 = !{!"0000020E47F1F5A0.w32.b0", !3804, i64 0}
!3804 = !{!"0000020E47F1F5A0.w64.b0", !3805, i64 0}
!3805 = !{!"0000020E47F1F5A0.w128.b0", !3806, i64 0}
!3806 = !{!"0000020E47F1F5A0.w256.b0", !3807, i64 0}
!3807 = !{!"0000020E47F1F5A0.w512.b0", !3808, i64 0}
!3808 = !{!"0000020E47F1F5A0.w1024.b0", !3809, i64 0}
!3809 = !{!"0000020E47F1F5A0", !21, i64 0}
!3810 = !{!3811, !3811, i64 0}
!3811 = !{!"0000020E47F1F5A0.w4.b4", !3801, i64 0}
!3812 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3813)
!3813 = !{!3814, !3815, !3816, !3817, !3818, !3819}
!3814 = !DILocalVariable(name: "arg1", arg: 1, scope: !3812, file: !1, type: !8)
!3815 = !DILocalVariable(name: "arg2", arg: 2, scope: !3812, file: !1, type: !9)
!3816 = !DILocalVariable(name: "arg3", arg: 3, scope: !3812, file: !1, type: !7)
!3817 = !DILocalVariable(name: "arg4", arg: 4, scope: !3812, file: !1, type: !8)
!3818 = !DILocalVariable(name: "arg5", arg: 5, scope: !3812, file: !1, type: !9)
!3819 = !DILocalVariable(name: "arg6", arg: 6, scope: !3812, file: !1, type: !8)
!3820 = !DILocation(line: 0, scope: !3812)
!3821 = !{!3822, !3822, i64 0}
!3822 = !{!"0000020E46D89DF0.w4.b0", !3823, i64 0}
!3823 = !{!"0000020E46D89DF0.w8.b0", !3824, i64 0}
!3824 = !{!"0000020E46D89DF0.w16.b0", !3825, i64 0}
!3825 = !{!"0000020E46D89DF0.w32.b0", !3826, i64 0}
!3826 = !{!"0000020E46D89DF0.w64.b0", !3827, i64 0}
!3827 = !{!"0000020E46D89DF0.w128.b0", !3828, i64 0}
!3828 = !{!"0000020E46D89DF0.w256.b0", !3829, i64 0}
!3829 = !{!"0000020E46D89DF0.w512.b0", !3830, i64 0}
!3830 = !{!"0000020E46D89DF0.w1024.b0", !3831, i64 0}
!3831 = !{!"0000020E46D89DF0", !21, i64 0}
!3832 = !{!3833, !3833, i64 0}
!3833 = !{!"0000020E46D89DF0.w4.b4", !3823, i64 0}
!3834 = !{!3835, !3835, i64 0}
!3835 = !{!"0000020E46D89DF0.w4.b8", !3836, i64 0}
!3836 = !{!"0000020E46D89DF0.w8.b8", !3824, i64 0}
!3837 = !{!3838, !3838, i64 0}
!3838 = !{!"0000020E46D89DF0.w4.b12", !3836, i64 0}
!3839 = !{!3840, !3840, i64 0}
!3840 = !{!"0000020E46D91530.w8.b0", !3841, i64 0}
!3841 = !{!"0000020E46D91530.w16.b0", !3842, i64 0}
!3842 = !{!"0000020E46D91530.w32.b0", !3843, i64 0}
!3843 = !{!"0000020E46D91530.w64.b0", !3844, i64 0}
!3844 = !{!"0000020E46D91530.w128.b0", !3845, i64 0}
!3845 = !{!"0000020E46D91530.w256.b0", !3846, i64 0}
!3846 = !{!"0000020E46D91530.w512.b0", !3847, i64 0}
!3847 = !{!"0000020E46D91530.w1024.b0", !3848, i64 0}
!3848 = !{!"0000020E46D91530", !21, i64 0}
!3849 = !{!3850, !3850, i64 0}
!3850 = !{!"0000020E46D91530.w8.b8", !3841, i64 0}
!3851 = !{!3852, !3852, i64 0}
!3852 = !{!"0000020E46D91530.w8.b16", !3853, i64 0}
!3853 = !{!"0000020E46D91530.w16.b16", !3842, i64 0}
!3854 = !{!3855, !3855, i64 0}
!3855 = !{!"0000020E46D91530.w8.b24", !3853, i64 0}
!3856 = !{!3857, !3857, i64 0}
!3857 = !{!"0000020E46D915F0.w8.b8", !3858, i64 0}
!3858 = !{!"0000020E46D915F0.w16.b0", !3859, i64 0}
!3859 = !{!"0000020E46D915F0.w32.b0", !3860, i64 0}
!3860 = !{!"0000020E46D915F0.w64.b0", !3861, i64 0}
!3861 = !{!"0000020E46D915F0.w128.b0", !3862, i64 0}
!3862 = !{!"0000020E46D915F0.w256.b0", !3863, i64 0}
!3863 = !{!"0000020E46D915F0.w512.b0", !3864, i64 0}
!3864 = !{!"0000020E46D915F0.w1024.b0", !3865, i64 0}
!3865 = !{!"0000020E46D915F0", !21, i64 0}
!3866 = !{!3867, !3867, i64 0}
!3867 = !{!"0000020E46D915F0.w8.b16", !3868, i64 0}
!3868 = !{!"0000020E46D915F0.w16.b16", !3859, i64 0}
!3869 = !{!3870, !3870, i64 0}
!3870 = !{!"0000020E46D915F0.w8.b24", !3868, i64 0}
!3871 = !{!3872, !3872, i64 0}
!3872 = !{!"0000020E46D720B0.w8.b0", !3873, i64 0}
!3873 = !{!"0000020E46D720B0.w16.b0", !3874, i64 0}
!3874 = !{!"0000020E46D720B0.w32.b0", !3875, i64 0}
!3875 = !{!"0000020E46D720B0.w64.b0", !3876, i64 0}
!3876 = !{!"0000020E46D720B0.w128.b0", !3877, i64 0}
!3877 = !{!"0000020E46D720B0.w256.b0", !3878, i64 0}
!3878 = !{!"0000020E46D720B0.w512.b0", !3879, i64 0}
!3879 = !{!"0000020E46D720B0.w1024.b0", !3880, i64 0}
!3880 = !{!"0000020E46D720B0", !21, i64 0}
!3881 = !{!3882, !3882, i64 0}
!3882 = !{!"0000020E46D720B0.w8.b8", !3873, i64 0}
!3883 = !{!3884, !3884, i64 0}
!3884 = !{!"0000020E46D720B0.w8.b16", !3885, i64 0}
!3885 = !{!"0000020E46D720B0.w16.b16", !3874, i64 0}
!3886 = !{!3887, !3887, i64 0}
!3887 = !{!"0000020E46D720B0.w8.b24", !3885, i64 0}
!3888 = !{!3889, !3889, i64 0}
!3889 = !{!"0000020E46D72070.w8.b0", !3890, i64 0}
!3890 = !{!"0000020E46D72070.w16.b0", !3891, i64 0}
!3891 = !{!"0000020E46D72070.w32.b0", !3892, i64 0}
!3892 = !{!"0000020E46D72070.w64.b0", !3893, i64 0}
!3893 = !{!"0000020E46D72070.w128.b0", !3894, i64 0}
!3894 = !{!"0000020E46D72070.w256.b0", !3895, i64 0}
!3895 = !{!"0000020E46D72070.w512.b0", !3896, i64 0}
!3896 = !{!"0000020E46D72070.w1024.b0", !3897, i64 0}
!3897 = !{!"0000020E46D72070", !21, i64 0}
!3898 = !{!3899, !3899, i64 0}
!3899 = !{!"0000020E46D72070.w8.b8", !3890, i64 0}
!3900 = !{!3901, !3901, i64 0}
!3901 = !{!"0000020E46D725B0.w8.b0", !3902, i64 0}
!3902 = !{!"0000020E46D725B0.w16.b0", !3903, i64 0}
!3903 = !{!"0000020E46D725B0.w32.b0", !3904, i64 0}
!3904 = !{!"0000020E46D725B0.w64.b0", !3905, i64 0}
!3905 = !{!"0000020E46D725B0.w128.b0", !3906, i64 0}
!3906 = !{!"0000020E46D725B0.w256.b0", !3907, i64 0}
!3907 = !{!"0000020E46D725B0.w512.b0", !3908, i64 0}
!3908 = !{!"0000020E46D725B0.w1024.b0", !3909, i64 0}
!3909 = !{!"0000020E46D725B0", !21, i64 0}
!3910 = !{!3911, !3911, i64 0}
!3911 = !{!"0000020E46D725B0.w8.b8", !3902, i64 0}
!3912 = !{!3913, !3913, i64 0}
!3913 = !{!"0000020E46D725B0.w8.b16", !3914, i64 0}
!3914 = !{!"0000020E46D725B0.w16.b16", !3903, i64 0}
!3915 = !{!3916, !3916, i64 0}
!3916 = !{!"0000020E46D725B0.w8.b24", !3914, i64 0}
!3917 = !{!3918, !3918, i64 0}
!3918 = !{!"0000020E46D72A70.w8.b8", !3919, i64 0}
!3919 = !{!"0000020E46D72A70.w16.b0", !3920, i64 0}
!3920 = !{!"0000020E46D72A70.w32.b0", !3921, i64 0}
!3921 = !{!"0000020E46D72A70.w64.b0", !3922, i64 0}
!3922 = !{!"0000020E46D72A70.w128.b0", !3923, i64 0}
!3923 = !{!"0000020E46D72A70.w256.b0", !3924, i64 0}
!3924 = !{!"0000020E46D72A70.w512.b0", !3925, i64 0}
!3925 = !{!"0000020E46D72A70.w1024.b0", !3926, i64 0}
!3926 = !{!"0000020E46D72A70", !21, i64 0}
!3927 = !{!3928, !3928, i64 0}
!3928 = !{!"0000020E46D73270.w8.b0", !3929, i64 0}
!3929 = !{!"0000020E46D73270.w16.b0", !3930, i64 0}
!3930 = !{!"0000020E46D73270.w32.b0", !3931, i64 0}
!3931 = !{!"0000020E46D73270.w64.b0", !3932, i64 0}
!3932 = !{!"0000020E46D73270.w128.b0", !3933, i64 0}
!3933 = !{!"0000020E46D73270.w256.b0", !3934, i64 0}
!3934 = !{!"0000020E46D73270.w512.b0", !3935, i64 0}
!3935 = !{!"0000020E46D73270.w1024.b0", !3936, i64 0}
!3936 = !{!"0000020E46D73270", !21, i64 0}
!3937 = !{!3938, !3938, i64 0}
!3938 = !{!"0000020E46D73270.w8.b8", !3929, i64 0}
!3939 = !{!3940, !3940, i64 0}
!3940 = !{!"0000020E46D73270.w8.b16", !3941, i64 0}
!3941 = !{!"0000020E46D73270.w16.b16", !3930, i64 0}
!3942 = !{!3943, !3943, i64 0}
!3943 = !{!"0000020E46D73270.w8.b24", !3941, i64 0}
!3944 = !{!3945, !3945, i64 0}
!3945 = !{!"0000020E46D73CF0.w8.b8", !3946, i64 0}
!3946 = !{!"0000020E46D73CF0.w16.b0", !3947, i64 0}
!3947 = !{!"0000020E46D73CF0.w32.b0", !3948, i64 0}
!3948 = !{!"0000020E46D73CF0.w64.b0", !3949, i64 0}
!3949 = !{!"0000020E46D73CF0.w128.b0", !3950, i64 0}
!3950 = !{!"0000020E46D73CF0.w256.b0", !3951, i64 0}
!3951 = !{!"0000020E46D73CF0.w512.b0", !3952, i64 0}
!3952 = !{!"0000020E46D73CF0.w1024.b0", !3953, i64 0}
!3953 = !{!"0000020E46D73CF0", !21, i64 0}
!3954 = !{!3955, !3955, i64 0}
!3955 = !{!"0000020E46D73CF0.w8.b16", !3956, i64 0}
!3956 = !{!"0000020E46D73CF0.w16.b16", !3947, i64 0}
!3957 = !{!3958, !3958, i64 0}
!3958 = !{!"0000020E46D73CF0.w8.b24", !3956, i64 0}
!3959 = !{!3960, !3960, i64 0}
!3960 = !{!"0000020E446EFFC0.w4.b0", !3961, i64 0}
!3961 = !{!"0000020E446EFFC0.w8.b0", !3962, i64 0}
!3962 = !{!"0000020E446EFFC0.w16.b0", !3963, i64 0}
!3963 = !{!"0000020E446EFFC0.w32.b0", !3964, i64 0}
!3964 = !{!"0000020E446EFFC0.w64.b0", !3965, i64 0}
!3965 = !{!"0000020E446EFFC0.w128.b0", !3966, i64 0}
!3966 = !{!"0000020E446EFFC0.w256.b0", !3967, i64 0}
!3967 = !{!"0000020E446EFFC0.w512.b0", !3968, i64 0}
!3968 = !{!"0000020E446EFFC0.w1024.b0", !3969, i64 0}
!3969 = !{!"0000020E446EFFC0", !21, i64 0}
!3970 = !{!3971, !3971, i64 0}
!3971 = !{!"0000020E446EFFC0.w4.b4", !3961, i64 0}
!3972 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3973)
!3973 = !{!3974, !3975, !3976, !3977, !3978, !3979}
!3974 = !DILocalVariable(name: "arg1", arg: 1, scope: !3972, file: !1, type: !8)
!3975 = !DILocalVariable(name: "arg2", arg: 2, scope: !3972, file: !1, type: !9)
!3976 = !DILocalVariable(name: "arg3", arg: 3, scope: !3972, file: !1, type: !7)
!3977 = !DILocalVariable(name: "arg4", arg: 4, scope: !3972, file: !1, type: !8)
!3978 = !DILocalVariable(name: "arg5", arg: 5, scope: !3972, file: !1, type: !9)
!3979 = !DILocalVariable(name: "arg6", arg: 6, scope: !3972, file: !1, type: !8)
!3980 = !DILocation(line: 0, scope: !3972)
!3981 = !{!3982, !3982, i64 0}
!3982 = !{!"0000020E304CFDF0.w4.b0", !3983, i64 0}
!3983 = !{!"0000020E304CFDF0.w8.b0", !3984, i64 0}
!3984 = !{!"0000020E304CFDF0.w16.b0", !3985, i64 0}
!3985 = !{!"0000020E304CFDF0.w32.b0", !3986, i64 0}
!3986 = !{!"0000020E304CFDF0.w64.b0", !3987, i64 0}
!3987 = !{!"0000020E304CFDF0.w128.b0", !3988, i64 0}
!3988 = !{!"0000020E304CFDF0.w256.b0", !3989, i64 0}
!3989 = !{!"0000020E304CFDF0.w512.b0", !3990, i64 0}
!3990 = !{!"0000020E304CFDF0.w1024.b0", !3991, i64 0}
!3991 = !{!"0000020E304CFDF0", !21, i64 0}
!3992 = !{!3993, !3993, i64 0}
!3993 = !{!"0000020E304CFDF0.w4.b4", !3983, i64 0}
!3994 = !{!3995, !3995, i64 0}
!3995 = !{!"0000020E304CFDF0.w4.b8", !3996, i64 0}
!3996 = !{!"0000020E304CFDF0.w8.b8", !3984, i64 0}
!3997 = !{!3998, !3998, i64 0}
!3998 = !{!"0000020E304CFDF0.w4.b12", !3996, i64 0}
!3999 = !{!4000, !4000, i64 0}
!4000 = !{!"0000020E304D4A30.w8.b0", !4001, i64 0}
!4001 = !{!"0000020E304D4A30.w16.b0", !4002, i64 0}
!4002 = !{!"0000020E304D4A30.w32.b0", !4003, i64 0}
!4003 = !{!"0000020E304D4A30.w64.b0", !4004, i64 0}
!4004 = !{!"0000020E304D4A30.w128.b0", !4005, i64 0}
!4005 = !{!"0000020E304D4A30.w256.b0", !4006, i64 0}
!4006 = !{!"0000020E304D4A30.w512.b0", !4007, i64 0}
!4007 = !{!"0000020E304D4A30.w1024.b0", !4008, i64 0}
!4008 = !{!"0000020E304D4A30", !21, i64 0}
!4009 = !{!4010, !4010, i64 0}
!4010 = !{!"0000020E304D4A30.w8.b8", !4001, i64 0}
!4011 = !{!4012, !4012, i64 0}
!4012 = !{!"0000020E304D4A30.w8.b16", !4013, i64 0}
!4013 = !{!"0000020E304D4A30.w16.b16", !4002, i64 0}
!4014 = !{!4015, !4015, i64 0}
!4015 = !{!"0000020E304D4A30.w8.b24", !4013, i64 0}
!4016 = !{!4017, !4017, i64 0}
!4017 = !{!"0000020E304D6B70.w8.b8", !4018, i64 0}
!4018 = !{!"0000020E304D6B70.w16.b0", !4019, i64 0}
!4019 = !{!"0000020E304D6B70.w32.b0", !4020, i64 0}
!4020 = !{!"0000020E304D6B70.w64.b0", !4021, i64 0}
!4021 = !{!"0000020E304D6B70.w128.b0", !4022, i64 0}
!4022 = !{!"0000020E304D6B70.w256.b0", !4023, i64 0}
!4023 = !{!"0000020E304D6B70.w512.b0", !4024, i64 0}
!4024 = !{!"0000020E304D6B70.w1024.b0", !4025, i64 0}
!4025 = !{!"0000020E304D6B70", !21, i64 0}
!4026 = !{!4027, !4027, i64 0}
!4027 = !{!"0000020E304D6B70.w8.b16", !4028, i64 0}
!4028 = !{!"0000020E304D6B70.w16.b16", !4019, i64 0}
!4029 = !{!4030, !4030, i64 0}
!4030 = !{!"0000020E304D6B70.w8.b24", !4028, i64 0}
!4031 = !{!4032, !4032, i64 0}
!4032 = !{!"0000020E304D67B0.w8.b0", !4033, i64 0}
!4033 = !{!"0000020E304D67B0.w16.b0", !4034, i64 0}
!4034 = !{!"0000020E304D67B0.w32.b0", !4035, i64 0}
!4035 = !{!"0000020E304D67B0.w64.b0", !4036, i64 0}
!4036 = !{!"0000020E304D67B0.w128.b0", !4037, i64 0}
!4037 = !{!"0000020E304D67B0.w256.b0", !4038, i64 0}
!4038 = !{!"0000020E304D67B0.w512.b0", !4039, i64 0}
!4039 = !{!"0000020E304D67B0.w1024.b0", !4040, i64 0}
!4040 = !{!"0000020E304D67B0", !21, i64 0}
!4041 = !{!4042, !4042, i64 0}
!4042 = !{!"0000020E304D67B0.w8.b8", !4033, i64 0}
!4043 = !{!4044, !4044, i64 0}
!4044 = !{!"0000020E304D67B0.w8.b16", !4045, i64 0}
!4045 = !{!"0000020E304D67B0.w16.b16", !4034, i64 0}
!4046 = !{!4047, !4047, i64 0}
!4047 = !{!"0000020E304D67B0.w8.b24", !4045, i64 0}
!4048 = !{!4049, !4049, i64 0}
!4049 = !{!"0000020E304D7870.w8.b0", !4050, i64 0}
!4050 = !{!"0000020E304D7870.w16.b0", !4051, i64 0}
!4051 = !{!"0000020E304D7870.w32.b0", !4052, i64 0}
!4052 = !{!"0000020E304D7870.w64.b0", !4053, i64 0}
!4053 = !{!"0000020E304D7870.w128.b0", !4054, i64 0}
!4054 = !{!"0000020E304D7870.w256.b0", !4055, i64 0}
!4055 = !{!"0000020E304D7870.w512.b0", !4056, i64 0}
!4056 = !{!"0000020E304D7870.w1024.b0", !4057, i64 0}
!4057 = !{!"0000020E304D7870", !21, i64 0}
!4058 = !{!4059, !4059, i64 0}
!4059 = !{!"0000020E304D7870.w8.b8", !4050, i64 0}
!4060 = !{!4061, !4061, i64 0}
!4061 = !{!"0000020E304D7430.w8.b0", !4062, i64 0}
!4062 = !{!"0000020E304D7430.w16.b0", !4063, i64 0}
!4063 = !{!"0000020E304D7430.w32.b0", !4064, i64 0}
!4064 = !{!"0000020E304D7430.w64.b0", !4065, i64 0}
!4065 = !{!"0000020E304D7430.w128.b0", !4066, i64 0}
!4066 = !{!"0000020E304D7430.w256.b0", !4067, i64 0}
!4067 = !{!"0000020E304D7430.w512.b0", !4068, i64 0}
!4068 = !{!"0000020E304D7430.w1024.b0", !4069, i64 0}
!4069 = !{!"0000020E304D7430", !21, i64 0}
!4070 = !{!4071, !4071, i64 0}
!4071 = !{!"0000020E304D7430.w8.b8", !4062, i64 0}
!4072 = !{!4073, !4073, i64 0}
!4073 = !{!"0000020E304D7430.w8.b16", !4074, i64 0}
!4074 = !{!"0000020E304D7430.w16.b16", !4063, i64 0}
!4075 = !{!4076, !4076, i64 0}
!4076 = !{!"0000020E304D7430.w8.b24", !4074, i64 0}
!4077 = !{!4078, !4078, i64 0}
!4078 = !{!"0000020E304D8470.w8.b8", !4079, i64 0}
!4079 = !{!"0000020E304D8470.w16.b0", !4080, i64 0}
!4080 = !{!"0000020E304D8470.w32.b0", !4081, i64 0}
!4081 = !{!"0000020E304D8470.w64.b0", !4082, i64 0}
!4082 = !{!"0000020E304D8470.w128.b0", !4083, i64 0}
!4083 = !{!"0000020E304D8470.w256.b0", !4084, i64 0}
!4084 = !{!"0000020E304D8470.w512.b0", !4085, i64 0}
!4085 = !{!"0000020E304D8470.w1024.b0", !4086, i64 0}
!4086 = !{!"0000020E304D8470", !21, i64 0}
!4087 = !{!4088, !4088, i64 0}
!4088 = !{!"0000020E304D8930.w8.b0", !4089, i64 0}
!4089 = !{!"0000020E304D8930.w16.b0", !4090, i64 0}
!4090 = !{!"0000020E304D8930.w32.b0", !4091, i64 0}
!4091 = !{!"0000020E304D8930.w64.b0", !4092, i64 0}
!4092 = !{!"0000020E304D8930.w128.b0", !4093, i64 0}
!4093 = !{!"0000020E304D8930.w256.b0", !4094, i64 0}
!4094 = !{!"0000020E304D8930.w512.b0", !4095, i64 0}
!4095 = !{!"0000020E304D8930.w1024.b0", !4096, i64 0}
!4096 = !{!"0000020E304D8930", !21, i64 0}
!4097 = !{!4098, !4098, i64 0}
!4098 = !{!"0000020E304D8930.w8.b8", !4089, i64 0}
!4099 = !{!4100, !4100, i64 0}
!4100 = !{!"0000020E304D8930.w8.b16", !4101, i64 0}
!4101 = !{!"0000020E304D8930.w16.b16", !4090, i64 0}
!4102 = !{!4103, !4103, i64 0}
!4103 = !{!"0000020E304D8930.w8.b24", !4101, i64 0}
!4104 = !{!4105, !4105, i64 0}
!4105 = !{!"0000020E467C0530.w8.b8", !4106, i64 0}
!4106 = !{!"0000020E467C0530.w16.b0", !4107, i64 0}
!4107 = !{!"0000020E467C0530.w32.b0", !4108, i64 0}
!4108 = !{!"0000020E467C0530.w64.b0", !4109, i64 0}
!4109 = !{!"0000020E467C0530.w128.b0", !4110, i64 0}
!4110 = !{!"0000020E467C0530.w256.b0", !4111, i64 0}
!4111 = !{!"0000020E467C0530.w512.b0", !4112, i64 0}
!4112 = !{!"0000020E467C0530.w1024.b0", !4113, i64 0}
!4113 = !{!"0000020E467C0530", !21, i64 0}
!4114 = !{!4115, !4115, i64 0}
!4115 = !{!"0000020E467C0530.w8.b16", !4116, i64 0}
!4116 = !{!"0000020E467C0530.w16.b16", !4107, i64 0}
!4117 = !{!4118, !4118, i64 0}
!4118 = !{!"0000020E467C0530.w8.b24", !4116, i64 0}
!4119 = !{!4120, !4120, i64 0}
!4120 = !{!"0000020E304B80A0.w4.b0", !4121, i64 0}
!4121 = !{!"0000020E304B80A0.w8.b0", !4122, i64 0}
!4122 = !{!"0000020E304B80A0.w16.b0", !4123, i64 0}
!4123 = !{!"0000020E304B80A0.w32.b0", !4124, i64 0}
!4124 = !{!"0000020E304B80A0.w64.b0", !4125, i64 0}
!4125 = !{!"0000020E304B80A0.w128.b0", !4126, i64 0}
!4126 = !{!"0000020E304B80A0.w256.b0", !4127, i64 0}
!4127 = !{!"0000020E304B80A0.w512.b0", !4128, i64 0}
!4128 = !{!"0000020E304B80A0.w1024.b0", !4129, i64 0}
!4129 = !{!"0000020E304B80A0", !21, i64 0}
!4130 = !{!4131, !4131, i64 0}
!4131 = !{!"0000020E304B80A0.w4.b4", !4121, i64 0}
!4132 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4133)
!4133 = !{!4134, !4135, !4136, !4137, !4138, !4139}
!4134 = !DILocalVariable(name: "arg1", arg: 1, scope: !4132, file: !1, type: !8)
!4135 = !DILocalVariable(name: "arg2", arg: 2, scope: !4132, file: !1, type: !9)
!4136 = !DILocalVariable(name: "arg3", arg: 3, scope: !4132, file: !1, type: !7)
!4137 = !DILocalVariable(name: "arg4", arg: 4, scope: !4132, file: !1, type: !8)
!4138 = !DILocalVariable(name: "arg5", arg: 5, scope: !4132, file: !1, type: !9)
!4139 = !DILocalVariable(name: "arg6", arg: 6, scope: !4132, file: !1, type: !8)
!4140 = !DILocation(line: 0, scope: !4132)
!4141 = !{!4142, !4142, i64 0}
!4142 = !{!"0000020E47F35260.w4.b0", !4143, i64 0}
!4143 = !{!"0000020E47F35260.w8.b0", !4144, i64 0}
!4144 = !{!"0000020E47F35260.w16.b0", !4145, i64 0}
!4145 = !{!"0000020E47F35260.w32.b0", !4146, i64 0}
!4146 = !{!"0000020E47F35260.w64.b0", !4147, i64 0}
!4147 = !{!"0000020E47F35260.w128.b0", !4148, i64 0}
!4148 = !{!"0000020E47F35260.w256.b0", !4149, i64 0}
!4149 = !{!"0000020E47F35260.w512.b0", !4150, i64 0}
!4150 = !{!"0000020E47F35260.w1024.b0", !4151, i64 0}
!4151 = !{!"0000020E47F35260", !21, i64 0}
!4152 = !{!4153, !4153, i64 0}
!4153 = !{!"0000020E47F35260.w4.b4", !4143, i64 0}
!4154 = !{!4155, !4155, i64 0}
!4155 = !{!"0000020E47F35260.w4.b8", !4156, i64 0}
!4156 = !{!"0000020E47F35260.w8.b8", !4144, i64 0}
!4157 = !{!4158, !4158, i64 0}
!4158 = !{!"0000020E47F35260.w4.b12", !4156, i64 0}
!4159 = !{!4160, !4160, i64 0}
!4160 = !{!"0000020E47F38D20.w8.b0", !4161, i64 0}
!4161 = !{!"0000020E47F38D20.w16.b0", !4162, i64 0}
!4162 = !{!"0000020E47F38D20.w32.b0", !4163, i64 0}
!4163 = !{!"0000020E47F38D20.w64.b0", !4164, i64 0}
!4164 = !{!"0000020E47F38D20.w128.b0", !4165, i64 0}
!4165 = !{!"0000020E47F38D20.w256.b0", !4166, i64 0}
!4166 = !{!"0000020E47F38D20.w512.b0", !4167, i64 0}
!4167 = !{!"0000020E47F38D20.w1024.b0", !4168, i64 0}
!4168 = !{!"0000020E47F38D20", !21, i64 0}
!4169 = !{!4170, !4170, i64 0}
!4170 = !{!"0000020E47F38D20.w8.b8", !4161, i64 0}
!4171 = !{!4172, !4172, i64 0}
!4172 = !{!"0000020E47F38320.w8.b8", !4173, i64 0}
!4173 = !{!"0000020E47F38320.w16.b0", !4174, i64 0}
!4174 = !{!"0000020E47F38320.w32.b0", !4175, i64 0}
!4175 = !{!"0000020E47F38320.w64.b0", !4176, i64 0}
!4176 = !{!"0000020E47F38320.w128.b0", !4177, i64 0}
!4177 = !{!"0000020E47F38320.w256.b0", !4178, i64 0}
!4178 = !{!"0000020E47F38320.w512.b0", !4179, i64 0}
!4179 = !{!"0000020E47F38320.w1024.b0", !4180, i64 0}
!4180 = !{!"0000020E47F38320", !21, i64 0}
!4181 = !{!4182, !4182, i64 0}
!4182 = !{!"0000020E47F3A060.w8.b0", !4183, i64 0}
!4183 = !{!"0000020E47F3A060.w16.b0", !4184, i64 0}
!4184 = !{!"0000020E47F3A060.w32.b0", !4185, i64 0}
!4185 = !{!"0000020E47F3A060.w64.b0", !4186, i64 0}
!4186 = !{!"0000020E47F3A060.w128.b0", !4187, i64 0}
!4187 = !{!"0000020E47F3A060.w256.b0", !4188, i64 0}
!4188 = !{!"0000020E47F3A060.w512.b0", !4189, i64 0}
!4189 = !{!"0000020E47F3A060.w1024.b0", !4190, i64 0}
!4190 = !{!"0000020E47F3A060", !21, i64 0}
!4191 = !{!4192, !4192, i64 0}
!4192 = !{!"0000020E47F3A060.w8.b8", !4183, i64 0}
!4193 = !{!4194, !4194, i64 0}
!4194 = !{!"0000020E47F39AE0.w8.b0", !4195, i64 0}
!4195 = !{!"0000020E47F39AE0.w16.b0", !4196, i64 0}
!4196 = !{!"0000020E47F39AE0.w32.b0", !4197, i64 0}
!4197 = !{!"0000020E47F39AE0.w64.b0", !4198, i64 0}
!4198 = !{!"0000020E47F39AE0.w128.b0", !4199, i64 0}
!4199 = !{!"0000020E47F39AE0.w256.b0", !4200, i64 0}
!4200 = !{!"0000020E47F39AE0.w512.b0", !4201, i64 0}
!4201 = !{!"0000020E47F39AE0.w1024.b0", !4202, i64 0}
!4202 = !{!"0000020E47F39AE0", !21, i64 0}
!4203 = !{!4204, !4204, i64 0}
!4204 = !{!"0000020E47F39AE0.w8.b8", !4195, i64 0}
!4205 = !{!4206, !4206, i64 0}
!4206 = !{!"0000020E47F3AF60.w8.b0", !4207, i64 0}
!4207 = !{!"0000020E47F3AF60.w16.b0", !4208, i64 0}
!4208 = !{!"0000020E47F3AF60.w32.b0", !4209, i64 0}
!4209 = !{!"0000020E47F3AF60.w64.b0", !4210, i64 0}
!4210 = !{!"0000020E47F3AF60.w128.b0", !4211, i64 0}
!4211 = !{!"0000020E47F3AF60.w256.b0", !4212, i64 0}
!4212 = !{!"0000020E47F3AF60.w512.b0", !4213, i64 0}
!4213 = !{!"0000020E47F3AF60.w1024.b0", !4214, i64 0}
!4214 = !{!"0000020E47F3AF60", !21, i64 0}
!4215 = !{!4216, !4216, i64 0}
!4216 = !{!"0000020E47F3AF60.w8.b8", !4207, i64 0}
!4217 = !{!4218, !4218, i64 0}
!4218 = !{!"0000020E47F3A460.w8.b8", !4219, i64 0}
!4219 = !{!"0000020E47F3A460.w16.b0", !4220, i64 0}
!4220 = !{!"0000020E47F3A460.w32.b0", !4221, i64 0}
!4221 = !{!"0000020E47F3A460.w64.b0", !4222, i64 0}
!4222 = !{!"0000020E47F3A460.w128.b0", !4223, i64 0}
!4223 = !{!"0000020E47F3A460.w256.b0", !4224, i64 0}
!4224 = !{!"0000020E47F3A460.w512.b0", !4225, i64 0}
!4225 = !{!"0000020E47F3A460.w1024.b0", !4226, i64 0}
!4226 = !{!"0000020E47F3A460", !21, i64 0}
!4227 = !{!4228, !4228, i64 0}
!4228 = !{!"0000020E47F1A3A0.w8.b0", !4229, i64 0}
!4229 = !{!"0000020E47F1A3A0.w16.b0", !4230, i64 0}
!4230 = !{!"0000020E47F1A3A0.w32.b0", !4231, i64 0}
!4231 = !{!"0000020E47F1A3A0.w64.b0", !4232, i64 0}
!4232 = !{!"0000020E47F1A3A0.w128.b0", !4233, i64 0}
!4233 = !{!"0000020E47F1A3A0.w256.b0", !4234, i64 0}
!4234 = !{!"0000020E47F1A3A0.w512.b0", !4235, i64 0}
!4235 = !{!"0000020E47F1A3A0.w1024.b0", !4236, i64 0}
!4236 = !{!"0000020E47F1A3A0", !21, i64 0}
!4237 = !{!4238, !4238, i64 0}
!4238 = !{!"0000020E47F1A3A0.w8.b8", !4229, i64 0}
!4239 = !{!4240, !4240, i64 0}
!4240 = !{!"0000020E47F1AFA0.w8.b8", !4241, i64 0}
!4241 = !{!"0000020E47F1AFA0.w16.b0", !4242, i64 0}
!4242 = !{!"0000020E47F1AFA0.w32.b0", !4243, i64 0}
!4243 = !{!"0000020E47F1AFA0.w64.b0", !4244, i64 0}
!4244 = !{!"0000020E47F1AFA0.w128.b0", !4245, i64 0}
!4245 = !{!"0000020E47F1AFA0.w256.b0", !4246, i64 0}
!4246 = !{!"0000020E47F1AFA0.w512.b0", !4247, i64 0}
!4247 = !{!"0000020E47F1AFA0.w1024.b0", !4248, i64 0}
!4248 = !{!"0000020E47F1AFA0", !21, i64 0}
!4249 = !{!4250, !4250, i64 0}
!4250 = !{!"0000020E47FDD230.w4.b0", !4251, i64 0}
!4251 = !{!"0000020E47FDD230.w8.b0", !4252, i64 0}
!4252 = !{!"0000020E47FDD230.w16.b0", !4253, i64 0}
!4253 = !{!"0000020E47FDD230.w32.b0", !4254, i64 0}
!4254 = !{!"0000020E47FDD230.w64.b0", !4255, i64 0}
!4255 = !{!"0000020E47FDD230.w128.b0", !4256, i64 0}
!4256 = !{!"0000020E47FDD230.w256.b0", !4257, i64 0}
!4257 = !{!"0000020E47FDD230.w512.b0", !4258, i64 0}
!4258 = !{!"0000020E47FDD230.w1024.b0", !4259, i64 0}
!4259 = !{!"0000020E47FDD230", !21, i64 0}
!4260 = !{!4261, !4261, i64 0}
!4261 = !{!"0000020E47FDD230.w4.b4", !4251, i64 0}
!4262 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4263)
!4263 = !{!4264, !4265, !4266, !4267, !4268, !4269}
!4264 = !DILocalVariable(name: "arg1", arg: 1, scope: !4262, file: !1, type: !8)
!4265 = !DILocalVariable(name: "arg2", arg: 2, scope: !4262, file: !1, type: !9)
!4266 = !DILocalVariable(name: "arg3", arg: 3, scope: !4262, file: !1, type: !7)
!4267 = !DILocalVariable(name: "arg4", arg: 4, scope: !4262, file: !1, type: !8)
!4268 = !DILocalVariable(name: "arg5", arg: 5, scope: !4262, file: !1, type: !9)
!4269 = !DILocalVariable(name: "arg6", arg: 6, scope: !4262, file: !1, type: !8)
!4270 = !DILocation(line: 0, scope: !4262)
!4271 = !{!4272, !4272, i64 0}
!4272 = !{!"0000020E46D8CDF0.w4.b0", !4273, i64 0}
!4273 = !{!"0000020E46D8CDF0.w8.b0", !4274, i64 0}
!4274 = !{!"0000020E46D8CDF0.w16.b0", !4275, i64 0}
!4275 = !{!"0000020E46D8CDF0.w32.b0", !4276, i64 0}
!4276 = !{!"0000020E46D8CDF0.w64.b0", !4277, i64 0}
!4277 = !{!"0000020E46D8CDF0.w128.b0", !4278, i64 0}
!4278 = !{!"0000020E46D8CDF0.w256.b0", !4279, i64 0}
!4279 = !{!"0000020E46D8CDF0.w512.b0", !4280, i64 0}
!4280 = !{!"0000020E46D8CDF0.w1024.b0", !4281, i64 0}
!4281 = !{!"0000020E46D8CDF0", !21, i64 0}
!4282 = !{!4283, !4283, i64 0}
!4283 = !{!"0000020E46D8CDF0.w4.b4", !4273, i64 0}
!4284 = !{!4285, !4285, i64 0}
!4285 = !{!"0000020E46D728B0.w8.b0", !4286, i64 0}
!4286 = !{!"0000020E46D728B0.w16.b0", !4287, i64 0}
!4287 = !{!"0000020E46D728B0.w32.b0", !4288, i64 0}
!4288 = !{!"0000020E46D728B0.w64.b0", !4289, i64 0}
!4289 = !{!"0000020E46D728B0.w128.b0", !4290, i64 0}
!4290 = !{!"0000020E46D728B0.w256.b0", !4291, i64 0}
!4291 = !{!"0000020E46D728B0.w512.b0", !4292, i64 0}
!4292 = !{!"0000020E46D728B0.w1024.b0", !4293, i64 0}
!4293 = !{!"0000020E46D728B0", !21, i64 0}
!4294 = !{!4295, !4295, i64 0}
!4295 = !{!"0000020E46D728B0.w8.b8", !4286, i64 0}
!4296 = !{!4297, !4297, i64 0}
!4297 = !{!"0000020E46D728B0.w8.b16", !4298, i64 0}
!4298 = !{!"0000020E46D728B0.w16.b16", !4287, i64 0}
!4299 = !{!4300, !4300, i64 0}
!4300 = !{!"0000020E46D728B0.w8.b24", !4298, i64 0}
!4301 = !{!4302, !4302, i64 0}
!4302 = !{!"0000020E46D734F0.w8.b8", !4303, i64 0}
!4303 = !{!"0000020E46D734F0.w16.b0", !4304, i64 0}
!4304 = !{!"0000020E46D734F0.w32.b0", !4305, i64 0}
!4305 = !{!"0000020E46D734F0.w64.b0", !4306, i64 0}
!4306 = !{!"0000020E46D734F0.w128.b0", !4307, i64 0}
!4307 = !{!"0000020E46D734F0.w256.b0", !4308, i64 0}
!4308 = !{!"0000020E46D734F0.w512.b0", !4309, i64 0}
!4309 = !{!"0000020E46D734F0.w1024.b0", !4310, i64 0}
!4310 = !{!"0000020E46D734F0", !21, i64 0}
!4311 = !{!4312, !4312, i64 0}
!4312 = !{!"0000020E46D734F0.w8.b16", !4313, i64 0}
!4313 = !{!"0000020E46D734F0.w16.b16", !4304, i64 0}
!4314 = !{!4315, !4315, i64 0}
!4315 = !{!"0000020E46D734F0.w8.b24", !4313, i64 0}
!4316 = !{!4317, !4317, i64 0}
!4317 = !{!"0000020E46D77070.w8.b0", !4318, i64 0}
!4318 = !{!"0000020E46D77070.w16.b0", !4319, i64 0}
!4319 = !{!"0000020E46D77070.w32.b0", !4320, i64 0}
!4320 = !{!"0000020E46D77070.w64.b0", !4321, i64 0}
!4321 = !{!"0000020E46D77070.w128.b0", !4322, i64 0}
!4322 = !{!"0000020E46D77070.w256.b0", !4323, i64 0}
!4323 = !{!"0000020E46D77070.w512.b0", !4324, i64 0}
!4324 = !{!"0000020E46D77070.w1024.b0", !4325, i64 0}
!4325 = !{!"0000020E46D77070", !21, i64 0}
!4326 = !{!4327, !4327, i64 0}
!4327 = !{!"0000020E46D77070.w8.b8", !4318, i64 0}
!4328 = !{!4329, !4329, i64 0}
!4329 = !{!"0000020E46D77070.w8.b16", !4330, i64 0}
!4330 = !{!"0000020E46D77070.w16.b16", !4319, i64 0}
!4331 = !{!4332, !4332, i64 0}
!4332 = !{!"0000020E46D77070.w8.b24", !4330, i64 0}
!4333 = !{!4334, !4334, i64 0}
!4334 = !{!"0000020E446F0D80.w8.b8", !4335, i64 0}
!4335 = !{!"0000020E446F0D80.w16.b0", !4336, i64 0}
!4336 = !{!"0000020E446F0D80.w32.b0", !4337, i64 0}
!4337 = !{!"0000020E446F0D80.w64.b0", !4338, i64 0}
!4338 = !{!"0000020E446F0D80.w128.b0", !4339, i64 0}
!4339 = !{!"0000020E446F0D80.w256.b0", !4340, i64 0}
!4340 = !{!"0000020E446F0D80.w512.b0", !4341, i64 0}
!4341 = !{!"0000020E446F0D80.w1024.b0", !4342, i64 0}
!4342 = !{!"0000020E446F0D80", !21, i64 0}
!4343 = !{!4344, !4344, i64 0}
!4344 = !{!"0000020E446F0D80.w8.b16", !4345, i64 0}
!4345 = !{!"0000020E446F0D80.w16.b16", !4336, i64 0}
!4346 = !{!4347, !4347, i64 0}
!4347 = !{!"0000020E446F0D80.w8.b24", !4345, i64 0}
!4348 = !{!4349, !4349, i64 0}
!4349 = !{!"0000020E446E6E80.w4.b0", !4350, i64 0}
!4350 = !{!"0000020E446E6E80.w8.b0", !4351, i64 0}
!4351 = !{!"0000020E446E6E80.w16.b0", !4352, i64 0}
!4352 = !{!"0000020E446E6E80.w32.b0", !4353, i64 0}
!4353 = !{!"0000020E446E6E80.w64.b0", !4354, i64 0}
!4354 = !{!"0000020E446E6E80.w128.b0", !4355, i64 0}
!4355 = !{!"0000020E446E6E80.w256.b0", !4356, i64 0}
!4356 = !{!"0000020E446E6E80.w512.b0", !4357, i64 0}
!4357 = !{!"0000020E446E6E80.w1024.b0", !4358, i64 0}
!4358 = !{!"0000020E446E6E80", !21, i64 0}
!4359 = !{!4360, !4360, i64 0}
!4360 = !{!"0000020E446E6E80.w4.b4", !4350, i64 0}
!4361 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4362)
!4362 = !{!4363, !4364, !4365, !4366, !4367, !4368}
!4363 = !DILocalVariable(name: "arg1", arg: 1, scope: !4361, file: !1, type: !8)
!4364 = !DILocalVariable(name: "arg2", arg: 2, scope: !4361, file: !1, type: !9)
!4365 = !DILocalVariable(name: "arg3", arg: 3, scope: !4361, file: !1, type: !7)
!4366 = !DILocalVariable(name: "arg4", arg: 4, scope: !4361, file: !1, type: !8)
!4367 = !DILocalVariable(name: "arg5", arg: 5, scope: !4361, file: !1, type: !9)
!4368 = !DILocalVariable(name: "arg6", arg: 6, scope: !4361, file: !1, type: !8)
!4369 = !DILocation(line: 0, scope: !4361)
!4370 = !{!4371, !4371, i64 0}
!4371 = !{!"0000020E446F4080.w4.b0", !4372, i64 0}
!4372 = !{!"0000020E446F4080.w8.b0", !4373, i64 0}
!4373 = !{!"0000020E446F4080.w16.b0", !4374, i64 0}
!4374 = !{!"0000020E446F4080.w32.b0", !4375, i64 0}
!4375 = !{!"0000020E446F4080.w64.b0", !4376, i64 0}
!4376 = !{!"0000020E446F4080.w128.b0", !4377, i64 0}
!4377 = !{!"0000020E446F4080.w256.b0", !4378, i64 0}
!4378 = !{!"0000020E446F4080.w512.b0", !4379, i64 0}
!4379 = !{!"0000020E446F4080.w1024.b0", !4380, i64 0}
!4380 = !{!"0000020E446F4080", !21, i64 0}
!4381 = !{!4382, !4382, i64 0}
!4382 = !{!"0000020E446F4080.w4.b4", !4372, i64 0}
!4383 = !{!4384, !4384, i64 0}
!4384 = !{!"0000020E446F9B80.w8.b0", !4385, i64 0}
!4385 = !{!"0000020E446F9B80.w16.b0", !4386, i64 0}
!4386 = !{!"0000020E446F9B80.w32.b0", !4387, i64 0}
!4387 = !{!"0000020E446F9B80.w64.b0", !4388, i64 0}
!4388 = !{!"0000020E446F9B80.w128.b0", !4389, i64 0}
!4389 = !{!"0000020E446F9B80.w256.b0", !4390, i64 0}
!4390 = !{!"0000020E446F9B80.w512.b0", !4391, i64 0}
!4391 = !{!"0000020E446F9B80.w1024.b0", !4392, i64 0}
!4392 = !{!"0000020E446F9B80", !21, i64 0}
!4393 = !{!4394, !4394, i64 0}
!4394 = !{!"0000020E446F9B80.w8.b8", !4385, i64 0}
!4395 = !{!4396, !4396, i64 0}
!4396 = !{!"0000020E446F9B80.w8.b16", !4397, i64 0}
!4397 = !{!"0000020E446F9B80.w16.b16", !4386, i64 0}
!4398 = !{!4399, !4399, i64 0}
!4399 = !{!"0000020E446F9B80.w8.b24", !4397, i64 0}
!4400 = !{!4401, !4401, i64 0}
!4401 = !{!"0000020E447044C0.w8.b8", !4402, i64 0}
!4402 = !{!"0000020E447044C0.w16.b0", !4403, i64 0}
!4403 = !{!"0000020E447044C0.w32.b0", !4404, i64 0}
!4404 = !{!"0000020E447044C0.w64.b0", !4405, i64 0}
!4405 = !{!"0000020E447044C0.w128.b0", !4406, i64 0}
!4406 = !{!"0000020E447044C0.w256.b0", !4407, i64 0}
!4407 = !{!"0000020E447044C0.w512.b0", !4408, i64 0}
!4408 = !{!"0000020E447044C0.w1024.b0", !4409, i64 0}
!4409 = !{!"0000020E447044C0", !21, i64 0}
!4410 = !{!4411, !4411, i64 0}
!4411 = !{!"0000020E446E6A00.w8.b0", !4412, i64 0}
!4412 = !{!"0000020E446E6A00.w16.b0", !4413, i64 0}
!4413 = !{!"0000020E446E6A00.w32.b0", !4414, i64 0}
!4414 = !{!"0000020E446E6A00.w64.b0", !4415, i64 0}
!4415 = !{!"0000020E446E6A00.w128.b0", !4416, i64 0}
!4416 = !{!"0000020E446E6A00.w256.b0", !4417, i64 0}
!4417 = !{!"0000020E446E6A00.w512.b0", !4418, i64 0}
!4418 = !{!"0000020E446E6A00.w1024.b0", !4419, i64 0}
!4419 = !{!"0000020E446E6A00", !21, i64 0}
!4420 = !{!4421, !4421, i64 0}
!4421 = !{!"0000020E446E6A00.w8.b8", !4412, i64 0}
!4422 = !{!4423, !4423, i64 0}
!4423 = !{!"0000020E446E7480.w8.b8", !4424, i64 0}
!4424 = !{!"0000020E446E7480.w16.b0", !4425, i64 0}
!4425 = !{!"0000020E446E7480.w32.b0", !4426, i64 0}
!4426 = !{!"0000020E446E7480.w64.b0", !4427, i64 0}
!4427 = !{!"0000020E446E7480.w128.b0", !4428, i64 0}
!4428 = !{!"0000020E446E7480.w256.b0", !4429, i64 0}
!4429 = !{!"0000020E446E7480.w512.b0", !4430, i64 0}
!4430 = !{!"0000020E446E7480.w1024.b0", !4431, i64 0}
!4431 = !{!"0000020E446E7480", !21, i64 0}
!4432 = !{!4433, !4433, i64 0}
!4433 = !{!"0000020E46D91230.w4.b0", !4434, i64 0}
!4434 = !{!"0000020E46D91230.w8.b0", !4435, i64 0}
!4435 = !{!"0000020E46D91230.w16.b0", !4436, i64 0}
!4436 = !{!"0000020E46D91230.w32.b0", !4437, i64 0}
!4437 = !{!"0000020E46D91230.w64.b0", !4438, i64 0}
!4438 = !{!"0000020E46D91230.w128.b0", !4439, i64 0}
!4439 = !{!"0000020E46D91230.w256.b0", !4440, i64 0}
!4440 = !{!"0000020E46D91230.w512.b0", !4441, i64 0}
!4441 = !{!"0000020E46D91230.w1024.b0", !4442, i64 0}
!4442 = !{!"0000020E46D91230", !21, i64 0}
!4443 = !{!4444, !4444, i64 0}
!4444 = !{!"0000020E46D91230.w4.b4", !4434, i64 0}
!4445 = !{!98, !98, i64 0}
!4446 = !{!4447, !4447, i64 0}
!4447 = !{!"0000020E47FD5430.w4.b16", !4448, i64 0}
!4448 = !{!"0000020E47FD5430.w8.b16", !4449, i64 0}
!4449 = !{!"0000020E47FD5430.w16.b16", !99, i64 0}
!4450 = !{!263, !263, i64 0}
!4451 = !{!4452, !4452, i64 0}
!4452 = !{!"0000020E468E15C0.w16.b16", !264, i64 0}
!4453 = !{!4454, !4454, i64 0}
!4454 = !{!"0000020E468E15C0.w16.b32", !4455, i64 0}
!4455 = !{!"0000020E468E15C0.w32.b32", !265, i64 0}
!4456 = !{!4457, !4457, i64 0}
!4457 = !{!"0000020E468E15C0.w4.b48", !4458, i64 0}
!4458 = !{!"0000020E468E15C0.w8.b48", !4459, i64 0}
!4459 = !{!"0000020E468E15C0.w16.b48", !4455, i64 0}
!4460 = !{!4461, !4461, i64 0}
!4461 = !{!"0000020E468E15C0.w4.b52", !4458, i64 0}
!4462 = !{!4463, !4463, i64 0}
!4463 = !{!"0000020E468E15C0.w4.b56", !4464, i64 0}
!4464 = !{!"0000020E468E15C0.w8.b56", !4459, i64 0}
!4465 = !{!4466, !4466, i64 0}
!4466 = !{!"0000020E468E15C0.w4.b16", !4467, i64 0}
!4467 = !{!"0000020E468E15C0.w8.b16", !4452, i64 0}
!4468 = !{!428, !428, i64 0}
!4469 = !{!4470, !4470, i64 0}
!4470 = !{!"0000020E46D742B0.w16.b16", !429, i64 0}
!4471 = !{!4472, !4472, i64 0}
!4472 = !{!"0000020E46D742B0.w16.b32", !4473, i64 0}
!4473 = !{!"0000020E46D742B0.w32.b32", !430, i64 0}
!4474 = !{!4475, !4475, i64 0}
!4475 = !{!"0000020E46D742B0.w4.b48", !4476, i64 0}
!4476 = !{!"0000020E46D742B0.w8.b48", !4477, i64 0}
!4477 = !{!"0000020E46D742B0.w16.b48", !4473, i64 0}
!4478 = !{!4479, !4479, i64 0}
!4479 = !{!"0000020E46D742B0.w4.b52", !4476, i64 0}
!4480 = !{!4481, !4481, i64 0}
!4481 = !{!"0000020E46D742B0.w4.b56", !4482, i64 0}
!4482 = !{!"0000020E46D742B0.w8.b56", !4477, i64 0}
!4483 = !{!4484, !4484, i64 0}
!4484 = !{!"0000020E46D742B0.w4.b16", !4485, i64 0}
!4485 = !{!"0000020E46D742B0.w8.b16", !4470, i64 0}
!4486 = !{!593, !593, i64 0}
!4487 = !{!4488, !4488, i64 0}
!4488 = !{!"0000020E468E0180.w16.b16", !594, i64 0}
!4489 = !{!4490, !4490, i64 0}
!4490 = !{!"0000020E468E0180.w16.b32", !4491, i64 0}
!4491 = !{!"0000020E468E0180.w32.b32", !595, i64 0}
!4492 = !{!4493, !4493, i64 0}
!4493 = !{!"0000020E468E0180.w4.b48", !4494, i64 0}
!4494 = !{!"0000020E468E0180.w8.b48", !4495, i64 0}
!4495 = !{!"0000020E468E0180.w16.b48", !4491, i64 0}
!4496 = !{!4497, !4497, i64 0}
!4497 = !{!"0000020E468E0180.w4.b52", !4494, i64 0}
!4498 = !{!4499, !4499, i64 0}
!4499 = !{!"0000020E468E0180.w4.b56", !4500, i64 0}
!4500 = !{!"0000020E468E0180.w8.b56", !4495, i64 0}
!4501 = !{!4502, !4502, i64 0}
!4502 = !{!"0000020E468E0180.w4.b16", !4503, i64 0}
!4503 = !{!"0000020E468E0180.w8.b16", !4488, i64 0}
!4504 = !{!758, !758, i64 0}
!4505 = !{!4506, !4506, i64 0}
!4506 = !{!"0000020E47F25520.w16.b16", !759, i64 0}
!4507 = !{!4508, !4508, i64 0}
!4508 = !{!"0000020E47F25520.w16.b32", !4509, i64 0}
!4509 = !{!"0000020E47F25520.w32.b32", !760, i64 0}
!4510 = !{!4511, !4511, i64 0}
!4511 = !{!"0000020E47F25520.w4.b48", !4512, i64 0}
!4512 = !{!"0000020E47F25520.w8.b48", !4513, i64 0}
!4513 = !{!"0000020E47F25520.w16.b48", !4509, i64 0}
!4514 = !{!4515, !4515, i64 0}
!4515 = !{!"0000020E47F25520.w4.b52", !4512, i64 0}
!4516 = !{!4517, !4517, i64 0}
!4517 = !{!"0000020E47F25520.w4.b56", !4518, i64 0}
!4518 = !{!"0000020E47F25520.w8.b56", !4513, i64 0}
!4519 = !{!4520, !4520, i64 0}
!4520 = !{!"0000020E47F25520.w4.b16", !4521, i64 0}
!4521 = !{!"0000020E47F25520.w8.b16", !4506, i64 0}
!4522 = !{!918, !918, i64 0}
!4523 = !{!4524, !4524, i64 0}
!4524 = !{!"0000020E47F377E0.w16.b16", !919, i64 0}
!4525 = !{!4526, !4526, i64 0}
!4526 = !{!"0000020E47F377E0.w16.b32", !4527, i64 0}
!4527 = !{!"0000020E47F377E0.w32.b32", !920, i64 0}
!4528 = !{!4529, !4529, i64 0}
!4529 = !{!"0000020E47F377E0.w16.b48", !4527, i64 0}
!4530 = !{!1078, !1078, i64 0}
!4531 = !{!4532, !4532, i64 0}
!4532 = !{!"0000020E304EEC20.w16.b16", !1079, i64 0}
!4533 = !{!4534, !4534, i64 0}
!4534 = !{!"0000020E304EEC20.w16.b32", !4535, i64 0}
!4535 = !{!"0000020E304EEC20.w32.b32", !1080, i64 0}
!4536 = !{!4537, !4537, i64 0}
!4537 = !{!"0000020E304EEC20.w16.b48", !4535, i64 0}
!4538 = !{!1238, !1238, i64 0}
!4539 = !{!4540, !4540, i64 0}
!4540 = !{!"0000020E4463A1F0.w16.b16", !1239, i64 0}
!4541 = !{!4542, !4542, i64 0}
!4542 = !{!"0000020E4463A1F0.w16.b32", !4543, i64 0}
!4543 = !{!"0000020E4463A1F0.w32.b32", !1240, i64 0}
!4544 = !{!4545, !4545, i64 0}
!4545 = !{!"0000020E4463A1F0.w16.b48", !4543, i64 0}
!4546 = !{!1398, !1398, i64 0}
!4547 = !{!4548, !4548, i64 0}
!4548 = !{!"0000020E43B44E20.w16.b16", !1399, i64 0}
!4549 = !{!4550, !4550, i64 0}
!4550 = !{!"0000020E43B44E20.w16.b32", !4551, i64 0}
!4551 = !{!"0000020E43B44E20.w32.b32", !1400, i64 0}
!4552 = !{!4553, !4553, i64 0}
!4553 = !{!"0000020E43B44E20.w16.b48", !4551, i64 0}
!4554 = !{!1594, !1594, i64 0}
!4555 = !{!4556, !4556, i64 0}
!4556 = !{!"0000020E47FD13B0.w16.b16", !1595, i64 0}
!4557 = !{!4558, !4558, i64 0}
!4558 = !{!"0000020E47FD13B0.w16.b32", !4559, i64 0}
!4559 = !{!"0000020E47FD13B0.w32.b32", !1596, i64 0}
!4560 = !{!4561, !4561, i64 0}
!4561 = !{!"0000020E47FD13B0.w16.b48", !4559, i64 0}
!4562 = !{!4563, !4563, i64 0}
!4563 = !{!"0000020E47FD13B0.w4.b64", !4564, i64 0}
!4564 = !{!"0000020E47FD13B0.w8.b64", !4565, i64 0}
!4565 = !{!"0000020E47FD13B0.w16.b64", !4566, i64 0}
!4566 = !{!"0000020E47FD13B0.w32.b64", !4567, i64 0}
!4567 = !{!"0000020E47FD13B0.w64.b64", !1597, i64 0}
!4568 = !{!1790, !1790, i64 0}
!4569 = !{!4570, !4570, i64 0}
!4570 = !{!"0000020E47FD3970.w16.b16", !1791, i64 0}
!4571 = !{!4572, !4572, i64 0}
!4572 = !{!"0000020E47FD3970.w16.b32", !4573, i64 0}
!4573 = !{!"0000020E47FD3970.w32.b32", !1792, i64 0}
!4574 = !{!4575, !4575, i64 0}
!4575 = !{!"0000020E47FD3970.w16.b48", !4573, i64 0}
!4576 = !{!4577, !4577, i64 0}
!4577 = !{!"0000020E47FD3970.w4.b64", !4578, i64 0}
!4578 = !{!"0000020E47FD3970.w8.b64", !4579, i64 0}
!4579 = !{!"0000020E47FD3970.w16.b64", !4580, i64 0}
!4580 = !{!"0000020E47FD3970.w32.b64", !4581, i64 0}
!4581 = !{!"0000020E47FD3970.w64.b64", !1793, i64 0}
!4582 = !{!1986, !1986, i64 0}
!4583 = !{!4584, !4584, i64 0}
!4584 = !{!"0000020E480CD2F0.w16.b16", !1987, i64 0}
!4585 = !{!4586, !4586, i64 0}
!4586 = !{!"0000020E480CD2F0.w16.b32", !4587, i64 0}
!4587 = !{!"0000020E480CD2F0.w32.b32", !1988, i64 0}
!4588 = !{!4589, !4589, i64 0}
!4589 = !{!"0000020E480CD2F0.w16.b48", !4587, i64 0}
!4590 = !{!4591, !4591, i64 0}
!4591 = !{!"0000020E480CD2F0.w4.b64", !4592, i64 0}
!4592 = !{!"0000020E480CD2F0.w8.b64", !4593, i64 0}
!4593 = !{!"0000020E480CD2F0.w16.b64", !4594, i64 0}
!4594 = !{!"0000020E480CD2F0.w32.b64", !4595, i64 0}
!4595 = !{!"0000020E480CD2F0.w64.b64", !1989, i64 0}
!4596 = !{!2182, !2182, i64 0}
!4597 = !{!4598, !4598, i64 0}
!4598 = !{!"0000020E480CFC30.w16.b16", !2183, i64 0}
!4599 = !{!4600, !4600, i64 0}
!4600 = !{!"0000020E480CFC30.w16.b32", !4601, i64 0}
!4601 = !{!"0000020E480CFC30.w32.b32", !2184, i64 0}
!4602 = !{!4603, !4603, i64 0}
!4603 = !{!"0000020E480CFC30.w16.b48", !4601, i64 0}
!4604 = !{!4605, !4605, i64 0}
!4605 = !{!"0000020E480CFC30.w4.b64", !4606, i64 0}
!4606 = !{!"0000020E480CFC30.w8.b64", !4607, i64 0}
!4607 = !{!"0000020E480CFC30.w16.b64", !4608, i64 0}
!4608 = !{!"0000020E480CFC30.w32.b64", !4609, i64 0}
!4609 = !{!"0000020E480CFC30.w64.b64", !2185, i64 0}
!4610 = !{!2347, !2347, i64 0}
!4611 = !{!4612, !4612, i64 0}
!4612 = !{!"0000020E304B0320.w16.b16", !2348, i64 0}
!4613 = !{!4614, !4614, i64 0}
!4614 = !{!"0000020E304B0320.w16.b32", !4615, i64 0}
!4615 = !{!"0000020E304B0320.w32.b32", !2349, i64 0}
!4616 = !{!4617, !4617, i64 0}
!4617 = !{!"0000020E304B0320.w16.b48", !4615, i64 0}
!4618 = !{!2507, !2507, i64 0}
!4619 = !{!4620, !4620, i64 0}
!4620 = !{!"0000020E304D5430.w16.b16", !2508, i64 0}
!4621 = !{!4622, !4622, i64 0}
!4622 = !{!"0000020E304D5430.w16.b32", !4623, i64 0}
!4623 = !{!"0000020E304D5430.w32.b32", !2509, i64 0}
!4624 = !{!4625, !4625, i64 0}
!4625 = !{!"0000020E304D5430.w16.b48", !4623, i64 0}
!4626 = !{!2672, !2672, i64 0}
!4627 = !{!4628, !4628, i64 0}
!4628 = !{!"0000020E46D743B0.w16.b16", !2673, i64 0}
!4629 = !{!4630, !4630, i64 0}
!4630 = !{!"0000020E46D743B0.w16.b32", !4631, i64 0}
!4631 = !{!"0000020E46D743B0.w32.b32", !2674, i64 0}
!4632 = !{!4633, !4633, i64 0}
!4633 = !{!"0000020E46D743B0.w16.b48", !4631, i64 0}
!4634 = !{!2832, !2832, i64 0}
!4635 = !{!4636, !4636, i64 0}
!4636 = !{!"0000020E47FDD4B0.w16.b16", !2833, i64 0}
!4637 = !{!4638, !4638, i64 0}
!4638 = !{!"0000020E47FDD4B0.w16.b32", !4639, i64 0}
!4639 = !{!"0000020E47FDD4B0.w32.b32", !2834, i64 0}
!4640 = !{!4641, !4641, i64 0}
!4641 = !{!"0000020E47FDD4B0.w16.b48", !4639, i64 0}
!4642 = !{!2992, !2992, i64 0}
!4643 = !{!4644, !4644, i64 0}
!4644 = !{!"0000020E47F2F660.w16.b16", !2993, i64 0}
!4645 = !{!4646, !4646, i64 0}
!4646 = !{!"0000020E47F2F660.w16.b32", !4647, i64 0}
!4647 = !{!"0000020E47F2F660.w32.b32", !2994, i64 0}
!4648 = !{!4649, !4649, i64 0}
!4649 = !{!"0000020E47F2F660.w16.b48", !4647, i64 0}
!4650 = !{!3152, !3152, i64 0}
!4651 = !{!4652, !4652, i64 0}
!4652 = !{!"0000020E444F9A10.w16.b16", !3153, i64 0}
!4653 = !{!4654, !4654, i64 0}
!4654 = !{!"0000020E444F9A10.w16.b32", !4655, i64 0}
!4655 = !{!"0000020E444F9A10.w32.b32", !3154, i64 0}
!4656 = !{!4657, !4657, i64 0}
!4657 = !{!"0000020E444F9A10.w16.b48", !4655, i64 0}
!4658 = !{!3317, !3317, i64 0}
!4659 = !{!4660, !4660, i64 0}
!4660 = !{!"0000020E47F347A0.w16.b16", !3318, i64 0}
!4661 = !{!4662, !4662, i64 0}
!4662 = !{!"0000020E47F347A0.w16.b32", !4663, i64 0}
!4663 = !{!"0000020E47F347A0.w32.b32", !3319, i64 0}
!4664 = !{!4665, !4665, i64 0}
!4665 = !{!"0000020E47F347A0.w16.b48", !4663, i64 0}
!4666 = !{!3477, !3477, i64 0}
!4667 = !{!4668, !4668, i64 0}
!4668 = !{!"0000020E47FD57F0.w16.b16", !3478, i64 0}
!4669 = !{!4670, !4670, i64 0}
!4670 = !{!"0000020E47FD57F0.w16.b32", !4671, i64 0}
!4671 = !{!"0000020E47FD57F0.w32.b32", !3479, i64 0}
!4672 = !{!4673, !4673, i64 0}
!4673 = !{!"0000020E47FD57F0.w16.b48", !4671, i64 0}
!4674 = !{!3637, !3637, i64 0}
!4675 = !{!4676, !4676, i64 0}
!4676 = !{!"0000020E46D8C030.w16.b16", !3638, i64 0}
!4677 = !{!4678, !4678, i64 0}
!4678 = !{!"0000020E46D8C030.w16.b32", !4679, i64 0}
!4679 = !{!"0000020E46D8C030.w32.b32", !3639, i64 0}
!4680 = !{!4681, !4681, i64 0}
!4681 = !{!"0000020E46D8C030.w16.b48", !4679, i64 0}
!4682 = !{!3802, !3802, i64 0}
!4683 = !{!4684, !4684, i64 0}
!4684 = !{!"0000020E47F1F5A0.w16.b16", !3803, i64 0}
!4685 = !{!4686, !4686, i64 0}
!4686 = !{!"0000020E47F1F5A0.w16.b32", !4687, i64 0}
!4687 = !{!"0000020E47F1F5A0.w32.b32", !3804, i64 0}
!4688 = !{!4689, !4689, i64 0}
!4689 = !{!"0000020E47F1F5A0.w16.b48", !4687, i64 0}
!4690 = !{!3962, !3962, i64 0}
!4691 = !{!4692, !4692, i64 0}
!4692 = !{!"0000020E446EFFC0.w16.b16", !3963, i64 0}
!4693 = !{!4694, !4694, i64 0}
!4694 = !{!"0000020E446EFFC0.w16.b32", !4695, i64 0}
!4695 = !{!"0000020E446EFFC0.w32.b32", !3964, i64 0}
!4696 = !{!4697, !4697, i64 0}
!4697 = !{!"0000020E446EFFC0.w16.b48", !4695, i64 0}
!4698 = !{!4122, !4122, i64 0}
!4699 = !{!4700, !4700, i64 0}
!4700 = !{!"0000020E304B80A0.w16.b16", !4123, i64 0}
!4701 = !{!4702, !4702, i64 0}
!4702 = !{!"0000020E304B80A0.w16.b32", !4703, i64 0}
!4703 = !{!"0000020E304B80A0.w32.b32", !4124, i64 0}
!4704 = !{!4705, !4705, i64 0}
!4705 = !{!"0000020E304B80A0.w16.b48", !4703, i64 0}
!4706 = !{!4252, !4252, i64 0}
!4707 = !{!4708, !4708, i64 0}
!4708 = !{!"0000020E47FDD230.w4.b16", !4709, i64 0}
!4709 = !{!"0000020E47FDD230.w8.b16", !4710, i64 0}
!4710 = !{!"0000020E47FDD230.w16.b16", !4253, i64 0}
!4711 = !{!4712, !4712, i64 0}
!4712 = !{!"0000020E47FDD230.w4.b20", !4709, i64 0}
!4713 = !{!4714, !4714, i64 0}
!4714 = !{!"0000020E47FDD230.w4.b24", !4715, i64 0}
!4715 = !{!"0000020E47FDD230.w8.b24", !4710, i64 0}
!4716 = !{!4351, !4351, i64 0}
!4717 = !{!4435, !4435, i64 0}
