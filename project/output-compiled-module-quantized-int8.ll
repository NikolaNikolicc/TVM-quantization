; ModuleID = 'TVMMod'
source_filename = "TVMMod"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%0 = type { double }
%1 = type { ptr, %2, i32, %3, ptr, ptr, i64 }
%2 = type { i32, i32 }
%3 = type { i8, i8, i16 }

$__tvm_module_ctx = comdat any

$__TVMFuncCall = comdat any

$__TVMBackendGetFuncFromEnv = comdat any

$__TVMAPISetLastError = comdat any

$__TVMBackendAllocWorkspace = comdat any

$__TVMBackendFreeWorkspace = comdat any

@__tvm_module_ctx = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMFuncCall = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendGetFuncFromEnv = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMAPISetLastError = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str = private constant [103 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: num_args should be 3\00", align 1
@.str.1 = private constant [158 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.2 = private constant [158 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.3 = private constant [174 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.4 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.5 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.6 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[0])\00", align 1
@.str.7 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[1])\00", align 1
@.str.8 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[2])\00", align 1
@.str.9 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[3])\00", align 1
@.str.10 = private constant [387 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.11 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.12 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.13 = private constant [139 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.ndim is expected to equal 4\00", align 1
@.str.14 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.dtype is expected to be int8\00", align 1
@.str.15 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[0])\00", align 1
@.str.16 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[1])\00", align 1
@.str.17 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[2])\00", align 1
@.str.18 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[3])\00", align 1
@.str.19 = private constant [387 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.20 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.21 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.22 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.23 = private constant [147 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.24 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.25 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[0])\00", align 1
@.str.26 = private constant [309 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[1])\00", align 1
@.str.27 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[2])\00", align 1
@.str.28 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[3])\00", align 1
@.str.29 = private constant [403 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.30 = private constant [238 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.31 = private constant [218 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.32 = private constant [224 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.__tvm_set_device = internal unnamed_addr global ptr null, align 8
@.str.33 = private constant [17 x i8] c"__tvm_set_device\00", align 1
@.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.34 = private constant [60 x i8] c"tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_kernel\00", align 1
@.str.35 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: num_args should be 3\00", align 1
@.str.36 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.37 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.38 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.39 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.ndim is expected to equal 4\00", align 1
@.str.40 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.41 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[0])\00", align 1
@.str.42 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[1])\00", align 1
@.str.43 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[2])\00", align 1
@.str.44 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[3])\00", align 1
@.str.45 = private constant [394 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.46 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.47 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.48 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.ndim is expected to equal 4\00", align 1
@.str.49 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.dtype is expected to be int8\00", align 1
@.str.50 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[0])\00", align 1
@.str.51 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[1])\00", align 1
@.str.52 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[2])\00", align 1
@.str.53 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[3])\00", align 1
@.str.54 = private constant [394 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.55 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.56 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.57 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.58 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.ndim is expected to equal 4\00", align 1
@.str.59 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.60 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.61 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.62 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.63 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.64 = private constant [410 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.65 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.66 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.67 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.68 = private constant [62 x i8] c"tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_kernel\00", align 1
@.str.69 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: num_args should be 3\00", align 1
@.str.70 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.71 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.72 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.73 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.ndim is expected to equal 4\00", align 1
@.str.74 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.75 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[0])\00", align 1
@.str.76 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[1]) == 1024, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[1])\00", align 1
@.str.77 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[2])\00", align 1
@.str.78 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[3])\00", align 1
@.str.79 = private constant [394 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.80 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.81 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.82 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.ndim is expected to equal 4\00", align 1
@.str.83 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.dtype is expected to be int8\00", align 1
@.str.84 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[0])\00", align 1
@.str.85 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[1]) == 1024, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[1])\00", align 1
@.str.86 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[2])\00", align 1
@.str.87 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[3])\00", align 1
@.str.88 = private constant [394 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.89 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.90 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.91 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.92 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.ndim is expected to equal 4\00", align 1
@.str.93 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.94 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.95 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[1]) == 1024, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.96 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.97 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.98 = private constant [410 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.99 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.100 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.101 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.102 = private constant [62 x i8] c"tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_kernel\00", align 1
@.str.103 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: num_args should be 3\00", align 1
@.str.104 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.105 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.106 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.107 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.ndim is expected to equal 4\00", align 1
@.str.108 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.109 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[0])\00", align 1
@.str.110 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[1]) == 2048, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[1])\00", align 1
@.str.111 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[2])\00", align 1
@.str.112 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[3])\00", align 1
@.str.113 = private constant [392 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.114 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.115 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.116 = private constant [141 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.ndim is expected to equal 4\00", align 1
@.str.117 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.dtype is expected to be int8\00", align 1
@.str.118 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[0])\00", align 1
@.str.119 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[1]) == 2048, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[1])\00", align 1
@.str.120 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[2])\00", align 1
@.str.121 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[3])\00", align 1
@.str.122 = private constant [392 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.123 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.124 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.125 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.126 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.ndim is expected to equal 4\00", align 1
@.str.127 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.128 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.129 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.130 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.131 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.132 = private constant [408 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.133 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.134 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.135 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.136 = private constant [62 x i8] c"tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_kernel\00", align 1
@.str.137 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_cast_multiply: num_args should be 2\00", align 1
@.str.138 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply: Expect arg[0] to be pointer\00", align 1
@.str.139 = private constant [172 x i8] c"Assert fail: T_multiply_code == 3 or T_multiply_code == 13 or T_multiply_code == 7 or T_multiply_code == 4, tvmgen_default_fused_cast_multiply: Expect arg[1] to be pointer\00", align 1
@.str.140 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply.p0.ndim is expected to equal 4\00", align 1
@.str.141 = private constant [241 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply.p0.dtype is expected to be int8\00", align 1
@.str.142 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[0])\00", align 1
@.str.143 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[1])\00", align 1
@.str.144 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[2])\00", align 1
@.str.145 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[3])\00", align 1
@.str.146 = private constant [312 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[1]), tvmgen_default_fused_cast_multiply.p0.strides: expected to be compact array\00", align 1
@.str.147 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.148 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.149 = private constant [137 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_multiply, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply.T_multiply.ndim is expected to equal 4\00", align 1
@.str.150 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_multiply, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_multiply, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_multiply, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply.T_multiply.dtype is expected to be float32\00", align 1
@.str.151 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[0])\00", align 1
@.str.152 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[1])\00", align 1
@.str.153 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[2])\00", align 1
@.str.154 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[3])\00", align 1
@.str.155 = private constant [344 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[1]), tvmgen_default_fused_cast_multiply.T_multiply.strides: expected to be compact array\00", align 1
@.str.156 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_multiply, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply.T_multiply.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_multiply, 0, 8, \22uint64\22)\00", align 1
@.str.157 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(T_multiply, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply.T_multiply.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_multiply, 0, 10, \22int32\22)\00", align 1
@.str.158 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_multiply, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply.T_multiply.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_multiply, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_kernel = internal unnamed_addr global ptr null, align 8
@.str.159 = private constant [42 x i8] c"tvmgen_default_fused_cast_multiply_kernel\00", align 1
@.str.160 = private constant [123 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: num_args should be 4\00", align 1
@.str.161 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.162 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.163 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.164 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.165 = private constant [159 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.166 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.167 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.168 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.169 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.170 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.171 = private constant [467 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.172 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.173 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.174 = private constant [159 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.ndim is expected to equal 4\00", align 1
@.str.175 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.dtype is expected to be int32\00", align 1
@.str.176 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.177 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.178 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.179 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.180 = private constant [237 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.181 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.182 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.183 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.184 = private constant [159 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.ndim is expected to equal 4\00", align 1
@.str.185 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.dtype is expected to be int32\00", align 1
@.str.186 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[0])\00", align 1
@.str.187 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[1])\00", align 1
@.str.188 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[2])\00", align 1
@.str.189 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[3])\00", align 1
@.str.190 = private constant [237 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides: expected to be compact array\00", align 1
@.str.191 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.192 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.193 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.194 = private constant [167 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.195 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.196 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.197 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.198 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.199 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.200 = private constant [483 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.201 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.202 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.203 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.204 = private constant [80 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_kernel\00", align 1
@.str.205 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: num_args should be 4\00", align 1
@.str.206 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.207 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.208 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.209 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[3] to be pointer\00", align 1
@.str.210 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.ndim is expected to equal 4\00", align 1
@.str.211 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.212 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.213 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.214 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.215 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.216 = private constant [475 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.217 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.218 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.219 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.ndim is expected to equal 4\00", align 1
@.str.220 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.dtype is expected to be int32\00", align 1
@.str.221 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.222 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.223 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.224 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.225 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.226 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.227 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.228 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.229 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.ndim is expected to equal 4\00", align 1
@.str.230 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.dtype is expected to be int32\00", align 1
@.str.231 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[0])\00", align 1
@.str.232 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[1])\00", align 1
@.str.233 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[2])\00", align 1
@.str.234 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[3])\00", align 1
@.str.235 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides: expected to be compact array\00", align 1
@.str.236 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.237 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.238 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.239 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 4\00", align 1
@.str.240 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.241 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.242 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.243 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.244 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.245 = private constant [491 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.246 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.247 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.248 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.249 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_kernel\00", align 1
@.str.250 = private constant [126 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10: num_args should be 4\00", align 1
@.str.251 = private constant [181 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10: Expect arg[0] to be pointer\00", align 1
@.str.252 = private constant [181 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10: Expect arg[1] to be pointer\00", align 1
@.str.253 = private constant [181 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10: Expect arg[2] to be pointer\00", align 1
@.str.254 = private constant [197 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10: Expect arg[3] to be pointer\00", align 1
@.str.255 = private constant [162 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.ndim is expected to equal 4\00", align 1
@.str.256 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.dtype is expected to be int8\00", align 1
@.str.257 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[0])\00", align 1
@.str.258 = private constant [366 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[1])\00", align 1
@.str.259 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[2])\00", align 1
@.str.260 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_shape[3])\00", align 1
@.str.261 = private constant [476 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides: expected to be compact array\00", align 1
@.str.262 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.263 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.264 = private constant [162 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.ndim is expected to equal 4\00", align 1
@.str.265 = private constant [284 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.dtype is expected to be int32\00", align 1
@.str.266 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[0])\00", align 1
@.str.267 = private constant [366 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[1])\00", align 1
@.str.268 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[2])\00", align 1
@.str.269 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_shape[3])\00", align 1
@.str.270 = private constant [243 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.strides: expected to be compact array\00", align 1
@.str.271 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.272 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.273 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.274 = private constant [162 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.ndim is expected to equal 4\00", align 1
@.str.275 = private constant [284 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.dtype is expected to be int32\00", align 1
@.str.276 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[0])\00", align 1
@.str.277 = private constant [366 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[1])\00", align 1
@.str.278 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[2])\00", align 1
@.str.279 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_shape[3])\00", align 1
@.str.280 = private constant [243 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.strides: expected to be compact array\00", align 1
@.str.281 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.282 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.283 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.284 = private constant [170 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.ndim is expected to equal 4\00", align 1
@.str.285 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.dtype is expected to be int8\00", align 1
@.str.286 = private constant [374 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[0])\00", align 1
@.str.287 = private constant [378 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[1])\00", align 1
@.str.288 = private constant [374 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[2])\00", align 1
@.str.289 = private constant [374 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_shape[3])\00", align 1
@.str.290 = private constant [492 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides: expected to be compact array\00", align 1
@.str.291 = private constant [261 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.292 = private constant [241 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.293 = private constant [247 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_kernel = internal unnamed_addr global ptr null, align 8
@.str.294 = private constant [83 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_kernel\00", align 1
@.str.295 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: num_args should be 4\00", align 1
@.str.296 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.297 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.298 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.299 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[3] to be pointer\00", align 1
@.str.300 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.ndim is expected to equal 4\00", align 1
@.str.301 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.302 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.303 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.304 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.305 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.306 = private constant [475 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.307 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.308 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.309 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.ndim is expected to equal 4\00", align 1
@.str.310 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.dtype is expected to be int32\00", align 1
@.str.311 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.312 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.313 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.314 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.315 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.316 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.317 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.318 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.319 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.ndim is expected to equal 4\00", align 1
@.str.320 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.dtype is expected to be int32\00", align 1
@.str.321 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[0])\00", align 1
@.str.322 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[1])\00", align 1
@.str.323 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[2])\00", align 1
@.str.324 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[3])\00", align 1
@.str.325 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides: expected to be compact array\00", align 1
@.str.326 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.327 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.328 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.329 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 4\00", align 1
@.str.330 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.331 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.332 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.333 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.334 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.335 = private constant [491 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.336 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.337 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.338 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.339 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_kernel\00", align 1
@.str.340 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: num_args should be 4\00", align 1
@.str.341 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.342 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.343 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.344 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[3] to be pointer\00", align 1
@.str.345 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.ndim is expected to equal 4\00", align 1
@.str.346 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.347 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.348 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.349 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.350 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.351 = private constant [475 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.352 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.353 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.354 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.ndim is expected to equal 4\00", align 1
@.str.355 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.dtype is expected to be int32\00", align 1
@.str.356 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.357 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.358 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.359 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.360 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.361 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.362 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.363 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.364 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.ndim is expected to equal 4\00", align 1
@.str.365 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.dtype is expected to be int32\00", align 1
@.str.366 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[0])\00", align 1
@.str.367 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[1])\00", align 1
@.str.368 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[2])\00", align 1
@.str.369 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[3])\00", align 1
@.str.370 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides: expected to be compact array\00", align 1
@.str.371 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.372 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.373 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.374 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 4\00", align 1
@.str.375 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.376 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.377 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.378 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.379 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.380 = private constant [491 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.381 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.382 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.383 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.384 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_kernel\00", align 1
@.str.385 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: num_args should be 4\00", align 1
@.str.386 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[0] to be pointer\00", align 1
@.str.387 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[1] to be pointer\00", align 1
@.str.388 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[2] to be pointer\00", align 1
@.str.389 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[3] to be pointer\00", align 1
@.str.390 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.ndim is expected to equal 4\00", align 1
@.str.391 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.dtype is expected to be int8\00", align 1
@.str.392 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[0])\00", align 1
@.str.393 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[1])\00", align 1
@.str.394 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[2])\00", align 1
@.str.395 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[3])\00", align 1
@.str.396 = private constant [474 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides: expected to be compact array\00", align 1
@.str.397 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.398 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.399 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.ndim is expected to equal 4\00", align 1
@.str.400 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.dtype is expected to be int32\00", align 1
@.str.401 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[0])\00", align 1
@.str.402 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[1])\00", align 1
@.str.403 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[2])\00", align 1
@.str.404 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[3])\00", align 1
@.str.405 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides: expected to be compact array\00", align 1
@.str.406 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.407 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.408 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.409 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.ndim is expected to equal 4\00", align 1
@.str.410 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.dtype is expected to be int32\00", align 1
@.str.411 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[0])\00", align 1
@.str.412 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[1])\00", align 1
@.str.413 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[2])\00", align 1
@.str.414 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[3])\00", align 1
@.str.415 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides: expected to be compact array\00", align 1
@.str.416 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.417 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.418 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.419 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.ndim is expected to equal 4\00", align 1
@.str.420 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.dtype is expected to be int8\00", align 1
@.str.421 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[0])\00", align 1
@.str.422 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[1])\00", align 1
@.str.423 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[2])\00", align 1
@.str.424 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[3])\00", align 1
@.str.425 = private constant [490 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides: expected to be compact array\00", align 1
@.str.426 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.427 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.428 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_kernel = internal unnamed_addr global ptr null, align 8
@.str.429 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_kernel\00", align 1
@.str.430 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: num_args should be 4\00", align 1
@.str.431 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[0] to be pointer\00", align 1
@.str.432 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[1] to be pointer\00", align 1
@.str.433 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[2] to be pointer\00", align 1
@.str.434 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[3] to be pointer\00", align 1
@.str.435 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.ndim is expected to equal 4\00", align 1
@.str.436 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.dtype is expected to be int8\00", align 1
@.str.437 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[0])\00", align 1
@.str.438 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[1])\00", align 1
@.str.439 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[2])\00", align 1
@.str.440 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[3])\00", align 1
@.str.441 = private constant [474 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides: expected to be compact array\00", align 1
@.str.442 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.443 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.444 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.ndim is expected to equal 4\00", align 1
@.str.445 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.dtype is expected to be int32\00", align 1
@.str.446 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[0])\00", align 1
@.str.447 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[1])\00", align 1
@.str.448 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[2])\00", align 1
@.str.449 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[3])\00", align 1
@.str.450 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides: expected to be compact array\00", align 1
@.str.451 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.452 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.453 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.454 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.ndim is expected to equal 4\00", align 1
@.str.455 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.dtype is expected to be int32\00", align 1
@.str.456 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[0])\00", align 1
@.str.457 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[1])\00", align 1
@.str.458 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[2])\00", align 1
@.str.459 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[3])\00", align 1
@.str.460 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides: expected to be compact array\00", align 1
@.str.461 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.462 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.463 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.464 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.ndim is expected to equal 4\00", align 1
@.str.465 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.dtype is expected to be int8\00", align 1
@.str.466 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[0])\00", align 1
@.str.467 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[1])\00", align 1
@.str.468 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[2])\00", align 1
@.str.469 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[3])\00", align 1
@.str.470 = private constant [490 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides: expected to be compact array\00", align 1
@.str.471 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.472 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.473 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_kernel = internal unnamed_addr global ptr null, align 8
@.str.474 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_kernel\00", align 1
@.str.475 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: num_args should be 4\00", align 1
@.str.476 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[0] to be pointer\00", align 1
@.str.477 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[1] to be pointer\00", align 1
@.str.478 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[2] to be pointer\00", align 1
@.str.479 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[3] to be pointer\00", align 1
@.str.480 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.ndim is expected to equal 4\00", align 1
@.str.481 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.dtype is expected to be int8\00", align 1
@.str.482 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[0])\00", align 1
@.str.483 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[1])\00", align 1
@.str.484 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[2])\00", align 1
@.str.485 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[3])\00", align 1
@.str.486 = private constant [474 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides: expected to be compact array\00", align 1
@.str.487 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.488 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.489 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.ndim is expected to equal 4\00", align 1
@.str.490 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.dtype is expected to be int32\00", align 1
@.str.491 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[0])\00", align 1
@.str.492 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[1])\00", align 1
@.str.493 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[2])\00", align 1
@.str.494 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[3])\00", align 1
@.str.495 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides: expected to be compact array\00", align 1
@.str.496 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.497 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.498 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.499 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.ndim is expected to equal 4\00", align 1
@.str.500 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.dtype is expected to be int32\00", align 1
@.str.501 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[0])\00", align 1
@.str.502 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[1])\00", align 1
@.str.503 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[2])\00", align 1
@.str.504 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[3])\00", align 1
@.str.505 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides: expected to be compact array\00", align 1
@.str.506 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.507 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.508 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.509 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.ndim is expected to equal 4\00", align 1
@.str.510 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.dtype is expected to be int8\00", align 1
@.str.511 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[0])\00", align 1
@.str.512 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[1])\00", align 1
@.str.513 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[2])\00", align 1
@.str.514 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[3])\00", align 1
@.str.515 = private constant [490 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides: expected to be compact array\00", align 1
@.str.516 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.517 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.518 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_kernel = internal unnamed_addr global ptr null, align 8
@.str.519 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_kernel\00", align 1
@.str.520 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7: num_args should be 4\00", align 1
@.str.521 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7: Expect arg[0] to be pointer\00", align 1
@.str.522 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7: Expect arg[1] to be pointer\00", align 1
@.str.523 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7: Expect arg[2] to be pointer\00", align 1
@.str.524 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7: Expect arg[3] to be pointer\00", align 1
@.str.525 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.ndim is expected to equal 4\00", align 1
@.str.526 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.dtype is expected to be int8\00", align 1
@.str.527 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[0])\00", align 1
@.str.528 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[1])\00", align 1
@.str.529 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[2])\00", align 1
@.str.530 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_shape[3])\00", align 1
@.str.531 = private constant [474 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides: expected to be compact array\00", align 1
@.str.532 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.533 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.534 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.ndim is expected to equal 4\00", align 1
@.str.535 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.dtype is expected to be int32\00", align 1
@.str.536 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[0])\00", align 1
@.str.537 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[1])\00", align 1
@.str.538 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[2])\00", align 1
@.str.539 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_shape[3])\00", align 1
@.str.540 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.strides: expected to be compact array\00", align 1
@.str.541 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.542 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.543 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.544 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.ndim is expected to equal 4\00", align 1
@.str.545 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.dtype is expected to be int32\00", align 1
@.str.546 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[0])\00", align 1
@.str.547 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[1])\00", align 1
@.str.548 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[2])\00", align 1
@.str.549 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_shape[3])\00", align 1
@.str.550 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.strides: expected to be compact array\00", align 1
@.str.551 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.552 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.553 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.554 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.ndim is expected to equal 4\00", align 1
@.str.555 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.dtype is expected to be int8\00", align 1
@.str.556 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[0])\00", align 1
@.str.557 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[1])\00", align 1
@.str.558 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[2])\00", align 1
@.str.559 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_shape[3])\00", align 1
@.str.560 = private constant [490 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides: expected to be compact array\00", align 1
@.str.561 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.562 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.563 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_kernel = internal unnamed_addr global ptr null, align 8
@.str.564 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_kernel\00", align 1
@.str.565 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8: num_args should be 4\00", align 1
@.str.566 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8: Expect arg[0] to be pointer\00", align 1
@.str.567 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8: Expect arg[1] to be pointer\00", align 1
@.str.568 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8: Expect arg[2] to be pointer\00", align 1
@.str.569 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8: Expect arg[3] to be pointer\00", align 1
@.str.570 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.ndim is expected to equal 4\00", align 1
@.str.571 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.dtype is expected to be int8\00", align 1
@.str.572 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[0])\00", align 1
@.str.573 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[1])\00", align 1
@.str.574 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[2])\00", align 1
@.str.575 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_shape[3])\00", align 1
@.str.576 = private constant [474 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides: expected to be compact array\00", align 1
@.str.577 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.578 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.579 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.ndim is expected to equal 4\00", align 1
@.str.580 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.dtype is expected to be int32\00", align 1
@.str.581 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[0])\00", align 1
@.str.582 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[1])\00", align 1
@.str.583 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[2])\00", align 1
@.str.584 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_shape[3])\00", align 1
@.str.585 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.strides: expected to be compact array\00", align 1
@.str.586 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.587 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.588 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.589 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.ndim is expected to equal 4\00", align 1
@.str.590 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.dtype is expected to be int32\00", align 1
@.str.591 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[0])\00", align 1
@.str.592 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[1])\00", align 1
@.str.593 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[2])\00", align 1
@.str.594 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_shape[3])\00", align 1
@.str.595 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.strides: expected to be compact array\00", align 1
@.str.596 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.597 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.598 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.599 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.ndim is expected to equal 4\00", align 1
@.str.600 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.dtype is expected to be int8\00", align 1
@.str.601 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[0])\00", align 1
@.str.602 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[1])\00", align 1
@.str.603 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[2])\00", align 1
@.str.604 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_shape[3])\00", align 1
@.str.605 = private constant [490 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides: expected to be compact array\00", align 1
@.str.606 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.607 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.608 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_kernel = internal unnamed_addr global ptr null, align 8
@.str.609 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_kernel\00", align 1
@.str.610 = private constant [125 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9: num_args should be 4\00", align 1
@.str.611 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9: Expect arg[0] to be pointer\00", align 1
@.str.612 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9: Expect arg[1] to be pointer\00", align 1
@.str.613 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9: Expect arg[2] to be pointer\00", align 1
@.str.614 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9: Expect arg[3] to be pointer\00", align 1
@.str.615 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.ndim is expected to equal 4\00", align 1
@.str.616 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.dtype is expected to be int8\00", align 1
@.str.617 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[0])\00", align 1
@.str.618 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[1])\00", align 1
@.str.619 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[2])\00", align 1
@.str.620 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_shape[3])\00", align 1
@.str.621 = private constant [472 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides: expected to be compact array\00", align 1
@.str.622 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.623 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.624 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.ndim is expected to equal 4\00", align 1
@.str.625 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.dtype is expected to be int32\00", align 1
@.str.626 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[0])\00", align 1
@.str.627 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[1])\00", align 1
@.str.628 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[2])\00", align 1
@.str.629 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_shape[3])\00", align 1
@.str.630 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.strides: expected to be compact array\00", align 1
@.str.631 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.632 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.633 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.634 = private constant [161 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.ndim is expected to equal 4\00", align 1
@.str.635 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.dtype is expected to be int32\00", align 1
@.str.636 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[0])\00", align 1
@.str.637 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[1])\00", align 1
@.str.638 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[2])\00", align 1
@.str.639 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_shape[3])\00", align 1
@.str.640 = private constant [241 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.strides: expected to be compact array\00", align 1
@.str.641 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.642 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.643 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.644 = private constant [169 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.ndim is expected to equal 4\00", align 1
@.str.645 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.dtype is expected to be int8\00", align 1
@.str.646 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[0])\00", align 1
@.str.647 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[1])\00", align 1
@.str.648 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[2])\00", align 1
@.str.649 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_shape[3])\00", align 1
@.str.650 = private constant [488 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides: expected to be compact array\00", align 1
@.str.651 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.652 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.653 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_kernel = internal unnamed_addr global ptr null, align 8
@.str.654 = private constant [82 x i8] c"tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_kernel\00", align 1
@.str.655 = private constant [111 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: num_args should be 4\00", align 1
@.str.656 = private constant [166 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.657 = private constant [166 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.658 = private constant [166 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.659 = private constant [182 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.660 = private constant [147 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.661 = private constant [267 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.662 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.663 = private constant [321 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.664 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.665 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.666 = private constant [419 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.667 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.668 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.669 = private constant [147 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.ndim is expected to equal 4\00", align 1
@.str.670 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.dtype is expected to be int32\00", align 1
@.str.671 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.672 = private constant [321 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.673 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.674 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.675 = private constant [213 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.676 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.677 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.678 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.679 = private constant [147 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.ndim is expected to equal 4\00", align 1
@.str.680 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.dtype is expected to be int32\00", align 1
@.str.681 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[0])\00", align 1
@.str.682 = private constant [321 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[1])\00", align 1
@.str.683 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[2])\00", align 1
@.str.684 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[3])\00", align 1
@.str.685 = private constant [213 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides: expected to be compact array\00", align 1
@.str.686 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.687 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.688 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.689 = private constant [155 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.690 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.691 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.692 = private constant [333 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.693 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.694 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.695 = private constant [435 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.696 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.697 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.698 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.699 = private constant [68 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_kernel\00", align 1
@.str.700 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: num_args should be 4\00", align 1
@.str.701 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.702 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.703 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.704 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[3] to be pointer\00", align 1
@.str.705 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.ndim is expected to equal 4\00", align 1
@.str.706 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.707 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.708 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.709 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.710 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.711 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.712 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.713 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.714 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.ndim is expected to equal 4\00", align 1
@.str.715 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.dtype is expected to be int32\00", align 1
@.str.716 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.717 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.718 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.719 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.720 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.721 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.722 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.723 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.724 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.ndim is expected to equal 4\00", align 1
@.str.725 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.dtype is expected to be int32\00", align 1
@.str.726 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[0])\00", align 1
@.str.727 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[1])\00", align 1
@.str.728 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[2])\00", align 1
@.str.729 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[3])\00", align 1
@.str.730 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides: expected to be compact array\00", align 1
@.str.731 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.732 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.733 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.734 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 4\00", align 1
@.str.735 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.736 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.737 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.738 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.739 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.740 = private constant [443 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.741 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.742 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.743 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.744 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_kernel\00", align 1
@.str.745 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: num_args should be 4\00", align 1
@.str.746 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.747 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.748 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.749 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[3] to be pointer\00", align 1
@.str.750 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.ndim is expected to equal 4\00", align 1
@.str.751 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.752 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.753 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.754 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.755 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.756 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.757 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.758 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.759 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.ndim is expected to equal 4\00", align 1
@.str.760 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.dtype is expected to be int32\00", align 1
@.str.761 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.762 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.763 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.764 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.765 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.766 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.767 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.768 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.769 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.ndim is expected to equal 4\00", align 1
@.str.770 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.dtype is expected to be int32\00", align 1
@.str.771 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[0])\00", align 1
@.str.772 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[1])\00", align 1
@.str.773 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[2])\00", align 1
@.str.774 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[3])\00", align 1
@.str.775 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides: expected to be compact array\00", align 1
@.str.776 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.777 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.778 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.779 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 4\00", align 1
@.str.780 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.781 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.782 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.783 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.784 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.785 = private constant [442 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.786 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.787 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.788 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.789 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_kernel\00", align 1
@.str.790 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: num_args should be 4\00", align 1
@.str.791 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.792 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.793 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.794 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[3] to be pointer\00", align 1
@.str.795 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.ndim is expected to equal 4\00", align 1
@.str.796 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.797 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.798 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.799 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.800 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.801 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.802 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.803 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.804 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.ndim is expected to equal 4\00", align 1
@.str.805 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.dtype is expected to be int32\00", align 1
@.str.806 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.807 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.808 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.809 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.810 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.811 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.812 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.813 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.814 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.ndim is expected to equal 4\00", align 1
@.str.815 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.dtype is expected to be int32\00", align 1
@.str.816 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[0])\00", align 1
@.str.817 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[1])\00", align 1
@.str.818 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[2])\00", align 1
@.str.819 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[3])\00", align 1
@.str.820 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides: expected to be compact array\00", align 1
@.str.821 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.822 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.823 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.824 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 4\00", align 1
@.str.825 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.826 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.827 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.828 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.829 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.830 = private constant [442 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.831 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.832 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.833 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.834 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_kernel\00", align 1
@.str.835 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4: num_args should be 4\00", align 1
@.str.836 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4: Expect arg[0] to be pointer\00", align 1
@.str.837 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4: Expect arg[1] to be pointer\00", align 1
@.str.838 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4: Expect arg[2] to be pointer\00", align 1
@.str.839 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4: Expect arg[3] to be pointer\00", align 1
@.str.840 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.ndim is expected to equal 4\00", align 1
@.str.841 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.dtype is expected to be int8\00", align 1
@.str.842 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[0])\00", align 1
@.str.843 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[1])\00", align 1
@.str.844 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[2])\00", align 1
@.str.845 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_shape[3])\00", align 1
@.str.846 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides: expected to be compact array\00", align 1
@.str.847 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.848 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.849 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.ndim is expected to equal 4\00", align 1
@.str.850 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.dtype is expected to be int32\00", align 1
@.str.851 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[0])\00", align 1
@.str.852 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[1])\00", align 1
@.str.853 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[2])\00", align 1
@.str.854 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_shape[3])\00", align 1
@.str.855 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.strides: expected to be compact array\00", align 1
@.str.856 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.857 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.858 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.859 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.ndim is expected to equal 4\00", align 1
@.str.860 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.dtype is expected to be int32\00", align 1
@.str.861 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[0])\00", align 1
@.str.862 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[1])\00", align 1
@.str.863 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[2])\00", align 1
@.str.864 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_shape[3])\00", align 1
@.str.865 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.strides: expected to be compact array\00", align 1
@.str.866 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.867 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.868 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.869 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.ndim is expected to equal 4\00", align 1
@.str.870 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.dtype is expected to be int8\00", align 1
@.str.871 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[0])\00", align 1
@.str.872 = private constant [341 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[1])\00", align 1
@.str.873 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[2])\00", align 1
@.str.874 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_shape[3])\00", align 1
@.str.875 = private constant [442 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides: expected to be compact array\00", align 1
@.str.876 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.877 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.878 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_kernel = internal unnamed_addr global ptr null, align 8
@.str.879 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_kernel\00", align 1
@.str.880 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5: num_args should be 4\00", align 1
@.str.881 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5: Expect arg[0] to be pointer\00", align 1
@.str.882 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5: Expect arg[1] to be pointer\00", align 1
@.str.883 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5: Expect arg[2] to be pointer\00", align 1
@.str.884 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5: Expect arg[3] to be pointer\00", align 1
@.str.885 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.ndim is expected to equal 4\00", align 1
@.str.886 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.dtype is expected to be int8\00", align 1
@.str.887 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[0])\00", align 1
@.str.888 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[1])\00", align 1
@.str.889 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[2])\00", align 1
@.str.890 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_shape[3])\00", align 1
@.str.891 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides: expected to be compact array\00", align 1
@.str.892 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.893 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.894 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.ndim is expected to equal 4\00", align 1
@.str.895 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.dtype is expected to be int32\00", align 1
@.str.896 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[0])\00", align 1
@.str.897 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[1])\00", align 1
@.str.898 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[2])\00", align 1
@.str.899 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_shape[3])\00", align 1
@.str.900 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.strides: expected to be compact array\00", align 1
@.str.901 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.902 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.903 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.904 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.ndim is expected to equal 4\00", align 1
@.str.905 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.dtype is expected to be int32\00", align 1
@.str.906 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[0])\00", align 1
@.str.907 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[1])\00", align 1
@.str.908 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[2])\00", align 1
@.str.909 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_shape[3])\00", align 1
@.str.910 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.strides: expected to be compact array\00", align 1
@.str.911 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.912 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.913 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.914 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.ndim is expected to equal 4\00", align 1
@.str.915 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.dtype is expected to be int8\00", align 1
@.str.916 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[0])\00", align 1
@.str.917 = private constant [341 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[1]) == 1024, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[1])\00", align 1
@.str.918 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[2])\00", align 1
@.str.919 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_shape[3])\00", align 1
@.str.920 = private constant [442 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides: expected to be compact array\00", align 1
@.str.921 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.922 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.923 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_kernel = internal unnamed_addr global ptr null, align 8
@.str.924 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_kernel\00", align 1
@.str.925 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6: num_args should be 4\00", align 1
@.str.926 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6: Expect arg[0] to be pointer\00", align 1
@.str.927 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6: Expect arg[1] to be pointer\00", align 1
@.str.928 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6: Expect arg[2] to be pointer\00", align 1
@.str.929 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6: Expect arg[3] to be pointer\00", align 1
@.str.930 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.ndim is expected to equal 4\00", align 1
@.str.931 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.dtype is expected to be int8\00", align 1
@.str.932 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[0])\00", align 1
@.str.933 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[1])\00", align 1
@.str.934 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[2])\00", align 1
@.str.935 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_shape[3])\00", align 1
@.str.936 = private constant [424 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides: expected to be compact array\00", align 1
@.str.937 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.938 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.939 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.ndim is expected to equal 4\00", align 1
@.str.940 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.dtype is expected to be int32\00", align 1
@.str.941 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[0])\00", align 1
@.str.942 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[1])\00", align 1
@.str.943 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[2])\00", align 1
@.str.944 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_shape[3])\00", align 1
@.str.945 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.strides: expected to be compact array\00", align 1
@.str.946 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.947 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.948 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.949 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.ndim is expected to equal 4\00", align 1
@.str.950 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.dtype is expected to be int32\00", align 1
@.str.951 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[0])\00", align 1
@.str.952 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[1])\00", align 1
@.str.953 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[2])\00", align 1
@.str.954 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_shape[3])\00", align 1
@.str.955 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.strides: expected to be compact array\00", align 1
@.str.956 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.957 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.958 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.959 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.ndim is expected to equal 4\00", align 1
@.str.960 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.dtype is expected to be int8\00", align 1
@.str.961 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[0])\00", align 1
@.str.962 = private constant [341 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[1])\00", align 1
@.str.963 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[2])\00", align 1
@.str.964 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_shape[3])\00", align 1
@.str.965 = private constant [440 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides: expected to be compact array\00", align 1
@.str.966 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.967 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.968 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_kernel = internal unnamed_addr global ptr null, align 8
@.str.969 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_kernel\00", align 1
@.str.970 = private constant [113 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7: num_args should be 4\00", align 1
@.str.971 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7: Expect arg[0] to be pointer\00", align 1
@.str.972 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7: Expect arg[1] to be pointer\00", align 1
@.str.973 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7: Expect arg[2] to be pointer\00", align 1
@.str.974 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7: Expect arg[3] to be pointer\00", align 1
@.str.975 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.ndim is expected to equal 4\00", align 1
@.str.976 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.dtype is expected to be int8\00", align 1
@.str.977 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[0])\00", align 1
@.str.978 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[1])\00", align 1
@.str.979 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[2])\00", align 1
@.str.980 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_shape[3])\00", align 1
@.str.981 = private constant [424 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides: expected to be compact array\00", align 1
@.str.982 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.983 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.984 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.ndim is expected to equal 4\00", align 1
@.str.985 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.dtype is expected to be int32\00", align 1
@.str.986 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[0])\00", align 1
@.str.987 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[1])\00", align 1
@.str.988 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[2])\00", align 1
@.str.989 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_shape[3])\00", align 1
@.str.990 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.strides: expected to be compact array\00", align 1
@.str.991 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.992 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.993 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.994 = private constant [149 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.ndim is expected to equal 4\00", align 1
@.str.995 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.dtype is expected to be int32\00", align 1
@.str.996 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[0])\00", align 1
@.str.997 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[1])\00", align 1
@.str.998 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[2])\00", align 1
@.str.999 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_shape[3])\00", align 1
@.str.1000 = private constant [217 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.strides: expected to be compact array\00", align 1
@.str.1001 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1002 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1003 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1004 = private constant [157 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.ndim is expected to equal 4\00", align 1
@.str.1005 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.dtype is expected to be int8\00", align 1
@.str.1006 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[0])\00", align 1
@.str.1007 = private constant [341 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[1])\00", align 1
@.str.1008 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[2])\00", align 1
@.str.1009 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_shape[3])\00", align 1
@.str.1010 = private constant [440 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides: expected to be compact array\00", align 1
@.str.1011 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1012 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1013 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_kernel = internal unnamed_addr global ptr null, align 8
@.str.1014 = private constant [70 x i8] c"tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_kernel\00", align 1
@.str.1015 = private constant [122 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: num_args should be 4\00", align 1
@.str.1016 = private constant [177 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.1017 = private constant [177 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.1018 = private constant [177 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.1019 = private constant [193 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.1020 = private constant [158 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.1021 = private constant [278 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.1022 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.1023 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.1024 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.1025 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.1026 = private constant [460 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.1027 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1028 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1029 = private constant [158 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.ndim is expected to equal 4\00", align 1
@.str.1030 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.dtype is expected to be int32\00", align 1
@.str.1031 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.1032 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.1033 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.1034 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.1035 = private constant [235 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.1036 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1037 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1038 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1039 = private constant [158 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.ndim is expected to equal 4\00", align 1
@.str.1040 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.dtype is expected to be int32\00", align 1
@.str.1041 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[0])\00", align 1
@.str.1042 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[1])\00", align 1
@.str.1043 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[2])\00", align 1
@.str.1044 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_shape[3])\00", align 1
@.str.1045 = private constant [235 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p2_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.strides: expected to be compact array\00", align 1
@.str.1046 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1047 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1048 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1049 = private constant [166 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.1050 = private constant [294 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.1051 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.1052 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.1053 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.1054 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.1055 = private constant [476 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.1056 = private constant [257 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1057 = private constant [237 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1058 = private constant [243 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.1059 = private constant [79 x i8] c"tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_kernel\00", align 1
@.str.1060 = private constant [92 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_multiply_add_nn_relu: num_args should be 4\00", align 1
@.str.1061 = private constant [147 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.1062 = private constant [147 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.1063 = private constant [147 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.1064 = private constant [163 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.1065 = private constant [128 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p0.ndim is expected to equal 4\00", align 1
@.str.1066 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.1067 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[0])\00", align 1
@.str.1068 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[1]) == 64, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[1])\00", align 1
@.str.1069 = private constant [264 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[2]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[2])\00", align 1
@.str.1070 = private constant [264 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[3]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[3])\00", align 1
@.str.1071 = private constant [345 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.1072 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1073 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1074 = private constant [128 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p1.ndim is expected to equal 4\00", align 1
@.str.1075 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.1076 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[0])\00", align 1
@.str.1077 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[1]) == 64, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[1])\00", align 1
@.str.1078 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[2]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[2])\00", align 1
@.str.1079 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[3]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[3])\00", align 1
@.str.1080 = private constant [175 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.1081 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1082 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1083 = private constant [201 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1084 = private constant [128 x i8] c"Assert fail: 4 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p2.ndim is expected to equal 4\00", align 1
@.str.1085 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.1086 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[0])\00", align 1
@.str.1087 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[1]) == 64, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[1])\00", align 1
@.str.1088 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[2])\00", align 1
@.str.1089 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[3])\00", align 1
@.str.1090 = private constant [175 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.1091 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1092 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1093 = private constant [201 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1094 = private constant [136 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.T_relu.ndim is expected to equal 4\00", align 1
@.str.1095 = private constant [268 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.1096 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.1097 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.1098 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[2]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.1099 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[3]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.1100 = private constant [361 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.1101 = private constant [227 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1102 = private constant [207 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1103 = private constant [213 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_multiply_add_nn_relu_kernel = internal unnamed_addr global ptr null, align 8
@.str.1104 = private constant [49 x i8] c"tvmgen_default_fused_multiply_add_nn_relu_kernel\00", align 1
@.str.1105 = private constant [96 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_multiply_round_clip_cast: num_args should be 2\00", align 1
@.str.1106 = private constant [151 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_multiply_round_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.1107 = private constant [167 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_multiply_round_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.1108 = private constant [132 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_multiply_round_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.1109 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_round_clip_cast.p0.dtype is expected to be float32\00", align 1
@.str.1110 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[0])\00", align 1
@.str.1111 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[1]) == 64, Argument tvmgen_default_fused_multiply_round_clip_cast.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[1])\00", align 1
@.str.1112 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[2])\00", align 1
@.str.1113 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_shape[3])\00", align 1
@.str.1114 = private constant [359 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_p0_strides[1]), tvmgen_default_fused_multiply_round_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.1115 = private constant [219 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_round_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1116 = private constant [199 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_round_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1117 = private constant [140 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_multiply_round_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.1118 = private constant [268 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_round_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.1119 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[0])\00", align 1
@.str.1120 = private constant [286 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[1])\00", align 1
@.str.1121 = private constant [286 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[2])\00", align 1
@.str.1122 = private constant [286 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_shape[3])\00", align 1
@.str.1123 = private constant [375 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_T_cast_strides[1]), tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.1124 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1125 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1126 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_round_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_multiply_round_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.1127 = private constant [53 x i8] c"tvmgen_default_fused_multiply_round_clip_cast_kernel\00", align 1
@.str.1128 = private constant [94 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_adaptive_avg_pool2d: num_args should be 2\00", align 1
@.str.1129 = private constant [149 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.1130 = private constant [209 x i8] c"Assert fail: adaptive_pool_avg_code == 3 or adaptive_pool_avg_code == 13 or adaptive_pool_avg_code == 7 or adaptive_pool_avg_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.1131 = private constant [130 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.ndim is expected to equal 4\00", align 1
@.str.1132 = private constant [254 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.1133 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0])\00", align 1
@.str.1134 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1])\00", align 1
@.str.1135 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2])\00", align 1
@.str.1136 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3])\00", align 1
@.str.1137 = private constant [348 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.1138 = private constant [217 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1139 = private constant [197 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1140 = private constant [160 x i8] c"Assert fail: 4 == T.tvm_struct_get(adaptive_pool_avg, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.ndim is expected to equal 4\00", align 1
@.str.1141 = private constant [314 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(adaptive_pool_avg, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(adaptive_pool_avg, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.dtype is expected to be float32\00", align 1
@.str.1142 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0])\00", align 1
@.str.1143 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1]) == 2048, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1])\00", align 1
@.str.1144 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2])\00", align 1
@.str.1145 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3])\00", align 1
@.str.1146 = private constant [209 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides: expected to be compact array\00", align 1
@.str.1147 = private constant [262 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22)\00", align 1
@.str.1148 = private constant [242 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22)\00", align 1
@.str.1149 = private constant [248 x i8] c"Assert fail: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22)\00", align 1
@__TVMBackendAllocWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel = internal unnamed_addr global ptr null, align 8
@.str.1150 = private constant [51 x i8] c"tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1151 = private constant [53 x i8] c"tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1\00", align 1
@__TVMBackendFreeWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str.1152 = private constant [81 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d: num_args should be 3\00", align 1
@.str.1153 = private constant [136 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d: Expect arg[0] to be pointer\00", align 1
@.str.1154 = private constant [136 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d: Expect arg[1] to be pointer\00", align 1
@.str.1155 = private constant [172 x i8] c"Assert fail: conv2d_nchw_code == 3 or conv2d_nchw_code == 13 or conv2d_nchw_code == 7 or conv2d_nchw_code == 4, tvmgen_default_fused_nn_conv2d: Expect arg[2] to be pointer\00", align 1
@.str.1156 = private constant [117 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d.p0.ndim is expected to equal 4\00", align 1
@.str.1157 = private constant [241 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d.p0.dtype is expected to be float32\00", align 1
@.str.1158 = private constant [227 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[0])\00", align 1
@.str.1159 = private constant [227 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[1]) == 3, Argument tvmgen_default_fused_nn_conv2d.p0.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[1])\00", align 1
@.str.1160 = private constant [231 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[2]) == 224, Argument tvmgen_default_fused_nn_conv2d.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[2])\00", align 1
@.str.1161 = private constant [231 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[3]) == 224, Argument tvmgen_default_fused_nn_conv2d.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_shape[3])\00", align 1
@.str.1162 = private constant [301 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p0_strides[1]), tvmgen_default_fused_nn_conv2d.p0.strides: expected to be compact array\00", align 1
@.str.1163 = private constant [204 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1164 = private constant [184 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1165 = private constant [117 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d.p1.ndim is expected to equal 4\00", align 1
@.str.1166 = private constant [241 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d.p1.dtype is expected to be float32\00", align 1
@.str.1167 = private constant [229 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[0])\00", align 1
@.str.1168 = private constant [227 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[1]) == 3, Argument tvmgen_default_fused_nn_conv2d.p1.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[1])\00", align 1
@.str.1169 = private constant [227 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[2])\00", align 1
@.str.1170 = private constant [227 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_shape[3])\00", align 1
@.str.1171 = private constant [369 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_strides[1]) and 147 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_p1_strides[0]), tvmgen_default_fused_nn_conv2d.p1.strides: expected to be compact array\00", align 1
@.str.1172 = private constant [204 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1173 = private constant [184 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1174 = private constant [190 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1175 = private constant [135 x i8] c"Assert fail: 4 == T.tvm_struct_get(conv2d_nchw, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d.conv2d_nchw.ndim is expected to equal 4\00", align 1
@.str.1176 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(conv2d_nchw, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(conv2d_nchw, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(conv2d_nchw, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d.conv2d_nchw.dtype is expected to be float32\00", align 1
@.str.1177 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[0])\00", align 1
@.str.1178 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[1])\00", align 1
@.str.1179 = private constant [258 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[2]) == 112, Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[2])\00", align 1
@.str.1180 = private constant [258 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[3]) == 112, Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_shape[3])\00", align 1
@.str.1181 = private constant [337 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_conv2d_nchw_strides[1]), tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides: expected to be compact array\00", align 1
@.str.1182 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(conv2d_nchw, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(conv2d_nchw, 0, 8, \22uint64\22)\00", align 1
@.str.1183 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(conv2d_nchw, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(conv2d_nchw, 0, 10, \22int32\22)\00", align 1
@.str.1184 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(conv2d_nchw, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d.conv2d_nchw.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(conv2d_nchw, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_kernel = internal unnamed_addr global ptr null, align 8
@.str.1185 = private constant [38 x i8] c"tvmgen_default_fused_nn_conv2d_kernel\00", align 1
@.str.1186 = private constant [107 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast: num_args should be 3\00", align 1
@.str.1187 = private constant [162 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.1188 = private constant [162 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.1189 = private constant [178 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.1190 = private constant [143 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.ndim is expected to equal 4\00", align 1
@.str.1191 = private constant [263 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.1192 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.1193 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.1194 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.1195 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.1196 = private constant [403 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.1197 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1198 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1199 = private constant [143 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.ndim is expected to equal 4\00", align 1
@.str.1200 = private constant [263 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.dtype is expected to be int8\00", align 1
@.str.1201 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.1202 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.1203 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.1204 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.1205 = private constant [303 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.1206 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1207 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1208 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1209 = private constant [151 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.ndim is expected to equal 4\00", align 1
@.str.1210 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.1211 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.1212 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.1213 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.1214 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.1215 = private constant [419 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.1216 = private constant [242 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1217 = private constant [222 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1218 = private constant [228 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel = internal unnamed_addr global ptr null, align 8
@.str.1219 = private constant [64 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1220 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1221 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_2\00", align 1
@.str.1222 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1: num_args should be 3\00", align 1
@.str.1223 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.1224 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.1225 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.1226 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.ndim is expected to equal 4\00", align 1
@.str.1227 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.1228 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.1229 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.1230 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.1231 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.1232 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.1233 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1234 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1235 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.ndim is expected to equal 4\00", align 1
@.str.1236 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.dtype is expected to be int8\00", align 1
@.str.1237 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.1238 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.1239 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.1240 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.1241 = private constant [508 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_strides[1]) and 576 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.1242 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1243 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1244 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1245 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 4\00", align 1
@.str.1246 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.1247 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.1248 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.1249 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.1250 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.1251 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.1252 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1253 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1254 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel = internal unnamed_addr global ptr null, align 8
@.str.1255 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1256 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1257 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_2\00", align 1
@.str.1258 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10: num_args should be 3\00", align 1
@.str.1259 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10: Expect arg[0] to be pointer\00", align 1
@.str.1260 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10: Expect arg[1] to be pointer\00", align 1
@.str.1261 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10: Expect arg[2] to be pointer\00", align 1
@.str.1262 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.ndim is expected to equal 4\00", align 1
@.str.1263 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.dtype is expected to be int8\00", align 1
@.str.1264 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[0])\00", align 1
@.str.1265 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[1])\00", align 1
@.str.1266 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[2])\00", align 1
@.str.1267 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_shape[3])\00", align 1
@.str.1268 = private constant [415 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides: expected to be compact array\00", align 1
@.str.1269 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1270 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1271 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.ndim is expected to equal 4\00", align 1
@.str.1272 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.dtype is expected to be int8\00", align 1
@.str.1273 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[0])\00", align 1
@.str.1274 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[1])\00", align 1
@.str.1275 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[2])\00", align 1
@.str.1276 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_shape[3])\00", align 1
@.str.1277 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.strides: expected to be compact array\00", align 1
@.str.1278 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1279 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1280 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1281 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.ndim is expected to equal 4\00", align 1
@.str.1282 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.dtype is expected to be int8\00", align 1
@.str.1283 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[0])\00", align 1
@.str.1284 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[1])\00", align 1
@.str.1285 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[2])\00", align 1
@.str.1286 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_shape[3])\00", align 1
@.str.1287 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides: expected to be compact array\00", align 1
@.str.1288 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1289 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1290 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel = internal unnamed_addr global ptr null, align 8
@.str.1291 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1292 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1293 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_2\00", align 1
@.str.1294 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11: num_args should be 3\00", align 1
@.str.1295 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11: Expect arg[0] to be pointer\00", align 1
@.str.1296 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11: Expect arg[1] to be pointer\00", align 1
@.str.1297 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11: Expect arg[2] to be pointer\00", align 1
@.str.1298 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.ndim is expected to equal 4\00", align 1
@.str.1299 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.dtype is expected to be int8\00", align 1
@.str.1300 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[0])\00", align 1
@.str.1301 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[1])\00", align 1
@.str.1302 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[2])\00", align 1
@.str.1303 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_shape[3])\00", align 1
@.str.1304 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides: expected to be compact array\00", align 1
@.str.1305 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1306 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1307 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.ndim is expected to equal 4\00", align 1
@.str.1308 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.dtype is expected to be int8\00", align 1
@.str.1309 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[0])\00", align 1
@.str.1310 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[1])\00", align 1
@.str.1311 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[2])\00", align 1
@.str.1312 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_shape[3])\00", align 1
@.str.1313 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.strides: expected to be compact array\00", align 1
@.str.1314 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1315 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1316 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1317 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.ndim is expected to equal 4\00", align 1
@.str.1318 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.dtype is expected to be int8\00", align 1
@.str.1319 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[0])\00", align 1
@.str.1320 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[1])\00", align 1
@.str.1321 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[2])\00", align 1
@.str.1322 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_shape[3])\00", align 1
@.str.1323 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides: expected to be compact array\00", align 1
@.str.1324 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1325 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1326 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel = internal unnamed_addr global ptr null, align 8
@.str.1327 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1328 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1329 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_2\00", align 1
@.str.1330 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12: num_args should be 3\00", align 1
@.str.1331 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12: Expect arg[0] to be pointer\00", align 1
@.str.1332 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12: Expect arg[1] to be pointer\00", align 1
@.str.1333 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12: Expect arg[2] to be pointer\00", align 1
@.str.1334 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.ndim is expected to equal 4\00", align 1
@.str.1335 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.dtype is expected to be int8\00", align 1
@.str.1336 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[0])\00", align 1
@.str.1337 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[1])\00", align 1
@.str.1338 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[2])\00", align 1
@.str.1339 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_shape[3])\00", align 1
@.str.1340 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides: expected to be compact array\00", align 1
@.str.1341 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1342 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1343 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.ndim is expected to equal 4\00", align 1
@.str.1344 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.dtype is expected to be int8\00", align 1
@.str.1345 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[0])\00", align 1
@.str.1346 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[1])\00", align 1
@.str.1347 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[2])\00", align 1
@.str.1348 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_shape[3])\00", align 1
@.str.1349 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_strides[1]) and 1152 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides: expected to be compact array\00", align 1
@.str.1350 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1351 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1352 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1353 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.ndim is expected to equal 4\00", align 1
@.str.1354 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.dtype is expected to be int8\00", align 1
@.str.1355 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[0])\00", align 1
@.str.1356 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[1])\00", align 1
@.str.1357 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[2])\00", align 1
@.str.1358 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_shape[3])\00", align 1
@.str.1359 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides: expected to be compact array\00", align 1
@.str.1360 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1361 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1362 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel = internal unnamed_addr global ptr null, align 8
@.str.1363 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1364 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1365 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_2\00", align 1
@.str.1366 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13: num_args should be 3\00", align 1
@.str.1367 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13: Expect arg[0] to be pointer\00", align 1
@.str.1368 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13: Expect arg[1] to be pointer\00", align 1
@.str.1369 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13: Expect arg[2] to be pointer\00", align 1
@.str.1370 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.ndim is expected to equal 4\00", align 1
@.str.1371 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.dtype is expected to be int8\00", align 1
@.str.1372 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[0])\00", align 1
@.str.1373 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[1])\00", align 1
@.str.1374 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[2])\00", align 1
@.str.1375 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_shape[3])\00", align 1
@.str.1376 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides: expected to be compact array\00", align 1
@.str.1377 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1378 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1379 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.ndim is expected to equal 4\00", align 1
@.str.1380 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.dtype is expected to be int8\00", align 1
@.str.1381 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[0])\00", align 1
@.str.1382 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[1])\00", align 1
@.str.1383 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[2])\00", align 1
@.str.1384 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_shape[3])\00", align 1
@.str.1385 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.strides: expected to be compact array\00", align 1
@.str.1386 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1387 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1388 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1389 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.ndim is expected to equal 4\00", align 1
@.str.1390 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.dtype is expected to be int8\00", align 1
@.str.1391 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[0])\00", align 1
@.str.1392 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[1])\00", align 1
@.str.1393 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[2])\00", align 1
@.str.1394 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_shape[3])\00", align 1
@.str.1395 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides: expected to be compact array\00", align 1
@.str.1396 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1397 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1398 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel = internal unnamed_addr global ptr null, align 8
@.str.1399 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1400 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1401 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_2\00", align 1
@.str.1402 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14: num_args should be 3\00", align 1
@.str.1403 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14: Expect arg[0] to be pointer\00", align 1
@.str.1404 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14: Expect arg[1] to be pointer\00", align 1
@.str.1405 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14: Expect arg[2] to be pointer\00", align 1
@.str.1406 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.ndim is expected to equal 4\00", align 1
@.str.1407 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.dtype is expected to be int8\00", align 1
@.str.1408 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[0])\00", align 1
@.str.1409 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[1])\00", align 1
@.str.1410 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[2])\00", align 1
@.str.1411 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_shape[3])\00", align 1
@.str.1412 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides: expected to be compact array\00", align 1
@.str.1413 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1414 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1415 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.ndim is expected to equal 4\00", align 1
@.str.1416 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.dtype is expected to be int8\00", align 1
@.str.1417 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[0])\00", align 1
@.str.1418 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[1])\00", align 1
@.str.1419 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[2])\00", align 1
@.str.1420 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_shape[3])\00", align 1
@.str.1421 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_strides[1]) and 1152 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides: expected to be compact array\00", align 1
@.str.1422 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1423 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1424 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1425 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.ndim is expected to equal 4\00", align 1
@.str.1426 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.dtype is expected to be int8\00", align 1
@.str.1427 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[0])\00", align 1
@.str.1428 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[1])\00", align 1
@.str.1429 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[2])\00", align 1
@.str.1430 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_shape[3])\00", align 1
@.str.1431 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides: expected to be compact array\00", align 1
@.str.1432 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1433 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1434 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel = internal unnamed_addr global ptr null, align 8
@.str.1435 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1436 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1437 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_2\00", align 1
@.str.1438 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15: num_args should be 3\00", align 1
@.str.1439 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15: Expect arg[0] to be pointer\00", align 1
@.str.1440 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15: Expect arg[1] to be pointer\00", align 1
@.str.1441 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15: Expect arg[2] to be pointer\00", align 1
@.str.1442 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.ndim is expected to equal 4\00", align 1
@.str.1443 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.dtype is expected to be int8\00", align 1
@.str.1444 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[0])\00", align 1
@.str.1445 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[1])\00", align 1
@.str.1446 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[2])\00", align 1
@.str.1447 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_shape[3])\00", align 1
@.str.1448 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides: expected to be compact array\00", align 1
@.str.1449 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1450 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1451 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.ndim is expected to equal 4\00", align 1
@.str.1452 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.dtype is expected to be int8\00", align 1
@.str.1453 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[0])\00", align 1
@.str.1454 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[1])\00", align 1
@.str.1455 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[2])\00", align 1
@.str.1456 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_shape[3])\00", align 1
@.str.1457 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.strides: expected to be compact array\00", align 1
@.str.1458 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1459 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1460 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1461 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.ndim is expected to equal 4\00", align 1
@.str.1462 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.dtype is expected to be int8\00", align 1
@.str.1463 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[0])\00", align 1
@.str.1464 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[1])\00", align 1
@.str.1465 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[2])\00", align 1
@.str.1466 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_shape[3])\00", align 1
@.str.1467 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides: expected to be compact array\00", align 1
@.str.1468 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1469 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1470 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel = internal unnamed_addr global ptr null, align 8
@.str.1471 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1472 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1473 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_2\00", align 1
@.str.1474 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16: num_args should be 3\00", align 1
@.str.1475 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16: Expect arg[0] to be pointer\00", align 1
@.str.1476 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16: Expect arg[1] to be pointer\00", align 1
@.str.1477 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16: Expect arg[2] to be pointer\00", align 1
@.str.1478 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.ndim is expected to equal 4\00", align 1
@.str.1479 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.dtype is expected to be int8\00", align 1
@.str.1480 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[0])\00", align 1
@.str.1481 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[1])\00", align 1
@.str.1482 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[2])\00", align 1
@.str.1483 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_shape[3])\00", align 1
@.str.1484 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides: expected to be compact array\00", align 1
@.str.1485 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1486 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1487 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.ndim is expected to equal 4\00", align 1
@.str.1488 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.dtype is expected to be int8\00", align 1
@.str.1489 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[0])\00", align 1
@.str.1490 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[1])\00", align 1
@.str.1491 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[2])\00", align 1
@.str.1492 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_shape[3])\00", align 1
@.str.1493 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_strides[1]) and 2304 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides: expected to be compact array\00", align 1
@.str.1494 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1495 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1496 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1497 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.ndim is expected to equal 4\00", align 1
@.str.1498 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.dtype is expected to be int8\00", align 1
@.str.1499 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[0])\00", align 1
@.str.1500 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[1])\00", align 1
@.str.1501 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[2])\00", align 1
@.str.1502 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_shape[3])\00", align 1
@.str.1503 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides: expected to be compact array\00", align 1
@.str.1504 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1505 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1506 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel = internal unnamed_addr global ptr null, align 8
@.str.1507 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1508 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1509 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_2\00", align 1
@.str.1510 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17: num_args should be 3\00", align 1
@.str.1511 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17: Expect arg[0] to be pointer\00", align 1
@.str.1512 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17: Expect arg[1] to be pointer\00", align 1
@.str.1513 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17: Expect arg[2] to be pointer\00", align 1
@.str.1514 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.ndim is expected to equal 4\00", align 1
@.str.1515 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.dtype is expected to be int8\00", align 1
@.str.1516 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[0])\00", align 1
@.str.1517 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[1])\00", align 1
@.str.1518 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[2])\00", align 1
@.str.1519 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_shape[3])\00", align 1
@.str.1520 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides: expected to be compact array\00", align 1
@.str.1521 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1522 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1523 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.ndim is expected to equal 4\00", align 1
@.str.1524 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.dtype is expected to be int8\00", align 1
@.str.1525 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[0]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape[0] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[0])\00", align 1
@.str.1526 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[1])\00", align 1
@.str.1527 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[2])\00", align 1
@.str.1528 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_shape[3])\00", align 1
@.str.1529 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.strides: expected to be compact array\00", align 1
@.str.1530 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1531 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1532 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1533 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.ndim is expected to equal 4\00", align 1
@.str.1534 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.dtype is expected to be int8\00", align 1
@.str.1535 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[0])\00", align 1
@.str.1536 = private constant [332 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[1])\00", align 1
@.str.1537 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[2])\00", align 1
@.str.1538 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_shape[3])\00", align 1
@.str.1539 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides: expected to be compact array\00", align 1
@.str.1540 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1541 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1542 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel = internal unnamed_addr global ptr null, align 8
@.str.1543 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1544 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1545 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_2\00", align 1
@.str.1546 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18: num_args should be 3\00", align 1
@.str.1547 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18: Expect arg[0] to be pointer\00", align 1
@.str.1548 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18: Expect arg[1] to be pointer\00", align 1
@.str.1549 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18: Expect arg[2] to be pointer\00", align 1
@.str.1550 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.ndim is expected to equal 4\00", align 1
@.str.1551 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.dtype is expected to be int8\00", align 1
@.str.1552 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[0])\00", align 1
@.str.1553 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[1])\00", align 1
@.str.1554 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[2])\00", align 1
@.str.1555 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_shape[3])\00", align 1
@.str.1556 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides: expected to be compact array\00", align 1
@.str.1557 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1558 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1559 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.ndim is expected to equal 4\00", align 1
@.str.1560 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.dtype is expected to be int8\00", align 1
@.str.1561 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[0]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape[0] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[0])\00", align 1
@.str.1562 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[1])\00", align 1
@.str.1563 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[2])\00", align 1
@.str.1564 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_shape[3])\00", align 1
@.str.1565 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.strides: expected to be compact array\00", align 1
@.str.1566 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1567 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1568 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1569 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.ndim is expected to equal 4\00", align 1
@.str.1570 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.dtype is expected to be int8\00", align 1
@.str.1571 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[0])\00", align 1
@.str.1572 = private constant [332 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[1])\00", align 1
@.str.1573 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[2])\00", align 1
@.str.1574 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_shape[3])\00", align 1
@.str.1575 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides: expected to be compact array\00", align 1
@.str.1576 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1577 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1578 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel = internal unnamed_addr global ptr null, align 8
@.str.1579 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1580 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1581 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_2\00", align 1
@.str.1582 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19: num_args should be 3\00", align 1
@.str.1583 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19: Expect arg[0] to be pointer\00", align 1
@.str.1584 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19: Expect arg[1] to be pointer\00", align 1
@.str.1585 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19: Expect arg[2] to be pointer\00", align 1
@.str.1586 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.ndim is expected to equal 4\00", align 1
@.str.1587 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.dtype is expected to be int8\00", align 1
@.str.1588 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[0])\00", align 1
@.str.1589 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[1])\00", align 1
@.str.1590 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[2])\00", align 1
@.str.1591 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_shape[3])\00", align 1
@.str.1592 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides: expected to be compact array\00", align 1
@.str.1593 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1594 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1595 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.ndim is expected to equal 4\00", align 1
@.str.1596 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.dtype is expected to be int8\00", align 1
@.str.1597 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[0])\00", align 1
@.str.1598 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[1])\00", align 1
@.str.1599 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[2])\00", align 1
@.str.1600 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_shape[3])\00", align 1
@.str.1601 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.strides: expected to be compact array\00", align 1
@.str.1602 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1603 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1604 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1605 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.ndim is expected to equal 4\00", align 1
@.str.1606 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.dtype is expected to be int8\00", align 1
@.str.1607 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[0])\00", align 1
@.str.1608 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[1])\00", align 1
@.str.1609 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[2])\00", align 1
@.str.1610 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_shape[3])\00", align 1
@.str.1611 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides: expected to be compact array\00", align 1
@.str.1612 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1613 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1614 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel = internal unnamed_addr global ptr null, align 8
@.str.1615 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1616 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1617 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_2\00", align 1
@.str.1618 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2: num_args should be 3\00", align 1
@.str.1619 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.1620 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.1621 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.1622 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.ndim is expected to equal 4\00", align 1
@.str.1623 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.1624 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.1625 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.1626 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.1627 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.1628 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.1629 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1630 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1631 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.ndim is expected to equal 4\00", align 1
@.str.1632 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.dtype is expected to be int8\00", align 1
@.str.1633 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.1634 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.1635 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.1636 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.1637 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.1638 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1639 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1640 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1641 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 4\00", align 1
@.str.1642 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.1643 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.1644 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.1645 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.1646 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.1647 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.1648 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1649 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1650 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel = internal unnamed_addr global ptr null, align 8
@.str.1651 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1652 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1653 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_2\00", align 1
@.str.1654 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20: num_args should be 3\00", align 1
@.str.1655 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20: Expect arg[0] to be pointer\00", align 1
@.str.1656 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20: Expect arg[1] to be pointer\00", align 1
@.str.1657 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20: Expect arg[2] to be pointer\00", align 1
@.str.1658 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.ndim is expected to equal 4\00", align 1
@.str.1659 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.dtype is expected to be int8\00", align 1
@.str.1660 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[0])\00", align 1
@.str.1661 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[1])\00", align 1
@.str.1662 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[2])\00", align 1
@.str.1663 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_shape[3])\00", align 1
@.str.1664 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides: expected to be compact array\00", align 1
@.str.1665 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1666 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1667 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.ndim is expected to equal 4\00", align 1
@.str.1668 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.dtype is expected to be int8\00", align 1
@.str.1669 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[0])\00", align 1
@.str.1670 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[1])\00", align 1
@.str.1671 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[2])\00", align 1
@.str.1672 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_shape[3])\00", align 1
@.str.1673 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_strides[1]) and 2304 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides: expected to be compact array\00", align 1
@.str.1674 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1675 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1676 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1677 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.ndim is expected to equal 4\00", align 1
@.str.1678 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.dtype is expected to be int8\00", align 1
@.str.1679 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[0])\00", align 1
@.str.1680 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[1])\00", align 1
@.str.1681 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[2])\00", align 1
@.str.1682 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_shape[3])\00", align 1
@.str.1683 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides: expected to be compact array\00", align 1
@.str.1684 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1685 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1686 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel = internal unnamed_addr global ptr null, align 8
@.str.1687 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1688 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1689 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_2\00", align 1
@.str.1690 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21: num_args should be 3\00", align 1
@.str.1691 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21: Expect arg[0] to be pointer\00", align 1
@.str.1692 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21: Expect arg[1] to be pointer\00", align 1
@.str.1693 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21: Expect arg[2] to be pointer\00", align 1
@.str.1694 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.ndim is expected to equal 4\00", align 1
@.str.1695 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.dtype is expected to be int8\00", align 1
@.str.1696 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[0])\00", align 1
@.str.1697 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[1])\00", align 1
@.str.1698 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[2])\00", align 1
@.str.1699 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_shape[3])\00", align 1
@.str.1700 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides: expected to be compact array\00", align 1
@.str.1701 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1702 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1703 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.ndim is expected to equal 4\00", align 1
@.str.1704 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.dtype is expected to be int8\00", align 1
@.str.1705 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[0])\00", align 1
@.str.1706 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[1])\00", align 1
@.str.1707 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[2])\00", align 1
@.str.1708 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_shape[3])\00", align 1
@.str.1709 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_strides[1]) and 2304 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides: expected to be compact array\00", align 1
@.str.1710 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1711 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1712 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1713 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.ndim is expected to equal 4\00", align 1
@.str.1714 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.dtype is expected to be int8\00", align 1
@.str.1715 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[0])\00", align 1
@.str.1716 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[1])\00", align 1
@.str.1717 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[2])\00", align 1
@.str.1718 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_shape[3])\00", align 1
@.str.1719 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides: expected to be compact array\00", align 1
@.str.1720 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1721 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1722 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel = internal unnamed_addr global ptr null, align 8
@.str.1723 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1724 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1725 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_2\00", align 1
@.str.1726 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22: num_args should be 3\00", align 1
@.str.1727 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22: Expect arg[0] to be pointer\00", align 1
@.str.1728 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22: Expect arg[1] to be pointer\00", align 1
@.str.1729 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22: Expect arg[2] to be pointer\00", align 1
@.str.1730 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.ndim is expected to equal 4\00", align 1
@.str.1731 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.dtype is expected to be int8\00", align 1
@.str.1732 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[0])\00", align 1
@.str.1733 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[1])\00", align 1
@.str.1734 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[2])\00", align 1
@.str.1735 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_shape[3])\00", align 1
@.str.1736 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides: expected to be compact array\00", align 1
@.str.1737 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1738 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1739 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.ndim is expected to equal 4\00", align 1
@.str.1740 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.dtype is expected to be int8\00", align 1
@.str.1741 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[0])\00", align 1
@.str.1742 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[1])\00", align 1
@.str.1743 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[2])\00", align 1
@.str.1744 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_shape[3])\00", align 1
@.str.1745 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.strides: expected to be compact array\00", align 1
@.str.1746 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1747 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1748 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1749 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.ndim is expected to equal 4\00", align 1
@.str.1750 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.dtype is expected to be int8\00", align 1
@.str.1751 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[0])\00", align 1
@.str.1752 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[1])\00", align 1
@.str.1753 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[2])\00", align 1
@.str.1754 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_shape[3])\00", align 1
@.str.1755 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides: expected to be compact array\00", align 1
@.str.1756 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1757 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1758 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel = internal unnamed_addr global ptr null, align 8
@.str.1759 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1760 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1761 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_2\00", align 1
@.str.1762 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23: num_args should be 3\00", align 1
@.str.1763 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23: Expect arg[0] to be pointer\00", align 1
@.str.1764 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23: Expect arg[1] to be pointer\00", align 1
@.str.1765 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23: Expect arg[2] to be pointer\00", align 1
@.str.1766 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.ndim is expected to equal 4\00", align 1
@.str.1767 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.dtype is expected to be int8\00", align 1
@.str.1768 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[0])\00", align 1
@.str.1769 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[1])\00", align 1
@.str.1770 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[2])\00", align 1
@.str.1771 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_shape[3])\00", align 1
@.str.1772 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides: expected to be compact array\00", align 1
@.str.1773 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1774 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1775 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.ndim is expected to equal 4\00", align 1
@.str.1776 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.dtype is expected to be int8\00", align 1
@.str.1777 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[0])\00", align 1
@.str.1778 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[1])\00", align 1
@.str.1779 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[2])\00", align 1
@.str.1780 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_shape[3])\00", align 1
@.str.1781 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.strides: expected to be compact array\00", align 1
@.str.1782 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1783 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1784 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1785 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.ndim is expected to equal 4\00", align 1
@.str.1786 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.dtype is expected to be int8\00", align 1
@.str.1787 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[0])\00", align 1
@.str.1788 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[1])\00", align 1
@.str.1789 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[2])\00", align 1
@.str.1790 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_shape[3])\00", align 1
@.str.1791 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides: expected to be compact array\00", align 1
@.str.1792 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1793 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1794 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel = internal unnamed_addr global ptr null, align 8
@.str.1795 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1796 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1797 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_2\00", align 1
@.str.1798 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24: num_args should be 3\00", align 1
@.str.1799 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24: Expect arg[0] to be pointer\00", align 1
@.str.1800 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24: Expect arg[1] to be pointer\00", align 1
@.str.1801 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24: Expect arg[2] to be pointer\00", align 1
@.str.1802 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.ndim is expected to equal 4\00", align 1
@.str.1803 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.dtype is expected to be int8\00", align 1
@.str.1804 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[0])\00", align 1
@.str.1805 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[1])\00", align 1
@.str.1806 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[2])\00", align 1
@.str.1807 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_shape[3])\00", align 1
@.str.1808 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides: expected to be compact array\00", align 1
@.str.1809 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1810 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1811 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.ndim is expected to equal 4\00", align 1
@.str.1812 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.dtype is expected to be int8\00", align 1
@.str.1813 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[0])\00", align 1
@.str.1814 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[1])\00", align 1
@.str.1815 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[2])\00", align 1
@.str.1816 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_shape[3])\00", align 1
@.str.1817 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides: expected to be compact array\00", align 1
@.str.1818 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1819 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1820 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1821 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.ndim is expected to equal 4\00", align 1
@.str.1822 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.dtype is expected to be int8\00", align 1
@.str.1823 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[0])\00", align 1
@.str.1824 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[1])\00", align 1
@.str.1825 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[2])\00", align 1
@.str.1826 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_shape[3])\00", align 1
@.str.1827 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides: expected to be compact array\00", align 1
@.str.1828 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1829 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1830 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel = internal unnamed_addr global ptr null, align 8
@.str.1831 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1832 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1833 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_2\00", align 1
@.str.1834 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25: num_args should be 3\00", align 1
@.str.1835 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25: Expect arg[0] to be pointer\00", align 1
@.str.1836 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25: Expect arg[1] to be pointer\00", align 1
@.str.1837 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25: Expect arg[2] to be pointer\00", align 1
@.str.1838 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.ndim is expected to equal 4\00", align 1
@.str.1839 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.dtype is expected to be int8\00", align 1
@.str.1840 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[0])\00", align 1
@.str.1841 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[1])\00", align 1
@.str.1842 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[2])\00", align 1
@.str.1843 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_shape[3])\00", align 1
@.str.1844 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides: expected to be compact array\00", align 1
@.str.1845 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1846 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1847 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.ndim is expected to equal 4\00", align 1
@.str.1848 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.dtype is expected to be int8\00", align 1
@.str.1849 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[0]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape[0] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[0])\00", align 1
@.str.1850 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[1])\00", align 1
@.str.1851 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[2])\00", align 1
@.str.1852 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_shape[3])\00", align 1
@.str.1853 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.strides: expected to be compact array\00", align 1
@.str.1854 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1855 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1856 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1857 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.ndim is expected to equal 4\00", align 1
@.str.1858 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.dtype is expected to be int8\00", align 1
@.str.1859 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[0])\00", align 1
@.str.1860 = private constant [332 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[1])\00", align 1
@.str.1861 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[2])\00", align 1
@.str.1862 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_shape[3])\00", align 1
@.str.1863 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides: expected to be compact array\00", align 1
@.str.1864 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1865 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1866 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel = internal unnamed_addr global ptr null, align 8
@.str.1867 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1868 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1869 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_2\00", align 1
@.str.1870 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26: num_args should be 3\00", align 1
@.str.1871 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26: Expect arg[0] to be pointer\00", align 1
@.str.1872 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26: Expect arg[1] to be pointer\00", align 1
@.str.1873 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26: Expect arg[2] to be pointer\00", align 1
@.str.1874 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.ndim is expected to equal 4\00", align 1
@.str.1875 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.dtype is expected to be int8\00", align 1
@.str.1876 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[0])\00", align 1
@.str.1877 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[1])\00", align 1
@.str.1878 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[2])\00", align 1
@.str.1879 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_shape[3])\00", align 1
@.str.1880 = private constant [414 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_strides[3]) and 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides: expected to be compact array\00", align 1
@.str.1881 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1882 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1883 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.ndim is expected to equal 4\00", align 1
@.str.1884 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.dtype is expected to be int8\00", align 1
@.str.1885 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[0]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape[0] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[0])\00", align 1
@.str.1886 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[1]) == 1024, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape[1] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[1])\00", align 1
@.str.1887 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[2])\00", align 1
@.str.1888 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_shape[3])\00", align 1
@.str.1889 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.strides: expected to be compact array\00", align 1
@.str.1890 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1891 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1892 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1893 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.ndim is expected to equal 4\00", align 1
@.str.1894 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.dtype is expected to be int8\00", align 1
@.str.1895 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[0])\00", align 1
@.str.1896 = private constant [332 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[1])\00", align 1
@.str.1897 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[2])\00", align 1
@.str.1898 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_shape[3])\00", align 1
@.str.1899 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides: expected to be compact array\00", align 1
@.str.1900 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1901 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1902 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel = internal unnamed_addr global ptr null, align 8
@.str.1903 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1904 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1905 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_2\00", align 1
@.str.1906 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27: num_args should be 3\00", align 1
@.str.1907 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27: Expect arg[0] to be pointer\00", align 1
@.str.1908 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27: Expect arg[1] to be pointer\00", align 1
@.str.1909 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27: Expect arg[2] to be pointer\00", align 1
@.str.1910 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.ndim is expected to equal 4\00", align 1
@.str.1911 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.dtype is expected to be int8\00", align 1
@.str.1912 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[0])\00", align 1
@.str.1913 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[1])\00", align 1
@.str.1914 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[2])\00", align 1
@.str.1915 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_shape[3])\00", align 1
@.str.1916 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides: expected to be compact array\00", align 1
@.str.1917 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1918 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1919 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.ndim is expected to equal 4\00", align 1
@.str.1920 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.dtype is expected to be int8\00", align 1
@.str.1921 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[0])\00", align 1
@.str.1922 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[1])\00", align 1
@.str.1923 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[2])\00", align 1
@.str.1924 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_shape[3])\00", align 1
@.str.1925 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.strides: expected to be compact array\00", align 1
@.str.1926 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1927 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1928 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1929 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.ndim is expected to equal 4\00", align 1
@.str.1930 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.dtype is expected to be int8\00", align 1
@.str.1931 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[0])\00", align 1
@.str.1932 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[1])\00", align 1
@.str.1933 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[2])\00", align 1
@.str.1934 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_shape[3])\00", align 1
@.str.1935 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides: expected to be compact array\00", align 1
@.str.1936 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1937 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1938 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel = internal unnamed_addr global ptr null, align 8
@.str.1939 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1940 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1941 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_2\00", align 1
@.str.1942 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28: num_args should be 3\00", align 1
@.str.1943 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28: Expect arg[0] to be pointer\00", align 1
@.str.1944 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28: Expect arg[1] to be pointer\00", align 1
@.str.1945 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28: Expect arg[2] to be pointer\00", align 1
@.str.1946 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.ndim is expected to equal 4\00", align 1
@.str.1947 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.dtype is expected to be int8\00", align 1
@.str.1948 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[0])\00", align 1
@.str.1949 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[1])\00", align 1
@.str.1950 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[2])\00", align 1
@.str.1951 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_shape[3])\00", align 1
@.str.1952 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides: expected to be compact array\00", align 1
@.str.1953 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1954 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1955 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.ndim is expected to equal 4\00", align 1
@.str.1956 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.dtype is expected to be int8\00", align 1
@.str.1957 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[0])\00", align 1
@.str.1958 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[1])\00", align 1
@.str.1959 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[2])\00", align 1
@.str.1960 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_shape[3])\00", align 1
@.str.1961 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides: expected to be compact array\00", align 1
@.str.1962 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1963 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1964 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1965 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.ndim is expected to equal 4\00", align 1
@.str.1966 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.dtype is expected to be int8\00", align 1
@.str.1967 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[0])\00", align 1
@.str.1968 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[1])\00", align 1
@.str.1969 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[2])\00", align 1
@.str.1970 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_shape[3])\00", align 1
@.str.1971 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides: expected to be compact array\00", align 1
@.str.1972 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1973 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1974 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel = internal unnamed_addr global ptr null, align 8
@.str.1975 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.1976 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.1977 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_2\00", align 1
@.str.1978 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29: num_args should be 3\00", align 1
@.str.1979 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29: Expect arg[0] to be pointer\00", align 1
@.str.1980 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29: Expect arg[1] to be pointer\00", align 1
@.str.1981 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29: Expect arg[2] to be pointer\00", align 1
@.str.1982 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.ndim is expected to equal 4\00", align 1
@.str.1983 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.dtype is expected to be int8\00", align 1
@.str.1984 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[0])\00", align 1
@.str.1985 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[1])\00", align 1
@.str.1986 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[2])\00", align 1
@.str.1987 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_shape[3])\00", align 1
@.str.1988 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides: expected to be compact array\00", align 1
@.str.1989 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1990 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1991 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.ndim is expected to equal 4\00", align 1
@.str.1992 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.dtype is expected to be int8\00", align 1
@.str.1993 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[0]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape[0] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[0])\00", align 1
@.str.1994 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[1])\00", align 1
@.str.1995 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[2])\00", align 1
@.str.1996 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_shape[3])\00", align 1
@.str.1997 = private constant [313 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.strides: expected to be compact array\00", align 1
@.str.1998 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1999 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2000 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2001 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.ndim is expected to equal 4\00", align 1
@.str.2002 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.dtype is expected to be int8\00", align 1
@.str.2003 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[0])\00", align 1
@.str.2004 = private constant [332 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[1])\00", align 1
@.str.2005 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[2])\00", align 1
@.str.2006 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_shape[3])\00", align 1
@.str.2007 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides: expected to be compact array\00", align 1
@.str.2008 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2009 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2010 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel = internal unnamed_addr global ptr null, align 8
@.str.2011 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2012 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2013 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_2\00", align 1
@.str.2014 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3: num_args should be 3\00", align 1
@.str.2015 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.2016 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.2017 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.2018 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.ndim is expected to equal 4\00", align 1
@.str.2019 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.2020 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.2021 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.2022 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.2023 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.2024 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.2025 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2026 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2027 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.ndim is expected to equal 4\00", align 1
@.str.2028 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.dtype is expected to be int8\00", align 1
@.str.2029 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.2030 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.2031 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.2032 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.2033 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_strides[1]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.2034 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2035 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2036 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2037 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 4\00", align 1
@.str.2038 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.2039 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.2040 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.2041 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.2042 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.2043 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.2044 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2045 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2046 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel = internal unnamed_addr global ptr null, align 8
@.str.2047 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2048 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2049 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_2\00", align 1
@.str.2050 = private constant [110 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30: num_args should be 3\00", align 1
@.str.2051 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30: Expect arg[0] to be pointer\00", align 1
@.str.2052 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30: Expect arg[1] to be pointer\00", align 1
@.str.2053 = private constant [181 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30: Expect arg[2] to be pointer\00", align 1
@.str.2054 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.ndim is expected to equal 4\00", align 1
@.str.2055 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.dtype is expected to be int8\00", align 1
@.str.2056 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[0])\00", align 1
@.str.2057 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[1])\00", align 1
@.str.2058 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[2])\00", align 1
@.str.2059 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_shape[3])\00", align 1
@.str.2060 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides: expected to be compact array\00", align 1
@.str.2061 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2062 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2063 = private constant [146 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.ndim is expected to equal 4\00", align 1
@.str.2064 = private constant [266 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.dtype is expected to be int8\00", align 1
@.str.2065 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[0])\00", align 1
@.str.2066 = private constant [320 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[1])\00", align 1
@.str.2067 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[2])\00", align 1
@.str.2068 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_shape[3])\00", align 1
@.str.2069 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.strides: expected to be compact array\00", align 1
@.str.2070 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2071 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2072 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2073 = private constant [154 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.ndim is expected to equal 4\00", align 1
@.str.2074 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.dtype is expected to be int8\00", align 1
@.str.2075 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[0])\00", align 1
@.str.2076 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[1])\00", align 1
@.str.2077 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[2])\00", align 1
@.str.2078 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_shape[3])\00", align 1
@.str.2079 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_strides[3]) and 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_strides[2]) and 49 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides: expected to be compact array\00", align 1
@.str.2080 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2081 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2082 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel = internal unnamed_addr global ptr null, align 8
@.str.2083 = private constant [67 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2084 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2085 = private constant [69 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_2\00", align 1
@.str.2086 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4: num_args should be 3\00", align 1
@.str.2087 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4: Expect arg[0] to be pointer\00", align 1
@.str.2088 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4: Expect arg[1] to be pointer\00", align 1
@.str.2089 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4: Expect arg[2] to be pointer\00", align 1
@.str.2090 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.ndim is expected to equal 4\00", align 1
@.str.2091 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.dtype is expected to be int8\00", align 1
@.str.2092 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[0])\00", align 1
@.str.2093 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[1])\00", align 1
@.str.2094 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[2])\00", align 1
@.str.2095 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_shape[3])\00", align 1
@.str.2096 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides: expected to be compact array\00", align 1
@.str.2097 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2098 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2099 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.ndim is expected to equal 4\00", align 1
@.str.2100 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.dtype is expected to be int8\00", align 1
@.str.2101 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[0])\00", align 1
@.str.2102 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[1])\00", align 1
@.str.2103 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[2])\00", align 1
@.str.2104 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_shape[3])\00", align 1
@.str.2105 = private constant [310 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.strides: expected to be compact array\00", align 1
@.str.2106 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2107 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2108 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2109 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.ndim is expected to equal 4\00", align 1
@.str.2110 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.dtype is expected to be int8\00", align 1
@.str.2111 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[0])\00", align 1
@.str.2112 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[1])\00", align 1
@.str.2113 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[2])\00", align 1
@.str.2114 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_shape[3])\00", align 1
@.str.2115 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides: expected to be compact array\00", align 1
@.str.2116 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2117 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2118 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel = internal unnamed_addr global ptr null, align 8
@.str.2119 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2120 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2121 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_2\00", align 1
@.str.2122 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5: num_args should be 3\00", align 1
@.str.2123 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5: Expect arg[0] to be pointer\00", align 1
@.str.2124 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5: Expect arg[1] to be pointer\00", align 1
@.str.2125 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5: Expect arg[2] to be pointer\00", align 1
@.str.2126 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.ndim is expected to equal 4\00", align 1
@.str.2127 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.dtype is expected to be int8\00", align 1
@.str.2128 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[0])\00", align 1
@.str.2129 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[1])\00", align 1
@.str.2130 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[2])\00", align 1
@.str.2131 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_shape[3])\00", align 1
@.str.2132 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides: expected to be compact array\00", align 1
@.str.2133 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2134 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2135 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.ndim is expected to equal 4\00", align 1
@.str.2136 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.dtype is expected to be int8\00", align 1
@.str.2137 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[0])\00", align 1
@.str.2138 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[1])\00", align 1
@.str.2139 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[2])\00", align 1
@.str.2140 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_shape[3])\00", align 1
@.str.2141 = private constant [508 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_strides[1]) and 576 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides: expected to be compact array\00", align 1
@.str.2142 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2143 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2144 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2145 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.ndim is expected to equal 4\00", align 1
@.str.2146 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.dtype is expected to be int8\00", align 1
@.str.2147 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[0])\00", align 1
@.str.2148 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[1])\00", align 1
@.str.2149 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[2])\00", align 1
@.str.2150 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_shape[3])\00", align 1
@.str.2151 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides: expected to be compact array\00", align 1
@.str.2152 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2153 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2154 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel = internal unnamed_addr global ptr null, align 8
@.str.2155 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2156 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2157 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_2\00", align 1
@.str.2158 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6: num_args should be 3\00", align 1
@.str.2159 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6: Expect arg[0] to be pointer\00", align 1
@.str.2160 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6: Expect arg[1] to be pointer\00", align 1
@.str.2161 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6: Expect arg[2] to be pointer\00", align 1
@.str.2162 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.ndim is expected to equal 4\00", align 1
@.str.2163 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.dtype is expected to be int8\00", align 1
@.str.2164 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[0])\00", align 1
@.str.2165 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[1])\00", align 1
@.str.2166 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[2])\00", align 1
@.str.2167 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_shape[3])\00", align 1
@.str.2168 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides: expected to be compact array\00", align 1
@.str.2169 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2170 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2171 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.ndim is expected to equal 4\00", align 1
@.str.2172 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.dtype is expected to be int8\00", align 1
@.str.2173 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[0])\00", align 1
@.str.2174 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[1])\00", align 1
@.str.2175 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[2])\00", align 1
@.str.2176 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_shape[3])\00", align 1
@.str.2177 = private constant [310 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.strides: expected to be compact array\00", align 1
@.str.2178 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2179 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2180 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2181 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.ndim is expected to equal 4\00", align 1
@.str.2182 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.dtype is expected to be int8\00", align 1
@.str.2183 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[0])\00", align 1
@.str.2184 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[1])\00", align 1
@.str.2185 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[2])\00", align 1
@.str.2186 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_shape[3])\00", align 1
@.str.2187 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides: expected to be compact array\00", align 1
@.str.2188 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2189 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2190 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel = internal unnamed_addr global ptr null, align 8
@.str.2191 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2192 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2193 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_2\00", align 1
@.str.2194 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7: num_args should be 3\00", align 1
@.str.2195 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7: Expect arg[0] to be pointer\00", align 1
@.str.2196 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7: Expect arg[1] to be pointer\00", align 1
@.str.2197 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7: Expect arg[2] to be pointer\00", align 1
@.str.2198 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.ndim is expected to equal 4\00", align 1
@.str.2199 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.dtype is expected to be int8\00", align 1
@.str.2200 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[0])\00", align 1
@.str.2201 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[1])\00", align 1
@.str.2202 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[2])\00", align 1
@.str.2203 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_shape[3])\00", align 1
@.str.2204 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides: expected to be compact array\00", align 1
@.str.2205 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2206 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2207 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.ndim is expected to equal 4\00", align 1
@.str.2208 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.dtype is expected to be int8\00", align 1
@.str.2209 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[0])\00", align 1
@.str.2210 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[1])\00", align 1
@.str.2211 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[2])\00", align 1
@.str.2212 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_shape[3])\00", align 1
@.str.2213 = private constant [310 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.strides: expected to be compact array\00", align 1
@.str.2214 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2215 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2216 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2217 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.ndim is expected to equal 4\00", align 1
@.str.2218 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.dtype is expected to be int8\00", align 1
@.str.2219 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[0])\00", align 1
@.str.2220 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[1])\00", align 1
@.str.2221 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[2])\00", align 1
@.str.2222 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_shape[3])\00", align 1
@.str.2223 = private constant [427 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides: expected to be compact array\00", align 1
@.str.2224 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2225 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2226 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel = internal unnamed_addr global ptr null, align 8
@.str.2227 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2228 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2229 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_2\00", align 1
@.str.2230 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8: num_args should be 3\00", align 1
@.str.2231 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8: Expect arg[0] to be pointer\00", align 1
@.str.2232 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8: Expect arg[1] to be pointer\00", align 1
@.str.2233 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8: Expect arg[2] to be pointer\00", align 1
@.str.2234 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.ndim is expected to equal 4\00", align 1
@.str.2235 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.dtype is expected to be int8\00", align 1
@.str.2236 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[0])\00", align 1
@.str.2237 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[1])\00", align 1
@.str.2238 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[2])\00", align 1
@.str.2239 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_shape[3])\00", align 1
@.str.2240 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides: expected to be compact array\00", align 1
@.str.2241 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2242 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2243 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.ndim is expected to equal 4\00", align 1
@.str.2244 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.dtype is expected to be int8\00", align 1
@.str.2245 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[0])\00", align 1
@.str.2246 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[1])\00", align 1
@.str.2247 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[2])\00", align 1
@.str.2248 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_shape[3])\00", align 1
@.str.2249 = private constant [509 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_strides[3]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_strides[2]) and 9 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_strides[1]) and 1152 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides: expected to be compact array\00", align 1
@.str.2250 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2251 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2252 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2253 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.ndim is expected to equal 4\00", align 1
@.str.2254 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.dtype is expected to be int8\00", align 1
@.str.2255 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[0])\00", align 1
@.str.2256 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[1])\00", align 1
@.str.2257 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[2])\00", align 1
@.str.2258 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_shape[3])\00", align 1
@.str.2259 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides: expected to be compact array\00", align 1
@.str.2260 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2261 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2262 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel = internal unnamed_addr global ptr null, align 8
@.str.2263 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2264 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2265 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_2\00", align 1
@.str.2266 = private constant [109 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9: num_args should be 3\00", align 1
@.str.2267 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9: Expect arg[0] to be pointer\00", align 1
@.str.2268 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9: Expect arg[1] to be pointer\00", align 1
@.str.2269 = private constant [180 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9: Expect arg[2] to be pointer\00", align 1
@.str.2270 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.ndim is expected to equal 4\00", align 1
@.str.2271 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.dtype is expected to be int8\00", align 1
@.str.2272 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[0])\00", align 1
@.str.2273 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[1])\00", align 1
@.str.2274 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[2])\00", align 1
@.str.2275 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_shape[3])\00", align 1
@.str.2276 = private constant [410 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p0_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides: expected to be compact array\00", align 1
@.str.2277 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2278 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2279 = private constant [145 x i8] c"Assert fail: 4 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.ndim is expected to equal 4\00", align 1
@.str.2280 = private constant [265 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.dtype is expected to be int8\00", align 1
@.str.2281 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[0])\00", align 1
@.str.2282 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[1])\00", align 1
@.str.2283 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[2])\00", align 1
@.str.2284 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_shape[3])\00", align 1
@.str.2285 = private constant [310 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_strides[1]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_p1_strides[0]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.strides: expected to be compact array\00", align 1
@.str.2286 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2287 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2288 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2289 = private constant [153 x i8] c"Assert fail: 4 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.ndim is expected to equal 4\00", align 1
@.str.2290 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.dtype is expected to be int8\00", align 1
@.str.2291 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[0])\00", align 1
@.str.2292 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[1])\00", align 1
@.str.2293 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[2])\00", align 1
@.str.2294 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_shape[3])\00", align 1
@.str.2295 = private constant [426 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_T_cast_strides[1]), tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides: expected to be compact array\00", align 1
@.str.2296 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2297 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2298 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel = internal unnamed_addr global ptr null, align 8
@.str.2299 = private constant [66 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_1 = internal unnamed_addr global ptr null, align 8
@.str.2300 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_1\00", align 1
@.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_2 = internal unnamed_addr global ptr null, align 8
@.str.2301 = private constant [68 x i8] c"tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_2\00", align 1
@.str.2302 = private constant [84 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_dense_add: num_args should be 4\00", align 1
@.str.2303 = private constant [139 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[0] to be pointer\00", align 1
@.str.2304 = private constant [139 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[1] to be pointer\00", align 1
@.str.2305 = private constant [139 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[2] to be pointer\00", align 1
@.str.2306 = private constant [151 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_dense_add: Expect arg[3] to be pointer\00", align 1
@.str.2307 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p0.ndim is expected to equal 2\00", align 1
@.str.2308 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p0.dtype is expected to be float32\00", align 1
@.str.2309 = private constant [236 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[0])\00", align 1
@.str.2310 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_dense_add.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_shape[1])\00", align 1
@.str.2311 = private constant [159 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p0_strides[1]), tvmgen_default_fused_nn_dense_add.p0.strides: expected to be compact array\00", align 1
@.str.2312 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2313 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2314 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p1.ndim is expected to equal 2\00", align 1
@.str.2315 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p1.dtype is expected to be float32\00", align 1
@.str.2316 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[0]) == 1000, Argument tvmgen_default_fused_nn_dense_add.p1.shape[0] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[0])\00", align 1
@.str.2317 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_dense_add.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_shape[1])\00", align 1
@.str.2318 = private constant [236 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p1_strides[0]), tvmgen_default_fused_nn_dense_add.p1.strides: expected to be compact array\00", align 1
@.str.2319 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2320 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p1.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2321 = private constant [193 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2322 = private constant [120 x i8] c"Assert fail: 2 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.p2.ndim is expected to equal 2\00", align 1
@.str.2323 = private constant [244 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.p2.dtype is expected to be float32\00", align 1
@.str.2324 = private constant [236 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[0])\00", align 1
@.str.2325 = private constant [242 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[1]) == 1000, Argument tvmgen_default_fused_nn_dense_add.p2.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_shape[1])\00", align 1
@.str.2326 = private constant [159 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_p2_strides[1]), tvmgen_default_fused_nn_dense_add.p2.strides: expected to be compact array\00", align 1
@.str.2327 = private constant [207 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2328 = private constant [187 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.p2.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2329 = private constant [193 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2330 = private constant [126 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_dense_add.T_add.ndim is expected to equal 2\00", align 1
@.str.2331 = private constant [256 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_dense_add.T_add.dtype is expected to be float32\00", align 1
@.str.2332 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_dense_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[0])\00", align 1
@.str.2333 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[1]) == 1000, Argument tvmgen_default_fused_nn_dense_add.T_add.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_shape[1])\00", align 1
@.str.2334 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_dense_add_T_add_strides[1]), tvmgen_default_fused_nn_dense_add.T_add.strides: expected to be compact array\00", align 1
@.str.2335 = private constant [216 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_dense_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.2336 = private constant [196 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_dense_add.T_add.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.2337 = private constant [202 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_dense_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_dense_add_kernel = internal unnamed_addr global ptr null, align 8
@.str.2338 = private constant [41 x i8] c"tvmgen_default_fused_nn_dense_add_kernel\00", align 1
@.str.2339 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_max_pool2d: num_args should be 2\00", align 1
@.str.2340 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.2341 = private constant [164 x i8] c"Assert fail: pool_max_code == 3 or pool_max_code == 13 or pool_max_code == 7 or pool_max_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.2342 = private constant [121 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.p0.ndim is expected to equal 4\00", align 1
@.str.2343 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.2344 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0])\00", align 1
@.str.2345 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1])\00", align 1
@.str.2346 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2])\00", align 1
@.str.2347 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3])\00", align 1
@.str.2348 = private constant [317 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[1]), tvmgen_default_fused_nn_max_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.2349 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2350 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_max_pool2d.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2351 = private constant [133 x i8] c"Assert fail: 4 == T.tvm_struct_get(pool_max, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.pool_max.ndim is expected to equal 4\00", align 1
@.str.2352 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(pool_max, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(pool_max, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.pool_max.dtype is expected to be float32\00", align 1
@.str.2353 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0])\00", align 1
@.str.2354 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1]) == 64, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1])\00", align 1
@.str.2355 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2])\00", align 1
@.str.2356 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3])\00", align 1
@.str.2357 = private constant [339 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[1]), tvmgen_default_fused_nn_max_pool2d.pool_max.strides: expected to be compact array\00", align 1
@.str.2358 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22)\00", align 1
@.str.2359 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(pool_max, 0, 10, \22int32\22)\00", align 1
@.str.2360 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel = internal unnamed_addr global ptr null, align 8
@.str.2361 = private constant [42 x i8] c"tvmgen_default_fused_nn_max_pool2d_kernel\00", align 1
@.str.2362 = private constant [87 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_reshape_squeeze: num_args should be 2\00", align 1
@.str.2363 = private constant [142 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_reshape_squeeze: Expect arg[0] to be pointer\00", align 1
@.str.2364 = private constant [170 x i8] c"Assert fail: T_squeeze_code == 3 or T_squeeze_code == 13 or T_squeeze_code == 7 or T_squeeze_code == 4, tvmgen_default_fused_reshape_squeeze: Expect arg[1] to be pointer\00", align 1
@.str.2365 = private constant [123 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_reshape_squeeze.p0.ndim is expected to equal 4\00", align 1
@.str.2366 = private constant [247 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_reshape_squeeze.p0.dtype is expected to be float32\00", align 1
@.str.2367 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[0]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[0])\00", align 1
@.str.2368 = private constant [251 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[1]) == 2048, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[1])\00", align 1
@.str.2369 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[2]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[2])\00", align 1
@.str.2370 = private constant [245 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[3]) == 1, Argument tvmgen_default_fused_reshape_squeeze.p0.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_shape[3])\00", align 1
@.str.2371 = private constant [165 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_p0_strides[1]), tvmgen_default_fused_reshape_squeeze.p0.strides: expected to be compact array\00", align 1
@.str.2372 = private constant [210 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_reshape_squeeze.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2373 = private constant [190 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_reshape_squeeze.p0.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2374 = private constant [137 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_squeeze, 0, 4, \22int32\22), tvmgen_default_fused_reshape_squeeze.T_squeeze.ndim is expected to equal 2\00", align 1
@.str.2375 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_squeeze, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_squeeze, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_reshape_squeeze.T_squeeze.dtype is expected to be float32\00", align 1
@.str.2376 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[0]) == 1, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[0])\00", align 1
@.str.2377 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[1]) == 2048, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_shape[1])\00", align 1
@.str.2378 = private constant [179 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_reshape_squeeze_T_squeeze_strides[1]), tvmgen_default_fused_reshape_squeeze.T_squeeze.strides: expected to be compact array\00", align 1
@.str.2379 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22), Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22)\00", align 1
@.str.2380 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22) == 2, Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.device_type has an unsatisfied constraint: 2 == T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22)\00", align 1
@.str.2381 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22), Argument tvmgen_default_fused_reshape_squeeze.T_squeeze.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22)\00", align 1
@.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel = internal unnamed_addr global ptr null, align 8
@.str.2382 = private constant [44 x i8] c"tvmgen_default_fused_reshape_squeeze_kernel\00", align 1
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !11, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !12, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !13, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !14, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !15, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = alloca ptr, align 8, !dbg !17
  %stack_value87 = alloca [6 x %0], align 8, !dbg !17
  %stack_tcode88 = alloca [6 x i32], align 4, !dbg !17
  %1 = icmp eq i32 %num_args, 3, !dbg !17
  br i1 %1, label %assert_end, label %assert_fail, !dbg !17, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %208, %handle_init ], [ %211, %handle_init_end ], [ %214, %call_end79 ]
  ret i32 %common.ret.op, !dbg !17

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %2(ptr nonnull @.str), !dbg !17
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !17, !tbaa !22
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !17
  %p1.code = load i32, ptr %3, align 4, !dbg !17, !tbaa !33
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !17
  %T_cast.code = load i32, ptr %4, align 4, !dbg !17, !tbaa !35
  %p0 = load ptr, ptr %args, align 8, !dbg !17
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !17
  %p1 = load ptr, ptr %5, align 8, !dbg !17
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !17
  %T_cast = load ptr, ptr %6, align 8, !dbg !17
  %p081 = load ptr, ptr %p0, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p081, i64 64) ], !dbg !17
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape = load ptr, ptr %7, align 8, !dbg !17
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides = load ptr, ptr %8, align 8, !dbg !17
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !17
  %dev_id = load i32, ptr %9, align 4, !dbg !17
  %p182 = load ptr, ptr %p1, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p182, i64 64) ], !dbg !17
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape = load ptr, ptr %10, align 8, !dbg !17
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides = load ptr, ptr %11, align 8, !dbg !17
  %T_cast80 = load ptr, ptr %T_cast, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast80, i64 64) ], !dbg !17
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape = load ptr, ptr %12, align 8, !dbg !17
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides = load ptr, ptr %13, align 8, !dbg !17
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !17

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %14(ptr nonnull @.str.1), !dbg !17
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !17

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %15(ptr nonnull @.str.2), !dbg !17
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !17

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %16(ptr nonnull @.str.3), !dbg !17
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !17
  %18 = load i32, ptr %17, align 4, !dbg !17
  %19 = icmp eq i32 %18, 4, !dbg !17
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !17, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %20(ptr nonnull @.str.4), !dbg !17
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !17
  %22 = load i16, ptr %21, align 2, !dbg !17
  %23 = icmp eq i16 %22, 1, !dbg !17
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !17
  %25 = load i8, ptr %24, align 1, !dbg !17
  %26 = icmp eq i8 %25, 8, !dbg !17
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !17
  %28 = load i8, ptr %27, align 1, !dbg !17
  %29 = icmp eq i8 %28, 0, !dbg !17
  %30 = and i1 %26, %29, !dbg !17
  %31 = and i1 %23, %30, !dbg !17
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !17, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %32(ptr nonnull @.str.5), !dbg !17
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, align 8, !dbg !17, !tbaa !38
  %34 = and i64 %33, 4294967295, !dbg !17
  %35 = icmp eq i64 %34, 1, !dbg !17
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !17, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %36(ptr nonnull @.str.6), !dbg !17
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 1, !dbg !17
  %38 = load i64, ptr %37, align 8, !dbg !17, !tbaa !48
  %39 = and i64 %38, 4294967295, !dbg !17
  %40 = icmp eq i64 %39, 256, !dbg !17
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !17, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %41(ptr nonnull @.str.7), !dbg !17
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 2, !dbg !17
  %43 = load i64, ptr %42, align 8, !dbg !17, !tbaa !50
  %44 = and i64 %43, 4294967295, !dbg !17
  %45 = icmp eq i64 %44, 56, !dbg !17
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !17, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %46(ptr nonnull @.str.8), !dbg !17
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 3, !dbg !17
  %48 = load i64, ptr %47, align 8, !dbg !17, !tbaa !53
  %49 = and i64 %48, 4294967295, !dbg !17
  %50 = icmp eq i64 %49, 56, !dbg !17
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !17, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %51(ptr nonnull @.str.9), !dbg !17
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, null, !dbg !17
  br i1 %.not, label %if_end, label %if_then, !dbg !17, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 1, !dbg !17
  %53 = load i64, ptr %52, align 8, !dbg !17, !tbaa !56
  %54 = and i64 %53, 4294967295, !dbg !17
  %55 = icmp eq i64 %54, 3136, !dbg !17
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 2, !dbg !17
  %57 = load i64, ptr %56, align 8, !dbg !17, !tbaa !66
  %58 = and i64 %57, 4294967295, !dbg !17
  %59 = icmp eq i64 %58, 56, !dbg !17
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 3, !dbg !17
  %61 = load i64, ptr %60, align 8, !dbg !17, !tbaa !69
  %62 = and i64 %61, 4294967295, !dbg !17
  %63 = icmp eq i64 %62, 1, !dbg !17
  %64 = and i1 %59, %63, !dbg !17
  %65 = and i1 %55, %64, !dbg !17
  br i1 %65, label %if_end, label %assert_fail24, !dbg !17, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !17
  %67 = load i64, ptr %66, align 8, !dbg !17
  %68 = icmp eq i64 %67, 0, !dbg !17
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !17, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %69(ptr nonnull @.str.10), !dbg !17
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %70(ptr nonnull @.str.11), !dbg !17
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !17
  %72 = load i32, ptr %71, align 4, !dbg !17
  %73 = icmp eq i32 %72, 2, !dbg !17
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !17, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %74(ptr nonnull @.str.12), !dbg !17
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !17
  %76 = load i32, ptr %75, align 4, !dbg !17
  %77 = icmp eq i32 %76, 4, !dbg !17
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !17, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %78(ptr nonnull @.str.13), !dbg !17
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !17
  %80 = load i16, ptr %79, align 2, !dbg !17
  %81 = icmp eq i16 %80, 1, !dbg !17
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !17
  %83 = load i8, ptr %82, align 1, !dbg !17
  %84 = icmp eq i8 %83, 8, !dbg !17
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !17
  %86 = load i8, ptr %85, align 1, !dbg !17
  %87 = icmp eq i8 %86, 0, !dbg !17
  %88 = and i1 %84, %87, !dbg !17
  %89 = and i1 %81, %88, !dbg !17
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !17, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %90(ptr nonnull @.str.14), !dbg !17
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, align 8, !dbg !17, !tbaa !71
  %92 = and i64 %91, 4294967295, !dbg !17
  %93 = icmp eq i64 %92, 1, !dbg !17
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !17, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %94(ptr nonnull @.str.15), !dbg !17
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 1, !dbg !17
  %96 = load i64, ptr %95, align 8, !dbg !17, !tbaa !81
  %97 = and i64 %96, 4294967295, !dbg !17
  %98 = icmp eq i64 %97, 256, !dbg !17
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !17, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %99(ptr nonnull @.str.16), !dbg !17
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 2, !dbg !17
  %101 = load i64, ptr %100, align 8, !dbg !17, !tbaa !83
  %102 = and i64 %101, 4294967295, !dbg !17
  %103 = icmp eq i64 %102, 56, !dbg !17
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !17, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %104(ptr nonnull @.str.17), !dbg !17
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 3, !dbg !17
  %106 = load i64, ptr %105, align 8, !dbg !17, !tbaa !86
  %107 = and i64 %106, 4294967295, !dbg !17
  %108 = icmp eq i64 %107, 56, !dbg !17
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !17, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %109(ptr nonnull @.str.18), !dbg !17
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, null, !dbg !17
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !17, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 1, !dbg !17
  %111 = load i64, ptr %110, align 8, !dbg !17, !tbaa !88
  %112 = and i64 %111, 4294967295, !dbg !17
  %113 = icmp eq i64 %112, 3136, !dbg !17
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 2, !dbg !17
  %115 = load i64, ptr %114, align 8, !dbg !17, !tbaa !98
  %116 = and i64 %115, 4294967295, !dbg !17
  %117 = icmp eq i64 %116, 56, !dbg !17
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 3, !dbg !17
  %119 = load i64, ptr %118, align 8, !dbg !17, !tbaa !101
  %120 = and i64 %119, 4294967295, !dbg !17
  %121 = icmp eq i64 %120, 1, !dbg !17
  %122 = and i1 %117, %121, !dbg !17
  %123 = and i1 %113, %122, !dbg !17
  br i1 %123, label %if_end45, label %assert_fail46, !dbg !17, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !17
  %125 = load i64, ptr %124, align 8, !dbg !17
  %126 = icmp eq i64 %125, 0, !dbg !17
  br i1 %126, label %assert_end49, label %assert_fail48, !dbg !17, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %127(ptr nonnull @.str.19), !dbg !17
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %128(ptr nonnull @.str.20), !dbg !17
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %129 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !17
  %130 = load i32, ptr %129, align 4, !dbg !17
  %131 = icmp eq i32 %130, 2, !dbg !17
  br i1 %131, label %assert_end51, label %assert_fail50, !dbg !17, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %132(ptr nonnull @.str.21), !dbg !17
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !17
  %134 = load i32, ptr %133, align 4, !dbg !17
  %135 = icmp eq i32 %dev_id, %134, !dbg !17
  br i1 %135, label %assert_end53, label %assert_fail52, !dbg !17, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %136(ptr nonnull @.str.22), !dbg !17
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %137 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !17
  %138 = load i32, ptr %137, align 4, !dbg !17
  %139 = icmp eq i32 %138, 4, !dbg !17
  br i1 %139, label %assert_end57, label %assert_fail54, !dbg !17, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %140(ptr nonnull @.str.23), !dbg !17
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !17
  %142 = load i16, ptr %141, align 2, !dbg !17
  %143 = icmp eq i16 %142, 1, !dbg !17
  %144 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !17
  %145 = load i8, ptr %144, align 1, !dbg !17
  %146 = icmp eq i8 %145, 8, !dbg !17
  %147 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !17
  %148 = load i8, ptr %147, align 1, !dbg !17
  %149 = icmp eq i8 %148, 0, !dbg !17
  %150 = and i1 %146, %149, !dbg !17
  %151 = and i1 %143, %150, !dbg !17
  br i1 %151, label %assert_end59, label %assert_fail58, !dbg !17, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %152(ptr nonnull @.str.24), !dbg !17
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %153 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, align 8, !dbg !17, !tbaa !103
  %154 = and i64 %153, 4294967295, !dbg !17
  %155 = icmp eq i64 %154, 1, !dbg !17
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !17, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %156(ptr nonnull @.str.25), !dbg !17
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 1, !dbg !17
  %158 = load i64, ptr %157, align 8, !dbg !17, !tbaa !113
  %159 = and i64 %158, 4294967295, !dbg !17
  %160 = icmp eq i64 %159, 256, !dbg !17
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !17, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %161(ptr nonnull @.str.26), !dbg !17
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 2, !dbg !17
  %163 = load i64, ptr %162, align 8, !dbg !17, !tbaa !115
  %164 = and i64 %163, 4294967295, !dbg !17
  %165 = icmp eq i64 %164, 56, !dbg !17
  br i1 %165, label %assert_end65, label %assert_fail64, !dbg !17, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %166(ptr nonnull @.str.27), !dbg !17
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 3, !dbg !17
  %168 = load i64, ptr %167, align 8, !dbg !17, !tbaa !118
  %169 = and i64 %168, 4294967295, !dbg !17
  %170 = icmp eq i64 %169, 56, !dbg !17
  br i1 %170, label %assert_end67, label %assert_fail66, !dbg !17, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %171(ptr nonnull @.str.28), !dbg !17
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, null, !dbg !17
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !17, !prof !55

if_then68:                                        ; preds = %assert_end67
  %172 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 1, !dbg !17
  %173 = load i64, ptr %172, align 8, !dbg !17, !tbaa !120
  %174 = and i64 %173, 4294967295, !dbg !17
  %175 = icmp eq i64 %174, 3136, !dbg !17
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 2, !dbg !17
  %177 = load i64, ptr %176, align 8, !dbg !17, !tbaa !130
  %178 = and i64 %177, 4294967295, !dbg !17
  %179 = icmp eq i64 %178, 56, !dbg !17
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 3, !dbg !17
  %181 = load i64, ptr %180, align 8, !dbg !17, !tbaa !133
  %182 = and i64 %181, 4294967295, !dbg !17
  %183 = icmp eq i64 %182, 1, !dbg !17
  %184 = and i1 %179, %183, !dbg !17
  %185 = and i1 %175, %184, !dbg !17
  br i1 %185, label %if_end69, label %assert_fail70, !dbg !17, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %186 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !17
  %187 = load i64, ptr %186, align 8, !dbg !17
  %188 = icmp eq i64 %187, 0, !dbg !17
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !17, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %189(ptr nonnull @.str.29), !dbg !17
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %190(ptr nonnull @.str.30), !dbg !17
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !17
  %192 = load i32, ptr %191, align 4, !dbg !17
  %193 = icmp eq i32 %192, 2, !dbg !17
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !17, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %194(ptr nonnull @.str.31), !dbg !17
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !17
  %196 = load i32, ptr %195, align 4, !dbg !17
  %197 = icmp eq i32 %dev_id, %196, !dbg !17
  br i1 %197, label %assert_end77, label %assert_fail76, !dbg !17, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %198(ptr nonnull @.str.32), !dbg !17
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !17
  store i32 0, ptr %stack_tcode88, align 4, !dbg !17, !tbaa !135
  %199 = sext i32 %dev_id to i64, !dbg !17
  %200 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !17
  store i64 %199, ptr %200, align 8, !dbg !17
  %201 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !17
  store i32 0, ptr %201, align 4, !dbg !17, !tbaa !146
  %202 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !17
  %203 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !17
  %204 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !17, !tbaa !19
  %205 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !17
  %.not91 = icmp eq ptr %205, null, !dbg !17
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !17, !prof !55

handle_init:                                      ; preds = %assert_end77
  %206 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !17, !tbaa !19
  %207 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !17, !tbaa !19
  %208 = call i32 %207(ptr %206, ptr nonnull @.str.33, ptr nonnull %0), !dbg !17
  %209 = icmp eq i32 %208, 0, !dbg !17
  br i1 %209, label %call_end, label %common.ret, !dbg !17, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %210 = phi ptr [ %205, %assert_end77 ], [ %213, %call_end ], !dbg !17
  %211 = call i32 %204(ptr %210, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %202, ptr nonnull %203), !dbg !17
  %212 = icmp eq i32 %211, 0, !dbg !17
  br i1 %212, label %call_end79, label %common.ret, !dbg !17, !prof !18

call_end:                                         ; preds = %handle_init
  %213 = load ptr, ptr %0, align 8, !dbg !17
  store ptr %213, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !17
  br label %handle_init_end, !dbg !17

call_end79:                                       ; preds = %handle_init_end
  %214 = call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_compute_(ptr nonnull %stack_value87, ptr %T_cast80, ptr nonnull %stack_tcode88, ptr %p081, ptr %p182), !dbg !17
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !148 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !150, metadata !DIExpression()), !dbg !156
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !151, metadata !DIExpression()), !dbg !156
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !152, metadata !DIExpression()), !dbg !156
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !153, metadata !DIExpression()), !dbg !156
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !154, metadata !DIExpression()), !dbg !156
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !155, metadata !DIExpression()), !dbg !156
  %0 = alloca ptr, align 8, !dbg !156
  %stack_value87 = alloca [6 x %0], align 8, !dbg !156
  %stack_tcode88 = alloca [6 x i32], align 4, !dbg !156
  %1 = icmp eq i32 %num_args, 3, !dbg !156
  br i1 %1, label %assert_end, label %assert_fail, !dbg !156, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %208, %handle_init ], [ %211, %handle_init_end ], [ %214, %call_end79 ]
  ret i32 %common.ret.op, !dbg !156

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %2(ptr nonnull @.str.35), !dbg !156
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !156, !tbaa !157
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !156
  %p1.code = load i32, ptr %3, align 4, !dbg !156, !tbaa !168
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !156
  %T_cast.code = load i32, ptr %4, align 4, !dbg !156, !tbaa !170
  %p0 = load ptr, ptr %args, align 8, !dbg !156
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !156
  %p1 = load ptr, ptr %5, align 8, !dbg !156
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !156
  %T_cast = load ptr, ptr %6, align 8, !dbg !156
  %p081 = load ptr, ptr %p0, align 8, !dbg !156
  call void @llvm.assume(i1 true) [ "align"(ptr %p081, i64 64) ], !dbg !156
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape = load ptr, ptr %7, align 8, !dbg !156
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides = load ptr, ptr %8, align 8, !dbg !156
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !156
  %dev_id = load i32, ptr %9, align 4, !dbg !156
  %p182 = load ptr, ptr %p1, align 8, !dbg !156
  call void @llvm.assume(i1 true) [ "align"(ptr %p182, i64 64) ], !dbg !156
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape = load ptr, ptr %10, align 8, !dbg !156
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides = load ptr, ptr %11, align 8, !dbg !156
  %T_cast80 = load ptr, ptr %T_cast, align 8, !dbg !156
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast80, i64 64) ], !dbg !156
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape = load ptr, ptr %12, align 8, !dbg !156
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !156
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides = load ptr, ptr %13, align 8, !dbg !156
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !156

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %14(ptr nonnull @.str.36), !dbg !156
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !156

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %15(ptr nonnull @.str.37), !dbg !156
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !156

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %16(ptr nonnull @.str.38), !dbg !156
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !156
  %18 = load i32, ptr %17, align 4, !dbg !156
  %19 = icmp eq i32 %18, 4, !dbg !156
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !156, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %20(ptr nonnull @.str.39), !dbg !156
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !156
  %22 = load i16, ptr %21, align 2, !dbg !156
  %23 = icmp eq i16 %22, 1, !dbg !156
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !156
  %25 = load i8, ptr %24, align 1, !dbg !156
  %26 = icmp eq i8 %25, 8, !dbg !156
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !156
  %28 = load i8, ptr %27, align 1, !dbg !156
  %29 = icmp eq i8 %28, 0, !dbg !156
  %30 = and i1 %26, %29, !dbg !156
  %31 = and i1 %23, %30, !dbg !156
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !156, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %32(ptr nonnull @.str.40), !dbg !156
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, align 8, !dbg !156, !tbaa !173
  %34 = and i64 %33, 4294967295, !dbg !156
  %35 = icmp eq i64 %34, 1, !dbg !156
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !156, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %36(ptr nonnull @.str.41), !dbg !156
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 1, !dbg !156
  %38 = load i64, ptr %37, align 8, !dbg !156, !tbaa !183
  %39 = and i64 %38, 4294967295, !dbg !156
  %40 = icmp eq i64 %39, 512, !dbg !156
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !156, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %41(ptr nonnull @.str.42), !dbg !156
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 2, !dbg !156
  %43 = load i64, ptr %42, align 8, !dbg !156, !tbaa !185
  %44 = and i64 %43, 4294967295, !dbg !156
  %45 = icmp eq i64 %44, 28, !dbg !156
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !156, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %46(ptr nonnull @.str.43), !dbg !156
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 3, !dbg !156
  %48 = load i64, ptr %47, align 8, !dbg !156, !tbaa !188
  %49 = and i64 %48, 4294967295, !dbg !156
  %50 = icmp eq i64 %49, 28, !dbg !156
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !156, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %51(ptr nonnull @.str.44), !dbg !156
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, null, !dbg !156
  br i1 %.not, label %if_end, label %if_then, !dbg !156, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 1, !dbg !156
  %53 = load i64, ptr %52, align 8, !dbg !156, !tbaa !190
  %54 = and i64 %53, 4294967295, !dbg !156
  %55 = icmp eq i64 %54, 784, !dbg !156
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 2, !dbg !156
  %57 = load i64, ptr %56, align 8, !dbg !156, !tbaa !200
  %58 = and i64 %57, 4294967295, !dbg !156
  %59 = icmp eq i64 %58, 28, !dbg !156
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 3, !dbg !156
  %61 = load i64, ptr %60, align 8, !dbg !156, !tbaa !203
  %62 = and i64 %61, 4294967295, !dbg !156
  %63 = icmp eq i64 %62, 1, !dbg !156
  %64 = and i1 %59, %63, !dbg !156
  %65 = and i1 %55, %64, !dbg !156
  br i1 %65, label %if_end, label %assert_fail24, !dbg !156, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !156
  %67 = load i64, ptr %66, align 8, !dbg !156
  %68 = icmp eq i64 %67, 0, !dbg !156
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !156, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %69(ptr nonnull @.str.45), !dbg !156
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %70(ptr nonnull @.str.46), !dbg !156
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !156
  %72 = load i32, ptr %71, align 4, !dbg !156
  %73 = icmp eq i32 %72, 2, !dbg !156
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !156, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %74(ptr nonnull @.str.47), !dbg !156
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !156
  %76 = load i32, ptr %75, align 4, !dbg !156
  %77 = icmp eq i32 %76, 4, !dbg !156
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !156, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %78(ptr nonnull @.str.48), !dbg !156
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !156
  %80 = load i16, ptr %79, align 2, !dbg !156
  %81 = icmp eq i16 %80, 1, !dbg !156
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !156
  %83 = load i8, ptr %82, align 1, !dbg !156
  %84 = icmp eq i8 %83, 8, !dbg !156
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !156
  %86 = load i8, ptr %85, align 1, !dbg !156
  %87 = icmp eq i8 %86, 0, !dbg !156
  %88 = and i1 %84, %87, !dbg !156
  %89 = and i1 %81, %88, !dbg !156
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !156, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %90(ptr nonnull @.str.49), !dbg !156
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, align 8, !dbg !156, !tbaa !205
  %92 = and i64 %91, 4294967295, !dbg !156
  %93 = icmp eq i64 %92, 1, !dbg !156
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !156, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %94(ptr nonnull @.str.50), !dbg !156
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 1, !dbg !156
  %96 = load i64, ptr %95, align 8, !dbg !156, !tbaa !215
  %97 = and i64 %96, 4294967295, !dbg !156
  %98 = icmp eq i64 %97, 512, !dbg !156
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !156, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %99(ptr nonnull @.str.51), !dbg !156
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 2, !dbg !156
  %101 = load i64, ptr %100, align 8, !dbg !156, !tbaa !217
  %102 = and i64 %101, 4294967295, !dbg !156
  %103 = icmp eq i64 %102, 28, !dbg !156
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !156, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %104(ptr nonnull @.str.52), !dbg !156
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 3, !dbg !156
  %106 = load i64, ptr %105, align 8, !dbg !156, !tbaa !220
  %107 = and i64 %106, 4294967295, !dbg !156
  %108 = icmp eq i64 %107, 28, !dbg !156
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !156, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %109(ptr nonnull @.str.53), !dbg !156
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, null, !dbg !156
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !156, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 1, !dbg !156
  %111 = load i64, ptr %110, align 8, !dbg !156, !tbaa !222
  %112 = and i64 %111, 4294967295, !dbg !156
  %113 = icmp eq i64 %112, 784, !dbg !156
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 2, !dbg !156
  %115 = load i64, ptr %114, align 8, !dbg !156, !tbaa !232
  %116 = and i64 %115, 4294967295, !dbg !156
  %117 = icmp eq i64 %116, 28, !dbg !156
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 3, !dbg !156
  %119 = load i64, ptr %118, align 8, !dbg !156, !tbaa !235
  %120 = and i64 %119, 4294967295, !dbg !156
  %121 = icmp eq i64 %120, 1, !dbg !156
  %122 = and i1 %117, %121, !dbg !156
  %123 = and i1 %113, %122, !dbg !156
  br i1 %123, label %if_end45, label %assert_fail46, !dbg !156, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !156
  %125 = load i64, ptr %124, align 8, !dbg !156
  %126 = icmp eq i64 %125, 0, !dbg !156
  br i1 %126, label %assert_end49, label %assert_fail48, !dbg !156, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %127(ptr nonnull @.str.54), !dbg !156
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %128(ptr nonnull @.str.55), !dbg !156
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %129 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !156
  %130 = load i32, ptr %129, align 4, !dbg !156
  %131 = icmp eq i32 %130, 2, !dbg !156
  br i1 %131, label %assert_end51, label %assert_fail50, !dbg !156, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %132(ptr nonnull @.str.56), !dbg !156
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !156
  %134 = load i32, ptr %133, align 4, !dbg !156
  %135 = icmp eq i32 %dev_id, %134, !dbg !156
  br i1 %135, label %assert_end53, label %assert_fail52, !dbg !156, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %136(ptr nonnull @.str.57), !dbg !156
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %137 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !156
  %138 = load i32, ptr %137, align 4, !dbg !156
  %139 = icmp eq i32 %138, 4, !dbg !156
  br i1 %139, label %assert_end57, label %assert_fail54, !dbg !156, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %140(ptr nonnull @.str.58), !dbg !156
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !156
  %142 = load i16, ptr %141, align 2, !dbg !156
  %143 = icmp eq i16 %142, 1, !dbg !156
  %144 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !156
  %145 = load i8, ptr %144, align 1, !dbg !156
  %146 = icmp eq i8 %145, 8, !dbg !156
  %147 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !156
  %148 = load i8, ptr %147, align 1, !dbg !156
  %149 = icmp eq i8 %148, 0, !dbg !156
  %150 = and i1 %146, %149, !dbg !156
  %151 = and i1 %143, %150, !dbg !156
  br i1 %151, label %assert_end59, label %assert_fail58, !dbg !156, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %152(ptr nonnull @.str.59), !dbg !156
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %153 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, align 8, !dbg !156, !tbaa !237
  %154 = and i64 %153, 4294967295, !dbg !156
  %155 = icmp eq i64 %154, 1, !dbg !156
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !156, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %156(ptr nonnull @.str.60), !dbg !156
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 1, !dbg !156
  %158 = load i64, ptr %157, align 8, !dbg !156, !tbaa !247
  %159 = and i64 %158, 4294967295, !dbg !156
  %160 = icmp eq i64 %159, 512, !dbg !156
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !156, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %161(ptr nonnull @.str.61), !dbg !156
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 2, !dbg !156
  %163 = load i64, ptr %162, align 8, !dbg !156, !tbaa !249
  %164 = and i64 %163, 4294967295, !dbg !156
  %165 = icmp eq i64 %164, 28, !dbg !156
  br i1 %165, label %assert_end65, label %assert_fail64, !dbg !156, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %166(ptr nonnull @.str.62), !dbg !156
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 3, !dbg !156
  %168 = load i64, ptr %167, align 8, !dbg !156, !tbaa !252
  %169 = and i64 %168, 4294967295, !dbg !156
  %170 = icmp eq i64 %169, 28, !dbg !156
  br i1 %170, label %assert_end67, label %assert_fail66, !dbg !156, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %171(ptr nonnull @.str.63), !dbg !156
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, null, !dbg !156
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !156, !prof !55

if_then68:                                        ; preds = %assert_end67
  %172 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 1, !dbg !156
  %173 = load i64, ptr %172, align 8, !dbg !156, !tbaa !254
  %174 = and i64 %173, 4294967295, !dbg !156
  %175 = icmp eq i64 %174, 784, !dbg !156
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 2, !dbg !156
  %177 = load i64, ptr %176, align 8, !dbg !156, !tbaa !264
  %178 = and i64 %177, 4294967295, !dbg !156
  %179 = icmp eq i64 %178, 28, !dbg !156
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 3, !dbg !156
  %181 = load i64, ptr %180, align 8, !dbg !156, !tbaa !267
  %182 = and i64 %181, 4294967295, !dbg !156
  %183 = icmp eq i64 %182, 1, !dbg !156
  %184 = and i1 %179, %183, !dbg !156
  %185 = and i1 %175, %184, !dbg !156
  br i1 %185, label %if_end69, label %assert_fail70, !dbg !156, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %186 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !156
  %187 = load i64, ptr %186, align 8, !dbg !156
  %188 = icmp eq i64 %187, 0, !dbg !156
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !156, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %189(ptr nonnull @.str.64), !dbg !156
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %190(ptr nonnull @.str.65), !dbg !156
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !156
  %192 = load i32, ptr %191, align 4, !dbg !156
  %193 = icmp eq i32 %192, 2, !dbg !156
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !156, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %194(ptr nonnull @.str.66), !dbg !156
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !156
  %196 = load i32, ptr %195, align 4, !dbg !156
  %197 = icmp eq i32 %dev_id, %196, !dbg !156
  br i1 %197, label %assert_end77, label %assert_fail76, !dbg !156, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !156, !tbaa !19
  tail call void %198(ptr nonnull @.str.67), !dbg !156
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !156
  store i32 0, ptr %stack_tcode88, align 4, !dbg !156, !tbaa !269
  %199 = sext i32 %dev_id to i64, !dbg !156
  %200 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !156
  store i64 %199, ptr %200, align 8, !dbg !156
  %201 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !156
  store i32 0, ptr %201, align 4, !dbg !156, !tbaa !280
  %202 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !156
  %203 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !156
  %204 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !156, !tbaa !19
  %205 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !156
  %.not91 = icmp eq ptr %205, null, !dbg !156
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !156, !prof !55

handle_init:                                      ; preds = %assert_end77
  %206 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !156, !tbaa !19
  %207 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !156, !tbaa !19
  %208 = call i32 %207(ptr %206, ptr nonnull @.str.33, ptr nonnull %0), !dbg !156
  %209 = icmp eq i32 %208, 0, !dbg !156
  br i1 %209, label %call_end, label %common.ret, !dbg !156, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %210 = phi ptr [ %205, %assert_end77 ], [ %213, %call_end ], !dbg !156
  %211 = call i32 %204(ptr %210, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %202, ptr nonnull %203), !dbg !156
  %212 = icmp eq i32 %211, 0, !dbg !156
  br i1 %212, label %call_end79, label %common.ret, !dbg !156, !prof !18

call_end:                                         ; preds = %handle_init
  %213 = load ptr, ptr %0, align 8, !dbg !156
  store ptr %213, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !156
  br label %handle_init_end, !dbg !156

call_end79:                                       ; preds = %handle_init_end
  %214 = call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_compute_(ptr nonnull %stack_value87, ptr %T_cast80, ptr nonnull %stack_tcode88, ptr %p081, ptr %p182), !dbg !156
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !282 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !284, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !285, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !286, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !287, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !288, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !289, metadata !DIExpression()), !dbg !290
  %0 = alloca ptr, align 8, !dbg !290
  %stack_value87 = alloca [6 x %0], align 8, !dbg !290
  %stack_tcode88 = alloca [6 x i32], align 4, !dbg !290
  %1 = icmp eq i32 %num_args, 3, !dbg !290
  br i1 %1, label %assert_end, label %assert_fail, !dbg !290, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %208, %handle_init ], [ %211, %handle_init_end ], [ %214, %call_end79 ]
  ret i32 %common.ret.op, !dbg !290

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %2(ptr nonnull @.str.69), !dbg !290
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !290, !tbaa !291
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !290
  %p1.code = load i32, ptr %3, align 4, !dbg !290, !tbaa !302
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !290
  %T_cast.code = load i32, ptr %4, align 4, !dbg !290, !tbaa !304
  %p0 = load ptr, ptr %args, align 8, !dbg !290
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !290
  %p1 = load ptr, ptr %5, align 8, !dbg !290
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !290
  %T_cast = load ptr, ptr %6, align 8, !dbg !290
  %p081 = load ptr, ptr %p0, align 8, !dbg !290
  call void @llvm.assume(i1 true) [ "align"(ptr %p081, i64 64) ], !dbg !290
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape = load ptr, ptr %7, align 8, !dbg !290
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides = load ptr, ptr %8, align 8, !dbg !290
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !290
  %dev_id = load i32, ptr %9, align 4, !dbg !290
  %p182 = load ptr, ptr %p1, align 8, !dbg !290
  call void @llvm.assume(i1 true) [ "align"(ptr %p182, i64 64) ], !dbg !290
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape = load ptr, ptr %10, align 8, !dbg !290
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides = load ptr, ptr %11, align 8, !dbg !290
  %T_cast80 = load ptr, ptr %T_cast, align 8, !dbg !290
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast80, i64 64) ], !dbg !290
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape = load ptr, ptr %12, align 8, !dbg !290
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !290
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides = load ptr, ptr %13, align 8, !dbg !290
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !290

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %14(ptr nonnull @.str.70), !dbg !290
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !290

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %15(ptr nonnull @.str.71), !dbg !290
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !290

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %16(ptr nonnull @.str.72), !dbg !290
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !290
  %18 = load i32, ptr %17, align 4, !dbg !290
  %19 = icmp eq i32 %18, 4, !dbg !290
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !290, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %20(ptr nonnull @.str.73), !dbg !290
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !290
  %22 = load i16, ptr %21, align 2, !dbg !290
  %23 = icmp eq i16 %22, 1, !dbg !290
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !290
  %25 = load i8, ptr %24, align 1, !dbg !290
  %26 = icmp eq i8 %25, 8, !dbg !290
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !290
  %28 = load i8, ptr %27, align 1, !dbg !290
  %29 = icmp eq i8 %28, 0, !dbg !290
  %30 = and i1 %26, %29, !dbg !290
  %31 = and i1 %23, %30, !dbg !290
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !290, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %32(ptr nonnull @.str.74), !dbg !290
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, align 8, !dbg !290, !tbaa !307
  %34 = and i64 %33, 4294967295, !dbg !290
  %35 = icmp eq i64 %34, 1, !dbg !290
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !290, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %36(ptr nonnull @.str.75), !dbg !290
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 1, !dbg !290
  %38 = load i64, ptr %37, align 8, !dbg !290, !tbaa !317
  %39 = and i64 %38, 4294967295, !dbg !290
  %40 = icmp eq i64 %39, 1024, !dbg !290
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !290, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %41(ptr nonnull @.str.76), !dbg !290
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 2, !dbg !290
  %43 = load i64, ptr %42, align 8, !dbg !290, !tbaa !319
  %44 = and i64 %43, 4294967295, !dbg !290
  %45 = icmp eq i64 %44, 14, !dbg !290
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !290, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %46(ptr nonnull @.str.77), !dbg !290
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 3, !dbg !290
  %48 = load i64, ptr %47, align 8, !dbg !290, !tbaa !322
  %49 = and i64 %48, 4294967295, !dbg !290
  %50 = icmp eq i64 %49, 14, !dbg !290
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !290, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %51(ptr nonnull @.str.78), !dbg !290
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, null, !dbg !290
  br i1 %.not, label %if_end, label %if_then, !dbg !290, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 1, !dbg !290
  %53 = load i64, ptr %52, align 8, !dbg !290, !tbaa !324
  %54 = and i64 %53, 4294967295, !dbg !290
  %55 = icmp eq i64 %54, 196, !dbg !290
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 2, !dbg !290
  %57 = load i64, ptr %56, align 8, !dbg !290, !tbaa !334
  %58 = and i64 %57, 4294967295, !dbg !290
  %59 = icmp eq i64 %58, 14, !dbg !290
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 3, !dbg !290
  %61 = load i64, ptr %60, align 8, !dbg !290, !tbaa !337
  %62 = and i64 %61, 4294967295, !dbg !290
  %63 = icmp eq i64 %62, 1, !dbg !290
  %64 = and i1 %59, %63, !dbg !290
  %65 = and i1 %55, %64, !dbg !290
  br i1 %65, label %if_end, label %assert_fail24, !dbg !290, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !290
  %67 = load i64, ptr %66, align 8, !dbg !290
  %68 = icmp eq i64 %67, 0, !dbg !290
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !290, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %69(ptr nonnull @.str.79), !dbg !290
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %70(ptr nonnull @.str.80), !dbg !290
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !290
  %72 = load i32, ptr %71, align 4, !dbg !290
  %73 = icmp eq i32 %72, 2, !dbg !290
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !290, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %74(ptr nonnull @.str.81), !dbg !290
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !290
  %76 = load i32, ptr %75, align 4, !dbg !290
  %77 = icmp eq i32 %76, 4, !dbg !290
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !290, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %78(ptr nonnull @.str.82), !dbg !290
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !290
  %80 = load i16, ptr %79, align 2, !dbg !290
  %81 = icmp eq i16 %80, 1, !dbg !290
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !290
  %83 = load i8, ptr %82, align 1, !dbg !290
  %84 = icmp eq i8 %83, 8, !dbg !290
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !290
  %86 = load i8, ptr %85, align 1, !dbg !290
  %87 = icmp eq i8 %86, 0, !dbg !290
  %88 = and i1 %84, %87, !dbg !290
  %89 = and i1 %81, %88, !dbg !290
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !290, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %90(ptr nonnull @.str.83), !dbg !290
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, align 8, !dbg !290, !tbaa !339
  %92 = and i64 %91, 4294967295, !dbg !290
  %93 = icmp eq i64 %92, 1, !dbg !290
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !290, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %94(ptr nonnull @.str.84), !dbg !290
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 1, !dbg !290
  %96 = load i64, ptr %95, align 8, !dbg !290, !tbaa !349
  %97 = and i64 %96, 4294967295, !dbg !290
  %98 = icmp eq i64 %97, 1024, !dbg !290
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !290, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %99(ptr nonnull @.str.85), !dbg !290
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 2, !dbg !290
  %101 = load i64, ptr %100, align 8, !dbg !290, !tbaa !351
  %102 = and i64 %101, 4294967295, !dbg !290
  %103 = icmp eq i64 %102, 14, !dbg !290
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !290, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %104(ptr nonnull @.str.86), !dbg !290
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 3, !dbg !290
  %106 = load i64, ptr %105, align 8, !dbg !290, !tbaa !354
  %107 = and i64 %106, 4294967295, !dbg !290
  %108 = icmp eq i64 %107, 14, !dbg !290
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !290, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %109(ptr nonnull @.str.87), !dbg !290
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, null, !dbg !290
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !290, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 1, !dbg !290
  %111 = load i64, ptr %110, align 8, !dbg !290, !tbaa !356
  %112 = and i64 %111, 4294967295, !dbg !290
  %113 = icmp eq i64 %112, 196, !dbg !290
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 2, !dbg !290
  %115 = load i64, ptr %114, align 8, !dbg !290, !tbaa !366
  %116 = and i64 %115, 4294967295, !dbg !290
  %117 = icmp eq i64 %116, 14, !dbg !290
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 3, !dbg !290
  %119 = load i64, ptr %118, align 8, !dbg !290, !tbaa !369
  %120 = and i64 %119, 4294967295, !dbg !290
  %121 = icmp eq i64 %120, 1, !dbg !290
  %122 = and i1 %117, %121, !dbg !290
  %123 = and i1 %113, %122, !dbg !290
  br i1 %123, label %if_end45, label %assert_fail46, !dbg !290, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !290
  %125 = load i64, ptr %124, align 8, !dbg !290
  %126 = icmp eq i64 %125, 0, !dbg !290
  br i1 %126, label %assert_end49, label %assert_fail48, !dbg !290, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %127(ptr nonnull @.str.88), !dbg !290
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %128(ptr nonnull @.str.89), !dbg !290
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %129 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !290
  %130 = load i32, ptr %129, align 4, !dbg !290
  %131 = icmp eq i32 %130, 2, !dbg !290
  br i1 %131, label %assert_end51, label %assert_fail50, !dbg !290, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %132(ptr nonnull @.str.90), !dbg !290
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !290
  %134 = load i32, ptr %133, align 4, !dbg !290
  %135 = icmp eq i32 %dev_id, %134, !dbg !290
  br i1 %135, label %assert_end53, label %assert_fail52, !dbg !290, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %136(ptr nonnull @.str.91), !dbg !290
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %137 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !290
  %138 = load i32, ptr %137, align 4, !dbg !290
  %139 = icmp eq i32 %138, 4, !dbg !290
  br i1 %139, label %assert_end57, label %assert_fail54, !dbg !290, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %140(ptr nonnull @.str.92), !dbg !290
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !290
  %142 = load i16, ptr %141, align 2, !dbg !290
  %143 = icmp eq i16 %142, 1, !dbg !290
  %144 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !290
  %145 = load i8, ptr %144, align 1, !dbg !290
  %146 = icmp eq i8 %145, 8, !dbg !290
  %147 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !290
  %148 = load i8, ptr %147, align 1, !dbg !290
  %149 = icmp eq i8 %148, 0, !dbg !290
  %150 = and i1 %146, %149, !dbg !290
  %151 = and i1 %143, %150, !dbg !290
  br i1 %151, label %assert_end59, label %assert_fail58, !dbg !290, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %152(ptr nonnull @.str.93), !dbg !290
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %153 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, align 8, !dbg !290, !tbaa !371
  %154 = and i64 %153, 4294967295, !dbg !290
  %155 = icmp eq i64 %154, 1, !dbg !290
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !290, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %156(ptr nonnull @.str.94), !dbg !290
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 1, !dbg !290
  %158 = load i64, ptr %157, align 8, !dbg !290, !tbaa !381
  %159 = and i64 %158, 4294967295, !dbg !290
  %160 = icmp eq i64 %159, 1024, !dbg !290
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !290, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %161(ptr nonnull @.str.95), !dbg !290
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 2, !dbg !290
  %163 = load i64, ptr %162, align 8, !dbg !290, !tbaa !383
  %164 = and i64 %163, 4294967295, !dbg !290
  %165 = icmp eq i64 %164, 14, !dbg !290
  br i1 %165, label %assert_end65, label %assert_fail64, !dbg !290, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %166(ptr nonnull @.str.96), !dbg !290
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 3, !dbg !290
  %168 = load i64, ptr %167, align 8, !dbg !290, !tbaa !386
  %169 = and i64 %168, 4294967295, !dbg !290
  %170 = icmp eq i64 %169, 14, !dbg !290
  br i1 %170, label %assert_end67, label %assert_fail66, !dbg !290, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %171(ptr nonnull @.str.97), !dbg !290
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, null, !dbg !290
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !290, !prof !55

if_then68:                                        ; preds = %assert_end67
  %172 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 1, !dbg !290
  %173 = load i64, ptr %172, align 8, !dbg !290, !tbaa !388
  %174 = and i64 %173, 4294967295, !dbg !290
  %175 = icmp eq i64 %174, 196, !dbg !290
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 2, !dbg !290
  %177 = load i64, ptr %176, align 8, !dbg !290, !tbaa !398
  %178 = and i64 %177, 4294967295, !dbg !290
  %179 = icmp eq i64 %178, 14, !dbg !290
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 3, !dbg !290
  %181 = load i64, ptr %180, align 8, !dbg !290, !tbaa !401
  %182 = and i64 %181, 4294967295, !dbg !290
  %183 = icmp eq i64 %182, 1, !dbg !290
  %184 = and i1 %179, %183, !dbg !290
  %185 = and i1 %175, %184, !dbg !290
  br i1 %185, label %if_end69, label %assert_fail70, !dbg !290, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %186 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !290
  %187 = load i64, ptr %186, align 8, !dbg !290
  %188 = icmp eq i64 %187, 0, !dbg !290
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !290, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %189(ptr nonnull @.str.98), !dbg !290
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %190(ptr nonnull @.str.99), !dbg !290
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !290
  %192 = load i32, ptr %191, align 4, !dbg !290
  %193 = icmp eq i32 %192, 2, !dbg !290
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !290, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %194(ptr nonnull @.str.100), !dbg !290
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !290
  %196 = load i32, ptr %195, align 4, !dbg !290
  %197 = icmp eq i32 %dev_id, %196, !dbg !290
  br i1 %197, label %assert_end77, label %assert_fail76, !dbg !290, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !290, !tbaa !19
  tail call void %198(ptr nonnull @.str.101), !dbg !290
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !290
  store i32 0, ptr %stack_tcode88, align 4, !dbg !290, !tbaa !403
  %199 = sext i32 %dev_id to i64, !dbg !290
  %200 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !290
  store i64 %199, ptr %200, align 8, !dbg !290
  %201 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !290
  store i32 0, ptr %201, align 4, !dbg !290, !tbaa !414
  %202 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !290
  %203 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !290
  %204 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !290, !tbaa !19
  %205 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !290
  %.not91 = icmp eq ptr %205, null, !dbg !290
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !290, !prof !55

handle_init:                                      ; preds = %assert_end77
  %206 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !290, !tbaa !19
  %207 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !290, !tbaa !19
  %208 = call i32 %207(ptr %206, ptr nonnull @.str.33, ptr nonnull %0), !dbg !290
  %209 = icmp eq i32 %208, 0, !dbg !290
  br i1 %209, label %call_end, label %common.ret, !dbg !290, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %210 = phi ptr [ %205, %assert_end77 ], [ %213, %call_end ], !dbg !290
  %211 = call i32 %204(ptr %210, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %202, ptr nonnull %203), !dbg !290
  %212 = icmp eq i32 %211, 0, !dbg !290
  br i1 %212, label %call_end79, label %common.ret, !dbg !290, !prof !18

call_end:                                         ; preds = %handle_init
  %213 = load ptr, ptr %0, align 8, !dbg !290
  store ptr %213, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !290
  br label %handle_init_end, !dbg !290

call_end79:                                       ; preds = %handle_init_end
  %214 = call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_compute_(ptr nonnull %stack_value87, ptr %T_cast80, ptr nonnull %stack_tcode88, ptr %p081, ptr %p182), !dbg !290
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !416 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !418, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !419, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !420, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !421, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !422, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !423, metadata !DIExpression()), !dbg !424
  %0 = alloca ptr, align 8, !dbg !424
  %stack_value87 = alloca [6 x %0], align 8, !dbg !424
  %stack_tcode88 = alloca [6 x i32], align 4, !dbg !424
  %1 = icmp eq i32 %num_args, 3, !dbg !424
  br i1 %1, label %assert_end, label %assert_fail, !dbg !424, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %208, %handle_init ], [ %211, %handle_init_end ], [ %214, %call_end79 ]
  ret i32 %common.ret.op, !dbg !424

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %2(ptr nonnull @.str.103), !dbg !424
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !424, !tbaa !425
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !424
  %p1.code = load i32, ptr %3, align 4, !dbg !424, !tbaa !436
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !424
  %T_cast.code = load i32, ptr %4, align 4, !dbg !424, !tbaa !438
  %p0 = load ptr, ptr %args, align 8, !dbg !424
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !424
  %p1 = load ptr, ptr %5, align 8, !dbg !424
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !424
  %T_cast = load ptr, ptr %6, align 8, !dbg !424
  %p081 = load ptr, ptr %p0, align 8, !dbg !424
  call void @llvm.assume(i1 true) [ "align"(ptr %p081, i64 64) ], !dbg !424
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape = load ptr, ptr %7, align 8, !dbg !424
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides = load ptr, ptr %8, align 8, !dbg !424
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !424
  %dev_id = load i32, ptr %9, align 4, !dbg !424
  %p182 = load ptr, ptr %p1, align 8, !dbg !424
  call void @llvm.assume(i1 true) [ "align"(ptr %p182, i64 64) ], !dbg !424
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape = load ptr, ptr %10, align 8, !dbg !424
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides = load ptr, ptr %11, align 8, !dbg !424
  %T_cast80 = load ptr, ptr %T_cast, align 8, !dbg !424
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast80, i64 64) ], !dbg !424
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape = load ptr, ptr %12, align 8, !dbg !424
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !424
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides = load ptr, ptr %13, align 8, !dbg !424
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !424

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %14(ptr nonnull @.str.104), !dbg !424
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !424

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %15(ptr nonnull @.str.105), !dbg !424
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !424

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %16(ptr nonnull @.str.106), !dbg !424
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !424
  %18 = load i32, ptr %17, align 4, !dbg !424
  %19 = icmp eq i32 %18, 4, !dbg !424
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !424, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %20(ptr nonnull @.str.107), !dbg !424
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !424
  %22 = load i16, ptr %21, align 2, !dbg !424
  %23 = icmp eq i16 %22, 1, !dbg !424
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !424
  %25 = load i8, ptr %24, align 1, !dbg !424
  %26 = icmp eq i8 %25, 8, !dbg !424
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !424
  %28 = load i8, ptr %27, align 1, !dbg !424
  %29 = icmp eq i8 %28, 0, !dbg !424
  %30 = and i1 %26, %29, !dbg !424
  %31 = and i1 %23, %30, !dbg !424
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !424, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %32(ptr nonnull @.str.108), !dbg !424
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, align 8, !dbg !424, !tbaa !441
  %34 = and i64 %33, 4294967295, !dbg !424
  %35 = icmp eq i64 %34, 1, !dbg !424
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !424, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %36(ptr nonnull @.str.109), !dbg !424
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 1, !dbg !424
  %38 = load i64, ptr %37, align 8, !dbg !424, !tbaa !451
  %39 = and i64 %38, 4294967295, !dbg !424
  %40 = icmp eq i64 %39, 2048, !dbg !424
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !424, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %41(ptr nonnull @.str.110), !dbg !424
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 2, !dbg !424
  %43 = load i64, ptr %42, align 8, !dbg !424, !tbaa !453
  %44 = and i64 %43, 4294967295, !dbg !424
  %45 = icmp eq i64 %44, 7, !dbg !424
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !424, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %46(ptr nonnull @.str.111), !dbg !424
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 3, !dbg !424
  %48 = load i64, ptr %47, align 8, !dbg !424, !tbaa !456
  %49 = and i64 %48, 4294967295, !dbg !424
  %50 = icmp eq i64 %49, 7, !dbg !424
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !424, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %51(ptr nonnull @.str.112), !dbg !424
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, null, !dbg !424
  br i1 %.not, label %if_end, label %if_then, !dbg !424, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 1, !dbg !424
  %53 = load i64, ptr %52, align 8, !dbg !424, !tbaa !458
  %54 = and i64 %53, 4294967295, !dbg !424
  %55 = icmp eq i64 %54, 49, !dbg !424
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 2, !dbg !424
  %57 = load i64, ptr %56, align 8, !dbg !424, !tbaa !468
  %58 = and i64 %57, 4294967295, !dbg !424
  %59 = icmp eq i64 %58, 7, !dbg !424
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 3, !dbg !424
  %61 = load i64, ptr %60, align 8, !dbg !424, !tbaa !471
  %62 = and i64 %61, 4294967295, !dbg !424
  %63 = icmp eq i64 %62, 1, !dbg !424
  %64 = and i1 %59, %63, !dbg !424
  %65 = and i1 %55, %64, !dbg !424
  br i1 %65, label %if_end, label %assert_fail24, !dbg !424, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !424
  %67 = load i64, ptr %66, align 8, !dbg !424
  %68 = icmp eq i64 %67, 0, !dbg !424
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !424, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %69(ptr nonnull @.str.113), !dbg !424
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %70(ptr nonnull @.str.114), !dbg !424
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !424
  %72 = load i32, ptr %71, align 4, !dbg !424
  %73 = icmp eq i32 %72, 2, !dbg !424
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !424, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %74(ptr nonnull @.str.115), !dbg !424
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !424
  %76 = load i32, ptr %75, align 4, !dbg !424
  %77 = icmp eq i32 %76, 4, !dbg !424
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !424, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %78(ptr nonnull @.str.116), !dbg !424
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !424
  %80 = load i16, ptr %79, align 2, !dbg !424
  %81 = icmp eq i16 %80, 1, !dbg !424
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !424
  %83 = load i8, ptr %82, align 1, !dbg !424
  %84 = icmp eq i8 %83, 8, !dbg !424
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !424
  %86 = load i8, ptr %85, align 1, !dbg !424
  %87 = icmp eq i8 %86, 0, !dbg !424
  %88 = and i1 %84, %87, !dbg !424
  %89 = and i1 %81, %88, !dbg !424
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !424, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %90(ptr nonnull @.str.117), !dbg !424
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, align 8, !dbg !424, !tbaa !473
  %92 = and i64 %91, 4294967295, !dbg !424
  %93 = icmp eq i64 %92, 1, !dbg !424
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !424, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %94(ptr nonnull @.str.118), !dbg !424
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 1, !dbg !424
  %96 = load i64, ptr %95, align 8, !dbg !424, !tbaa !483
  %97 = and i64 %96, 4294967295, !dbg !424
  %98 = icmp eq i64 %97, 2048, !dbg !424
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !424, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %99(ptr nonnull @.str.119), !dbg !424
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 2, !dbg !424
  %101 = load i64, ptr %100, align 8, !dbg !424, !tbaa !485
  %102 = and i64 %101, 4294967295, !dbg !424
  %103 = icmp eq i64 %102, 7, !dbg !424
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !424, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %104(ptr nonnull @.str.120), !dbg !424
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 3, !dbg !424
  %106 = load i64, ptr %105, align 8, !dbg !424, !tbaa !488
  %107 = and i64 %106, 4294967295, !dbg !424
  %108 = icmp eq i64 %107, 7, !dbg !424
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !424, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %109(ptr nonnull @.str.121), !dbg !424
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, null, !dbg !424
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !424, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 1, !dbg !424
  %111 = load i64, ptr %110, align 8, !dbg !424, !tbaa !490
  %112 = and i64 %111, 4294967295, !dbg !424
  %113 = icmp eq i64 %112, 49, !dbg !424
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 2, !dbg !424
  %115 = load i64, ptr %114, align 8, !dbg !424, !tbaa !500
  %116 = and i64 %115, 4294967295, !dbg !424
  %117 = icmp eq i64 %116, 7, !dbg !424
  %118 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 3, !dbg !424
  %119 = load i64, ptr %118, align 8, !dbg !424, !tbaa !503
  %120 = and i64 %119, 4294967295, !dbg !424
  %121 = icmp eq i64 %120, 1, !dbg !424
  %122 = and i1 %117, %121, !dbg !424
  %123 = and i1 %113, %122, !dbg !424
  br i1 %123, label %if_end45, label %assert_fail46, !dbg !424, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !424
  %125 = load i64, ptr %124, align 8, !dbg !424
  %126 = icmp eq i64 %125, 0, !dbg !424
  br i1 %126, label %assert_end49, label %assert_fail48, !dbg !424, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %127(ptr nonnull @.str.122), !dbg !424
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %128(ptr nonnull @.str.123), !dbg !424
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %129 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !424
  %130 = load i32, ptr %129, align 4, !dbg !424
  %131 = icmp eq i32 %130, 2, !dbg !424
  br i1 %131, label %assert_end51, label %assert_fail50, !dbg !424, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %132(ptr nonnull @.str.124), !dbg !424
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !424
  %134 = load i32, ptr %133, align 4, !dbg !424
  %135 = icmp eq i32 %dev_id, %134, !dbg !424
  br i1 %135, label %assert_end53, label %assert_fail52, !dbg !424, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %136(ptr nonnull @.str.125), !dbg !424
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %137 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !424
  %138 = load i32, ptr %137, align 4, !dbg !424
  %139 = icmp eq i32 %138, 4, !dbg !424
  br i1 %139, label %assert_end57, label %assert_fail54, !dbg !424, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %140(ptr nonnull @.str.126), !dbg !424
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !424
  %142 = load i16, ptr %141, align 2, !dbg !424
  %143 = icmp eq i16 %142, 1, !dbg !424
  %144 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !424
  %145 = load i8, ptr %144, align 1, !dbg !424
  %146 = icmp eq i8 %145, 8, !dbg !424
  %147 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !424
  %148 = load i8, ptr %147, align 1, !dbg !424
  %149 = icmp eq i8 %148, 0, !dbg !424
  %150 = and i1 %146, %149, !dbg !424
  %151 = and i1 %143, %150, !dbg !424
  br i1 %151, label %assert_end59, label %assert_fail58, !dbg !424, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %152(ptr nonnull @.str.127), !dbg !424
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %153 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, align 8, !dbg !424, !tbaa !505
  %154 = and i64 %153, 4294967295, !dbg !424
  %155 = icmp eq i64 %154, 1, !dbg !424
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !424, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %156(ptr nonnull @.str.128), !dbg !424
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 1, !dbg !424
  %158 = load i64, ptr %157, align 8, !dbg !424, !tbaa !515
  %159 = and i64 %158, 4294967295, !dbg !424
  %160 = icmp eq i64 %159, 2048, !dbg !424
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !424, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %161(ptr nonnull @.str.129), !dbg !424
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 2, !dbg !424
  %163 = load i64, ptr %162, align 8, !dbg !424, !tbaa !517
  %164 = and i64 %163, 4294967295, !dbg !424
  %165 = icmp eq i64 %164, 7, !dbg !424
  br i1 %165, label %assert_end65, label %assert_fail64, !dbg !424, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %166(ptr nonnull @.str.130), !dbg !424
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 3, !dbg !424
  %168 = load i64, ptr %167, align 8, !dbg !424, !tbaa !520
  %169 = and i64 %168, 4294967295, !dbg !424
  %170 = icmp eq i64 %169, 7, !dbg !424
  br i1 %170, label %assert_end67, label %assert_fail66, !dbg !424, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %171(ptr nonnull @.str.131), !dbg !424
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, null, !dbg !424
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !424, !prof !55

if_then68:                                        ; preds = %assert_end67
  %172 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 1, !dbg !424
  %173 = load i64, ptr %172, align 8, !dbg !424, !tbaa !522
  %174 = and i64 %173, 4294967295, !dbg !424
  %175 = icmp eq i64 %174, 49, !dbg !424
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 2, !dbg !424
  %177 = load i64, ptr %176, align 8, !dbg !424, !tbaa !532
  %178 = and i64 %177, 4294967295, !dbg !424
  %179 = icmp eq i64 %178, 7, !dbg !424
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 3, !dbg !424
  %181 = load i64, ptr %180, align 8, !dbg !424, !tbaa !535
  %182 = and i64 %181, 4294967295, !dbg !424
  %183 = icmp eq i64 %182, 1, !dbg !424
  %184 = and i1 %179, %183, !dbg !424
  %185 = and i1 %175, %184, !dbg !424
  br i1 %185, label %if_end69, label %assert_fail70, !dbg !424, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %186 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !424
  %187 = load i64, ptr %186, align 8, !dbg !424
  %188 = icmp eq i64 %187, 0, !dbg !424
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !424, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %189(ptr nonnull @.str.132), !dbg !424
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %190(ptr nonnull @.str.133), !dbg !424
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !424
  %192 = load i32, ptr %191, align 4, !dbg !424
  %193 = icmp eq i32 %192, 2, !dbg !424
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !424, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %194(ptr nonnull @.str.134), !dbg !424
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !424
  %196 = load i32, ptr %195, align 4, !dbg !424
  %197 = icmp eq i32 %dev_id, %196, !dbg !424
  br i1 %197, label %assert_end77, label %assert_fail76, !dbg !424, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !424, !tbaa !19
  tail call void %198(ptr nonnull @.str.135), !dbg !424
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !424
  store i32 0, ptr %stack_tcode88, align 4, !dbg !424, !tbaa !537
  %199 = sext i32 %dev_id to i64, !dbg !424
  %200 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !424
  store i64 %199, ptr %200, align 8, !dbg !424
  %201 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !424
  store i32 0, ptr %201, align 4, !dbg !424, !tbaa !548
  %202 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !424
  %203 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !424
  %204 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !424, !tbaa !19
  %205 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !424
  %.not91 = icmp eq ptr %205, null, !dbg !424
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !424, !prof !55

handle_init:                                      ; preds = %assert_end77
  %206 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !424, !tbaa !19
  %207 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !424, !tbaa !19
  %208 = call i32 %207(ptr %206, ptr nonnull @.str.33, ptr nonnull %0), !dbg !424
  %209 = icmp eq i32 %208, 0, !dbg !424
  br i1 %209, label %call_end, label %common.ret, !dbg !424, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %210 = phi ptr [ %205, %assert_end77 ], [ %213, %call_end ], !dbg !424
  %211 = call i32 %204(ptr %210, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %202, ptr nonnull %203), !dbg !424
  %212 = icmp eq i32 %211, 0, !dbg !424
  br i1 %212, label %call_end79, label %common.ret, !dbg !424, !prof !18

call_end:                                         ; preds = %handle_init
  %213 = load ptr, ptr %0, align 8, !dbg !424
  store ptr %213, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !424
  br label %handle_init_end, !dbg !424

call_end79:                                       ; preds = %handle_init_end
  %214 = call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_compute_(ptr nonnull %stack_value87, ptr %T_cast80, ptr nonnull %stack_tcode88, ptr %p081, ptr %p182), !dbg !424
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !550 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !552, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !553, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !554, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !555, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !556, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !557, metadata !DIExpression()), !dbg !558
  %0 = alloca ptr, align 8, !dbg !558
  %stack_value59 = alloca [5 x %0], align 8, !dbg !558
  %stack_tcode60 = alloca [5 x i32], align 4, !dbg !558
  %1 = icmp eq i32 %num_args, 2, !dbg !558
  br i1 %1, label %assert_end, label %assert_fail, !dbg !558, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %141, %handle_init ], [ %144, %handle_init_end ], [ %147, %call_end52 ]
  ret i32 %common.ret.op, !dbg !558

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %2(ptr nonnull @.str.137), !dbg !558
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !558, !tbaa !559
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !558
  %T_multiply.code = load i32, ptr %3, align 4, !dbg !558, !tbaa !570
  %p0 = load ptr, ptr %args, align 8, !dbg !558
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !558
  %T_multiply = load ptr, ptr %4, align 8, !dbg !558
  %p054 = load ptr, ptr %p0, align 8, !dbg !558
  call void @llvm.assume(i1 true) [ "align"(ptr %p054, i64 64) ], !dbg !558
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !558
  %tvmgen_default_fused_cast_multiply.p0.shape = load ptr, ptr %5, align 8, !dbg !558
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !558
  %tvmgen_default_fused_cast_multiply.p0.strides = load ptr, ptr %6, align 8, !dbg !558
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !558
  %dev_id = load i32, ptr %7, align 4, !dbg !558
  %T_multiply53 = load ptr, ptr %T_multiply, align 8, !dbg !558
  call void @llvm.assume(i1 true) [ "align"(ptr %T_multiply53, i64 64) ], !dbg !558
  %8 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 4, !dbg !558
  %tvmgen_default_fused_cast_multiply.T_multiply.shape = load ptr, ptr %8, align 8, !dbg !558
  %9 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 5, !dbg !558
  %tvmgen_default_fused_cast_multiply.T_multiply.strides = load ptr, ptr %9, align 8, !dbg !558
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !558

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %10(ptr nonnull @.str.138), !dbg !558
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_multiply.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !558

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %11(ptr nonnull @.str.139), !dbg !558
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !558
  %13 = load i32, ptr %12, align 4, !dbg !558
  %14 = icmp eq i32 %13, 4, !dbg !558
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !558, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %15(ptr nonnull @.str.140), !dbg !558
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !558
  %17 = load i16, ptr %16, align 2, !dbg !558
  %18 = icmp eq i16 %17, 1, !dbg !558
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !558
  %20 = load i8, ptr %19, align 1, !dbg !558
  %21 = icmp eq i8 %20, 8, !dbg !558
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !558
  %23 = load i8, ptr %22, align 1, !dbg !558
  %24 = icmp eq i8 %23, 0, !dbg !558
  %25 = and i1 %21, %24, !dbg !558
  %26 = and i1 %18, %25, !dbg !558
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !558, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %27(ptr nonnull @.str.141), !dbg !558
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, align 8, !dbg !558, !tbaa !572
  %29 = and i64 %28, 4294967295, !dbg !558
  %30 = icmp eq i64 %29, 1, !dbg !558
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !558, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %31(ptr nonnull @.str.142), !dbg !558
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 1, !dbg !558
  %33 = load i64, ptr %32, align 8, !dbg !558, !tbaa !582
  %34 = and i64 %33, 4294967295, !dbg !558
  %35 = icmp eq i64 %34, 2048, !dbg !558
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !558, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %36(ptr nonnull @.str.143), !dbg !558
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 2, !dbg !558
  %38 = load i64, ptr %37, align 8, !dbg !558, !tbaa !584
  %39 = and i64 %38, 4294967295, !dbg !558
  %40 = icmp eq i64 %39, 7, !dbg !558
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !558, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %41(ptr nonnull @.str.144), !dbg !558
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 3, !dbg !558
  %43 = load i64, ptr %42, align 8, !dbg !558, !tbaa !587
  %44 = and i64 %43, 4294967295, !dbg !558
  %45 = icmp eq i64 %44, 7, !dbg !558
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !558, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %46(ptr nonnull @.str.145), !dbg !558
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply.p0.strides, null, !dbg !558
  br i1 %.not, label %if_end, label %if_then, !dbg !558, !prof !55

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 1, !dbg !558
  %48 = load i64, ptr %47, align 8, !dbg !558, !tbaa !589
  %49 = and i64 %48, 4294967295, !dbg !558
  %50 = icmp eq i64 %49, 49, !dbg !558
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 2, !dbg !558
  %52 = load i64, ptr %51, align 8, !dbg !558, !tbaa !599
  %53 = and i64 %52, 4294967295, !dbg !558
  %54 = icmp eq i64 %53, 7, !dbg !558
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 3, !dbg !558
  %56 = load i64, ptr %55, align 8, !dbg !558, !tbaa !602
  %57 = and i64 %56, 4294967295, !dbg !558
  %58 = icmp eq i64 %57, 1, !dbg !558
  %59 = and i1 %54, %58, !dbg !558
  %60 = and i1 %50, %59, !dbg !558
  br i1 %60, label %if_end, label %assert_fail21, !dbg !558, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !558
  %62 = load i64, ptr %61, align 8, !dbg !558
  %63 = icmp eq i64 %62, 0, !dbg !558
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !558, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %64(ptr nonnull @.str.146), !dbg !558
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %65(ptr nonnull @.str.147), !dbg !558
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !558
  %67 = load i32, ptr %66, align 4, !dbg !558
  %68 = icmp eq i32 %67, 2, !dbg !558
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !558, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %69(ptr nonnull @.str.148), !dbg !558
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 2, !dbg !558
  %71 = load i32, ptr %70, align 4, !dbg !558
  %72 = icmp eq i32 %71, 4, !dbg !558
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !558, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %73(ptr nonnull @.str.149), !dbg !558
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 2, !dbg !558
  %75 = load i16, ptr %74, align 2, !dbg !558
  %76 = icmp eq i16 %75, 1, !dbg !558
  %77 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 1, !dbg !558
  %78 = load i8, ptr %77, align 1, !dbg !558
  %79 = icmp eq i8 %78, 32, !dbg !558
  %80 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 0, !dbg !558
  %81 = load i8, ptr %80, align 1, !dbg !558
  %82 = icmp eq i8 %81, 2, !dbg !558
  %83 = and i1 %79, %82, !dbg !558
  %84 = and i1 %76, %83, !dbg !558
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !558, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %85(ptr nonnull @.str.150), !dbg !558
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, align 8, !dbg !558, !tbaa !604
  %87 = and i64 %86, 4294967295, !dbg !558
  %88 = icmp eq i64 %87, 1, !dbg !558
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !558, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %89(ptr nonnull @.str.151), !dbg !558
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 1, !dbg !558
  %91 = load i64, ptr %90, align 8, !dbg !558, !tbaa !614
  %92 = and i64 %91, 4294967295, !dbg !558
  %93 = icmp eq i64 %92, 2048, !dbg !558
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !558, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %94(ptr nonnull @.str.152), !dbg !558
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 2, !dbg !558
  %96 = load i64, ptr %95, align 8, !dbg !558, !tbaa !616
  %97 = and i64 %96, 4294967295, !dbg !558
  %98 = icmp eq i64 %97, 7, !dbg !558
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !558, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %99(ptr nonnull @.str.153), !dbg !558
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 3, !dbg !558
  %101 = load i64, ptr %100, align 8, !dbg !558, !tbaa !619
  %102 = and i64 %101, 4294967295, !dbg !558
  %103 = icmp eq i64 %102, 7, !dbg !558
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !558, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %104(ptr nonnull @.str.154), !dbg !558
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, null, !dbg !558
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !558, !prof !55

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 1, !dbg !558
  %106 = load i64, ptr %105, align 8, !dbg !558, !tbaa !621
  %107 = and i64 %106, 4294967295, !dbg !558
  %108 = icmp eq i64 %107, 49, !dbg !558
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 2, !dbg !558
  %110 = load i64, ptr %109, align 8, !dbg !558, !tbaa !631
  %111 = and i64 %110, 4294967295, !dbg !558
  %112 = icmp eq i64 %111, 7, !dbg !558
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 3, !dbg !558
  %114 = load i64, ptr %113, align 8, !dbg !558, !tbaa !634
  %115 = and i64 %114, 4294967295, !dbg !558
  %116 = icmp eq i64 %115, 1, !dbg !558
  %117 = and i1 %112, %116, !dbg !558
  %118 = and i1 %108, %117, !dbg !558
  br i1 %118, label %if_end42, label %assert_fail43, !dbg !558, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %119 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 6, !dbg !558
  %120 = load i64, ptr %119, align 8, !dbg !558
  %121 = icmp eq i64 %120, 0, !dbg !558
  br i1 %121, label %assert_end46, label %assert_fail45, !dbg !558, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %122(ptr nonnull @.str.155), !dbg !558
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %123(ptr nonnull @.str.156), !dbg !558
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %124 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 1, i32 0, !dbg !558
  %125 = load i32, ptr %124, align 4, !dbg !558
  %126 = icmp eq i32 %125, 2, !dbg !558
  br i1 %126, label %assert_end48, label %assert_fail47, !dbg !558, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %127(ptr nonnull @.str.157), !dbg !558
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %128 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 1, i32 1, !dbg !558
  %129 = load i32, ptr %128, align 4, !dbg !558
  %130 = icmp eq i32 %dev_id, %129, !dbg !558
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !558, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !558, !tbaa !19
  tail call void %131(ptr nonnull @.str.158), !dbg !558
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !558
  store i32 0, ptr %stack_tcode60, align 4, !dbg !558, !tbaa !636
  %132 = sext i32 %dev_id to i64, !dbg !558
  %133 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !558
  store i64 %132, ptr %133, align 8, !dbg !558
  %134 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !558
  store i32 0, ptr %134, align 4, !dbg !558, !tbaa !647
  %135 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !558
  %136 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !558
  %137 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !558, !tbaa !19
  %138 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !558
  %.not62 = icmp eq ptr %138, null, !dbg !558
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !558, !prof !55

handle_init:                                      ; preds = %assert_end50
  %139 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !558, !tbaa !19
  %140 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !558, !tbaa !19
  %141 = call i32 %140(ptr %139, ptr nonnull @.str.33, ptr nonnull %0), !dbg !558
  %142 = icmp eq i32 %141, 0, !dbg !558
  br i1 %142, label %call_end, label %common.ret, !dbg !558, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %143 = phi ptr [ %138, %assert_end50 ], [ %146, %call_end ], !dbg !558
  %144 = call i32 %137(ptr %143, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %135, ptr nonnull %136), !dbg !558
  %145 = icmp eq i32 %144, 0, !dbg !558
  br i1 %145, label %call_end52, label %common.ret, !dbg !558, !prof !18

call_end:                                         ; preds = %handle_init
  %146 = load ptr, ptr %0, align 8, !dbg !558
  store ptr %146, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !558
  br label %handle_init_end, !dbg !558

call_end52:                                       ; preds = %handle_init_end
  %147 = call fastcc i32 @tvmgen_default_fused_cast_multiply_compute_(ptr nonnull %stack_value59, ptr %T_multiply53, ptr nonnull %stack_tcode60, ptr %p054), !dbg !558
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !649 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !651, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !652, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !653, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !654, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !655, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !656, metadata !DIExpression()), !dbg !657
  %0 = alloca ptr, align 8, !dbg !657
  %stack_value115 = alloca [7 x %0], align 8, !dbg !657
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !657
  %1 = icmp eq i32 %num_args, 4, !dbg !657
  br i1 %1, label %assert_end, label %assert_fail, !dbg !657, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !657

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %2(ptr nonnull @.str.160), !dbg !657
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !657, !tbaa !658
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !657
  %p1.code = load i32, ptr %3, align 4, !dbg !657, !tbaa !669
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !657
  %p2.code = load i32, ptr %4, align 4, !dbg !657, !tbaa !671
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !657
  %T_cast.code = load i32, ptr %5, align 4, !dbg !657, !tbaa !674
  %p0 = load ptr, ptr %args, align 8, !dbg !657
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !657
  %p1 = load ptr, ptr %6, align 8, !dbg !657
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !657
  %p2 = load ptr, ptr %7, align 8, !dbg !657
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !657
  %T_cast = load ptr, ptr %8, align 8, !dbg !657
  %p0108 = load ptr, ptr %p0, align 8, !dbg !657
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !657
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape = load ptr, ptr %9, align 8, !dbg !657
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides = load ptr, ptr %10, align 8, !dbg !657
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !657
  %dev_id = load i32, ptr %11, align 4, !dbg !657
  %p1109 = load ptr, ptr %p1, align 8, !dbg !657
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !657
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape = load ptr, ptr %12, align 8, !dbg !657
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides = load ptr, ptr %13, align 8, !dbg !657
  %p2110 = load ptr, ptr %p2, align 8, !dbg !657
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !657
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape = load ptr, ptr %14, align 8, !dbg !657
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides = load ptr, ptr %15, align 8, !dbg !657
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !657
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !657
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %16, align 8, !dbg !657
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !657
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %17, align 8, !dbg !657
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !657

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %18(ptr nonnull @.str.161), !dbg !657
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !657

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %19(ptr nonnull @.str.162), !dbg !657
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !657

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %20(ptr nonnull @.str.163), !dbg !657
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !657

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %21(ptr nonnull @.str.164), !dbg !657
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !657
  %23 = load i32, ptr %22, align 4, !dbg !657
  %24 = icmp eq i32 %23, 4, !dbg !657
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !657, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %25(ptr nonnull @.str.165), !dbg !657
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !657
  %27 = load i16, ptr %26, align 2, !dbg !657
  %28 = icmp eq i16 %27, 1, !dbg !657
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !657
  %30 = load i8, ptr %29, align 1, !dbg !657
  %31 = icmp eq i8 %30, 8, !dbg !657
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !657
  %33 = load i8, ptr %32, align 1, !dbg !657
  %34 = icmp eq i8 %33, 0, !dbg !657
  %35 = and i1 %31, %34, !dbg !657
  %36 = and i1 %28, %35, !dbg !657
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !657, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %37(ptr nonnull @.str.166), !dbg !657
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, align 8, !dbg !657, !tbaa !676
  %39 = and i64 %38, 4294967295, !dbg !657
  %40 = icmp eq i64 %39, 1, !dbg !657
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !657, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %41(ptr nonnull @.str.167), !dbg !657
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !657
  %43 = load i64, ptr %42, align 8, !dbg !657, !tbaa !686
  %44 = and i64 %43, 4294967295, !dbg !657
  %45 = icmp eq i64 %44, 64, !dbg !657
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !657, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %46(ptr nonnull @.str.168), !dbg !657
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !657
  %48 = load i64, ptr %47, align 8, !dbg !657, !tbaa !688
  %49 = and i64 %48, 4294967295, !dbg !657
  %50 = icmp eq i64 %49, 56, !dbg !657
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !657, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %51(ptr nonnull @.str.169), !dbg !657
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !657
  %53 = load i64, ptr %52, align 8, !dbg !657, !tbaa !691
  %54 = and i64 %53, 4294967295, !dbg !657
  %55 = icmp eq i64 %54, 56, !dbg !657
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !657, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %56(ptr nonnull @.str.170), !dbg !657
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, null, !dbg !657
  br i1 %.not, label %if_end, label %if_then, !dbg !657, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !657
  %58 = load i64, ptr %57, align 8, !dbg !657, !tbaa !693
  %59 = and i64 %58, 4294967295, !dbg !657
  %60 = icmp eq i64 %59, 3136, !dbg !657
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !657
  %62 = load i64, ptr %61, align 8, !dbg !657, !tbaa !703
  %63 = and i64 %62, 4294967295, !dbg !657
  %64 = icmp eq i64 %63, 56, !dbg !657
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !657
  %66 = load i64, ptr %65, align 8, !dbg !657, !tbaa !706
  %67 = and i64 %66, 4294967295, !dbg !657
  %68 = icmp eq i64 %67, 1, !dbg !657
  %69 = and i1 %64, %68, !dbg !657
  %70 = and i1 %60, %69, !dbg !657
  br i1 %70, label %if_end, label %assert_fail27, !dbg !657, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !657
  %72 = load i64, ptr %71, align 8, !dbg !657
  %73 = icmp eq i64 %72, 0, !dbg !657
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !657, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %74(ptr nonnull @.str.171), !dbg !657
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %75(ptr nonnull @.str.172), !dbg !657
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !657
  %77 = load i32, ptr %76, align 4, !dbg !657
  %78 = icmp eq i32 %77, 2, !dbg !657
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !657, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %79(ptr nonnull @.str.173), !dbg !657
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !657
  %81 = load i32, ptr %80, align 4, !dbg !657
  %82 = icmp eq i32 %81, 4, !dbg !657
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !657, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %83(ptr nonnull @.str.174), !dbg !657
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !657
  %85 = load i16, ptr %84, align 2, !dbg !657
  %86 = icmp eq i16 %85, 1, !dbg !657
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !657
  %88 = load i8, ptr %87, align 1, !dbg !657
  %89 = icmp eq i8 %88, 32, !dbg !657
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !657
  %91 = load i8, ptr %90, align 1, !dbg !657
  %92 = icmp eq i8 %91, 0, !dbg !657
  %93 = and i1 %89, %92, !dbg !657
  %94 = and i1 %86, %93, !dbg !657
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !657, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %95(ptr nonnull @.str.175), !dbg !657
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, align 8, !dbg !657, !tbaa !708
  %97 = and i64 %96, 4294967295, !dbg !657
  %98 = icmp eq i64 %97, 1, !dbg !657
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !657, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %99(ptr nonnull @.str.176), !dbg !657
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !657
  %101 = load i64, ptr %100, align 8, !dbg !657, !tbaa !718
  %102 = and i64 %101, 4294967295, !dbg !657
  %103 = icmp eq i64 %102, 64, !dbg !657
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !657, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %104(ptr nonnull @.str.177), !dbg !657
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !657
  %106 = load i64, ptr %105, align 8, !dbg !657, !tbaa !720
  %107 = and i64 %106, 4294967295, !dbg !657
  %108 = icmp eq i64 %107, 1, !dbg !657
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !657, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %109(ptr nonnull @.str.178), !dbg !657
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !657
  %111 = load i64, ptr %110, align 8, !dbg !657, !tbaa !723
  %112 = and i64 %111, 4294967295, !dbg !657
  %113 = icmp eq i64 %112, 1, !dbg !657
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !657, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %114(ptr nonnull @.str.179), !dbg !657
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides, null, !dbg !657
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !657, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !657
  %116 = load i64, ptr %115, align 8, !dbg !657, !tbaa !725
  %117 = and i64 %116, 4294967295, !dbg !657
  %118 = icmp eq i64 %117, 1, !dbg !657
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !657, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !657
  %120 = load i64, ptr %119, align 8, !dbg !657
  %121 = icmp eq i64 %120, 0, !dbg !657
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !657, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %122(ptr nonnull @.str.180), !dbg !657
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %123(ptr nonnull @.str.181), !dbg !657
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !657
  %125 = load i32, ptr %124, align 4, !dbg !657
  %126 = icmp eq i32 %125, 2, !dbg !657
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !657, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %127(ptr nonnull @.str.182), !dbg !657
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !657
  %129 = load i32, ptr %128, align 4, !dbg !657
  %130 = icmp eq i32 %dev_id, %129, !dbg !657
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !657, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %131(ptr nonnull @.str.183), !dbg !657
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !657
  %133 = load i32, ptr %132, align 4, !dbg !657
  %134 = icmp eq i32 %133, 4, !dbg !657
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !657, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %135(ptr nonnull @.str.184), !dbg !657
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !657
  %137 = load i16, ptr %136, align 2, !dbg !657
  %138 = icmp eq i16 %137, 1, !dbg !657
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !657
  %140 = load i8, ptr %139, align 1, !dbg !657
  %141 = icmp eq i8 %140, 32, !dbg !657
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !657
  %143 = load i8, ptr %142, align 1, !dbg !657
  %144 = icmp eq i8 %143, 0, !dbg !657
  %145 = and i1 %141, %144, !dbg !657
  %146 = and i1 %138, %145, !dbg !657
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !657, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %147(ptr nonnull @.str.185), !dbg !657
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, align 8, !dbg !657, !tbaa !735
  %149 = and i64 %148, 4294967295, !dbg !657
  %150 = icmp eq i64 %149, 1, !dbg !657
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !657, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %151(ptr nonnull @.str.186), !dbg !657
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 1, !dbg !657
  %153 = load i64, ptr %152, align 8, !dbg !657, !tbaa !745
  %154 = and i64 %153, 4294967295, !dbg !657
  %155 = icmp eq i64 %154, 64, !dbg !657
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !657, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %156(ptr nonnull @.str.187), !dbg !657
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 2, !dbg !657
  %158 = load i64, ptr %157, align 8, !dbg !657, !tbaa !747
  %159 = and i64 %158, 4294967295, !dbg !657
  %160 = icmp eq i64 %159, 1, !dbg !657
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !657, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %161(ptr nonnull @.str.188), !dbg !657
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 3, !dbg !657
  %163 = load i64, ptr %162, align 8, !dbg !657, !tbaa !750
  %164 = and i64 %163, 4294967295, !dbg !657
  %165 = icmp eq i64 %164, 1, !dbg !657
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !657, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %166(ptr nonnull @.str.189), !dbg !657
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides, null, !dbg !657
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !657, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides, i64 1, !dbg !657
  %168 = load i64, ptr %167, align 8, !dbg !657, !tbaa !752
  %169 = and i64 %168, 4294967295, !dbg !657
  %170 = icmp eq i64 %169, 1, !dbg !657
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !657, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !657
  %172 = load i64, ptr %171, align 8, !dbg !657
  %173 = icmp eq i64 %172, 0, !dbg !657
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !657, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %174(ptr nonnull @.str.190), !dbg !657
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %175(ptr nonnull @.str.191), !dbg !657
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !657
  %177 = load i32, ptr %176, align 4, !dbg !657
  %178 = icmp eq i32 %177, 2, !dbg !657
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !657, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %179(ptr nonnull @.str.192), !dbg !657
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !657
  %181 = load i32, ptr %180, align 4, !dbg !657
  %182 = icmp eq i32 %dev_id, %181, !dbg !657
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !657, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %183(ptr nonnull @.str.193), !dbg !657
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !657
  %185 = load i32, ptr %184, align 4, !dbg !657
  %186 = icmp eq i32 %185, 4, !dbg !657
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !657, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %187(ptr nonnull @.str.194), !dbg !657
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !657
  %189 = load i16, ptr %188, align 2, !dbg !657
  %190 = icmp eq i16 %189, 1, !dbg !657
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !657
  %192 = load i8, ptr %191, align 1, !dbg !657
  %193 = icmp eq i8 %192, 8, !dbg !657
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !657
  %195 = load i8, ptr %194, align 1, !dbg !657
  %196 = icmp eq i8 %195, 0, !dbg !657
  %197 = and i1 %193, %196, !dbg !657
  %198 = and i1 %190, %197, !dbg !657
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !657, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %199(ptr nonnull @.str.195), !dbg !657
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !657, !tbaa !762
  %201 = and i64 %200, 4294967295, !dbg !657
  %202 = icmp eq i64 %201, 1, !dbg !657
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !657, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %203(ptr nonnull @.str.196), !dbg !657
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !657
  %205 = load i64, ptr %204, align 8, !dbg !657, !tbaa !772
  %206 = and i64 %205, 4294967295, !dbg !657
  %207 = icmp eq i64 %206, 64, !dbg !657
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !657, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %208(ptr nonnull @.str.197), !dbg !657
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !657
  %210 = load i64, ptr %209, align 8, !dbg !657, !tbaa !774
  %211 = and i64 %210, 4294967295, !dbg !657
  %212 = icmp eq i64 %211, 56, !dbg !657
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !657, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %213(ptr nonnull @.str.198), !dbg !657
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !657
  %215 = load i64, ptr %214, align 8, !dbg !657, !tbaa !777
  %216 = and i64 %215, 4294967295, !dbg !657
  %217 = icmp eq i64 %216, 56, !dbg !657
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !657, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %218(ptr nonnull @.str.199), !dbg !657
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, null, !dbg !657
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !657, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !657
  %220 = load i64, ptr %219, align 8, !dbg !657, !tbaa !779
  %221 = and i64 %220, 4294967295, !dbg !657
  %222 = icmp eq i64 %221, 3136, !dbg !657
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !657
  %224 = load i64, ptr %223, align 8, !dbg !657, !tbaa !789
  %225 = and i64 %224, 4294967295, !dbg !657
  %226 = icmp eq i64 %225, 56, !dbg !657
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !657
  %228 = load i64, ptr %227, align 8, !dbg !657, !tbaa !792
  %229 = and i64 %228, 4294967295, !dbg !657
  %230 = icmp eq i64 %229, 1, !dbg !657
  %231 = and i1 %226, %230, !dbg !657
  %232 = and i1 %222, %231, !dbg !657
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !657, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !657
  %234 = load i64, ptr %233, align 8, !dbg !657
  %235 = icmp eq i64 %234, 0, !dbg !657
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !657, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %236(ptr nonnull @.str.200), !dbg !657
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %237(ptr nonnull @.str.201), !dbg !657
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !657
  %239 = load i32, ptr %238, align 4, !dbg !657
  %240 = icmp eq i32 %239, 2, !dbg !657
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !657, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %241(ptr nonnull @.str.202), !dbg !657
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !657
  %243 = load i32, ptr %242, align 4, !dbg !657
  %244 = icmp eq i32 %dev_id, %243, !dbg !657
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !657, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !657, !tbaa !19
  tail call void %245(ptr nonnull @.str.203), !dbg !657
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !657
  store i32 0, ptr %stack_tcode116, align 4, !dbg !657, !tbaa !794
  %246 = sext i32 %dev_id to i64, !dbg !657
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !657
  store i64 %246, ptr %247, align 8, !dbg !657
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !657
  store i32 0, ptr %248, align 4, !dbg !657, !tbaa !805
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !657
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !657
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !657, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !657
  %.not120 = icmp eq ptr %252, null, !dbg !657
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !657, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !657, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !657, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !657
  %256 = icmp eq i32 %255, 0, !dbg !657
  br i1 %256, label %call_end, label %common.ret, !dbg !657, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !657
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !657
  %259 = icmp eq i32 %258, 0, !dbg !657
  br i1 %259, label %call_end106, label %common.ret, !dbg !657, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !657
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !657
  br label %handle_init_end, !dbg !657

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !657
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !807 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !809, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !810, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !811, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !812, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !813, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !814, metadata !DIExpression()), !dbg !815
  %0 = alloca ptr, align 8, !dbg !815
  %stack_value115 = alloca [7 x %0], align 8, !dbg !815
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !815
  %1 = icmp eq i32 %num_args, 4, !dbg !815
  br i1 %1, label %assert_end, label %assert_fail, !dbg !815, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !815

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %2(ptr nonnull @.str.205), !dbg !815
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !815, !tbaa !816
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !815
  %p1.code = load i32, ptr %3, align 4, !dbg !815, !tbaa !827
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !815
  %p2.code = load i32, ptr %4, align 4, !dbg !815, !tbaa !829
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !815
  %T_cast.code = load i32, ptr %5, align 4, !dbg !815, !tbaa !832
  %p0 = load ptr, ptr %args, align 8, !dbg !815
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !815
  %p1 = load ptr, ptr %6, align 8, !dbg !815
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !815
  %p2 = load ptr, ptr %7, align 8, !dbg !815
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !815
  %T_cast = load ptr, ptr %8, align 8, !dbg !815
  %p0108 = load ptr, ptr %p0, align 8, !dbg !815
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !815
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %9, align 8, !dbg !815
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %10, align 8, !dbg !815
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !815
  %dev_id = load i32, ptr %11, align 4, !dbg !815
  %p1109 = load ptr, ptr %p1, align 8, !dbg !815
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !815
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %12, align 8, !dbg !815
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %13, align 8, !dbg !815
  %p2110 = load ptr, ptr %p2, align 8, !dbg !815
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !815
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape = load ptr, ptr %14, align 8, !dbg !815
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides = load ptr, ptr %15, align 8, !dbg !815
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !815
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !815
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %16, align 8, !dbg !815
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !815
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %17, align 8, !dbg !815
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !815

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %18(ptr nonnull @.str.206), !dbg !815
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !815

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %19(ptr nonnull @.str.207), !dbg !815
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !815

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %20(ptr nonnull @.str.208), !dbg !815
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !815

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %21(ptr nonnull @.str.209), !dbg !815
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !815
  %23 = load i32, ptr %22, align 4, !dbg !815
  %24 = icmp eq i32 %23, 4, !dbg !815
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !815, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %25(ptr nonnull @.str.210), !dbg !815
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !815
  %27 = load i16, ptr %26, align 2, !dbg !815
  %28 = icmp eq i16 %27, 1, !dbg !815
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !815
  %30 = load i8, ptr %29, align 1, !dbg !815
  %31 = icmp eq i8 %30, 8, !dbg !815
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !815
  %33 = load i8, ptr %32, align 1, !dbg !815
  %34 = icmp eq i8 %33, 0, !dbg !815
  %35 = and i1 %31, %34, !dbg !815
  %36 = and i1 %28, %35, !dbg !815
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !815, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %37(ptr nonnull @.str.211), !dbg !815
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !815, !tbaa !834
  %39 = and i64 %38, 4294967295, !dbg !815
  %40 = icmp eq i64 %39, 1, !dbg !815
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !815, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %41(ptr nonnull @.str.212), !dbg !815
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !815
  %43 = load i64, ptr %42, align 8, !dbg !815, !tbaa !844
  %44 = and i64 %43, 4294967295, !dbg !815
  %45 = icmp eq i64 %44, 64, !dbg !815
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !815, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %46(ptr nonnull @.str.213), !dbg !815
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !815
  %48 = load i64, ptr %47, align 8, !dbg !815, !tbaa !846
  %49 = and i64 %48, 4294967295, !dbg !815
  %50 = icmp eq i64 %49, 56, !dbg !815
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !815, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %51(ptr nonnull @.str.214), !dbg !815
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !815
  %53 = load i64, ptr %52, align 8, !dbg !815, !tbaa !849
  %54 = and i64 %53, 4294967295, !dbg !815
  %55 = icmp eq i64 %54, 56, !dbg !815
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !815, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %56(ptr nonnull @.str.215), !dbg !815
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, null, !dbg !815
  br i1 %.not, label %if_end, label %if_then, !dbg !815, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !815
  %58 = load i64, ptr %57, align 8, !dbg !815, !tbaa !851
  %59 = and i64 %58, 4294967295, !dbg !815
  %60 = icmp eq i64 %59, 3136, !dbg !815
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !815
  %62 = load i64, ptr %61, align 8, !dbg !815, !tbaa !861
  %63 = and i64 %62, 4294967295, !dbg !815
  %64 = icmp eq i64 %63, 56, !dbg !815
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !815
  %66 = load i64, ptr %65, align 8, !dbg !815, !tbaa !864
  %67 = and i64 %66, 4294967295, !dbg !815
  %68 = icmp eq i64 %67, 1, !dbg !815
  %69 = and i1 %64, %68, !dbg !815
  %70 = and i1 %60, %69, !dbg !815
  br i1 %70, label %if_end, label %assert_fail27, !dbg !815, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !815
  %72 = load i64, ptr %71, align 8, !dbg !815
  %73 = icmp eq i64 %72, 0, !dbg !815
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !815, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %74(ptr nonnull @.str.216), !dbg !815
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %75(ptr nonnull @.str.217), !dbg !815
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !815
  %77 = load i32, ptr %76, align 4, !dbg !815
  %78 = icmp eq i32 %77, 2, !dbg !815
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !815, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %79(ptr nonnull @.str.218), !dbg !815
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !815
  %81 = load i32, ptr %80, align 4, !dbg !815
  %82 = icmp eq i32 %81, 4, !dbg !815
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !815, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %83(ptr nonnull @.str.219), !dbg !815
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !815
  %85 = load i16, ptr %84, align 2, !dbg !815
  %86 = icmp eq i16 %85, 1, !dbg !815
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !815
  %88 = load i8, ptr %87, align 1, !dbg !815
  %89 = icmp eq i8 %88, 32, !dbg !815
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !815
  %91 = load i8, ptr %90, align 1, !dbg !815
  %92 = icmp eq i8 %91, 0, !dbg !815
  %93 = and i1 %89, %92, !dbg !815
  %94 = and i1 %86, %93, !dbg !815
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !815, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %95(ptr nonnull @.str.220), !dbg !815
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !815, !tbaa !866
  %97 = and i64 %96, 4294967295, !dbg !815
  %98 = icmp eq i64 %97, 1, !dbg !815
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !815, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %99(ptr nonnull @.str.221), !dbg !815
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !815
  %101 = load i64, ptr %100, align 8, !dbg !815, !tbaa !876
  %102 = and i64 %101, 4294967295, !dbg !815
  %103 = icmp eq i64 %102, 64, !dbg !815
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !815, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %104(ptr nonnull @.str.222), !dbg !815
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !815
  %106 = load i64, ptr %105, align 8, !dbg !815, !tbaa !878
  %107 = and i64 %106, 4294967295, !dbg !815
  %108 = icmp eq i64 %107, 1, !dbg !815
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !815, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %109(ptr nonnull @.str.223), !dbg !815
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !815
  %111 = load i64, ptr %110, align 8, !dbg !815, !tbaa !881
  %112 = and i64 %111, 4294967295, !dbg !815
  %113 = icmp eq i64 %112, 1, !dbg !815
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !815, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %114(ptr nonnull @.str.224), !dbg !815
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides, null, !dbg !815
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !815, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !815
  %116 = load i64, ptr %115, align 8, !dbg !815, !tbaa !883
  %117 = and i64 %116, 4294967295, !dbg !815
  %118 = icmp eq i64 %117, 1, !dbg !815
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !815, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !815
  %120 = load i64, ptr %119, align 8, !dbg !815
  %121 = icmp eq i64 %120, 0, !dbg !815
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !815, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %122(ptr nonnull @.str.225), !dbg !815
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %123(ptr nonnull @.str.226), !dbg !815
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !815
  %125 = load i32, ptr %124, align 4, !dbg !815
  %126 = icmp eq i32 %125, 2, !dbg !815
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !815, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %127(ptr nonnull @.str.227), !dbg !815
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !815
  %129 = load i32, ptr %128, align 4, !dbg !815
  %130 = icmp eq i32 %dev_id, %129, !dbg !815
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !815, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %131(ptr nonnull @.str.228), !dbg !815
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !815
  %133 = load i32, ptr %132, align 4, !dbg !815
  %134 = icmp eq i32 %133, 4, !dbg !815
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !815, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %135(ptr nonnull @.str.229), !dbg !815
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !815
  %137 = load i16, ptr %136, align 2, !dbg !815
  %138 = icmp eq i16 %137, 1, !dbg !815
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !815
  %140 = load i8, ptr %139, align 1, !dbg !815
  %141 = icmp eq i8 %140, 32, !dbg !815
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !815
  %143 = load i8, ptr %142, align 1, !dbg !815
  %144 = icmp eq i8 %143, 0, !dbg !815
  %145 = and i1 %141, %144, !dbg !815
  %146 = and i1 %138, %145, !dbg !815
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !815, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %147(ptr nonnull @.str.230), !dbg !815
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, align 8, !dbg !815, !tbaa !893
  %149 = and i64 %148, 4294967295, !dbg !815
  %150 = icmp eq i64 %149, 1, !dbg !815
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !815, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %151(ptr nonnull @.str.231), !dbg !815
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 1, !dbg !815
  %153 = load i64, ptr %152, align 8, !dbg !815, !tbaa !903
  %154 = and i64 %153, 4294967295, !dbg !815
  %155 = icmp eq i64 %154, 64, !dbg !815
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !815, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %156(ptr nonnull @.str.232), !dbg !815
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 2, !dbg !815
  %158 = load i64, ptr %157, align 8, !dbg !815, !tbaa !905
  %159 = and i64 %158, 4294967295, !dbg !815
  %160 = icmp eq i64 %159, 1, !dbg !815
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !815, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %161(ptr nonnull @.str.233), !dbg !815
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 3, !dbg !815
  %163 = load i64, ptr %162, align 8, !dbg !815, !tbaa !908
  %164 = and i64 %163, 4294967295, !dbg !815
  %165 = icmp eq i64 %164, 1, !dbg !815
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !815, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %166(ptr nonnull @.str.234), !dbg !815
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides, null, !dbg !815
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !815, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides, i64 1, !dbg !815
  %168 = load i64, ptr %167, align 8, !dbg !815, !tbaa !910
  %169 = and i64 %168, 4294967295, !dbg !815
  %170 = icmp eq i64 %169, 1, !dbg !815
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !815, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !815
  %172 = load i64, ptr %171, align 8, !dbg !815
  %173 = icmp eq i64 %172, 0, !dbg !815
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !815, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %174(ptr nonnull @.str.235), !dbg !815
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %175(ptr nonnull @.str.236), !dbg !815
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !815
  %177 = load i32, ptr %176, align 4, !dbg !815
  %178 = icmp eq i32 %177, 2, !dbg !815
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !815, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %179(ptr nonnull @.str.237), !dbg !815
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !815
  %181 = load i32, ptr %180, align 4, !dbg !815
  %182 = icmp eq i32 %dev_id, %181, !dbg !815
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !815, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %183(ptr nonnull @.str.238), !dbg !815
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !815
  %185 = load i32, ptr %184, align 4, !dbg !815
  %186 = icmp eq i32 %185, 4, !dbg !815
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !815, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %187(ptr nonnull @.str.239), !dbg !815
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !815
  %189 = load i16, ptr %188, align 2, !dbg !815
  %190 = icmp eq i16 %189, 1, !dbg !815
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !815
  %192 = load i8, ptr %191, align 1, !dbg !815
  %193 = icmp eq i8 %192, 8, !dbg !815
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !815
  %195 = load i8, ptr %194, align 1, !dbg !815
  %196 = icmp eq i8 %195, 0, !dbg !815
  %197 = and i1 %193, %196, !dbg !815
  %198 = and i1 %190, %197, !dbg !815
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !815, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %199(ptr nonnull @.str.240), !dbg !815
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !815, !tbaa !920
  %201 = and i64 %200, 4294967295, !dbg !815
  %202 = icmp eq i64 %201, 1, !dbg !815
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !815, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %203(ptr nonnull @.str.241), !dbg !815
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !815
  %205 = load i64, ptr %204, align 8, !dbg !815, !tbaa !930
  %206 = and i64 %205, 4294967295, !dbg !815
  %207 = icmp eq i64 %206, 64, !dbg !815
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !815, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %208(ptr nonnull @.str.242), !dbg !815
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !815
  %210 = load i64, ptr %209, align 8, !dbg !815, !tbaa !932
  %211 = and i64 %210, 4294967295, !dbg !815
  %212 = icmp eq i64 %211, 56, !dbg !815
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !815, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %213(ptr nonnull @.str.243), !dbg !815
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !815
  %215 = load i64, ptr %214, align 8, !dbg !815, !tbaa !935
  %216 = and i64 %215, 4294967295, !dbg !815
  %217 = icmp eq i64 %216, 56, !dbg !815
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !815, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %218(ptr nonnull @.str.244), !dbg !815
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !815
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !815, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !815
  %220 = load i64, ptr %219, align 8, !dbg !815, !tbaa !937
  %221 = and i64 %220, 4294967295, !dbg !815
  %222 = icmp eq i64 %221, 3136, !dbg !815
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !815
  %224 = load i64, ptr %223, align 8, !dbg !815, !tbaa !947
  %225 = and i64 %224, 4294967295, !dbg !815
  %226 = icmp eq i64 %225, 56, !dbg !815
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !815
  %228 = load i64, ptr %227, align 8, !dbg !815, !tbaa !950
  %229 = and i64 %228, 4294967295, !dbg !815
  %230 = icmp eq i64 %229, 1, !dbg !815
  %231 = and i1 %226, %230, !dbg !815
  %232 = and i1 %222, %231, !dbg !815
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !815, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !815
  %234 = load i64, ptr %233, align 8, !dbg !815
  %235 = icmp eq i64 %234, 0, !dbg !815
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !815, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %236(ptr nonnull @.str.245), !dbg !815
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %237(ptr nonnull @.str.246), !dbg !815
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !815
  %239 = load i32, ptr %238, align 4, !dbg !815
  %240 = icmp eq i32 %239, 2, !dbg !815
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !815, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %241(ptr nonnull @.str.247), !dbg !815
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !815
  %243 = load i32, ptr %242, align 4, !dbg !815
  %244 = icmp eq i32 %dev_id, %243, !dbg !815
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !815, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !815, !tbaa !19
  tail call void %245(ptr nonnull @.str.248), !dbg !815
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !815
  store i32 0, ptr %stack_tcode116, align 4, !dbg !815, !tbaa !952
  %246 = sext i32 %dev_id to i64, !dbg !815
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !815
  store i64 %246, ptr %247, align 8, !dbg !815
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !815
  store i32 0, ptr %248, align 4, !dbg !815, !tbaa !963
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !815
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !815
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !815, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !815
  %.not120 = icmp eq ptr %252, null, !dbg !815
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !815, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !815, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !815, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !815
  %256 = icmp eq i32 %255, 0, !dbg !815
  br i1 %256, label %call_end, label %common.ret, !dbg !815, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !815
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !815
  %259 = icmp eq i32 %258, 0, !dbg !815
  br i1 %259, label %call_end106, label %common.ret, !dbg !815, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !815
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !815
  br label %handle_init_end, !dbg !815

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !815
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !965 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !967, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !968, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !969, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !970, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !971, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !972, metadata !DIExpression()), !dbg !973
  %0 = alloca ptr, align 8, !dbg !973
  %stack_value115 = alloca [7 x %0], align 8, !dbg !973
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !973
  %1 = icmp eq i32 %num_args, 4, !dbg !973
  br i1 %1, label %assert_end, label %assert_fail, !dbg !973, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !973

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %2(ptr nonnull @.str.250), !dbg !973
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !973, !tbaa !974
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !973
  %p1.code = load i32, ptr %3, align 4, !dbg !973, !tbaa !985
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !973
  %p2.code = load i32, ptr %4, align 4, !dbg !973, !tbaa !987
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !973
  %T_cast.code = load i32, ptr %5, align 4, !dbg !973, !tbaa !990
  %p0 = load ptr, ptr %args, align 8, !dbg !973
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !973
  %p1 = load ptr, ptr %6, align 8, !dbg !973
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !973
  %p2 = load ptr, ptr %7, align 8, !dbg !973
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !973
  %T_cast = load ptr, ptr %8, align 8, !dbg !973
  %p0108 = load ptr, ptr %p0, align 8, !dbg !973
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !973
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape = load ptr, ptr %9, align 8, !dbg !973
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides = load ptr, ptr %10, align 8, !dbg !973
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !973
  %dev_id = load i32, ptr %11, align 4, !dbg !973
  %p1109 = load ptr, ptr %p1, align 8, !dbg !973
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !973
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape = load ptr, ptr %12, align 8, !dbg !973
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.strides = load ptr, ptr %13, align 8, !dbg !973
  %p2110 = load ptr, ptr %p2, align 8, !dbg !973
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !973
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape = load ptr, ptr %14, align 8, !dbg !973
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.strides = load ptr, ptr %15, align 8, !dbg !973
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !973
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !973
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape = load ptr, ptr %16, align 8, !dbg !973
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !973
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides = load ptr, ptr %17, align 8, !dbg !973
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !973

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %18(ptr nonnull @.str.251), !dbg !973
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !973

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %19(ptr nonnull @.str.252), !dbg !973
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !973

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %20(ptr nonnull @.str.253), !dbg !973
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !973

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %21(ptr nonnull @.str.254), !dbg !973
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !973
  %23 = load i32, ptr %22, align 4, !dbg !973
  %24 = icmp eq i32 %23, 4, !dbg !973
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !973, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %25(ptr nonnull @.str.255), !dbg !973
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !973
  %27 = load i16, ptr %26, align 2, !dbg !973
  %28 = icmp eq i16 %27, 1, !dbg !973
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !973
  %30 = load i8, ptr %29, align 1, !dbg !973
  %31 = icmp eq i8 %30, 8, !dbg !973
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !973
  %33 = load i8, ptr %32, align 1, !dbg !973
  %34 = icmp eq i8 %33, 0, !dbg !973
  %35 = and i1 %31, %34, !dbg !973
  %36 = and i1 %28, %35, !dbg !973
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !973, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %37(ptr nonnull @.str.256), !dbg !973
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape, align 8, !dbg !973, !tbaa !992
  %39 = and i64 %38, 4294967295, !dbg !973
  %40 = icmp eq i64 %39, 1, !dbg !973
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !973, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %41(ptr nonnull @.str.257), !dbg !973
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape, i64 1, !dbg !973
  %43 = load i64, ptr %42, align 8, !dbg !973, !tbaa !1002
  %44 = and i64 %43, 4294967295, !dbg !973
  %45 = icmp eq i64 %44, 512, !dbg !973
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !973, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %46(ptr nonnull @.str.258), !dbg !973
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape, i64 2, !dbg !973
  %48 = load i64, ptr %47, align 8, !dbg !973, !tbaa !1004
  %49 = and i64 %48, 4294967295, !dbg !973
  %50 = icmp eq i64 %49, 7, !dbg !973
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !973, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %51(ptr nonnull @.str.259), !dbg !973
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.shape, i64 3, !dbg !973
  %53 = load i64, ptr %52, align 8, !dbg !973, !tbaa !1007
  %54 = and i64 %53, 4294967295, !dbg !973
  %55 = icmp eq i64 %54, 7, !dbg !973
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !973, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %56(ptr nonnull @.str.260), !dbg !973
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides, null, !dbg !973
  br i1 %.not, label %if_end, label %if_then, !dbg !973, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides, i64 1, !dbg !973
  %58 = load i64, ptr %57, align 8, !dbg !973, !tbaa !1009
  %59 = and i64 %58, 4294967295, !dbg !973
  %60 = icmp eq i64 %59, 49, !dbg !973
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides, i64 2, !dbg !973
  %62 = load i64, ptr %61, align 8, !dbg !973, !tbaa !1019
  %63 = and i64 %62, 4294967295, !dbg !973
  %64 = icmp eq i64 %63, 7, !dbg !973
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p0.strides, i64 3, !dbg !973
  %66 = load i64, ptr %65, align 8, !dbg !973, !tbaa !1022
  %67 = and i64 %66, 4294967295, !dbg !973
  %68 = icmp eq i64 %67, 1, !dbg !973
  %69 = and i1 %64, %68, !dbg !973
  %70 = and i1 %60, %69, !dbg !973
  br i1 %70, label %if_end, label %assert_fail27, !dbg !973, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !973
  %72 = load i64, ptr %71, align 8, !dbg !973
  %73 = icmp eq i64 %72, 0, !dbg !973
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !973, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %74(ptr nonnull @.str.261), !dbg !973
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %75(ptr nonnull @.str.262), !dbg !973
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !973
  %77 = load i32, ptr %76, align 4, !dbg !973
  %78 = icmp eq i32 %77, 2, !dbg !973
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !973, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %79(ptr nonnull @.str.263), !dbg !973
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !973
  %81 = load i32, ptr %80, align 4, !dbg !973
  %82 = icmp eq i32 %81, 4, !dbg !973
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !973, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %83(ptr nonnull @.str.264), !dbg !973
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !973
  %85 = load i16, ptr %84, align 2, !dbg !973
  %86 = icmp eq i16 %85, 1, !dbg !973
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !973
  %88 = load i8, ptr %87, align 1, !dbg !973
  %89 = icmp eq i8 %88, 32, !dbg !973
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !973
  %91 = load i8, ptr %90, align 1, !dbg !973
  %92 = icmp eq i8 %91, 0, !dbg !973
  %93 = and i1 %89, %92, !dbg !973
  %94 = and i1 %86, %93, !dbg !973
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !973, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %95(ptr nonnull @.str.265), !dbg !973
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape, align 8, !dbg !973, !tbaa !1024
  %97 = and i64 %96, 4294967295, !dbg !973
  %98 = icmp eq i64 %97, 1, !dbg !973
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !973, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %99(ptr nonnull @.str.266), !dbg !973
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape, i64 1, !dbg !973
  %101 = load i64, ptr %100, align 8, !dbg !973, !tbaa !1034
  %102 = and i64 %101, 4294967295, !dbg !973
  %103 = icmp eq i64 %102, 512, !dbg !973
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !973, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %104(ptr nonnull @.str.267), !dbg !973
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape, i64 2, !dbg !973
  %106 = load i64, ptr %105, align 8, !dbg !973, !tbaa !1036
  %107 = and i64 %106, 4294967295, !dbg !973
  %108 = icmp eq i64 %107, 1, !dbg !973
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !973, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %109(ptr nonnull @.str.268), !dbg !973
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.shape, i64 3, !dbg !973
  %111 = load i64, ptr %110, align 8, !dbg !973, !tbaa !1039
  %112 = and i64 %111, 4294967295, !dbg !973
  %113 = icmp eq i64 %112, 1, !dbg !973
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !973, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %114(ptr nonnull @.str.269), !dbg !973
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.strides, null, !dbg !973
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !973, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p1.strides, i64 1, !dbg !973
  %116 = load i64, ptr %115, align 8, !dbg !973, !tbaa !1041
  %117 = and i64 %116, 4294967295, !dbg !973
  %118 = icmp eq i64 %117, 1, !dbg !973
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !973, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !973
  %120 = load i64, ptr %119, align 8, !dbg !973
  %121 = icmp eq i64 %120, 0, !dbg !973
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !973, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %122(ptr nonnull @.str.270), !dbg !973
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %123(ptr nonnull @.str.271), !dbg !973
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !973
  %125 = load i32, ptr %124, align 4, !dbg !973
  %126 = icmp eq i32 %125, 2, !dbg !973
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !973, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %127(ptr nonnull @.str.272), !dbg !973
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !973
  %129 = load i32, ptr %128, align 4, !dbg !973
  %130 = icmp eq i32 %dev_id, %129, !dbg !973
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !973, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %131(ptr nonnull @.str.273), !dbg !973
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !973
  %133 = load i32, ptr %132, align 4, !dbg !973
  %134 = icmp eq i32 %133, 4, !dbg !973
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !973, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %135(ptr nonnull @.str.274), !dbg !973
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !973
  %137 = load i16, ptr %136, align 2, !dbg !973
  %138 = icmp eq i16 %137, 1, !dbg !973
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !973
  %140 = load i8, ptr %139, align 1, !dbg !973
  %141 = icmp eq i8 %140, 32, !dbg !973
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !973
  %143 = load i8, ptr %142, align 1, !dbg !973
  %144 = icmp eq i8 %143, 0, !dbg !973
  %145 = and i1 %141, %144, !dbg !973
  %146 = and i1 %138, %145, !dbg !973
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !973, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %147(ptr nonnull @.str.275), !dbg !973
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape, align 8, !dbg !973, !tbaa !1051
  %149 = and i64 %148, 4294967295, !dbg !973
  %150 = icmp eq i64 %149, 1, !dbg !973
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !973, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %151(ptr nonnull @.str.276), !dbg !973
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape, i64 1, !dbg !973
  %153 = load i64, ptr %152, align 8, !dbg !973, !tbaa !1061
  %154 = and i64 %153, 4294967295, !dbg !973
  %155 = icmp eq i64 %154, 512, !dbg !973
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !973, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %156(ptr nonnull @.str.277), !dbg !973
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape, i64 2, !dbg !973
  %158 = load i64, ptr %157, align 8, !dbg !973, !tbaa !1063
  %159 = and i64 %158, 4294967295, !dbg !973
  %160 = icmp eq i64 %159, 1, !dbg !973
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !973, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %161(ptr nonnull @.str.278), !dbg !973
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.shape, i64 3, !dbg !973
  %163 = load i64, ptr %162, align 8, !dbg !973, !tbaa !1066
  %164 = and i64 %163, 4294967295, !dbg !973
  %165 = icmp eq i64 %164, 1, !dbg !973
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !973, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %166(ptr nonnull @.str.279), !dbg !973
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.strides, null, !dbg !973
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !973, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.p2.strides, i64 1, !dbg !973
  %168 = load i64, ptr %167, align 8, !dbg !973, !tbaa !1068
  %169 = and i64 %168, 4294967295, !dbg !973
  %170 = icmp eq i64 %169, 1, !dbg !973
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !973, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !973
  %172 = load i64, ptr %171, align 8, !dbg !973
  %173 = icmp eq i64 %172, 0, !dbg !973
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !973, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %174(ptr nonnull @.str.280), !dbg !973
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %175(ptr nonnull @.str.281), !dbg !973
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !973
  %177 = load i32, ptr %176, align 4, !dbg !973
  %178 = icmp eq i32 %177, 2, !dbg !973
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !973, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %179(ptr nonnull @.str.282), !dbg !973
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !973
  %181 = load i32, ptr %180, align 4, !dbg !973
  %182 = icmp eq i32 %dev_id, %181, !dbg !973
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !973, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %183(ptr nonnull @.str.283), !dbg !973
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !973
  %185 = load i32, ptr %184, align 4, !dbg !973
  %186 = icmp eq i32 %185, 4, !dbg !973
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !973, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %187(ptr nonnull @.str.284), !dbg !973
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !973
  %189 = load i16, ptr %188, align 2, !dbg !973
  %190 = icmp eq i16 %189, 1, !dbg !973
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !973
  %192 = load i8, ptr %191, align 1, !dbg !973
  %193 = icmp eq i8 %192, 8, !dbg !973
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !973
  %195 = load i8, ptr %194, align 1, !dbg !973
  %196 = icmp eq i8 %195, 0, !dbg !973
  %197 = and i1 %193, %196, !dbg !973
  %198 = and i1 %190, %197, !dbg !973
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !973, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %199(ptr nonnull @.str.285), !dbg !973
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape, align 8, !dbg !973, !tbaa !1078
  %201 = and i64 %200, 4294967295, !dbg !973
  %202 = icmp eq i64 %201, 1, !dbg !973
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !973, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %203(ptr nonnull @.str.286), !dbg !973
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape, i64 1, !dbg !973
  %205 = load i64, ptr %204, align 8, !dbg !973, !tbaa !1088
  %206 = and i64 %205, 4294967295, !dbg !973
  %207 = icmp eq i64 %206, 512, !dbg !973
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !973, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %208(ptr nonnull @.str.287), !dbg !973
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape, i64 2, !dbg !973
  %210 = load i64, ptr %209, align 8, !dbg !973, !tbaa !1090
  %211 = and i64 %210, 4294967295, !dbg !973
  %212 = icmp eq i64 %211, 7, !dbg !973
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !973, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %213(ptr nonnull @.str.288), !dbg !973
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.shape, i64 3, !dbg !973
  %215 = load i64, ptr %214, align 8, !dbg !973, !tbaa !1093
  %216 = and i64 %215, 4294967295, !dbg !973
  %217 = icmp eq i64 %216, 7, !dbg !973
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !973, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %218(ptr nonnull @.str.289), !dbg !973
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides, null, !dbg !973
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !973, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides, i64 1, !dbg !973
  %220 = load i64, ptr %219, align 8, !dbg !973, !tbaa !1095
  %221 = and i64 %220, 4294967295, !dbg !973
  %222 = icmp eq i64 %221, 49, !dbg !973
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides, i64 2, !dbg !973
  %224 = load i64, ptr %223, align 8, !dbg !973, !tbaa !1105
  %225 = and i64 %224, 4294967295, !dbg !973
  %226 = icmp eq i64 %225, 7, !dbg !973
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10.T_cast.strides, i64 3, !dbg !973
  %228 = load i64, ptr %227, align 8, !dbg !973, !tbaa !1108
  %229 = and i64 %228, 4294967295, !dbg !973
  %230 = icmp eq i64 %229, 1, !dbg !973
  %231 = and i1 %226, %230, !dbg !973
  %232 = and i1 %222, %231, !dbg !973
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !973, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !973
  %234 = load i64, ptr %233, align 8, !dbg !973
  %235 = icmp eq i64 %234, 0, !dbg !973
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !973, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %236(ptr nonnull @.str.290), !dbg !973
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %237(ptr nonnull @.str.291), !dbg !973
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !973
  %239 = load i32, ptr %238, align 4, !dbg !973
  %240 = icmp eq i32 %239, 2, !dbg !973
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !973, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %241(ptr nonnull @.str.292), !dbg !973
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !973
  %243 = load i32, ptr %242, align 4, !dbg !973
  %244 = icmp eq i32 %dev_id, %243, !dbg !973
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !973, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !973, !tbaa !19
  tail call void %245(ptr nonnull @.str.293), !dbg !973
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !973
  store i32 0, ptr %stack_tcode116, align 4, !dbg !973, !tbaa !1110
  %246 = sext i32 %dev_id to i64, !dbg !973
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !973
  store i64 %246, ptr %247, align 8, !dbg !973
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !973
  store i32 0, ptr %248, align 4, !dbg !973, !tbaa !1121
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !973
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !973
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !973, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !973
  %.not120 = icmp eq ptr %252, null, !dbg !973
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !973, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !973, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !973, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !973
  %256 = icmp eq i32 %255, 0, !dbg !973
  br i1 %256, label %call_end, label %common.ret, !dbg !973, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !973
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !973
  %259 = icmp eq i32 %258, 0, !dbg !973
  br i1 %259, label %call_end106, label %common.ret, !dbg !973, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !973
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !973
  br label %handle_init_end, !dbg !973

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !973
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1123 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1125, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1126, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1127, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1129, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1130, metadata !DIExpression()), !dbg !1131
  %0 = alloca ptr, align 8, !dbg !1131
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1131
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1131
  %1 = icmp eq i32 %num_args, 4, !dbg !1131
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1131, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1131

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %2(ptr nonnull @.str.295), !dbg !1131
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1131, !tbaa !1132
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1131
  %p1.code = load i32, ptr %3, align 4, !dbg !1131, !tbaa !1143
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1131
  %p2.code = load i32, ptr %4, align 4, !dbg !1131, !tbaa !1145
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1131
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1131, !tbaa !1148
  %p0 = load ptr, ptr %args, align 8, !dbg !1131
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1131
  %p1 = load ptr, ptr %6, align 8, !dbg !1131
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1131
  %p2 = load ptr, ptr %7, align 8, !dbg !1131
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1131
  %T_cast = load ptr, ptr %8, align 8, !dbg !1131
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1131
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1131
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %9, align 8, !dbg !1131
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %10, align 8, !dbg !1131
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1131
  %dev_id = load i32, ptr %11, align 4, !dbg !1131
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1131
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1131
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %12, align 8, !dbg !1131
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %13, align 8, !dbg !1131
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1131
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1131
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape = load ptr, ptr %14, align 8, !dbg !1131
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides = load ptr, ptr %15, align 8, !dbg !1131
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1131
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1131
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1131
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1131
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1131
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1131

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %18(ptr nonnull @.str.296), !dbg !1131
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1131

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %19(ptr nonnull @.str.297), !dbg !1131
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1131

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %20(ptr nonnull @.str.298), !dbg !1131
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1131

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %21(ptr nonnull @.str.299), !dbg !1131
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1131
  %23 = load i32, ptr %22, align 4, !dbg !1131
  %24 = icmp eq i32 %23, 4, !dbg !1131
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1131, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %25(ptr nonnull @.str.300), !dbg !1131
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1131
  %27 = load i16, ptr %26, align 2, !dbg !1131
  %28 = icmp eq i16 %27, 1, !dbg !1131
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1131
  %30 = load i8, ptr %29, align 1, !dbg !1131
  %31 = icmp eq i8 %30, 8, !dbg !1131
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1131
  %33 = load i8, ptr %32, align 1, !dbg !1131
  %34 = icmp eq i8 %33, 0, !dbg !1131
  %35 = and i1 %31, %34, !dbg !1131
  %36 = and i1 %28, %35, !dbg !1131
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1131, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %37(ptr nonnull @.str.301), !dbg !1131
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !1131, !tbaa !1150
  %39 = and i64 %38, 4294967295, !dbg !1131
  %40 = icmp eq i64 %39, 1, !dbg !1131
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1131, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %41(ptr nonnull @.str.302), !dbg !1131
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !1131
  %43 = load i64, ptr %42, align 8, !dbg !1131, !tbaa !1160
  %44 = and i64 %43, 4294967295, !dbg !1131
  %45 = icmp eq i64 %44, 64, !dbg !1131
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1131, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %46(ptr nonnull @.str.303), !dbg !1131
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !1131
  %48 = load i64, ptr %47, align 8, !dbg !1131, !tbaa !1162
  %49 = and i64 %48, 4294967295, !dbg !1131
  %50 = icmp eq i64 %49, 56, !dbg !1131
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1131, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %51(ptr nonnull @.str.304), !dbg !1131
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !1131
  %53 = load i64, ptr %52, align 8, !dbg !1131, !tbaa !1165
  %54 = and i64 %53, 4294967295, !dbg !1131
  %55 = icmp eq i64 %54, 56, !dbg !1131
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1131, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %56(ptr nonnull @.str.305), !dbg !1131
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, null, !dbg !1131
  br i1 %.not, label %if_end, label %if_then, !dbg !1131, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !1131
  %58 = load i64, ptr %57, align 8, !dbg !1131, !tbaa !1167
  %59 = and i64 %58, 4294967295, !dbg !1131
  %60 = icmp eq i64 %59, 3136, !dbg !1131
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !1131
  %62 = load i64, ptr %61, align 8, !dbg !1131, !tbaa !1177
  %63 = and i64 %62, 4294967295, !dbg !1131
  %64 = icmp eq i64 %63, 56, !dbg !1131
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !1131
  %66 = load i64, ptr %65, align 8, !dbg !1131, !tbaa !1180
  %67 = and i64 %66, 4294967295, !dbg !1131
  %68 = icmp eq i64 %67, 1, !dbg !1131
  %69 = and i1 %64, %68, !dbg !1131
  %70 = and i1 %60, %69, !dbg !1131
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1131, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1131
  %72 = load i64, ptr %71, align 8, !dbg !1131
  %73 = icmp eq i64 %72, 0, !dbg !1131
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1131, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %74(ptr nonnull @.str.306), !dbg !1131
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %75(ptr nonnull @.str.307), !dbg !1131
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1131
  %77 = load i32, ptr %76, align 4, !dbg !1131
  %78 = icmp eq i32 %77, 2, !dbg !1131
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1131, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %79(ptr nonnull @.str.308), !dbg !1131
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1131
  %81 = load i32, ptr %80, align 4, !dbg !1131
  %82 = icmp eq i32 %81, 4, !dbg !1131
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1131, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %83(ptr nonnull @.str.309), !dbg !1131
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1131
  %85 = load i16, ptr %84, align 2, !dbg !1131
  %86 = icmp eq i16 %85, 1, !dbg !1131
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1131
  %88 = load i8, ptr %87, align 1, !dbg !1131
  %89 = icmp eq i8 %88, 32, !dbg !1131
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1131
  %91 = load i8, ptr %90, align 1, !dbg !1131
  %92 = icmp eq i8 %91, 0, !dbg !1131
  %93 = and i1 %89, %92, !dbg !1131
  %94 = and i1 %86, %93, !dbg !1131
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1131, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %95(ptr nonnull @.str.310), !dbg !1131
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !1131, !tbaa !1182
  %97 = and i64 %96, 4294967295, !dbg !1131
  %98 = icmp eq i64 %97, 1, !dbg !1131
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1131, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %99(ptr nonnull @.str.311), !dbg !1131
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !1131
  %101 = load i64, ptr %100, align 8, !dbg !1131, !tbaa !1192
  %102 = and i64 %101, 4294967295, !dbg !1131
  %103 = icmp eq i64 %102, 64, !dbg !1131
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1131, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %104(ptr nonnull @.str.312), !dbg !1131
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !1131
  %106 = load i64, ptr %105, align 8, !dbg !1131, !tbaa !1194
  %107 = and i64 %106, 4294967295, !dbg !1131
  %108 = icmp eq i64 %107, 1, !dbg !1131
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1131, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %109(ptr nonnull @.str.313), !dbg !1131
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !1131
  %111 = load i64, ptr %110, align 8, !dbg !1131, !tbaa !1197
  %112 = and i64 %111, 4294967295, !dbg !1131
  %113 = icmp eq i64 %112, 1, !dbg !1131
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1131, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %114(ptr nonnull @.str.314), !dbg !1131
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides, null, !dbg !1131
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1131, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !1131
  %116 = load i64, ptr %115, align 8, !dbg !1131, !tbaa !1199
  %117 = and i64 %116, 4294967295, !dbg !1131
  %118 = icmp eq i64 %117, 1, !dbg !1131
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1131, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1131
  %120 = load i64, ptr %119, align 8, !dbg !1131
  %121 = icmp eq i64 %120, 0, !dbg !1131
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1131, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %122(ptr nonnull @.str.315), !dbg !1131
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %123(ptr nonnull @.str.316), !dbg !1131
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1131
  %125 = load i32, ptr %124, align 4, !dbg !1131
  %126 = icmp eq i32 %125, 2, !dbg !1131
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1131, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %127(ptr nonnull @.str.317), !dbg !1131
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1131
  %129 = load i32, ptr %128, align 4, !dbg !1131
  %130 = icmp eq i32 %dev_id, %129, !dbg !1131
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1131, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %131(ptr nonnull @.str.318), !dbg !1131
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1131
  %133 = load i32, ptr %132, align 4, !dbg !1131
  %134 = icmp eq i32 %133, 4, !dbg !1131
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1131, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %135(ptr nonnull @.str.319), !dbg !1131
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1131
  %137 = load i16, ptr %136, align 2, !dbg !1131
  %138 = icmp eq i16 %137, 1, !dbg !1131
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1131
  %140 = load i8, ptr %139, align 1, !dbg !1131
  %141 = icmp eq i8 %140, 32, !dbg !1131
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1131
  %143 = load i8, ptr %142, align 1, !dbg !1131
  %144 = icmp eq i8 %143, 0, !dbg !1131
  %145 = and i1 %141, %144, !dbg !1131
  %146 = and i1 %138, %145, !dbg !1131
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1131, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %147(ptr nonnull @.str.320), !dbg !1131
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, align 8, !dbg !1131, !tbaa !1209
  %149 = and i64 %148, 4294967295, !dbg !1131
  %150 = icmp eq i64 %149, 1, !dbg !1131
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1131, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %151(ptr nonnull @.str.321), !dbg !1131
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 1, !dbg !1131
  %153 = load i64, ptr %152, align 8, !dbg !1131, !tbaa !1219
  %154 = and i64 %153, 4294967295, !dbg !1131
  %155 = icmp eq i64 %154, 64, !dbg !1131
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1131, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %156(ptr nonnull @.str.322), !dbg !1131
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 2, !dbg !1131
  %158 = load i64, ptr %157, align 8, !dbg !1131, !tbaa !1221
  %159 = and i64 %158, 4294967295, !dbg !1131
  %160 = icmp eq i64 %159, 1, !dbg !1131
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1131, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %161(ptr nonnull @.str.323), !dbg !1131
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 3, !dbg !1131
  %163 = load i64, ptr %162, align 8, !dbg !1131, !tbaa !1224
  %164 = and i64 %163, 4294967295, !dbg !1131
  %165 = icmp eq i64 %164, 1, !dbg !1131
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1131, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %166(ptr nonnull @.str.324), !dbg !1131
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides, null, !dbg !1131
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1131, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides, i64 1, !dbg !1131
  %168 = load i64, ptr %167, align 8, !dbg !1131, !tbaa !1226
  %169 = and i64 %168, 4294967295, !dbg !1131
  %170 = icmp eq i64 %169, 1, !dbg !1131
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1131, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1131
  %172 = load i64, ptr %171, align 8, !dbg !1131
  %173 = icmp eq i64 %172, 0, !dbg !1131
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1131, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %174(ptr nonnull @.str.325), !dbg !1131
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %175(ptr nonnull @.str.326), !dbg !1131
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1131
  %177 = load i32, ptr %176, align 4, !dbg !1131
  %178 = icmp eq i32 %177, 2, !dbg !1131
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1131, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %179(ptr nonnull @.str.327), !dbg !1131
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1131
  %181 = load i32, ptr %180, align 4, !dbg !1131
  %182 = icmp eq i32 %dev_id, %181, !dbg !1131
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1131, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %183(ptr nonnull @.str.328), !dbg !1131
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1131
  %185 = load i32, ptr %184, align 4, !dbg !1131
  %186 = icmp eq i32 %185, 4, !dbg !1131
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1131, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %187(ptr nonnull @.str.329), !dbg !1131
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1131
  %189 = load i16, ptr %188, align 2, !dbg !1131
  %190 = icmp eq i16 %189, 1, !dbg !1131
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1131
  %192 = load i8, ptr %191, align 1, !dbg !1131
  %193 = icmp eq i8 %192, 8, !dbg !1131
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1131
  %195 = load i8, ptr %194, align 1, !dbg !1131
  %196 = icmp eq i8 %195, 0, !dbg !1131
  %197 = and i1 %193, %196, !dbg !1131
  %198 = and i1 %190, %197, !dbg !1131
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1131, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %199(ptr nonnull @.str.330), !dbg !1131
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !1131, !tbaa !1236
  %201 = and i64 %200, 4294967295, !dbg !1131
  %202 = icmp eq i64 %201, 1, !dbg !1131
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1131, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %203(ptr nonnull @.str.331), !dbg !1131
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !1131
  %205 = load i64, ptr %204, align 8, !dbg !1131, !tbaa !1246
  %206 = and i64 %205, 4294967295, !dbg !1131
  %207 = icmp eq i64 %206, 64, !dbg !1131
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1131, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %208(ptr nonnull @.str.332), !dbg !1131
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !1131
  %210 = load i64, ptr %209, align 8, !dbg !1131, !tbaa !1248
  %211 = and i64 %210, 4294967295, !dbg !1131
  %212 = icmp eq i64 %211, 56, !dbg !1131
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1131, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %213(ptr nonnull @.str.333), !dbg !1131
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !1131
  %215 = load i64, ptr %214, align 8, !dbg !1131, !tbaa !1251
  %216 = and i64 %215, 4294967295, !dbg !1131
  %217 = icmp eq i64 %216, 56, !dbg !1131
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1131, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %218(ptr nonnull @.str.334), !dbg !1131
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !1131
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1131, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !1131
  %220 = load i64, ptr %219, align 8, !dbg !1131, !tbaa !1253
  %221 = and i64 %220, 4294967295, !dbg !1131
  %222 = icmp eq i64 %221, 3136, !dbg !1131
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !1131
  %224 = load i64, ptr %223, align 8, !dbg !1131, !tbaa !1263
  %225 = and i64 %224, 4294967295, !dbg !1131
  %226 = icmp eq i64 %225, 56, !dbg !1131
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !1131
  %228 = load i64, ptr %227, align 8, !dbg !1131, !tbaa !1266
  %229 = and i64 %228, 4294967295, !dbg !1131
  %230 = icmp eq i64 %229, 1, !dbg !1131
  %231 = and i1 %226, %230, !dbg !1131
  %232 = and i1 %222, %231, !dbg !1131
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1131, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1131
  %234 = load i64, ptr %233, align 8, !dbg !1131
  %235 = icmp eq i64 %234, 0, !dbg !1131
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1131, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %236(ptr nonnull @.str.335), !dbg !1131
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %237(ptr nonnull @.str.336), !dbg !1131
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1131
  %239 = load i32, ptr %238, align 4, !dbg !1131
  %240 = icmp eq i32 %239, 2, !dbg !1131
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1131, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %241(ptr nonnull @.str.337), !dbg !1131
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1131
  %243 = load i32, ptr %242, align 4, !dbg !1131
  %244 = icmp eq i32 %dev_id, %243, !dbg !1131
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1131, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1131, !tbaa !19
  tail call void %245(ptr nonnull @.str.338), !dbg !1131
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1131
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1131, !tbaa !1268
  %246 = sext i32 %dev_id to i64, !dbg !1131
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1131
  store i64 %246, ptr %247, align 8, !dbg !1131
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1131
  store i32 0, ptr %248, align 4, !dbg !1131, !tbaa !1279
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1131
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1131
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1131, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1131
  %.not120 = icmp eq ptr %252, null, !dbg !1131
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1131, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1131, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1131, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1131
  %256 = icmp eq i32 %255, 0, !dbg !1131
  br i1 %256, label %call_end, label %common.ret, !dbg !1131, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1131
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1131
  %259 = icmp eq i32 %258, 0, !dbg !1131
  br i1 %259, label %call_end106, label %common.ret, !dbg !1131, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1131
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1131
  br label %handle_init_end, !dbg !1131

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1131
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1281 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1283, metadata !DIExpression()), !dbg !1289
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1284, metadata !DIExpression()), !dbg !1289
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1285, metadata !DIExpression()), !dbg !1289
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1286, metadata !DIExpression()), !dbg !1289
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1287, metadata !DIExpression()), !dbg !1289
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1288, metadata !DIExpression()), !dbg !1289
  %0 = alloca ptr, align 8, !dbg !1289
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1289
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1289
  %1 = icmp eq i32 %num_args, 4, !dbg !1289
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1289, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1289

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %2(ptr nonnull @.str.340), !dbg !1289
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1289, !tbaa !1290
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1289
  %p1.code = load i32, ptr %3, align 4, !dbg !1289, !tbaa !1301
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1289
  %p2.code = load i32, ptr %4, align 4, !dbg !1289, !tbaa !1303
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1289
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1289, !tbaa !1306
  %p0 = load ptr, ptr %args, align 8, !dbg !1289
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1289
  %p1 = load ptr, ptr %6, align 8, !dbg !1289
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1289
  %p2 = load ptr, ptr %7, align 8, !dbg !1289
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1289
  %T_cast = load ptr, ptr %8, align 8, !dbg !1289
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1289
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1289
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %9, align 8, !dbg !1289
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %10, align 8, !dbg !1289
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1289
  %dev_id = load i32, ptr %11, align 4, !dbg !1289
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1289
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1289
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %12, align 8, !dbg !1289
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %13, align 8, !dbg !1289
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1289
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1289
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape = load ptr, ptr %14, align 8, !dbg !1289
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides = load ptr, ptr %15, align 8, !dbg !1289
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1289
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1289
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1289
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1289
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1289
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1289

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %18(ptr nonnull @.str.341), !dbg !1289
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1289

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %19(ptr nonnull @.str.342), !dbg !1289
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1289

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %20(ptr nonnull @.str.343), !dbg !1289
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1289

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %21(ptr nonnull @.str.344), !dbg !1289
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1289
  %23 = load i32, ptr %22, align 4, !dbg !1289
  %24 = icmp eq i32 %23, 4, !dbg !1289
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1289, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %25(ptr nonnull @.str.345), !dbg !1289
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1289
  %27 = load i16, ptr %26, align 2, !dbg !1289
  %28 = icmp eq i16 %27, 1, !dbg !1289
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1289
  %30 = load i8, ptr %29, align 1, !dbg !1289
  %31 = icmp eq i8 %30, 8, !dbg !1289
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1289
  %33 = load i8, ptr %32, align 1, !dbg !1289
  %34 = icmp eq i8 %33, 0, !dbg !1289
  %35 = and i1 %31, %34, !dbg !1289
  %36 = and i1 %28, %35, !dbg !1289
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1289, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %37(ptr nonnull @.str.346), !dbg !1289
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !1289, !tbaa !1308
  %39 = and i64 %38, 4294967295, !dbg !1289
  %40 = icmp eq i64 %39, 1, !dbg !1289
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1289, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %41(ptr nonnull @.str.347), !dbg !1289
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !1289
  %43 = load i64, ptr %42, align 8, !dbg !1289, !tbaa !1318
  %44 = and i64 %43, 4294967295, !dbg !1289
  %45 = icmp eq i64 %44, 128, !dbg !1289
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1289, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %46(ptr nonnull @.str.348), !dbg !1289
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !1289
  %48 = load i64, ptr %47, align 8, !dbg !1289, !tbaa !1320
  %49 = and i64 %48, 4294967295, !dbg !1289
  %50 = icmp eq i64 %49, 56, !dbg !1289
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1289, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %51(ptr nonnull @.str.349), !dbg !1289
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !1289
  %53 = load i64, ptr %52, align 8, !dbg !1289, !tbaa !1323
  %54 = and i64 %53, 4294967295, !dbg !1289
  %55 = icmp eq i64 %54, 56, !dbg !1289
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1289, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %56(ptr nonnull @.str.350), !dbg !1289
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, null, !dbg !1289
  br i1 %.not, label %if_end, label %if_then, !dbg !1289, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !1289
  %58 = load i64, ptr %57, align 8, !dbg !1289, !tbaa !1325
  %59 = and i64 %58, 4294967295, !dbg !1289
  %60 = icmp eq i64 %59, 3136, !dbg !1289
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !1289
  %62 = load i64, ptr %61, align 8, !dbg !1289, !tbaa !1335
  %63 = and i64 %62, 4294967295, !dbg !1289
  %64 = icmp eq i64 %63, 56, !dbg !1289
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !1289
  %66 = load i64, ptr %65, align 8, !dbg !1289, !tbaa !1338
  %67 = and i64 %66, 4294967295, !dbg !1289
  %68 = icmp eq i64 %67, 1, !dbg !1289
  %69 = and i1 %64, %68, !dbg !1289
  %70 = and i1 %60, %69, !dbg !1289
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1289, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1289
  %72 = load i64, ptr %71, align 8, !dbg !1289
  %73 = icmp eq i64 %72, 0, !dbg !1289
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1289, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %74(ptr nonnull @.str.351), !dbg !1289
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %75(ptr nonnull @.str.352), !dbg !1289
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1289
  %77 = load i32, ptr %76, align 4, !dbg !1289
  %78 = icmp eq i32 %77, 2, !dbg !1289
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1289, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %79(ptr nonnull @.str.353), !dbg !1289
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1289
  %81 = load i32, ptr %80, align 4, !dbg !1289
  %82 = icmp eq i32 %81, 4, !dbg !1289
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1289, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %83(ptr nonnull @.str.354), !dbg !1289
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1289
  %85 = load i16, ptr %84, align 2, !dbg !1289
  %86 = icmp eq i16 %85, 1, !dbg !1289
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1289
  %88 = load i8, ptr %87, align 1, !dbg !1289
  %89 = icmp eq i8 %88, 32, !dbg !1289
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1289
  %91 = load i8, ptr %90, align 1, !dbg !1289
  %92 = icmp eq i8 %91, 0, !dbg !1289
  %93 = and i1 %89, %92, !dbg !1289
  %94 = and i1 %86, %93, !dbg !1289
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1289, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %95(ptr nonnull @.str.355), !dbg !1289
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !1289, !tbaa !1340
  %97 = and i64 %96, 4294967295, !dbg !1289
  %98 = icmp eq i64 %97, 1, !dbg !1289
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1289, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %99(ptr nonnull @.str.356), !dbg !1289
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !1289
  %101 = load i64, ptr %100, align 8, !dbg !1289, !tbaa !1350
  %102 = and i64 %101, 4294967295, !dbg !1289
  %103 = icmp eq i64 %102, 128, !dbg !1289
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1289, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %104(ptr nonnull @.str.357), !dbg !1289
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !1289
  %106 = load i64, ptr %105, align 8, !dbg !1289, !tbaa !1352
  %107 = and i64 %106, 4294967295, !dbg !1289
  %108 = icmp eq i64 %107, 1, !dbg !1289
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1289, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %109(ptr nonnull @.str.358), !dbg !1289
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !1289
  %111 = load i64, ptr %110, align 8, !dbg !1289, !tbaa !1355
  %112 = and i64 %111, 4294967295, !dbg !1289
  %113 = icmp eq i64 %112, 1, !dbg !1289
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1289, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %114(ptr nonnull @.str.359), !dbg !1289
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides, null, !dbg !1289
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1289, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !1289
  %116 = load i64, ptr %115, align 8, !dbg !1289, !tbaa !1357
  %117 = and i64 %116, 4294967295, !dbg !1289
  %118 = icmp eq i64 %117, 1, !dbg !1289
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1289, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1289
  %120 = load i64, ptr %119, align 8, !dbg !1289
  %121 = icmp eq i64 %120, 0, !dbg !1289
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1289, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %122(ptr nonnull @.str.360), !dbg !1289
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %123(ptr nonnull @.str.361), !dbg !1289
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1289
  %125 = load i32, ptr %124, align 4, !dbg !1289
  %126 = icmp eq i32 %125, 2, !dbg !1289
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1289, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %127(ptr nonnull @.str.362), !dbg !1289
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1289
  %129 = load i32, ptr %128, align 4, !dbg !1289
  %130 = icmp eq i32 %dev_id, %129, !dbg !1289
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1289, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %131(ptr nonnull @.str.363), !dbg !1289
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1289
  %133 = load i32, ptr %132, align 4, !dbg !1289
  %134 = icmp eq i32 %133, 4, !dbg !1289
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1289, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %135(ptr nonnull @.str.364), !dbg !1289
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1289
  %137 = load i16, ptr %136, align 2, !dbg !1289
  %138 = icmp eq i16 %137, 1, !dbg !1289
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1289
  %140 = load i8, ptr %139, align 1, !dbg !1289
  %141 = icmp eq i8 %140, 32, !dbg !1289
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1289
  %143 = load i8, ptr %142, align 1, !dbg !1289
  %144 = icmp eq i8 %143, 0, !dbg !1289
  %145 = and i1 %141, %144, !dbg !1289
  %146 = and i1 %138, %145, !dbg !1289
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1289, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %147(ptr nonnull @.str.365), !dbg !1289
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, align 8, !dbg !1289, !tbaa !1367
  %149 = and i64 %148, 4294967295, !dbg !1289
  %150 = icmp eq i64 %149, 1, !dbg !1289
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1289, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %151(ptr nonnull @.str.366), !dbg !1289
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 1, !dbg !1289
  %153 = load i64, ptr %152, align 8, !dbg !1289, !tbaa !1377
  %154 = and i64 %153, 4294967295, !dbg !1289
  %155 = icmp eq i64 %154, 128, !dbg !1289
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1289, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %156(ptr nonnull @.str.367), !dbg !1289
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 2, !dbg !1289
  %158 = load i64, ptr %157, align 8, !dbg !1289, !tbaa !1379
  %159 = and i64 %158, 4294967295, !dbg !1289
  %160 = icmp eq i64 %159, 1, !dbg !1289
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1289, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %161(ptr nonnull @.str.368), !dbg !1289
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 3, !dbg !1289
  %163 = load i64, ptr %162, align 8, !dbg !1289, !tbaa !1382
  %164 = and i64 %163, 4294967295, !dbg !1289
  %165 = icmp eq i64 %164, 1, !dbg !1289
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1289, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %166(ptr nonnull @.str.369), !dbg !1289
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides, null, !dbg !1289
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1289, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides, i64 1, !dbg !1289
  %168 = load i64, ptr %167, align 8, !dbg !1289, !tbaa !1384
  %169 = and i64 %168, 4294967295, !dbg !1289
  %170 = icmp eq i64 %169, 1, !dbg !1289
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1289, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1289
  %172 = load i64, ptr %171, align 8, !dbg !1289
  %173 = icmp eq i64 %172, 0, !dbg !1289
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1289, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %174(ptr nonnull @.str.370), !dbg !1289
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %175(ptr nonnull @.str.371), !dbg !1289
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1289
  %177 = load i32, ptr %176, align 4, !dbg !1289
  %178 = icmp eq i32 %177, 2, !dbg !1289
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1289, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %179(ptr nonnull @.str.372), !dbg !1289
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1289
  %181 = load i32, ptr %180, align 4, !dbg !1289
  %182 = icmp eq i32 %dev_id, %181, !dbg !1289
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1289, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %183(ptr nonnull @.str.373), !dbg !1289
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1289
  %185 = load i32, ptr %184, align 4, !dbg !1289
  %186 = icmp eq i32 %185, 4, !dbg !1289
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1289, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %187(ptr nonnull @.str.374), !dbg !1289
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1289
  %189 = load i16, ptr %188, align 2, !dbg !1289
  %190 = icmp eq i16 %189, 1, !dbg !1289
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1289
  %192 = load i8, ptr %191, align 1, !dbg !1289
  %193 = icmp eq i8 %192, 8, !dbg !1289
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1289
  %195 = load i8, ptr %194, align 1, !dbg !1289
  %196 = icmp eq i8 %195, 0, !dbg !1289
  %197 = and i1 %193, %196, !dbg !1289
  %198 = and i1 %190, %197, !dbg !1289
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1289, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %199(ptr nonnull @.str.375), !dbg !1289
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !1289, !tbaa !1394
  %201 = and i64 %200, 4294967295, !dbg !1289
  %202 = icmp eq i64 %201, 1, !dbg !1289
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1289, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %203(ptr nonnull @.str.376), !dbg !1289
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !1289
  %205 = load i64, ptr %204, align 8, !dbg !1289, !tbaa !1404
  %206 = and i64 %205, 4294967295, !dbg !1289
  %207 = icmp eq i64 %206, 128, !dbg !1289
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1289, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %208(ptr nonnull @.str.377), !dbg !1289
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !1289
  %210 = load i64, ptr %209, align 8, !dbg !1289, !tbaa !1406
  %211 = and i64 %210, 4294967295, !dbg !1289
  %212 = icmp eq i64 %211, 56, !dbg !1289
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1289, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %213(ptr nonnull @.str.378), !dbg !1289
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !1289
  %215 = load i64, ptr %214, align 8, !dbg !1289, !tbaa !1409
  %216 = and i64 %215, 4294967295, !dbg !1289
  %217 = icmp eq i64 %216, 56, !dbg !1289
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1289, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %218(ptr nonnull @.str.379), !dbg !1289
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !1289
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1289, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !1289
  %220 = load i64, ptr %219, align 8, !dbg !1289, !tbaa !1411
  %221 = and i64 %220, 4294967295, !dbg !1289
  %222 = icmp eq i64 %221, 3136, !dbg !1289
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !1289
  %224 = load i64, ptr %223, align 8, !dbg !1289, !tbaa !1421
  %225 = and i64 %224, 4294967295, !dbg !1289
  %226 = icmp eq i64 %225, 56, !dbg !1289
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !1289
  %228 = load i64, ptr %227, align 8, !dbg !1289, !tbaa !1424
  %229 = and i64 %228, 4294967295, !dbg !1289
  %230 = icmp eq i64 %229, 1, !dbg !1289
  %231 = and i1 %226, %230, !dbg !1289
  %232 = and i1 %222, %231, !dbg !1289
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1289, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1289
  %234 = load i64, ptr %233, align 8, !dbg !1289
  %235 = icmp eq i64 %234, 0, !dbg !1289
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1289, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %236(ptr nonnull @.str.380), !dbg !1289
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %237(ptr nonnull @.str.381), !dbg !1289
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1289
  %239 = load i32, ptr %238, align 4, !dbg !1289
  %240 = icmp eq i32 %239, 2, !dbg !1289
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1289, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %241(ptr nonnull @.str.382), !dbg !1289
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1289
  %243 = load i32, ptr %242, align 4, !dbg !1289
  %244 = icmp eq i32 %dev_id, %243, !dbg !1289
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1289, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1289, !tbaa !19
  tail call void %245(ptr nonnull @.str.383), !dbg !1289
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1289
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1289, !tbaa !1426
  %246 = sext i32 %dev_id to i64, !dbg !1289
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1289
  store i64 %246, ptr %247, align 8, !dbg !1289
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1289
  store i32 0, ptr %248, align 4, !dbg !1289, !tbaa !1437
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1289
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1289
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1289, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1289
  %.not120 = icmp eq ptr %252, null, !dbg !1289
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1289, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1289, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1289, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1289
  %256 = icmp eq i32 %255, 0, !dbg !1289
  br i1 %256, label %call_end, label %common.ret, !dbg !1289, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1289
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1289
  %259 = icmp eq i32 %258, 0, !dbg !1289
  br i1 %259, label %call_end106, label %common.ret, !dbg !1289, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1289
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1289
  br label %handle_init_end, !dbg !1289

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1289
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1439 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1441, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1442, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1443, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1444, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1445, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1446, metadata !DIExpression()), !dbg !1447
  %0 = alloca ptr, align 8, !dbg !1447
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1447
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1447
  %1 = icmp eq i32 %num_args, 4, !dbg !1447
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1447, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1447

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %2(ptr nonnull @.str.385), !dbg !1447
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1447, !tbaa !1448
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1447
  %p1.code = load i32, ptr %3, align 4, !dbg !1447, !tbaa !1459
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1447
  %p2.code = load i32, ptr %4, align 4, !dbg !1447, !tbaa !1461
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1447
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1447, !tbaa !1464
  %p0 = load ptr, ptr %args, align 8, !dbg !1447
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1447
  %p1 = load ptr, ptr %6, align 8, !dbg !1447
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1447
  %p2 = load ptr, ptr %7, align 8, !dbg !1447
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1447
  %T_cast = load ptr, ptr %8, align 8, !dbg !1447
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1447
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1447
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape = load ptr, ptr %9, align 8, !dbg !1447
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides = load ptr, ptr %10, align 8, !dbg !1447
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1447
  %dev_id = load i32, ptr %11, align 4, !dbg !1447
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1447
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1447
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape = load ptr, ptr %12, align 8, !dbg !1447
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides = load ptr, ptr %13, align 8, !dbg !1447
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1447
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1447
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape = load ptr, ptr %14, align 8, !dbg !1447
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides = load ptr, ptr %15, align 8, !dbg !1447
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1447
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1447
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1447
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1447
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1447
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1447

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %18(ptr nonnull @.str.386), !dbg !1447
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1447

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %19(ptr nonnull @.str.387), !dbg !1447
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1447

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %20(ptr nonnull @.str.388), !dbg !1447
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1447

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %21(ptr nonnull @.str.389), !dbg !1447
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1447
  %23 = load i32, ptr %22, align 4, !dbg !1447
  %24 = icmp eq i32 %23, 4, !dbg !1447
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1447, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %25(ptr nonnull @.str.390), !dbg !1447
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1447
  %27 = load i16, ptr %26, align 2, !dbg !1447
  %28 = icmp eq i16 %27, 1, !dbg !1447
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1447
  %30 = load i8, ptr %29, align 1, !dbg !1447
  %31 = icmp eq i8 %30, 8, !dbg !1447
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1447
  %33 = load i8, ptr %32, align 1, !dbg !1447
  %34 = icmp eq i8 %33, 0, !dbg !1447
  %35 = and i1 %31, %34, !dbg !1447
  %36 = and i1 %28, %35, !dbg !1447
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1447, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %37(ptr nonnull @.str.391), !dbg !1447
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, align 8, !dbg !1447, !tbaa !1466
  %39 = and i64 %38, 4294967295, !dbg !1447
  %40 = icmp eq i64 %39, 1, !dbg !1447
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1447, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %41(ptr nonnull @.str.392), !dbg !1447
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 1, !dbg !1447
  %43 = load i64, ptr %42, align 8, !dbg !1447, !tbaa !1476
  %44 = and i64 %43, 4294967295, !dbg !1447
  %45 = icmp eq i64 %44, 128, !dbg !1447
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1447, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %46(ptr nonnull @.str.393), !dbg !1447
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 2, !dbg !1447
  %48 = load i64, ptr %47, align 8, !dbg !1447, !tbaa !1478
  %49 = and i64 %48, 4294967295, !dbg !1447
  %50 = icmp eq i64 %49, 28, !dbg !1447
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1447, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %51(ptr nonnull @.str.394), !dbg !1447
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 3, !dbg !1447
  %53 = load i64, ptr %52, align 8, !dbg !1447, !tbaa !1481
  %54 = and i64 %53, 4294967295, !dbg !1447
  %55 = icmp eq i64 %54, 28, !dbg !1447
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1447, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %56(ptr nonnull @.str.395), !dbg !1447
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, null, !dbg !1447
  br i1 %.not, label %if_end, label %if_then, !dbg !1447, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 1, !dbg !1447
  %58 = load i64, ptr %57, align 8, !dbg !1447, !tbaa !1483
  %59 = and i64 %58, 4294967295, !dbg !1447
  %60 = icmp eq i64 %59, 784, !dbg !1447
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 2, !dbg !1447
  %62 = load i64, ptr %61, align 8, !dbg !1447, !tbaa !1493
  %63 = and i64 %62, 4294967295, !dbg !1447
  %64 = icmp eq i64 %63, 28, !dbg !1447
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 3, !dbg !1447
  %66 = load i64, ptr %65, align 8, !dbg !1447, !tbaa !1496
  %67 = and i64 %66, 4294967295, !dbg !1447
  %68 = icmp eq i64 %67, 1, !dbg !1447
  %69 = and i1 %64, %68, !dbg !1447
  %70 = and i1 %60, %69, !dbg !1447
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1447, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1447
  %72 = load i64, ptr %71, align 8, !dbg !1447
  %73 = icmp eq i64 %72, 0, !dbg !1447
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1447, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %74(ptr nonnull @.str.396), !dbg !1447
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %75(ptr nonnull @.str.397), !dbg !1447
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1447
  %77 = load i32, ptr %76, align 4, !dbg !1447
  %78 = icmp eq i32 %77, 2, !dbg !1447
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1447, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %79(ptr nonnull @.str.398), !dbg !1447
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1447
  %81 = load i32, ptr %80, align 4, !dbg !1447
  %82 = icmp eq i32 %81, 4, !dbg !1447
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1447, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %83(ptr nonnull @.str.399), !dbg !1447
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1447
  %85 = load i16, ptr %84, align 2, !dbg !1447
  %86 = icmp eq i16 %85, 1, !dbg !1447
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1447
  %88 = load i8, ptr %87, align 1, !dbg !1447
  %89 = icmp eq i8 %88, 32, !dbg !1447
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1447
  %91 = load i8, ptr %90, align 1, !dbg !1447
  %92 = icmp eq i8 %91, 0, !dbg !1447
  %93 = and i1 %89, %92, !dbg !1447
  %94 = and i1 %86, %93, !dbg !1447
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1447, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %95(ptr nonnull @.str.400), !dbg !1447
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, align 8, !dbg !1447, !tbaa !1498
  %97 = and i64 %96, 4294967295, !dbg !1447
  %98 = icmp eq i64 %97, 1, !dbg !1447
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1447, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %99(ptr nonnull @.str.401), !dbg !1447
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 1, !dbg !1447
  %101 = load i64, ptr %100, align 8, !dbg !1447, !tbaa !1508
  %102 = and i64 %101, 4294967295, !dbg !1447
  %103 = icmp eq i64 %102, 128, !dbg !1447
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1447, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %104(ptr nonnull @.str.402), !dbg !1447
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 2, !dbg !1447
  %106 = load i64, ptr %105, align 8, !dbg !1447, !tbaa !1510
  %107 = and i64 %106, 4294967295, !dbg !1447
  %108 = icmp eq i64 %107, 1, !dbg !1447
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1447, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %109(ptr nonnull @.str.403), !dbg !1447
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 3, !dbg !1447
  %111 = load i64, ptr %110, align 8, !dbg !1447, !tbaa !1513
  %112 = and i64 %111, 4294967295, !dbg !1447
  %113 = icmp eq i64 %112, 1, !dbg !1447
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1447, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %114(ptr nonnull @.str.404), !dbg !1447
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides, null, !dbg !1447
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1447, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides, i64 1, !dbg !1447
  %116 = load i64, ptr %115, align 8, !dbg !1447, !tbaa !1515
  %117 = and i64 %116, 4294967295, !dbg !1447
  %118 = icmp eq i64 %117, 1, !dbg !1447
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1447, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1447
  %120 = load i64, ptr %119, align 8, !dbg !1447
  %121 = icmp eq i64 %120, 0, !dbg !1447
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1447, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %122(ptr nonnull @.str.405), !dbg !1447
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %123(ptr nonnull @.str.406), !dbg !1447
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1447
  %125 = load i32, ptr %124, align 4, !dbg !1447
  %126 = icmp eq i32 %125, 2, !dbg !1447
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1447, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %127(ptr nonnull @.str.407), !dbg !1447
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1447
  %129 = load i32, ptr %128, align 4, !dbg !1447
  %130 = icmp eq i32 %dev_id, %129, !dbg !1447
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1447, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %131(ptr nonnull @.str.408), !dbg !1447
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1447
  %133 = load i32, ptr %132, align 4, !dbg !1447
  %134 = icmp eq i32 %133, 4, !dbg !1447
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1447, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %135(ptr nonnull @.str.409), !dbg !1447
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1447
  %137 = load i16, ptr %136, align 2, !dbg !1447
  %138 = icmp eq i16 %137, 1, !dbg !1447
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1447
  %140 = load i8, ptr %139, align 1, !dbg !1447
  %141 = icmp eq i8 %140, 32, !dbg !1447
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1447
  %143 = load i8, ptr %142, align 1, !dbg !1447
  %144 = icmp eq i8 %143, 0, !dbg !1447
  %145 = and i1 %141, %144, !dbg !1447
  %146 = and i1 %138, %145, !dbg !1447
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1447, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %147(ptr nonnull @.str.410), !dbg !1447
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, align 8, !dbg !1447, !tbaa !1525
  %149 = and i64 %148, 4294967295, !dbg !1447
  %150 = icmp eq i64 %149, 1, !dbg !1447
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1447, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %151(ptr nonnull @.str.411), !dbg !1447
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 1, !dbg !1447
  %153 = load i64, ptr %152, align 8, !dbg !1447, !tbaa !1535
  %154 = and i64 %153, 4294967295, !dbg !1447
  %155 = icmp eq i64 %154, 128, !dbg !1447
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1447, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %156(ptr nonnull @.str.412), !dbg !1447
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 2, !dbg !1447
  %158 = load i64, ptr %157, align 8, !dbg !1447, !tbaa !1537
  %159 = and i64 %158, 4294967295, !dbg !1447
  %160 = icmp eq i64 %159, 1, !dbg !1447
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1447, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %161(ptr nonnull @.str.413), !dbg !1447
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 3, !dbg !1447
  %163 = load i64, ptr %162, align 8, !dbg !1447, !tbaa !1540
  %164 = and i64 %163, 4294967295, !dbg !1447
  %165 = icmp eq i64 %164, 1, !dbg !1447
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1447, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %166(ptr nonnull @.str.414), !dbg !1447
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides, null, !dbg !1447
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1447, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides, i64 1, !dbg !1447
  %168 = load i64, ptr %167, align 8, !dbg !1447, !tbaa !1542
  %169 = and i64 %168, 4294967295, !dbg !1447
  %170 = icmp eq i64 %169, 1, !dbg !1447
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1447, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1447
  %172 = load i64, ptr %171, align 8, !dbg !1447
  %173 = icmp eq i64 %172, 0, !dbg !1447
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1447, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %174(ptr nonnull @.str.415), !dbg !1447
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %175(ptr nonnull @.str.416), !dbg !1447
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1447
  %177 = load i32, ptr %176, align 4, !dbg !1447
  %178 = icmp eq i32 %177, 2, !dbg !1447
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1447, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %179(ptr nonnull @.str.417), !dbg !1447
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1447
  %181 = load i32, ptr %180, align 4, !dbg !1447
  %182 = icmp eq i32 %dev_id, %181, !dbg !1447
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1447, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %183(ptr nonnull @.str.418), !dbg !1447
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1447
  %185 = load i32, ptr %184, align 4, !dbg !1447
  %186 = icmp eq i32 %185, 4, !dbg !1447
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1447, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %187(ptr nonnull @.str.419), !dbg !1447
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1447
  %189 = load i16, ptr %188, align 2, !dbg !1447
  %190 = icmp eq i16 %189, 1, !dbg !1447
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1447
  %192 = load i8, ptr %191, align 1, !dbg !1447
  %193 = icmp eq i8 %192, 8, !dbg !1447
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1447
  %195 = load i8, ptr %194, align 1, !dbg !1447
  %196 = icmp eq i8 %195, 0, !dbg !1447
  %197 = and i1 %193, %196, !dbg !1447
  %198 = and i1 %190, %197, !dbg !1447
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1447, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %199(ptr nonnull @.str.420), !dbg !1447
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, align 8, !dbg !1447, !tbaa !1552
  %201 = and i64 %200, 4294967295, !dbg !1447
  %202 = icmp eq i64 %201, 1, !dbg !1447
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1447, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %203(ptr nonnull @.str.421), !dbg !1447
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 1, !dbg !1447
  %205 = load i64, ptr %204, align 8, !dbg !1447, !tbaa !1562
  %206 = and i64 %205, 4294967295, !dbg !1447
  %207 = icmp eq i64 %206, 128, !dbg !1447
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1447, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %208(ptr nonnull @.str.422), !dbg !1447
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 2, !dbg !1447
  %210 = load i64, ptr %209, align 8, !dbg !1447, !tbaa !1564
  %211 = and i64 %210, 4294967295, !dbg !1447
  %212 = icmp eq i64 %211, 28, !dbg !1447
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1447, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %213(ptr nonnull @.str.423), !dbg !1447
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 3, !dbg !1447
  %215 = load i64, ptr %214, align 8, !dbg !1447, !tbaa !1567
  %216 = and i64 %215, 4294967295, !dbg !1447
  %217 = icmp eq i64 %216, 28, !dbg !1447
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1447, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %218(ptr nonnull @.str.424), !dbg !1447
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, null, !dbg !1447
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1447, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 1, !dbg !1447
  %220 = load i64, ptr %219, align 8, !dbg !1447, !tbaa !1569
  %221 = and i64 %220, 4294967295, !dbg !1447
  %222 = icmp eq i64 %221, 784, !dbg !1447
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 2, !dbg !1447
  %224 = load i64, ptr %223, align 8, !dbg !1447, !tbaa !1579
  %225 = and i64 %224, 4294967295, !dbg !1447
  %226 = icmp eq i64 %225, 28, !dbg !1447
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 3, !dbg !1447
  %228 = load i64, ptr %227, align 8, !dbg !1447, !tbaa !1582
  %229 = and i64 %228, 4294967295, !dbg !1447
  %230 = icmp eq i64 %229, 1, !dbg !1447
  %231 = and i1 %226, %230, !dbg !1447
  %232 = and i1 %222, %231, !dbg !1447
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1447, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1447
  %234 = load i64, ptr %233, align 8, !dbg !1447
  %235 = icmp eq i64 %234, 0, !dbg !1447
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1447, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %236(ptr nonnull @.str.425), !dbg !1447
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %237(ptr nonnull @.str.426), !dbg !1447
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1447
  %239 = load i32, ptr %238, align 4, !dbg !1447
  %240 = icmp eq i32 %239, 2, !dbg !1447
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1447, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %241(ptr nonnull @.str.427), !dbg !1447
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1447
  %243 = load i32, ptr %242, align 4, !dbg !1447
  %244 = icmp eq i32 %dev_id, %243, !dbg !1447
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1447, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1447, !tbaa !19
  tail call void %245(ptr nonnull @.str.428), !dbg !1447
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1447
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1447, !tbaa !1584
  %246 = sext i32 %dev_id to i64, !dbg !1447
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1447
  store i64 %246, ptr %247, align 8, !dbg !1447
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1447
  store i32 0, ptr %248, align 4, !dbg !1447, !tbaa !1595
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1447
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1447
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1447, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1447
  %.not120 = icmp eq ptr %252, null, !dbg !1447
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1447, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1447, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1447, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1447
  %256 = icmp eq i32 %255, 0, !dbg !1447
  br i1 %256, label %call_end, label %common.ret, !dbg !1447, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1447
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1447
  %259 = icmp eq i32 %258, 0, !dbg !1447
  br i1 %259, label %call_end106, label %common.ret, !dbg !1447, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1447
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1447
  br label %handle_init_end, !dbg !1447

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1447
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1597 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1599, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1600, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1601, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1602, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1603, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1604, metadata !DIExpression()), !dbg !1605
  %0 = alloca ptr, align 8, !dbg !1605
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1605
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1605
  %1 = icmp eq i32 %num_args, 4, !dbg !1605
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1605, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1605

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %2(ptr nonnull @.str.430), !dbg !1605
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1605, !tbaa !1606
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1605
  %p1.code = load i32, ptr %3, align 4, !dbg !1605, !tbaa !1617
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1605
  %p2.code = load i32, ptr %4, align 4, !dbg !1605, !tbaa !1619
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1605
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1605, !tbaa !1622
  %p0 = load ptr, ptr %args, align 8, !dbg !1605
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1605
  %p1 = load ptr, ptr %6, align 8, !dbg !1605
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1605
  %p2 = load ptr, ptr %7, align 8, !dbg !1605
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1605
  %T_cast = load ptr, ptr %8, align 8, !dbg !1605
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1605
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1605
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape = load ptr, ptr %9, align 8, !dbg !1605
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides = load ptr, ptr %10, align 8, !dbg !1605
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1605
  %dev_id = load i32, ptr %11, align 4, !dbg !1605
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1605
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1605
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape = load ptr, ptr %12, align 8, !dbg !1605
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides = load ptr, ptr %13, align 8, !dbg !1605
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1605
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1605
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape = load ptr, ptr %14, align 8, !dbg !1605
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides = load ptr, ptr %15, align 8, !dbg !1605
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1605
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1605
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1605
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1605
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1605
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1605

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %18(ptr nonnull @.str.431), !dbg !1605
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1605

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %19(ptr nonnull @.str.432), !dbg !1605
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1605

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %20(ptr nonnull @.str.433), !dbg !1605
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1605

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %21(ptr nonnull @.str.434), !dbg !1605
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1605
  %23 = load i32, ptr %22, align 4, !dbg !1605
  %24 = icmp eq i32 %23, 4, !dbg !1605
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1605, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %25(ptr nonnull @.str.435), !dbg !1605
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1605
  %27 = load i16, ptr %26, align 2, !dbg !1605
  %28 = icmp eq i16 %27, 1, !dbg !1605
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1605
  %30 = load i8, ptr %29, align 1, !dbg !1605
  %31 = icmp eq i8 %30, 8, !dbg !1605
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1605
  %33 = load i8, ptr %32, align 1, !dbg !1605
  %34 = icmp eq i8 %33, 0, !dbg !1605
  %35 = and i1 %31, %34, !dbg !1605
  %36 = and i1 %28, %35, !dbg !1605
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1605, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %37(ptr nonnull @.str.436), !dbg !1605
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, align 8, !dbg !1605, !tbaa !1624
  %39 = and i64 %38, 4294967295, !dbg !1605
  %40 = icmp eq i64 %39, 1, !dbg !1605
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1605, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %41(ptr nonnull @.str.437), !dbg !1605
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 1, !dbg !1605
  %43 = load i64, ptr %42, align 8, !dbg !1605, !tbaa !1634
  %44 = and i64 %43, 4294967295, !dbg !1605
  %45 = icmp eq i64 %44, 256, !dbg !1605
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1605, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %46(ptr nonnull @.str.438), !dbg !1605
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 2, !dbg !1605
  %48 = load i64, ptr %47, align 8, !dbg !1605, !tbaa !1636
  %49 = and i64 %48, 4294967295, !dbg !1605
  %50 = icmp eq i64 %49, 28, !dbg !1605
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1605, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %51(ptr nonnull @.str.439), !dbg !1605
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 3, !dbg !1605
  %53 = load i64, ptr %52, align 8, !dbg !1605, !tbaa !1639
  %54 = and i64 %53, 4294967295, !dbg !1605
  %55 = icmp eq i64 %54, 28, !dbg !1605
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1605, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %56(ptr nonnull @.str.440), !dbg !1605
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, null, !dbg !1605
  br i1 %.not, label %if_end, label %if_then, !dbg !1605, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 1, !dbg !1605
  %58 = load i64, ptr %57, align 8, !dbg !1605, !tbaa !1641
  %59 = and i64 %58, 4294967295, !dbg !1605
  %60 = icmp eq i64 %59, 784, !dbg !1605
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 2, !dbg !1605
  %62 = load i64, ptr %61, align 8, !dbg !1605, !tbaa !1651
  %63 = and i64 %62, 4294967295, !dbg !1605
  %64 = icmp eq i64 %63, 28, !dbg !1605
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 3, !dbg !1605
  %66 = load i64, ptr %65, align 8, !dbg !1605, !tbaa !1654
  %67 = and i64 %66, 4294967295, !dbg !1605
  %68 = icmp eq i64 %67, 1, !dbg !1605
  %69 = and i1 %64, %68, !dbg !1605
  %70 = and i1 %60, %69, !dbg !1605
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1605, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1605
  %72 = load i64, ptr %71, align 8, !dbg !1605
  %73 = icmp eq i64 %72, 0, !dbg !1605
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1605, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %74(ptr nonnull @.str.441), !dbg !1605
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %75(ptr nonnull @.str.442), !dbg !1605
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1605
  %77 = load i32, ptr %76, align 4, !dbg !1605
  %78 = icmp eq i32 %77, 2, !dbg !1605
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1605, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %79(ptr nonnull @.str.443), !dbg !1605
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1605
  %81 = load i32, ptr %80, align 4, !dbg !1605
  %82 = icmp eq i32 %81, 4, !dbg !1605
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1605, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %83(ptr nonnull @.str.444), !dbg !1605
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1605
  %85 = load i16, ptr %84, align 2, !dbg !1605
  %86 = icmp eq i16 %85, 1, !dbg !1605
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1605
  %88 = load i8, ptr %87, align 1, !dbg !1605
  %89 = icmp eq i8 %88, 32, !dbg !1605
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1605
  %91 = load i8, ptr %90, align 1, !dbg !1605
  %92 = icmp eq i8 %91, 0, !dbg !1605
  %93 = and i1 %89, %92, !dbg !1605
  %94 = and i1 %86, %93, !dbg !1605
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1605, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %95(ptr nonnull @.str.445), !dbg !1605
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, align 8, !dbg !1605, !tbaa !1656
  %97 = and i64 %96, 4294967295, !dbg !1605
  %98 = icmp eq i64 %97, 1, !dbg !1605
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1605, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %99(ptr nonnull @.str.446), !dbg !1605
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 1, !dbg !1605
  %101 = load i64, ptr %100, align 8, !dbg !1605, !tbaa !1666
  %102 = and i64 %101, 4294967295, !dbg !1605
  %103 = icmp eq i64 %102, 256, !dbg !1605
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1605, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %104(ptr nonnull @.str.447), !dbg !1605
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 2, !dbg !1605
  %106 = load i64, ptr %105, align 8, !dbg !1605, !tbaa !1668
  %107 = and i64 %106, 4294967295, !dbg !1605
  %108 = icmp eq i64 %107, 1, !dbg !1605
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1605, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %109(ptr nonnull @.str.448), !dbg !1605
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 3, !dbg !1605
  %111 = load i64, ptr %110, align 8, !dbg !1605, !tbaa !1671
  %112 = and i64 %111, 4294967295, !dbg !1605
  %113 = icmp eq i64 %112, 1, !dbg !1605
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1605, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %114(ptr nonnull @.str.449), !dbg !1605
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides, null, !dbg !1605
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1605, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides, i64 1, !dbg !1605
  %116 = load i64, ptr %115, align 8, !dbg !1605, !tbaa !1673
  %117 = and i64 %116, 4294967295, !dbg !1605
  %118 = icmp eq i64 %117, 1, !dbg !1605
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1605, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1605
  %120 = load i64, ptr %119, align 8, !dbg !1605
  %121 = icmp eq i64 %120, 0, !dbg !1605
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1605, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %122(ptr nonnull @.str.450), !dbg !1605
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %123(ptr nonnull @.str.451), !dbg !1605
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1605
  %125 = load i32, ptr %124, align 4, !dbg !1605
  %126 = icmp eq i32 %125, 2, !dbg !1605
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1605, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %127(ptr nonnull @.str.452), !dbg !1605
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1605
  %129 = load i32, ptr %128, align 4, !dbg !1605
  %130 = icmp eq i32 %dev_id, %129, !dbg !1605
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1605, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %131(ptr nonnull @.str.453), !dbg !1605
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1605
  %133 = load i32, ptr %132, align 4, !dbg !1605
  %134 = icmp eq i32 %133, 4, !dbg !1605
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1605, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %135(ptr nonnull @.str.454), !dbg !1605
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1605
  %137 = load i16, ptr %136, align 2, !dbg !1605
  %138 = icmp eq i16 %137, 1, !dbg !1605
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1605
  %140 = load i8, ptr %139, align 1, !dbg !1605
  %141 = icmp eq i8 %140, 32, !dbg !1605
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1605
  %143 = load i8, ptr %142, align 1, !dbg !1605
  %144 = icmp eq i8 %143, 0, !dbg !1605
  %145 = and i1 %141, %144, !dbg !1605
  %146 = and i1 %138, %145, !dbg !1605
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1605, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %147(ptr nonnull @.str.455), !dbg !1605
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, align 8, !dbg !1605, !tbaa !1683
  %149 = and i64 %148, 4294967295, !dbg !1605
  %150 = icmp eq i64 %149, 1, !dbg !1605
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1605, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %151(ptr nonnull @.str.456), !dbg !1605
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 1, !dbg !1605
  %153 = load i64, ptr %152, align 8, !dbg !1605, !tbaa !1693
  %154 = and i64 %153, 4294967295, !dbg !1605
  %155 = icmp eq i64 %154, 256, !dbg !1605
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1605, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %156(ptr nonnull @.str.457), !dbg !1605
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 2, !dbg !1605
  %158 = load i64, ptr %157, align 8, !dbg !1605, !tbaa !1695
  %159 = and i64 %158, 4294967295, !dbg !1605
  %160 = icmp eq i64 %159, 1, !dbg !1605
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1605, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %161(ptr nonnull @.str.458), !dbg !1605
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 3, !dbg !1605
  %163 = load i64, ptr %162, align 8, !dbg !1605, !tbaa !1698
  %164 = and i64 %163, 4294967295, !dbg !1605
  %165 = icmp eq i64 %164, 1, !dbg !1605
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1605, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %166(ptr nonnull @.str.459), !dbg !1605
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides, null, !dbg !1605
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1605, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides, i64 1, !dbg !1605
  %168 = load i64, ptr %167, align 8, !dbg !1605, !tbaa !1700
  %169 = and i64 %168, 4294967295, !dbg !1605
  %170 = icmp eq i64 %169, 1, !dbg !1605
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1605, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1605
  %172 = load i64, ptr %171, align 8, !dbg !1605
  %173 = icmp eq i64 %172, 0, !dbg !1605
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1605, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %174(ptr nonnull @.str.460), !dbg !1605
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %175(ptr nonnull @.str.461), !dbg !1605
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1605
  %177 = load i32, ptr %176, align 4, !dbg !1605
  %178 = icmp eq i32 %177, 2, !dbg !1605
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1605, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %179(ptr nonnull @.str.462), !dbg !1605
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1605
  %181 = load i32, ptr %180, align 4, !dbg !1605
  %182 = icmp eq i32 %dev_id, %181, !dbg !1605
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1605, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %183(ptr nonnull @.str.463), !dbg !1605
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1605
  %185 = load i32, ptr %184, align 4, !dbg !1605
  %186 = icmp eq i32 %185, 4, !dbg !1605
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1605, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %187(ptr nonnull @.str.464), !dbg !1605
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1605
  %189 = load i16, ptr %188, align 2, !dbg !1605
  %190 = icmp eq i16 %189, 1, !dbg !1605
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1605
  %192 = load i8, ptr %191, align 1, !dbg !1605
  %193 = icmp eq i8 %192, 8, !dbg !1605
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1605
  %195 = load i8, ptr %194, align 1, !dbg !1605
  %196 = icmp eq i8 %195, 0, !dbg !1605
  %197 = and i1 %193, %196, !dbg !1605
  %198 = and i1 %190, %197, !dbg !1605
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1605, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %199(ptr nonnull @.str.465), !dbg !1605
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, align 8, !dbg !1605, !tbaa !1710
  %201 = and i64 %200, 4294967295, !dbg !1605
  %202 = icmp eq i64 %201, 1, !dbg !1605
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1605, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %203(ptr nonnull @.str.466), !dbg !1605
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 1, !dbg !1605
  %205 = load i64, ptr %204, align 8, !dbg !1605, !tbaa !1720
  %206 = and i64 %205, 4294967295, !dbg !1605
  %207 = icmp eq i64 %206, 256, !dbg !1605
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1605, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %208(ptr nonnull @.str.467), !dbg !1605
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 2, !dbg !1605
  %210 = load i64, ptr %209, align 8, !dbg !1605, !tbaa !1722
  %211 = and i64 %210, 4294967295, !dbg !1605
  %212 = icmp eq i64 %211, 28, !dbg !1605
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1605, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %213(ptr nonnull @.str.468), !dbg !1605
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 3, !dbg !1605
  %215 = load i64, ptr %214, align 8, !dbg !1605, !tbaa !1725
  %216 = and i64 %215, 4294967295, !dbg !1605
  %217 = icmp eq i64 %216, 28, !dbg !1605
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1605, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %218(ptr nonnull @.str.469), !dbg !1605
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, null, !dbg !1605
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1605, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 1, !dbg !1605
  %220 = load i64, ptr %219, align 8, !dbg !1605, !tbaa !1727
  %221 = and i64 %220, 4294967295, !dbg !1605
  %222 = icmp eq i64 %221, 784, !dbg !1605
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 2, !dbg !1605
  %224 = load i64, ptr %223, align 8, !dbg !1605, !tbaa !1737
  %225 = and i64 %224, 4294967295, !dbg !1605
  %226 = icmp eq i64 %225, 28, !dbg !1605
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 3, !dbg !1605
  %228 = load i64, ptr %227, align 8, !dbg !1605, !tbaa !1740
  %229 = and i64 %228, 4294967295, !dbg !1605
  %230 = icmp eq i64 %229, 1, !dbg !1605
  %231 = and i1 %226, %230, !dbg !1605
  %232 = and i1 %222, %231, !dbg !1605
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1605, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1605
  %234 = load i64, ptr %233, align 8, !dbg !1605
  %235 = icmp eq i64 %234, 0, !dbg !1605
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1605, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %236(ptr nonnull @.str.470), !dbg !1605
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %237(ptr nonnull @.str.471), !dbg !1605
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1605
  %239 = load i32, ptr %238, align 4, !dbg !1605
  %240 = icmp eq i32 %239, 2, !dbg !1605
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1605, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %241(ptr nonnull @.str.472), !dbg !1605
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1605
  %243 = load i32, ptr %242, align 4, !dbg !1605
  %244 = icmp eq i32 %dev_id, %243, !dbg !1605
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1605, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1605, !tbaa !19
  tail call void %245(ptr nonnull @.str.473), !dbg !1605
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1605
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1605, !tbaa !1742
  %246 = sext i32 %dev_id to i64, !dbg !1605
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1605
  store i64 %246, ptr %247, align 8, !dbg !1605
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1605
  store i32 0, ptr %248, align 4, !dbg !1605, !tbaa !1753
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1605
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1605
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1605, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1605
  %.not120 = icmp eq ptr %252, null, !dbg !1605
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1605, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1605, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1605, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1605
  %256 = icmp eq i32 %255, 0, !dbg !1605
  br i1 %256, label %call_end, label %common.ret, !dbg !1605, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1605
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1605
  %259 = icmp eq i32 %258, 0, !dbg !1605
  br i1 %259, label %call_end106, label %common.ret, !dbg !1605, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1605
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1605
  br label %handle_init_end, !dbg !1605

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1605
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1755 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1757, metadata !DIExpression()), !dbg !1763
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1758, metadata !DIExpression()), !dbg !1763
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1759, metadata !DIExpression()), !dbg !1763
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1760, metadata !DIExpression()), !dbg !1763
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1761, metadata !DIExpression()), !dbg !1763
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1762, metadata !DIExpression()), !dbg !1763
  %0 = alloca ptr, align 8, !dbg !1763
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1763
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1763
  %1 = icmp eq i32 %num_args, 4, !dbg !1763
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1763, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1763

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %2(ptr nonnull @.str.475), !dbg !1763
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1763, !tbaa !1764
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1763
  %p1.code = load i32, ptr %3, align 4, !dbg !1763, !tbaa !1775
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1763
  %p2.code = load i32, ptr %4, align 4, !dbg !1763, !tbaa !1777
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1763
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1763, !tbaa !1780
  %p0 = load ptr, ptr %args, align 8, !dbg !1763
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1763
  %p1 = load ptr, ptr %6, align 8, !dbg !1763
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1763
  %p2 = load ptr, ptr %7, align 8, !dbg !1763
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1763
  %T_cast = load ptr, ptr %8, align 8, !dbg !1763
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1763
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1763
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape = load ptr, ptr %9, align 8, !dbg !1763
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides = load ptr, ptr %10, align 8, !dbg !1763
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1763
  %dev_id = load i32, ptr %11, align 4, !dbg !1763
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1763
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1763
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape = load ptr, ptr %12, align 8, !dbg !1763
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides = load ptr, ptr %13, align 8, !dbg !1763
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1763
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1763
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape = load ptr, ptr %14, align 8, !dbg !1763
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides = load ptr, ptr %15, align 8, !dbg !1763
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1763
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1763
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1763
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1763
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1763
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1763

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %18(ptr nonnull @.str.476), !dbg !1763
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1763

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %19(ptr nonnull @.str.477), !dbg !1763
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1763

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %20(ptr nonnull @.str.478), !dbg !1763
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1763

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %21(ptr nonnull @.str.479), !dbg !1763
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1763
  %23 = load i32, ptr %22, align 4, !dbg !1763
  %24 = icmp eq i32 %23, 4, !dbg !1763
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1763, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %25(ptr nonnull @.str.480), !dbg !1763
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1763
  %27 = load i16, ptr %26, align 2, !dbg !1763
  %28 = icmp eq i16 %27, 1, !dbg !1763
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1763
  %30 = load i8, ptr %29, align 1, !dbg !1763
  %31 = icmp eq i8 %30, 8, !dbg !1763
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1763
  %33 = load i8, ptr %32, align 1, !dbg !1763
  %34 = icmp eq i8 %33, 0, !dbg !1763
  %35 = and i1 %31, %34, !dbg !1763
  %36 = and i1 %28, %35, !dbg !1763
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1763, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %37(ptr nonnull @.str.481), !dbg !1763
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, align 8, !dbg !1763, !tbaa !1782
  %39 = and i64 %38, 4294967295, !dbg !1763
  %40 = icmp eq i64 %39, 1, !dbg !1763
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1763, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %41(ptr nonnull @.str.482), !dbg !1763
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 1, !dbg !1763
  %43 = load i64, ptr %42, align 8, !dbg !1763, !tbaa !1792
  %44 = and i64 %43, 4294967295, !dbg !1763
  %45 = icmp eq i64 %44, 256, !dbg !1763
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1763, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %46(ptr nonnull @.str.483), !dbg !1763
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 2, !dbg !1763
  %48 = load i64, ptr %47, align 8, !dbg !1763, !tbaa !1794
  %49 = and i64 %48, 4294967295, !dbg !1763
  %50 = icmp eq i64 %49, 14, !dbg !1763
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1763, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %51(ptr nonnull @.str.484), !dbg !1763
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 3, !dbg !1763
  %53 = load i64, ptr %52, align 8, !dbg !1763, !tbaa !1797
  %54 = and i64 %53, 4294967295, !dbg !1763
  %55 = icmp eq i64 %54, 14, !dbg !1763
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1763, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %56(ptr nonnull @.str.485), !dbg !1763
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, null, !dbg !1763
  br i1 %.not, label %if_end, label %if_then, !dbg !1763, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 1, !dbg !1763
  %58 = load i64, ptr %57, align 8, !dbg !1763, !tbaa !1799
  %59 = and i64 %58, 4294967295, !dbg !1763
  %60 = icmp eq i64 %59, 196, !dbg !1763
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 2, !dbg !1763
  %62 = load i64, ptr %61, align 8, !dbg !1763, !tbaa !1809
  %63 = and i64 %62, 4294967295, !dbg !1763
  %64 = icmp eq i64 %63, 14, !dbg !1763
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 3, !dbg !1763
  %66 = load i64, ptr %65, align 8, !dbg !1763, !tbaa !1812
  %67 = and i64 %66, 4294967295, !dbg !1763
  %68 = icmp eq i64 %67, 1, !dbg !1763
  %69 = and i1 %64, %68, !dbg !1763
  %70 = and i1 %60, %69, !dbg !1763
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1763, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1763
  %72 = load i64, ptr %71, align 8, !dbg !1763
  %73 = icmp eq i64 %72, 0, !dbg !1763
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1763, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %74(ptr nonnull @.str.486), !dbg !1763
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %75(ptr nonnull @.str.487), !dbg !1763
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1763
  %77 = load i32, ptr %76, align 4, !dbg !1763
  %78 = icmp eq i32 %77, 2, !dbg !1763
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1763, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %79(ptr nonnull @.str.488), !dbg !1763
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1763
  %81 = load i32, ptr %80, align 4, !dbg !1763
  %82 = icmp eq i32 %81, 4, !dbg !1763
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1763, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %83(ptr nonnull @.str.489), !dbg !1763
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1763
  %85 = load i16, ptr %84, align 2, !dbg !1763
  %86 = icmp eq i16 %85, 1, !dbg !1763
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1763
  %88 = load i8, ptr %87, align 1, !dbg !1763
  %89 = icmp eq i8 %88, 32, !dbg !1763
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1763
  %91 = load i8, ptr %90, align 1, !dbg !1763
  %92 = icmp eq i8 %91, 0, !dbg !1763
  %93 = and i1 %89, %92, !dbg !1763
  %94 = and i1 %86, %93, !dbg !1763
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1763, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %95(ptr nonnull @.str.490), !dbg !1763
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, align 8, !dbg !1763, !tbaa !1814
  %97 = and i64 %96, 4294967295, !dbg !1763
  %98 = icmp eq i64 %97, 1, !dbg !1763
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1763, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %99(ptr nonnull @.str.491), !dbg !1763
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 1, !dbg !1763
  %101 = load i64, ptr %100, align 8, !dbg !1763, !tbaa !1824
  %102 = and i64 %101, 4294967295, !dbg !1763
  %103 = icmp eq i64 %102, 256, !dbg !1763
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1763, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %104(ptr nonnull @.str.492), !dbg !1763
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 2, !dbg !1763
  %106 = load i64, ptr %105, align 8, !dbg !1763, !tbaa !1826
  %107 = and i64 %106, 4294967295, !dbg !1763
  %108 = icmp eq i64 %107, 1, !dbg !1763
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1763, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %109(ptr nonnull @.str.493), !dbg !1763
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 3, !dbg !1763
  %111 = load i64, ptr %110, align 8, !dbg !1763, !tbaa !1829
  %112 = and i64 %111, 4294967295, !dbg !1763
  %113 = icmp eq i64 %112, 1, !dbg !1763
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1763, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %114(ptr nonnull @.str.494), !dbg !1763
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides, null, !dbg !1763
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1763, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides, i64 1, !dbg !1763
  %116 = load i64, ptr %115, align 8, !dbg !1763, !tbaa !1831
  %117 = and i64 %116, 4294967295, !dbg !1763
  %118 = icmp eq i64 %117, 1, !dbg !1763
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1763, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1763
  %120 = load i64, ptr %119, align 8, !dbg !1763
  %121 = icmp eq i64 %120, 0, !dbg !1763
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1763, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %122(ptr nonnull @.str.495), !dbg !1763
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %123(ptr nonnull @.str.496), !dbg !1763
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1763
  %125 = load i32, ptr %124, align 4, !dbg !1763
  %126 = icmp eq i32 %125, 2, !dbg !1763
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1763, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %127(ptr nonnull @.str.497), !dbg !1763
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1763
  %129 = load i32, ptr %128, align 4, !dbg !1763
  %130 = icmp eq i32 %dev_id, %129, !dbg !1763
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1763, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %131(ptr nonnull @.str.498), !dbg !1763
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1763
  %133 = load i32, ptr %132, align 4, !dbg !1763
  %134 = icmp eq i32 %133, 4, !dbg !1763
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1763, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %135(ptr nonnull @.str.499), !dbg !1763
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1763
  %137 = load i16, ptr %136, align 2, !dbg !1763
  %138 = icmp eq i16 %137, 1, !dbg !1763
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1763
  %140 = load i8, ptr %139, align 1, !dbg !1763
  %141 = icmp eq i8 %140, 32, !dbg !1763
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1763
  %143 = load i8, ptr %142, align 1, !dbg !1763
  %144 = icmp eq i8 %143, 0, !dbg !1763
  %145 = and i1 %141, %144, !dbg !1763
  %146 = and i1 %138, %145, !dbg !1763
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1763, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %147(ptr nonnull @.str.500), !dbg !1763
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, align 8, !dbg !1763, !tbaa !1841
  %149 = and i64 %148, 4294967295, !dbg !1763
  %150 = icmp eq i64 %149, 1, !dbg !1763
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1763, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %151(ptr nonnull @.str.501), !dbg !1763
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 1, !dbg !1763
  %153 = load i64, ptr %152, align 8, !dbg !1763, !tbaa !1851
  %154 = and i64 %153, 4294967295, !dbg !1763
  %155 = icmp eq i64 %154, 256, !dbg !1763
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1763, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %156(ptr nonnull @.str.502), !dbg !1763
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 2, !dbg !1763
  %158 = load i64, ptr %157, align 8, !dbg !1763, !tbaa !1853
  %159 = and i64 %158, 4294967295, !dbg !1763
  %160 = icmp eq i64 %159, 1, !dbg !1763
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1763, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %161(ptr nonnull @.str.503), !dbg !1763
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 3, !dbg !1763
  %163 = load i64, ptr %162, align 8, !dbg !1763, !tbaa !1856
  %164 = and i64 %163, 4294967295, !dbg !1763
  %165 = icmp eq i64 %164, 1, !dbg !1763
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1763, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %166(ptr nonnull @.str.504), !dbg !1763
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides, null, !dbg !1763
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1763, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides, i64 1, !dbg !1763
  %168 = load i64, ptr %167, align 8, !dbg !1763, !tbaa !1858
  %169 = and i64 %168, 4294967295, !dbg !1763
  %170 = icmp eq i64 %169, 1, !dbg !1763
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1763, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1763
  %172 = load i64, ptr %171, align 8, !dbg !1763
  %173 = icmp eq i64 %172, 0, !dbg !1763
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1763, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %174(ptr nonnull @.str.505), !dbg !1763
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %175(ptr nonnull @.str.506), !dbg !1763
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1763
  %177 = load i32, ptr %176, align 4, !dbg !1763
  %178 = icmp eq i32 %177, 2, !dbg !1763
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1763, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %179(ptr nonnull @.str.507), !dbg !1763
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1763
  %181 = load i32, ptr %180, align 4, !dbg !1763
  %182 = icmp eq i32 %dev_id, %181, !dbg !1763
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1763, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %183(ptr nonnull @.str.508), !dbg !1763
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1763
  %185 = load i32, ptr %184, align 4, !dbg !1763
  %186 = icmp eq i32 %185, 4, !dbg !1763
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1763, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %187(ptr nonnull @.str.509), !dbg !1763
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1763
  %189 = load i16, ptr %188, align 2, !dbg !1763
  %190 = icmp eq i16 %189, 1, !dbg !1763
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1763
  %192 = load i8, ptr %191, align 1, !dbg !1763
  %193 = icmp eq i8 %192, 8, !dbg !1763
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1763
  %195 = load i8, ptr %194, align 1, !dbg !1763
  %196 = icmp eq i8 %195, 0, !dbg !1763
  %197 = and i1 %193, %196, !dbg !1763
  %198 = and i1 %190, %197, !dbg !1763
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1763, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %199(ptr nonnull @.str.510), !dbg !1763
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, align 8, !dbg !1763, !tbaa !1868
  %201 = and i64 %200, 4294967295, !dbg !1763
  %202 = icmp eq i64 %201, 1, !dbg !1763
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1763, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %203(ptr nonnull @.str.511), !dbg !1763
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 1, !dbg !1763
  %205 = load i64, ptr %204, align 8, !dbg !1763, !tbaa !1878
  %206 = and i64 %205, 4294967295, !dbg !1763
  %207 = icmp eq i64 %206, 256, !dbg !1763
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1763, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %208(ptr nonnull @.str.512), !dbg !1763
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 2, !dbg !1763
  %210 = load i64, ptr %209, align 8, !dbg !1763, !tbaa !1880
  %211 = and i64 %210, 4294967295, !dbg !1763
  %212 = icmp eq i64 %211, 14, !dbg !1763
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1763, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %213(ptr nonnull @.str.513), !dbg !1763
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 3, !dbg !1763
  %215 = load i64, ptr %214, align 8, !dbg !1763, !tbaa !1883
  %216 = and i64 %215, 4294967295, !dbg !1763
  %217 = icmp eq i64 %216, 14, !dbg !1763
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1763, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %218(ptr nonnull @.str.514), !dbg !1763
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, null, !dbg !1763
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1763, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 1, !dbg !1763
  %220 = load i64, ptr %219, align 8, !dbg !1763, !tbaa !1885
  %221 = and i64 %220, 4294967295, !dbg !1763
  %222 = icmp eq i64 %221, 196, !dbg !1763
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 2, !dbg !1763
  %224 = load i64, ptr %223, align 8, !dbg !1763, !tbaa !1895
  %225 = and i64 %224, 4294967295, !dbg !1763
  %226 = icmp eq i64 %225, 14, !dbg !1763
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 3, !dbg !1763
  %228 = load i64, ptr %227, align 8, !dbg !1763, !tbaa !1898
  %229 = and i64 %228, 4294967295, !dbg !1763
  %230 = icmp eq i64 %229, 1, !dbg !1763
  %231 = and i1 %226, %230, !dbg !1763
  %232 = and i1 %222, %231, !dbg !1763
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1763, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1763
  %234 = load i64, ptr %233, align 8, !dbg !1763
  %235 = icmp eq i64 %234, 0, !dbg !1763
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1763, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %236(ptr nonnull @.str.515), !dbg !1763
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %237(ptr nonnull @.str.516), !dbg !1763
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1763
  %239 = load i32, ptr %238, align 4, !dbg !1763
  %240 = icmp eq i32 %239, 2, !dbg !1763
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1763, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %241(ptr nonnull @.str.517), !dbg !1763
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1763
  %243 = load i32, ptr %242, align 4, !dbg !1763
  %244 = icmp eq i32 %dev_id, %243, !dbg !1763
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1763, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1763, !tbaa !19
  tail call void %245(ptr nonnull @.str.518), !dbg !1763
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1763
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1763, !tbaa !1900
  %246 = sext i32 %dev_id to i64, !dbg !1763
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1763
  store i64 %246, ptr %247, align 8, !dbg !1763
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1763
  store i32 0, ptr %248, align 4, !dbg !1763, !tbaa !1911
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1763
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1763
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1763, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1763
  %.not120 = icmp eq ptr %252, null, !dbg !1763
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1763, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1763, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1763, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1763
  %256 = icmp eq i32 %255, 0, !dbg !1763
  br i1 %256, label %call_end, label %common.ret, !dbg !1763, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1763
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1763
  %259 = icmp eq i32 %258, 0, !dbg !1763
  br i1 %259, label %call_end106, label %common.ret, !dbg !1763, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1763
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1763
  br label %handle_init_end, !dbg !1763

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1763
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1913 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1915, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1916, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1917, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1918, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1919, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1920, metadata !DIExpression()), !dbg !1921
  %0 = alloca ptr, align 8, !dbg !1921
  %stack_value115 = alloca [7 x %0], align 8, !dbg !1921
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !1921
  %1 = icmp eq i32 %num_args, 4, !dbg !1921
  br i1 %1, label %assert_end, label %assert_fail, !dbg !1921, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !1921

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %2(ptr nonnull @.str.520), !dbg !1921
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1921, !tbaa !1922
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1921
  %p1.code = load i32, ptr %3, align 4, !dbg !1921, !tbaa !1933
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1921
  %p2.code = load i32, ptr %4, align 4, !dbg !1921, !tbaa !1935
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1921
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1921, !tbaa !1938
  %p0 = load ptr, ptr %args, align 8, !dbg !1921
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1921
  %p1 = load ptr, ptr %6, align 8, !dbg !1921
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1921
  %p2 = load ptr, ptr %7, align 8, !dbg !1921
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1921
  %T_cast = load ptr, ptr %8, align 8, !dbg !1921
  %p0108 = load ptr, ptr %p0, align 8, !dbg !1921
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !1921
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape = load ptr, ptr %9, align 8, !dbg !1921
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides = load ptr, ptr %10, align 8, !dbg !1921
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1921
  %dev_id = load i32, ptr %11, align 4, !dbg !1921
  %p1109 = load ptr, ptr %p1, align 8, !dbg !1921
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !1921
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape = load ptr, ptr %12, align 8, !dbg !1921
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.strides = load ptr, ptr %13, align 8, !dbg !1921
  %p2110 = load ptr, ptr %p2, align 8, !dbg !1921
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !1921
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape = load ptr, ptr %14, align 8, !dbg !1921
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.strides = load ptr, ptr %15, align 8, !dbg !1921
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !1921
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !1921
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape = load ptr, ptr %16, align 8, !dbg !1921
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1921
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides = load ptr, ptr %17, align 8, !dbg !1921
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1921

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %18(ptr nonnull @.str.521), !dbg !1921
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1921

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %19(ptr nonnull @.str.522), !dbg !1921
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1921

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %20(ptr nonnull @.str.523), !dbg !1921
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1921

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %21(ptr nonnull @.str.524), !dbg !1921
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1921
  %23 = load i32, ptr %22, align 4, !dbg !1921
  %24 = icmp eq i32 %23, 4, !dbg !1921
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !1921, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %25(ptr nonnull @.str.525), !dbg !1921
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1921
  %27 = load i16, ptr %26, align 2, !dbg !1921
  %28 = icmp eq i16 %27, 1, !dbg !1921
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1921
  %30 = load i8, ptr %29, align 1, !dbg !1921
  %31 = icmp eq i8 %30, 8, !dbg !1921
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1921
  %33 = load i8, ptr %32, align 1, !dbg !1921
  %34 = icmp eq i8 %33, 0, !dbg !1921
  %35 = and i1 %31, %34, !dbg !1921
  %36 = and i1 %28, %35, !dbg !1921
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !1921, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %37(ptr nonnull @.str.526), !dbg !1921
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape, align 8, !dbg !1921, !tbaa !1940
  %39 = and i64 %38, 4294967295, !dbg !1921
  %40 = icmp eq i64 %39, 1, !dbg !1921
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !1921, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %41(ptr nonnull @.str.527), !dbg !1921
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape, i64 1, !dbg !1921
  %43 = load i64, ptr %42, align 8, !dbg !1921, !tbaa !1950
  %44 = and i64 %43, 4294967295, !dbg !1921
  %45 = icmp eq i64 %44, 256, !dbg !1921
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !1921, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %46(ptr nonnull @.str.528), !dbg !1921
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape, i64 2, !dbg !1921
  %48 = load i64, ptr %47, align 8, !dbg !1921, !tbaa !1952
  %49 = and i64 %48, 4294967295, !dbg !1921
  %50 = icmp eq i64 %49, 14, !dbg !1921
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !1921, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %51(ptr nonnull @.str.529), !dbg !1921
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.shape, i64 3, !dbg !1921
  %53 = load i64, ptr %52, align 8, !dbg !1921, !tbaa !1955
  %54 = and i64 %53, 4294967295, !dbg !1921
  %55 = icmp eq i64 %54, 14, !dbg !1921
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !1921, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %56(ptr nonnull @.str.530), !dbg !1921
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides, null, !dbg !1921
  br i1 %.not, label %if_end, label %if_then, !dbg !1921, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides, i64 1, !dbg !1921
  %58 = load i64, ptr %57, align 8, !dbg !1921, !tbaa !1957
  %59 = and i64 %58, 4294967295, !dbg !1921
  %60 = icmp eq i64 %59, 196, !dbg !1921
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides, i64 2, !dbg !1921
  %62 = load i64, ptr %61, align 8, !dbg !1921, !tbaa !1967
  %63 = and i64 %62, 4294967295, !dbg !1921
  %64 = icmp eq i64 %63, 14, !dbg !1921
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p0.strides, i64 3, !dbg !1921
  %66 = load i64, ptr %65, align 8, !dbg !1921, !tbaa !1970
  %67 = and i64 %66, 4294967295, !dbg !1921
  %68 = icmp eq i64 %67, 1, !dbg !1921
  %69 = and i1 %64, %68, !dbg !1921
  %70 = and i1 %60, %69, !dbg !1921
  br i1 %70, label %if_end, label %assert_fail27, !dbg !1921, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1921
  %72 = load i64, ptr %71, align 8, !dbg !1921
  %73 = icmp eq i64 %72, 0, !dbg !1921
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !1921, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %74(ptr nonnull @.str.531), !dbg !1921
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %75(ptr nonnull @.str.532), !dbg !1921
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1921
  %77 = load i32, ptr %76, align 4, !dbg !1921
  %78 = icmp eq i32 %77, 2, !dbg !1921
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !1921, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %79(ptr nonnull @.str.533), !dbg !1921
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1921
  %81 = load i32, ptr %80, align 4, !dbg !1921
  %82 = icmp eq i32 %81, 4, !dbg !1921
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !1921, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %83(ptr nonnull @.str.534), !dbg !1921
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1921
  %85 = load i16, ptr %84, align 2, !dbg !1921
  %86 = icmp eq i16 %85, 1, !dbg !1921
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1921
  %88 = load i8, ptr %87, align 1, !dbg !1921
  %89 = icmp eq i8 %88, 32, !dbg !1921
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1921
  %91 = load i8, ptr %90, align 1, !dbg !1921
  %92 = icmp eq i8 %91, 0, !dbg !1921
  %93 = and i1 %89, %92, !dbg !1921
  %94 = and i1 %86, %93, !dbg !1921
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !1921, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %95(ptr nonnull @.str.535), !dbg !1921
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape, align 8, !dbg !1921, !tbaa !1972
  %97 = and i64 %96, 4294967295, !dbg !1921
  %98 = icmp eq i64 %97, 1, !dbg !1921
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !1921, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %99(ptr nonnull @.str.536), !dbg !1921
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape, i64 1, !dbg !1921
  %101 = load i64, ptr %100, align 8, !dbg !1921, !tbaa !1982
  %102 = and i64 %101, 4294967295, !dbg !1921
  %103 = icmp eq i64 %102, 256, !dbg !1921
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !1921, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %104(ptr nonnull @.str.537), !dbg !1921
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape, i64 2, !dbg !1921
  %106 = load i64, ptr %105, align 8, !dbg !1921, !tbaa !1984
  %107 = and i64 %106, 4294967295, !dbg !1921
  %108 = icmp eq i64 %107, 1, !dbg !1921
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !1921, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %109(ptr nonnull @.str.538), !dbg !1921
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.shape, i64 3, !dbg !1921
  %111 = load i64, ptr %110, align 8, !dbg !1921, !tbaa !1987
  %112 = and i64 %111, 4294967295, !dbg !1921
  %113 = icmp eq i64 %112, 1, !dbg !1921
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !1921, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %114(ptr nonnull @.str.539), !dbg !1921
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.strides, null, !dbg !1921
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !1921, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p1.strides, i64 1, !dbg !1921
  %116 = load i64, ptr %115, align 8, !dbg !1921, !tbaa !1989
  %117 = and i64 %116, 4294967295, !dbg !1921
  %118 = icmp eq i64 %117, 1, !dbg !1921
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !1921, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1921
  %120 = load i64, ptr %119, align 8, !dbg !1921
  %121 = icmp eq i64 %120, 0, !dbg !1921
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !1921, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %122(ptr nonnull @.str.540), !dbg !1921
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %123(ptr nonnull @.str.541), !dbg !1921
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1921
  %125 = load i32, ptr %124, align 4, !dbg !1921
  %126 = icmp eq i32 %125, 2, !dbg !1921
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !1921, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %127(ptr nonnull @.str.542), !dbg !1921
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1921
  %129 = load i32, ptr %128, align 4, !dbg !1921
  %130 = icmp eq i32 %dev_id, %129, !dbg !1921
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !1921, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %131(ptr nonnull @.str.543), !dbg !1921
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1921
  %133 = load i32, ptr %132, align 4, !dbg !1921
  %134 = icmp eq i32 %133, 4, !dbg !1921
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !1921, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %135(ptr nonnull @.str.544), !dbg !1921
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1921
  %137 = load i16, ptr %136, align 2, !dbg !1921
  %138 = icmp eq i16 %137, 1, !dbg !1921
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1921
  %140 = load i8, ptr %139, align 1, !dbg !1921
  %141 = icmp eq i8 %140, 32, !dbg !1921
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1921
  %143 = load i8, ptr %142, align 1, !dbg !1921
  %144 = icmp eq i8 %143, 0, !dbg !1921
  %145 = and i1 %141, %144, !dbg !1921
  %146 = and i1 %138, %145, !dbg !1921
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1921, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %147(ptr nonnull @.str.545), !dbg !1921
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape, align 8, !dbg !1921, !tbaa !1999
  %149 = and i64 %148, 4294967295, !dbg !1921
  %150 = icmp eq i64 %149, 1, !dbg !1921
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !1921, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %151(ptr nonnull @.str.546), !dbg !1921
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape, i64 1, !dbg !1921
  %153 = load i64, ptr %152, align 8, !dbg !1921, !tbaa !2009
  %154 = and i64 %153, 4294967295, !dbg !1921
  %155 = icmp eq i64 %154, 256, !dbg !1921
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1921, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %156(ptr nonnull @.str.547), !dbg !1921
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape, i64 2, !dbg !1921
  %158 = load i64, ptr %157, align 8, !dbg !1921, !tbaa !2011
  %159 = and i64 %158, 4294967295, !dbg !1921
  %160 = icmp eq i64 %159, 1, !dbg !1921
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !1921, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %161(ptr nonnull @.str.548), !dbg !1921
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.shape, i64 3, !dbg !1921
  %163 = load i64, ptr %162, align 8, !dbg !1921, !tbaa !2014
  %164 = and i64 %163, 4294967295, !dbg !1921
  %165 = icmp eq i64 %164, 1, !dbg !1921
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !1921, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %166(ptr nonnull @.str.549), !dbg !1921
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.strides, null, !dbg !1921
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !1921, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.p2.strides, i64 1, !dbg !1921
  %168 = load i64, ptr %167, align 8, !dbg !1921, !tbaa !2016
  %169 = and i64 %168, 4294967295, !dbg !1921
  %170 = icmp eq i64 %169, 1, !dbg !1921
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !1921, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1921
  %172 = load i64, ptr %171, align 8, !dbg !1921
  %173 = icmp eq i64 %172, 0, !dbg !1921
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !1921, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %174(ptr nonnull @.str.550), !dbg !1921
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %175(ptr nonnull @.str.551), !dbg !1921
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1921
  %177 = load i32, ptr %176, align 4, !dbg !1921
  %178 = icmp eq i32 %177, 2, !dbg !1921
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !1921, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %179(ptr nonnull @.str.552), !dbg !1921
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1921
  %181 = load i32, ptr %180, align 4, !dbg !1921
  %182 = icmp eq i32 %dev_id, %181, !dbg !1921
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !1921, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %183(ptr nonnull @.str.553), !dbg !1921
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1921
  %185 = load i32, ptr %184, align 4, !dbg !1921
  %186 = icmp eq i32 %185, 4, !dbg !1921
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !1921, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %187(ptr nonnull @.str.554), !dbg !1921
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1921
  %189 = load i16, ptr %188, align 2, !dbg !1921
  %190 = icmp eq i16 %189, 1, !dbg !1921
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1921
  %192 = load i8, ptr %191, align 1, !dbg !1921
  %193 = icmp eq i8 %192, 8, !dbg !1921
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1921
  %195 = load i8, ptr %194, align 1, !dbg !1921
  %196 = icmp eq i8 %195, 0, !dbg !1921
  %197 = and i1 %193, %196, !dbg !1921
  %198 = and i1 %190, %197, !dbg !1921
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !1921, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %199(ptr nonnull @.str.555), !dbg !1921
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape, align 8, !dbg !1921, !tbaa !2026
  %201 = and i64 %200, 4294967295, !dbg !1921
  %202 = icmp eq i64 %201, 1, !dbg !1921
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !1921, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %203(ptr nonnull @.str.556), !dbg !1921
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape, i64 1, !dbg !1921
  %205 = load i64, ptr %204, align 8, !dbg !1921, !tbaa !2036
  %206 = and i64 %205, 4294967295, !dbg !1921
  %207 = icmp eq i64 %206, 256, !dbg !1921
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !1921, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %208(ptr nonnull @.str.557), !dbg !1921
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape, i64 2, !dbg !1921
  %210 = load i64, ptr %209, align 8, !dbg !1921, !tbaa !2038
  %211 = and i64 %210, 4294967295, !dbg !1921
  %212 = icmp eq i64 %211, 14, !dbg !1921
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !1921, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %213(ptr nonnull @.str.558), !dbg !1921
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.shape, i64 3, !dbg !1921
  %215 = load i64, ptr %214, align 8, !dbg !1921, !tbaa !2041
  %216 = and i64 %215, 4294967295, !dbg !1921
  %217 = icmp eq i64 %216, 14, !dbg !1921
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !1921, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %218(ptr nonnull @.str.559), !dbg !1921
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides, null, !dbg !1921
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !1921, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides, i64 1, !dbg !1921
  %220 = load i64, ptr %219, align 8, !dbg !1921, !tbaa !2043
  %221 = and i64 %220, 4294967295, !dbg !1921
  %222 = icmp eq i64 %221, 196, !dbg !1921
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides, i64 2, !dbg !1921
  %224 = load i64, ptr %223, align 8, !dbg !1921, !tbaa !2053
  %225 = and i64 %224, 4294967295, !dbg !1921
  %226 = icmp eq i64 %225, 14, !dbg !1921
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7.T_cast.strides, i64 3, !dbg !1921
  %228 = load i64, ptr %227, align 8, !dbg !1921, !tbaa !2056
  %229 = and i64 %228, 4294967295, !dbg !1921
  %230 = icmp eq i64 %229, 1, !dbg !1921
  %231 = and i1 %226, %230, !dbg !1921
  %232 = and i1 %222, %231, !dbg !1921
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !1921, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1921
  %234 = load i64, ptr %233, align 8, !dbg !1921
  %235 = icmp eq i64 %234, 0, !dbg !1921
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !1921, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %236(ptr nonnull @.str.560), !dbg !1921
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %237(ptr nonnull @.str.561), !dbg !1921
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1921
  %239 = load i32, ptr %238, align 4, !dbg !1921
  %240 = icmp eq i32 %239, 2, !dbg !1921
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !1921, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %241(ptr nonnull @.str.562), !dbg !1921
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1921
  %243 = load i32, ptr %242, align 4, !dbg !1921
  %244 = icmp eq i32 %dev_id, %243, !dbg !1921
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !1921, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1921, !tbaa !19
  tail call void %245(ptr nonnull @.str.563), !dbg !1921
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !1921
  store i32 0, ptr %stack_tcode116, align 4, !dbg !1921, !tbaa !2058
  %246 = sext i32 %dev_id to i64, !dbg !1921
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !1921
  store i64 %246, ptr %247, align 8, !dbg !1921
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !1921
  store i32 0, ptr %248, align 4, !dbg !1921, !tbaa !2069
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !1921
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !1921
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !1921, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1921
  %.not120 = icmp eq ptr %252, null, !dbg !1921
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !1921, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !1921, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !1921, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !1921
  %256 = icmp eq i32 %255, 0, !dbg !1921
  br i1 %256, label %call_end, label %common.ret, !dbg !1921, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !1921
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !1921
  %259 = icmp eq i32 %258, 0, !dbg !1921
  br i1 %259, label %call_end106, label %common.ret, !dbg !1921, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !1921
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !1921
  br label %handle_init_end, !dbg !1921

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !1921
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2071 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2073, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2074, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2075, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2076, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2077, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2078, metadata !DIExpression()), !dbg !2079
  %0 = alloca ptr, align 8, !dbg !2079
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2079
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2079
  %1 = icmp eq i32 %num_args, 4, !dbg !2079
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2079, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2079

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %2(ptr nonnull @.str.565), !dbg !2079
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2079, !tbaa !2080
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2079
  %p1.code = load i32, ptr %3, align 4, !dbg !2079, !tbaa !2091
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2079
  %p2.code = load i32, ptr %4, align 4, !dbg !2079, !tbaa !2093
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2079
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2079, !tbaa !2096
  %p0 = load ptr, ptr %args, align 8, !dbg !2079
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2079
  %p1 = load ptr, ptr %6, align 8, !dbg !2079
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2079
  %p2 = load ptr, ptr %7, align 8, !dbg !2079
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2079
  %T_cast = load ptr, ptr %8, align 8, !dbg !2079
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2079
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2079
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape = load ptr, ptr %9, align 8, !dbg !2079
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides = load ptr, ptr %10, align 8, !dbg !2079
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2079
  %dev_id = load i32, ptr %11, align 4, !dbg !2079
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2079
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2079
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape = load ptr, ptr %12, align 8, !dbg !2079
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.strides = load ptr, ptr %13, align 8, !dbg !2079
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2079
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2079
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape = load ptr, ptr %14, align 8, !dbg !2079
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.strides = load ptr, ptr %15, align 8, !dbg !2079
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2079
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2079
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2079
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2079
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2079
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2079

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %18(ptr nonnull @.str.566), !dbg !2079
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2079

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %19(ptr nonnull @.str.567), !dbg !2079
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2079

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %20(ptr nonnull @.str.568), !dbg !2079
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2079

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %21(ptr nonnull @.str.569), !dbg !2079
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2079
  %23 = load i32, ptr %22, align 4, !dbg !2079
  %24 = icmp eq i32 %23, 4, !dbg !2079
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2079, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %25(ptr nonnull @.str.570), !dbg !2079
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2079
  %27 = load i16, ptr %26, align 2, !dbg !2079
  %28 = icmp eq i16 %27, 1, !dbg !2079
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2079
  %30 = load i8, ptr %29, align 1, !dbg !2079
  %31 = icmp eq i8 %30, 8, !dbg !2079
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2079
  %33 = load i8, ptr %32, align 1, !dbg !2079
  %34 = icmp eq i8 %33, 0, !dbg !2079
  %35 = and i1 %31, %34, !dbg !2079
  %36 = and i1 %28, %35, !dbg !2079
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2079, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %37(ptr nonnull @.str.571), !dbg !2079
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape, align 8, !dbg !2079, !tbaa !2098
  %39 = and i64 %38, 4294967295, !dbg !2079
  %40 = icmp eq i64 %39, 1, !dbg !2079
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2079, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %41(ptr nonnull @.str.572), !dbg !2079
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape, i64 1, !dbg !2079
  %43 = load i64, ptr %42, align 8, !dbg !2079, !tbaa !2108
  %44 = and i64 %43, 4294967295, !dbg !2079
  %45 = icmp eq i64 %44, 512, !dbg !2079
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2079, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %46(ptr nonnull @.str.573), !dbg !2079
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape, i64 2, !dbg !2079
  %48 = load i64, ptr %47, align 8, !dbg !2079, !tbaa !2110
  %49 = and i64 %48, 4294967295, !dbg !2079
  %50 = icmp eq i64 %49, 14, !dbg !2079
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2079, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %51(ptr nonnull @.str.574), !dbg !2079
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.shape, i64 3, !dbg !2079
  %53 = load i64, ptr %52, align 8, !dbg !2079, !tbaa !2113
  %54 = and i64 %53, 4294967295, !dbg !2079
  %55 = icmp eq i64 %54, 14, !dbg !2079
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2079, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %56(ptr nonnull @.str.575), !dbg !2079
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides, null, !dbg !2079
  br i1 %.not, label %if_end, label %if_then, !dbg !2079, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides, i64 1, !dbg !2079
  %58 = load i64, ptr %57, align 8, !dbg !2079, !tbaa !2115
  %59 = and i64 %58, 4294967295, !dbg !2079
  %60 = icmp eq i64 %59, 196, !dbg !2079
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides, i64 2, !dbg !2079
  %62 = load i64, ptr %61, align 8, !dbg !2079, !tbaa !2125
  %63 = and i64 %62, 4294967295, !dbg !2079
  %64 = icmp eq i64 %63, 14, !dbg !2079
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p0.strides, i64 3, !dbg !2079
  %66 = load i64, ptr %65, align 8, !dbg !2079, !tbaa !2128
  %67 = and i64 %66, 4294967295, !dbg !2079
  %68 = icmp eq i64 %67, 1, !dbg !2079
  %69 = and i1 %64, %68, !dbg !2079
  %70 = and i1 %60, %69, !dbg !2079
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2079, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2079
  %72 = load i64, ptr %71, align 8, !dbg !2079
  %73 = icmp eq i64 %72, 0, !dbg !2079
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2079, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %74(ptr nonnull @.str.576), !dbg !2079
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %75(ptr nonnull @.str.577), !dbg !2079
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2079
  %77 = load i32, ptr %76, align 4, !dbg !2079
  %78 = icmp eq i32 %77, 2, !dbg !2079
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2079, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %79(ptr nonnull @.str.578), !dbg !2079
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2079
  %81 = load i32, ptr %80, align 4, !dbg !2079
  %82 = icmp eq i32 %81, 4, !dbg !2079
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2079, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %83(ptr nonnull @.str.579), !dbg !2079
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2079
  %85 = load i16, ptr %84, align 2, !dbg !2079
  %86 = icmp eq i16 %85, 1, !dbg !2079
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2079
  %88 = load i8, ptr %87, align 1, !dbg !2079
  %89 = icmp eq i8 %88, 32, !dbg !2079
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2079
  %91 = load i8, ptr %90, align 1, !dbg !2079
  %92 = icmp eq i8 %91, 0, !dbg !2079
  %93 = and i1 %89, %92, !dbg !2079
  %94 = and i1 %86, %93, !dbg !2079
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2079, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %95(ptr nonnull @.str.580), !dbg !2079
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape, align 8, !dbg !2079, !tbaa !2130
  %97 = and i64 %96, 4294967295, !dbg !2079
  %98 = icmp eq i64 %97, 1, !dbg !2079
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2079, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %99(ptr nonnull @.str.581), !dbg !2079
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape, i64 1, !dbg !2079
  %101 = load i64, ptr %100, align 8, !dbg !2079, !tbaa !2140
  %102 = and i64 %101, 4294967295, !dbg !2079
  %103 = icmp eq i64 %102, 512, !dbg !2079
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2079, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %104(ptr nonnull @.str.582), !dbg !2079
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape, i64 2, !dbg !2079
  %106 = load i64, ptr %105, align 8, !dbg !2079, !tbaa !2142
  %107 = and i64 %106, 4294967295, !dbg !2079
  %108 = icmp eq i64 %107, 1, !dbg !2079
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2079, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %109(ptr nonnull @.str.583), !dbg !2079
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.shape, i64 3, !dbg !2079
  %111 = load i64, ptr %110, align 8, !dbg !2079, !tbaa !2145
  %112 = and i64 %111, 4294967295, !dbg !2079
  %113 = icmp eq i64 %112, 1, !dbg !2079
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2079, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %114(ptr nonnull @.str.584), !dbg !2079
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.strides, null, !dbg !2079
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2079, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p1.strides, i64 1, !dbg !2079
  %116 = load i64, ptr %115, align 8, !dbg !2079, !tbaa !2147
  %117 = and i64 %116, 4294967295, !dbg !2079
  %118 = icmp eq i64 %117, 1, !dbg !2079
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2079, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2079
  %120 = load i64, ptr %119, align 8, !dbg !2079
  %121 = icmp eq i64 %120, 0, !dbg !2079
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2079, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %122(ptr nonnull @.str.585), !dbg !2079
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %123(ptr nonnull @.str.586), !dbg !2079
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2079
  %125 = load i32, ptr %124, align 4, !dbg !2079
  %126 = icmp eq i32 %125, 2, !dbg !2079
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2079, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %127(ptr nonnull @.str.587), !dbg !2079
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2079
  %129 = load i32, ptr %128, align 4, !dbg !2079
  %130 = icmp eq i32 %dev_id, %129, !dbg !2079
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2079, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %131(ptr nonnull @.str.588), !dbg !2079
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2079
  %133 = load i32, ptr %132, align 4, !dbg !2079
  %134 = icmp eq i32 %133, 4, !dbg !2079
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2079, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %135(ptr nonnull @.str.589), !dbg !2079
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2079
  %137 = load i16, ptr %136, align 2, !dbg !2079
  %138 = icmp eq i16 %137, 1, !dbg !2079
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2079
  %140 = load i8, ptr %139, align 1, !dbg !2079
  %141 = icmp eq i8 %140, 32, !dbg !2079
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2079
  %143 = load i8, ptr %142, align 1, !dbg !2079
  %144 = icmp eq i8 %143, 0, !dbg !2079
  %145 = and i1 %141, %144, !dbg !2079
  %146 = and i1 %138, %145, !dbg !2079
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2079, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %147(ptr nonnull @.str.590), !dbg !2079
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape, align 8, !dbg !2079, !tbaa !2157
  %149 = and i64 %148, 4294967295, !dbg !2079
  %150 = icmp eq i64 %149, 1, !dbg !2079
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2079, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %151(ptr nonnull @.str.591), !dbg !2079
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape, i64 1, !dbg !2079
  %153 = load i64, ptr %152, align 8, !dbg !2079, !tbaa !2167
  %154 = and i64 %153, 4294967295, !dbg !2079
  %155 = icmp eq i64 %154, 512, !dbg !2079
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2079, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %156(ptr nonnull @.str.592), !dbg !2079
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape, i64 2, !dbg !2079
  %158 = load i64, ptr %157, align 8, !dbg !2079, !tbaa !2169
  %159 = and i64 %158, 4294967295, !dbg !2079
  %160 = icmp eq i64 %159, 1, !dbg !2079
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2079, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %161(ptr nonnull @.str.593), !dbg !2079
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.shape, i64 3, !dbg !2079
  %163 = load i64, ptr %162, align 8, !dbg !2079, !tbaa !2172
  %164 = and i64 %163, 4294967295, !dbg !2079
  %165 = icmp eq i64 %164, 1, !dbg !2079
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2079, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %166(ptr nonnull @.str.594), !dbg !2079
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.strides, null, !dbg !2079
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2079, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.p2.strides, i64 1, !dbg !2079
  %168 = load i64, ptr %167, align 8, !dbg !2079, !tbaa !2174
  %169 = and i64 %168, 4294967295, !dbg !2079
  %170 = icmp eq i64 %169, 1, !dbg !2079
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2079, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2079
  %172 = load i64, ptr %171, align 8, !dbg !2079
  %173 = icmp eq i64 %172, 0, !dbg !2079
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2079, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %174(ptr nonnull @.str.595), !dbg !2079
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %175(ptr nonnull @.str.596), !dbg !2079
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2079
  %177 = load i32, ptr %176, align 4, !dbg !2079
  %178 = icmp eq i32 %177, 2, !dbg !2079
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2079, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %179(ptr nonnull @.str.597), !dbg !2079
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2079
  %181 = load i32, ptr %180, align 4, !dbg !2079
  %182 = icmp eq i32 %dev_id, %181, !dbg !2079
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2079, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %183(ptr nonnull @.str.598), !dbg !2079
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2079
  %185 = load i32, ptr %184, align 4, !dbg !2079
  %186 = icmp eq i32 %185, 4, !dbg !2079
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2079, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %187(ptr nonnull @.str.599), !dbg !2079
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2079
  %189 = load i16, ptr %188, align 2, !dbg !2079
  %190 = icmp eq i16 %189, 1, !dbg !2079
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2079
  %192 = load i8, ptr %191, align 1, !dbg !2079
  %193 = icmp eq i8 %192, 8, !dbg !2079
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2079
  %195 = load i8, ptr %194, align 1, !dbg !2079
  %196 = icmp eq i8 %195, 0, !dbg !2079
  %197 = and i1 %193, %196, !dbg !2079
  %198 = and i1 %190, %197, !dbg !2079
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2079, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %199(ptr nonnull @.str.600), !dbg !2079
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape, align 8, !dbg !2079, !tbaa !2184
  %201 = and i64 %200, 4294967295, !dbg !2079
  %202 = icmp eq i64 %201, 1, !dbg !2079
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2079, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %203(ptr nonnull @.str.601), !dbg !2079
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape, i64 1, !dbg !2079
  %205 = load i64, ptr %204, align 8, !dbg !2079, !tbaa !2194
  %206 = and i64 %205, 4294967295, !dbg !2079
  %207 = icmp eq i64 %206, 512, !dbg !2079
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2079, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %208(ptr nonnull @.str.602), !dbg !2079
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape, i64 2, !dbg !2079
  %210 = load i64, ptr %209, align 8, !dbg !2079, !tbaa !2196
  %211 = and i64 %210, 4294967295, !dbg !2079
  %212 = icmp eq i64 %211, 14, !dbg !2079
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2079, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %213(ptr nonnull @.str.603), !dbg !2079
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.shape, i64 3, !dbg !2079
  %215 = load i64, ptr %214, align 8, !dbg !2079, !tbaa !2199
  %216 = and i64 %215, 4294967295, !dbg !2079
  %217 = icmp eq i64 %216, 14, !dbg !2079
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2079, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %218(ptr nonnull @.str.604), !dbg !2079
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides, null, !dbg !2079
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2079, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides, i64 1, !dbg !2079
  %220 = load i64, ptr %219, align 8, !dbg !2079, !tbaa !2201
  %221 = and i64 %220, 4294967295, !dbg !2079
  %222 = icmp eq i64 %221, 196, !dbg !2079
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides, i64 2, !dbg !2079
  %224 = load i64, ptr %223, align 8, !dbg !2079, !tbaa !2211
  %225 = and i64 %224, 4294967295, !dbg !2079
  %226 = icmp eq i64 %225, 14, !dbg !2079
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8.T_cast.strides, i64 3, !dbg !2079
  %228 = load i64, ptr %227, align 8, !dbg !2079, !tbaa !2214
  %229 = and i64 %228, 4294967295, !dbg !2079
  %230 = icmp eq i64 %229, 1, !dbg !2079
  %231 = and i1 %226, %230, !dbg !2079
  %232 = and i1 %222, %231, !dbg !2079
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2079, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2079
  %234 = load i64, ptr %233, align 8, !dbg !2079
  %235 = icmp eq i64 %234, 0, !dbg !2079
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2079, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %236(ptr nonnull @.str.605), !dbg !2079
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %237(ptr nonnull @.str.606), !dbg !2079
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2079
  %239 = load i32, ptr %238, align 4, !dbg !2079
  %240 = icmp eq i32 %239, 2, !dbg !2079
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2079, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %241(ptr nonnull @.str.607), !dbg !2079
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2079
  %243 = load i32, ptr %242, align 4, !dbg !2079
  %244 = icmp eq i32 %dev_id, %243, !dbg !2079
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2079, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2079, !tbaa !19
  tail call void %245(ptr nonnull @.str.608), !dbg !2079
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2079
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2079, !tbaa !2216
  %246 = sext i32 %dev_id to i64, !dbg !2079
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2079
  store i64 %246, ptr %247, align 8, !dbg !2079
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2079
  store i32 0, ptr %248, align 4, !dbg !2079, !tbaa !2227
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2079
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2079
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2079, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2079
  %.not120 = icmp eq ptr %252, null, !dbg !2079
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2079, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2079, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2079, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2079
  %256 = icmp eq i32 %255, 0, !dbg !2079
  br i1 %256, label %call_end, label %common.ret, !dbg !2079, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2079
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2079
  %259 = icmp eq i32 %258, 0, !dbg !2079
  br i1 %259, label %call_end106, label %common.ret, !dbg !2079, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2079
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2079
  br label %handle_init_end, !dbg !2079

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2079
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2229 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2231, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2232, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2233, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2234, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2235, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2236, metadata !DIExpression()), !dbg !2237
  %0 = alloca ptr, align 8, !dbg !2237
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2237
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2237
  %1 = icmp eq i32 %num_args, 4, !dbg !2237
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2237, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2237

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %2(ptr nonnull @.str.610), !dbg !2237
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2237, !tbaa !2238
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2237
  %p1.code = load i32, ptr %3, align 4, !dbg !2237, !tbaa !2249
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2237
  %p2.code = load i32, ptr %4, align 4, !dbg !2237, !tbaa !2251
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2237
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2237, !tbaa !2254
  %p0 = load ptr, ptr %args, align 8, !dbg !2237
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2237
  %p1 = load ptr, ptr %6, align 8, !dbg !2237
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2237
  %p2 = load ptr, ptr %7, align 8, !dbg !2237
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2237
  %T_cast = load ptr, ptr %8, align 8, !dbg !2237
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2237
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2237
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape = load ptr, ptr %9, align 8, !dbg !2237
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides = load ptr, ptr %10, align 8, !dbg !2237
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2237
  %dev_id = load i32, ptr %11, align 4, !dbg !2237
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2237
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2237
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape = load ptr, ptr %12, align 8, !dbg !2237
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.strides = load ptr, ptr %13, align 8, !dbg !2237
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2237
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2237
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape = load ptr, ptr %14, align 8, !dbg !2237
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.strides = load ptr, ptr %15, align 8, !dbg !2237
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2237
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2237
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2237
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2237
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2237
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2237

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %18(ptr nonnull @.str.611), !dbg !2237
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2237

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %19(ptr nonnull @.str.612), !dbg !2237
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2237

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %20(ptr nonnull @.str.613), !dbg !2237
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2237

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %21(ptr nonnull @.str.614), !dbg !2237
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2237
  %23 = load i32, ptr %22, align 4, !dbg !2237
  %24 = icmp eq i32 %23, 4, !dbg !2237
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2237, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %25(ptr nonnull @.str.615), !dbg !2237
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2237
  %27 = load i16, ptr %26, align 2, !dbg !2237
  %28 = icmp eq i16 %27, 1, !dbg !2237
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2237
  %30 = load i8, ptr %29, align 1, !dbg !2237
  %31 = icmp eq i8 %30, 8, !dbg !2237
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2237
  %33 = load i8, ptr %32, align 1, !dbg !2237
  %34 = icmp eq i8 %33, 0, !dbg !2237
  %35 = and i1 %31, %34, !dbg !2237
  %36 = and i1 %28, %35, !dbg !2237
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2237, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %37(ptr nonnull @.str.616), !dbg !2237
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape, align 8, !dbg !2237, !tbaa !2256
  %39 = and i64 %38, 4294967295, !dbg !2237
  %40 = icmp eq i64 %39, 1, !dbg !2237
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2237, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %41(ptr nonnull @.str.617), !dbg !2237
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape, i64 1, !dbg !2237
  %43 = load i64, ptr %42, align 8, !dbg !2237, !tbaa !2266
  %44 = and i64 %43, 4294967295, !dbg !2237
  %45 = icmp eq i64 %44, 512, !dbg !2237
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2237, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %46(ptr nonnull @.str.618), !dbg !2237
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape, i64 2, !dbg !2237
  %48 = load i64, ptr %47, align 8, !dbg !2237, !tbaa !2268
  %49 = and i64 %48, 4294967295, !dbg !2237
  %50 = icmp eq i64 %49, 7, !dbg !2237
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2237, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %51(ptr nonnull @.str.619), !dbg !2237
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.shape, i64 3, !dbg !2237
  %53 = load i64, ptr %52, align 8, !dbg !2237, !tbaa !2271
  %54 = and i64 %53, 4294967295, !dbg !2237
  %55 = icmp eq i64 %54, 7, !dbg !2237
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2237, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %56(ptr nonnull @.str.620), !dbg !2237
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides, null, !dbg !2237
  br i1 %.not, label %if_end, label %if_then, !dbg !2237, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides, i64 1, !dbg !2237
  %58 = load i64, ptr %57, align 8, !dbg !2237, !tbaa !2273
  %59 = and i64 %58, 4294967295, !dbg !2237
  %60 = icmp eq i64 %59, 49, !dbg !2237
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides, i64 2, !dbg !2237
  %62 = load i64, ptr %61, align 8, !dbg !2237, !tbaa !2283
  %63 = and i64 %62, 4294967295, !dbg !2237
  %64 = icmp eq i64 %63, 7, !dbg !2237
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p0.strides, i64 3, !dbg !2237
  %66 = load i64, ptr %65, align 8, !dbg !2237, !tbaa !2286
  %67 = and i64 %66, 4294967295, !dbg !2237
  %68 = icmp eq i64 %67, 1, !dbg !2237
  %69 = and i1 %64, %68, !dbg !2237
  %70 = and i1 %60, %69, !dbg !2237
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2237, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2237
  %72 = load i64, ptr %71, align 8, !dbg !2237
  %73 = icmp eq i64 %72, 0, !dbg !2237
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2237, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %74(ptr nonnull @.str.621), !dbg !2237
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %75(ptr nonnull @.str.622), !dbg !2237
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2237
  %77 = load i32, ptr %76, align 4, !dbg !2237
  %78 = icmp eq i32 %77, 2, !dbg !2237
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2237, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %79(ptr nonnull @.str.623), !dbg !2237
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2237
  %81 = load i32, ptr %80, align 4, !dbg !2237
  %82 = icmp eq i32 %81, 4, !dbg !2237
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2237, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %83(ptr nonnull @.str.624), !dbg !2237
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2237
  %85 = load i16, ptr %84, align 2, !dbg !2237
  %86 = icmp eq i16 %85, 1, !dbg !2237
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2237
  %88 = load i8, ptr %87, align 1, !dbg !2237
  %89 = icmp eq i8 %88, 32, !dbg !2237
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2237
  %91 = load i8, ptr %90, align 1, !dbg !2237
  %92 = icmp eq i8 %91, 0, !dbg !2237
  %93 = and i1 %89, %92, !dbg !2237
  %94 = and i1 %86, %93, !dbg !2237
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2237, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %95(ptr nonnull @.str.625), !dbg !2237
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape, align 8, !dbg !2237, !tbaa !2288
  %97 = and i64 %96, 4294967295, !dbg !2237
  %98 = icmp eq i64 %97, 1, !dbg !2237
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2237, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %99(ptr nonnull @.str.626), !dbg !2237
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape, i64 1, !dbg !2237
  %101 = load i64, ptr %100, align 8, !dbg !2237, !tbaa !2298
  %102 = and i64 %101, 4294967295, !dbg !2237
  %103 = icmp eq i64 %102, 512, !dbg !2237
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2237, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %104(ptr nonnull @.str.627), !dbg !2237
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape, i64 2, !dbg !2237
  %106 = load i64, ptr %105, align 8, !dbg !2237, !tbaa !2300
  %107 = and i64 %106, 4294967295, !dbg !2237
  %108 = icmp eq i64 %107, 1, !dbg !2237
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2237, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %109(ptr nonnull @.str.628), !dbg !2237
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.shape, i64 3, !dbg !2237
  %111 = load i64, ptr %110, align 8, !dbg !2237, !tbaa !2303
  %112 = and i64 %111, 4294967295, !dbg !2237
  %113 = icmp eq i64 %112, 1, !dbg !2237
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2237, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %114(ptr nonnull @.str.629), !dbg !2237
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.strides, null, !dbg !2237
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2237, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p1.strides, i64 1, !dbg !2237
  %116 = load i64, ptr %115, align 8, !dbg !2237, !tbaa !2305
  %117 = and i64 %116, 4294967295, !dbg !2237
  %118 = icmp eq i64 %117, 1, !dbg !2237
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2237, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2237
  %120 = load i64, ptr %119, align 8, !dbg !2237
  %121 = icmp eq i64 %120, 0, !dbg !2237
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2237, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %122(ptr nonnull @.str.630), !dbg !2237
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %123(ptr nonnull @.str.631), !dbg !2237
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2237
  %125 = load i32, ptr %124, align 4, !dbg !2237
  %126 = icmp eq i32 %125, 2, !dbg !2237
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2237, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %127(ptr nonnull @.str.632), !dbg !2237
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2237
  %129 = load i32, ptr %128, align 4, !dbg !2237
  %130 = icmp eq i32 %dev_id, %129, !dbg !2237
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2237, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %131(ptr nonnull @.str.633), !dbg !2237
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2237
  %133 = load i32, ptr %132, align 4, !dbg !2237
  %134 = icmp eq i32 %133, 4, !dbg !2237
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2237, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %135(ptr nonnull @.str.634), !dbg !2237
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2237
  %137 = load i16, ptr %136, align 2, !dbg !2237
  %138 = icmp eq i16 %137, 1, !dbg !2237
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2237
  %140 = load i8, ptr %139, align 1, !dbg !2237
  %141 = icmp eq i8 %140, 32, !dbg !2237
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2237
  %143 = load i8, ptr %142, align 1, !dbg !2237
  %144 = icmp eq i8 %143, 0, !dbg !2237
  %145 = and i1 %141, %144, !dbg !2237
  %146 = and i1 %138, %145, !dbg !2237
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2237, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %147(ptr nonnull @.str.635), !dbg !2237
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape, align 8, !dbg !2237, !tbaa !2315
  %149 = and i64 %148, 4294967295, !dbg !2237
  %150 = icmp eq i64 %149, 1, !dbg !2237
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2237, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %151(ptr nonnull @.str.636), !dbg !2237
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape, i64 1, !dbg !2237
  %153 = load i64, ptr %152, align 8, !dbg !2237, !tbaa !2325
  %154 = and i64 %153, 4294967295, !dbg !2237
  %155 = icmp eq i64 %154, 512, !dbg !2237
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2237, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %156(ptr nonnull @.str.637), !dbg !2237
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape, i64 2, !dbg !2237
  %158 = load i64, ptr %157, align 8, !dbg !2237, !tbaa !2327
  %159 = and i64 %158, 4294967295, !dbg !2237
  %160 = icmp eq i64 %159, 1, !dbg !2237
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2237, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %161(ptr nonnull @.str.638), !dbg !2237
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.shape, i64 3, !dbg !2237
  %163 = load i64, ptr %162, align 8, !dbg !2237, !tbaa !2330
  %164 = and i64 %163, 4294967295, !dbg !2237
  %165 = icmp eq i64 %164, 1, !dbg !2237
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2237, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %166(ptr nonnull @.str.639), !dbg !2237
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.strides, null, !dbg !2237
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2237, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.p2.strides, i64 1, !dbg !2237
  %168 = load i64, ptr %167, align 8, !dbg !2237, !tbaa !2332
  %169 = and i64 %168, 4294967295, !dbg !2237
  %170 = icmp eq i64 %169, 1, !dbg !2237
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2237, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2237
  %172 = load i64, ptr %171, align 8, !dbg !2237
  %173 = icmp eq i64 %172, 0, !dbg !2237
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2237, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %174(ptr nonnull @.str.640), !dbg !2237
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %175(ptr nonnull @.str.641), !dbg !2237
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2237
  %177 = load i32, ptr %176, align 4, !dbg !2237
  %178 = icmp eq i32 %177, 2, !dbg !2237
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2237, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %179(ptr nonnull @.str.642), !dbg !2237
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2237
  %181 = load i32, ptr %180, align 4, !dbg !2237
  %182 = icmp eq i32 %dev_id, %181, !dbg !2237
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2237, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %183(ptr nonnull @.str.643), !dbg !2237
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2237
  %185 = load i32, ptr %184, align 4, !dbg !2237
  %186 = icmp eq i32 %185, 4, !dbg !2237
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2237, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %187(ptr nonnull @.str.644), !dbg !2237
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2237
  %189 = load i16, ptr %188, align 2, !dbg !2237
  %190 = icmp eq i16 %189, 1, !dbg !2237
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2237
  %192 = load i8, ptr %191, align 1, !dbg !2237
  %193 = icmp eq i8 %192, 8, !dbg !2237
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2237
  %195 = load i8, ptr %194, align 1, !dbg !2237
  %196 = icmp eq i8 %195, 0, !dbg !2237
  %197 = and i1 %193, %196, !dbg !2237
  %198 = and i1 %190, %197, !dbg !2237
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2237, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %199(ptr nonnull @.str.645), !dbg !2237
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape, align 8, !dbg !2237, !tbaa !2342
  %201 = and i64 %200, 4294967295, !dbg !2237
  %202 = icmp eq i64 %201, 1, !dbg !2237
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2237, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %203(ptr nonnull @.str.646), !dbg !2237
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape, i64 1, !dbg !2237
  %205 = load i64, ptr %204, align 8, !dbg !2237, !tbaa !2352
  %206 = and i64 %205, 4294967295, !dbg !2237
  %207 = icmp eq i64 %206, 512, !dbg !2237
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2237, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %208(ptr nonnull @.str.647), !dbg !2237
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape, i64 2, !dbg !2237
  %210 = load i64, ptr %209, align 8, !dbg !2237, !tbaa !2354
  %211 = and i64 %210, 4294967295, !dbg !2237
  %212 = icmp eq i64 %211, 7, !dbg !2237
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2237, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %213(ptr nonnull @.str.648), !dbg !2237
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.shape, i64 3, !dbg !2237
  %215 = load i64, ptr %214, align 8, !dbg !2237, !tbaa !2357
  %216 = and i64 %215, 4294967295, !dbg !2237
  %217 = icmp eq i64 %216, 7, !dbg !2237
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2237, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %218(ptr nonnull @.str.649), !dbg !2237
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides, null, !dbg !2237
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2237, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides, i64 1, !dbg !2237
  %220 = load i64, ptr %219, align 8, !dbg !2237, !tbaa !2359
  %221 = and i64 %220, 4294967295, !dbg !2237
  %222 = icmp eq i64 %221, 49, !dbg !2237
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides, i64 2, !dbg !2237
  %224 = load i64, ptr %223, align 8, !dbg !2237, !tbaa !2369
  %225 = and i64 %224, 4294967295, !dbg !2237
  %226 = icmp eq i64 %225, 7, !dbg !2237
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9.T_cast.strides, i64 3, !dbg !2237
  %228 = load i64, ptr %227, align 8, !dbg !2237, !tbaa !2372
  %229 = and i64 %228, 4294967295, !dbg !2237
  %230 = icmp eq i64 %229, 1, !dbg !2237
  %231 = and i1 %226, %230, !dbg !2237
  %232 = and i1 %222, %231, !dbg !2237
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2237, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2237
  %234 = load i64, ptr %233, align 8, !dbg !2237
  %235 = icmp eq i64 %234, 0, !dbg !2237
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2237, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %236(ptr nonnull @.str.650), !dbg !2237
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %237(ptr nonnull @.str.651), !dbg !2237
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2237
  %239 = load i32, ptr %238, align 4, !dbg !2237
  %240 = icmp eq i32 %239, 2, !dbg !2237
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2237, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %241(ptr nonnull @.str.652), !dbg !2237
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2237
  %243 = load i32, ptr %242, align 4, !dbg !2237
  %244 = icmp eq i32 %dev_id, %243, !dbg !2237
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2237, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2237, !tbaa !19
  tail call void %245(ptr nonnull @.str.653), !dbg !2237
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2237
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2237, !tbaa !2374
  %246 = sext i32 %dev_id to i64, !dbg !2237
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2237
  store i64 %246, ptr %247, align 8, !dbg !2237
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2237
  store i32 0, ptr %248, align 4, !dbg !2237, !tbaa !2385
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2237
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2237
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2237, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2237
  %.not120 = icmp eq ptr %252, null, !dbg !2237
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2237, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2237, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2237, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2237
  %256 = icmp eq i32 %255, 0, !dbg !2237
  br i1 %256, label %call_end, label %common.ret, !dbg !2237, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2237
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2237
  %259 = icmp eq i32 %258, 0, !dbg !2237
  br i1 %259, label %call_end106, label %common.ret, !dbg !2237, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2237
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2237
  br label %handle_init_end, !dbg !2237

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2237
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2389, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2390, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2391, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2392, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2393, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2394, metadata !DIExpression()), !dbg !2395
  %0 = alloca ptr, align 8, !dbg !2395
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2395
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2395
  %1 = icmp eq i32 %num_args, 4, !dbg !2395
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2395, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2395

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %2(ptr nonnull @.str.655), !dbg !2395
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2395, !tbaa !2396
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2395
  %p1.code = load i32, ptr %3, align 4, !dbg !2395, !tbaa !2407
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2395
  %p2.code = load i32, ptr %4, align 4, !dbg !2395, !tbaa !2409
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2395
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2395, !tbaa !2412
  %p0 = load ptr, ptr %args, align 8, !dbg !2395
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2395
  %p1 = load ptr, ptr %6, align 8, !dbg !2395
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2395
  %p2 = load ptr, ptr %7, align 8, !dbg !2395
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2395
  %T_cast = load ptr, ptr %8, align 8, !dbg !2395
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2395
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2395
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape = load ptr, ptr %9, align 8, !dbg !2395
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides = load ptr, ptr %10, align 8, !dbg !2395
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2395
  %dev_id = load i32, ptr %11, align 4, !dbg !2395
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2395
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2395
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape = load ptr, ptr %12, align 8, !dbg !2395
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides = load ptr, ptr %13, align 8, !dbg !2395
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2395
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2395
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape = load ptr, ptr %14, align 8, !dbg !2395
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides = load ptr, ptr %15, align 8, !dbg !2395
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2395
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2395
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2395
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2395
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2395
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2395

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %18(ptr nonnull @.str.656), !dbg !2395
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2395

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %19(ptr nonnull @.str.657), !dbg !2395
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2395

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %20(ptr nonnull @.str.658), !dbg !2395
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2395

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %21(ptr nonnull @.str.659), !dbg !2395
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2395
  %23 = load i32, ptr %22, align 4, !dbg !2395
  %24 = icmp eq i32 %23, 4, !dbg !2395
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2395, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %25(ptr nonnull @.str.660), !dbg !2395
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2395
  %27 = load i16, ptr %26, align 2, !dbg !2395
  %28 = icmp eq i16 %27, 1, !dbg !2395
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2395
  %30 = load i8, ptr %29, align 1, !dbg !2395
  %31 = icmp eq i8 %30, 8, !dbg !2395
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2395
  %33 = load i8, ptr %32, align 1, !dbg !2395
  %34 = icmp eq i8 %33, 0, !dbg !2395
  %35 = and i1 %31, %34, !dbg !2395
  %36 = and i1 %28, %35, !dbg !2395
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2395, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %37(ptr nonnull @.str.661), !dbg !2395
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, align 8, !dbg !2395, !tbaa !2414
  %39 = and i64 %38, 4294967295, !dbg !2395
  %40 = icmp eq i64 %39, 1, !dbg !2395
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2395, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %41(ptr nonnull @.str.662), !dbg !2395
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !2395
  %43 = load i64, ptr %42, align 8, !dbg !2395, !tbaa !2424
  %44 = and i64 %43, 4294967295, !dbg !2395
  %45 = icmp eq i64 %44, 256, !dbg !2395
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2395, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %46(ptr nonnull @.str.663), !dbg !2395
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !2395
  %48 = load i64, ptr %47, align 8, !dbg !2395, !tbaa !2426
  %49 = and i64 %48, 4294967295, !dbg !2395
  %50 = icmp eq i64 %49, 56, !dbg !2395
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2395, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %51(ptr nonnull @.str.664), !dbg !2395
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !2395
  %53 = load i64, ptr %52, align 8, !dbg !2395, !tbaa !2429
  %54 = and i64 %53, 4294967295, !dbg !2395
  %55 = icmp eq i64 %54, 56, !dbg !2395
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2395, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %56(ptr nonnull @.str.665), !dbg !2395
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, null, !dbg !2395
  br i1 %.not, label %if_end, label %if_then, !dbg !2395, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !2395
  %58 = load i64, ptr %57, align 8, !dbg !2395, !tbaa !2431
  %59 = and i64 %58, 4294967295, !dbg !2395
  %60 = icmp eq i64 %59, 3136, !dbg !2395
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !2395
  %62 = load i64, ptr %61, align 8, !dbg !2395, !tbaa !2441
  %63 = and i64 %62, 4294967295, !dbg !2395
  %64 = icmp eq i64 %63, 56, !dbg !2395
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !2395
  %66 = load i64, ptr %65, align 8, !dbg !2395, !tbaa !2444
  %67 = and i64 %66, 4294967295, !dbg !2395
  %68 = icmp eq i64 %67, 1, !dbg !2395
  %69 = and i1 %64, %68, !dbg !2395
  %70 = and i1 %60, %69, !dbg !2395
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2395, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2395
  %72 = load i64, ptr %71, align 8, !dbg !2395
  %73 = icmp eq i64 %72, 0, !dbg !2395
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2395, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %74(ptr nonnull @.str.666), !dbg !2395
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %75(ptr nonnull @.str.667), !dbg !2395
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2395
  %77 = load i32, ptr %76, align 4, !dbg !2395
  %78 = icmp eq i32 %77, 2, !dbg !2395
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2395, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %79(ptr nonnull @.str.668), !dbg !2395
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2395
  %81 = load i32, ptr %80, align 4, !dbg !2395
  %82 = icmp eq i32 %81, 4, !dbg !2395
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2395, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %83(ptr nonnull @.str.669), !dbg !2395
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2395
  %85 = load i16, ptr %84, align 2, !dbg !2395
  %86 = icmp eq i16 %85, 1, !dbg !2395
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2395
  %88 = load i8, ptr %87, align 1, !dbg !2395
  %89 = icmp eq i8 %88, 32, !dbg !2395
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2395
  %91 = load i8, ptr %90, align 1, !dbg !2395
  %92 = icmp eq i8 %91, 0, !dbg !2395
  %93 = and i1 %89, %92, !dbg !2395
  %94 = and i1 %86, %93, !dbg !2395
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2395, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %95(ptr nonnull @.str.670), !dbg !2395
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, align 8, !dbg !2395, !tbaa !2446
  %97 = and i64 %96, 4294967295, !dbg !2395
  %98 = icmp eq i64 %97, 1, !dbg !2395
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2395, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %99(ptr nonnull @.str.671), !dbg !2395
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !2395
  %101 = load i64, ptr %100, align 8, !dbg !2395, !tbaa !2456
  %102 = and i64 %101, 4294967295, !dbg !2395
  %103 = icmp eq i64 %102, 256, !dbg !2395
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2395, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %104(ptr nonnull @.str.672), !dbg !2395
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !2395
  %106 = load i64, ptr %105, align 8, !dbg !2395, !tbaa !2458
  %107 = and i64 %106, 4294967295, !dbg !2395
  %108 = icmp eq i64 %107, 1, !dbg !2395
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2395, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %109(ptr nonnull @.str.673), !dbg !2395
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !2395
  %111 = load i64, ptr %110, align 8, !dbg !2395, !tbaa !2461
  %112 = and i64 %111, 4294967295, !dbg !2395
  %113 = icmp eq i64 %112, 1, !dbg !2395
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2395, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %114(ptr nonnull @.str.674), !dbg !2395
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides, null, !dbg !2395
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2395, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !2395
  %116 = load i64, ptr %115, align 8, !dbg !2395, !tbaa !2463
  %117 = and i64 %116, 4294967295, !dbg !2395
  %118 = icmp eq i64 %117, 1, !dbg !2395
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2395, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2395
  %120 = load i64, ptr %119, align 8, !dbg !2395
  %121 = icmp eq i64 %120, 0, !dbg !2395
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2395, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %122(ptr nonnull @.str.675), !dbg !2395
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %123(ptr nonnull @.str.676), !dbg !2395
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2395
  %125 = load i32, ptr %124, align 4, !dbg !2395
  %126 = icmp eq i32 %125, 2, !dbg !2395
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2395, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %127(ptr nonnull @.str.677), !dbg !2395
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2395
  %129 = load i32, ptr %128, align 4, !dbg !2395
  %130 = icmp eq i32 %dev_id, %129, !dbg !2395
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2395, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %131(ptr nonnull @.str.678), !dbg !2395
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2395
  %133 = load i32, ptr %132, align 4, !dbg !2395
  %134 = icmp eq i32 %133, 4, !dbg !2395
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2395, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %135(ptr nonnull @.str.679), !dbg !2395
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2395
  %137 = load i16, ptr %136, align 2, !dbg !2395
  %138 = icmp eq i16 %137, 1, !dbg !2395
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2395
  %140 = load i8, ptr %139, align 1, !dbg !2395
  %141 = icmp eq i8 %140, 32, !dbg !2395
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2395
  %143 = load i8, ptr %142, align 1, !dbg !2395
  %144 = icmp eq i8 %143, 0, !dbg !2395
  %145 = and i1 %141, %144, !dbg !2395
  %146 = and i1 %138, %145, !dbg !2395
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2395, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %147(ptr nonnull @.str.680), !dbg !2395
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, align 8, !dbg !2395, !tbaa !2473
  %149 = and i64 %148, 4294967295, !dbg !2395
  %150 = icmp eq i64 %149, 1, !dbg !2395
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2395, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %151(ptr nonnull @.str.681), !dbg !2395
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 1, !dbg !2395
  %153 = load i64, ptr %152, align 8, !dbg !2395, !tbaa !2483
  %154 = and i64 %153, 4294967295, !dbg !2395
  %155 = icmp eq i64 %154, 256, !dbg !2395
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2395, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %156(ptr nonnull @.str.682), !dbg !2395
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 2, !dbg !2395
  %158 = load i64, ptr %157, align 8, !dbg !2395, !tbaa !2485
  %159 = and i64 %158, 4294967295, !dbg !2395
  %160 = icmp eq i64 %159, 1, !dbg !2395
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2395, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %161(ptr nonnull @.str.683), !dbg !2395
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 3, !dbg !2395
  %163 = load i64, ptr %162, align 8, !dbg !2395, !tbaa !2488
  %164 = and i64 %163, 4294967295, !dbg !2395
  %165 = icmp eq i64 %164, 1, !dbg !2395
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2395, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %166(ptr nonnull @.str.684), !dbg !2395
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides, null, !dbg !2395
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2395, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides, i64 1, !dbg !2395
  %168 = load i64, ptr %167, align 8, !dbg !2395, !tbaa !2490
  %169 = and i64 %168, 4294967295, !dbg !2395
  %170 = icmp eq i64 %169, 1, !dbg !2395
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2395, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2395
  %172 = load i64, ptr %171, align 8, !dbg !2395
  %173 = icmp eq i64 %172, 0, !dbg !2395
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2395, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %174(ptr nonnull @.str.685), !dbg !2395
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %175(ptr nonnull @.str.686), !dbg !2395
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2395
  %177 = load i32, ptr %176, align 4, !dbg !2395
  %178 = icmp eq i32 %177, 2, !dbg !2395
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2395, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %179(ptr nonnull @.str.687), !dbg !2395
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2395
  %181 = load i32, ptr %180, align 4, !dbg !2395
  %182 = icmp eq i32 %dev_id, %181, !dbg !2395
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2395, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %183(ptr nonnull @.str.688), !dbg !2395
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2395
  %185 = load i32, ptr %184, align 4, !dbg !2395
  %186 = icmp eq i32 %185, 4, !dbg !2395
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2395, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %187(ptr nonnull @.str.689), !dbg !2395
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2395
  %189 = load i16, ptr %188, align 2, !dbg !2395
  %190 = icmp eq i16 %189, 1, !dbg !2395
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2395
  %192 = load i8, ptr %191, align 1, !dbg !2395
  %193 = icmp eq i8 %192, 8, !dbg !2395
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2395
  %195 = load i8, ptr %194, align 1, !dbg !2395
  %196 = icmp eq i8 %195, 0, !dbg !2395
  %197 = and i1 %193, %196, !dbg !2395
  %198 = and i1 %190, %197, !dbg !2395
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2395, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %199(ptr nonnull @.str.690), !dbg !2395
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !2395, !tbaa !2500
  %201 = and i64 %200, 4294967295, !dbg !2395
  %202 = icmp eq i64 %201, 1, !dbg !2395
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2395, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %203(ptr nonnull @.str.691), !dbg !2395
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !2395
  %205 = load i64, ptr %204, align 8, !dbg !2395, !tbaa !2510
  %206 = and i64 %205, 4294967295, !dbg !2395
  %207 = icmp eq i64 %206, 256, !dbg !2395
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2395, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %208(ptr nonnull @.str.692), !dbg !2395
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !2395
  %210 = load i64, ptr %209, align 8, !dbg !2395, !tbaa !2512
  %211 = and i64 %210, 4294967295, !dbg !2395
  %212 = icmp eq i64 %211, 56, !dbg !2395
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2395, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %213(ptr nonnull @.str.693), !dbg !2395
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !2395
  %215 = load i64, ptr %214, align 8, !dbg !2395, !tbaa !2515
  %216 = and i64 %215, 4294967295, !dbg !2395
  %217 = icmp eq i64 %216, 56, !dbg !2395
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2395, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %218(ptr nonnull @.str.694), !dbg !2395
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, null, !dbg !2395
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2395, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !2395
  %220 = load i64, ptr %219, align 8, !dbg !2395, !tbaa !2517
  %221 = and i64 %220, 4294967295, !dbg !2395
  %222 = icmp eq i64 %221, 3136, !dbg !2395
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !2395
  %224 = load i64, ptr %223, align 8, !dbg !2395, !tbaa !2527
  %225 = and i64 %224, 4294967295, !dbg !2395
  %226 = icmp eq i64 %225, 56, !dbg !2395
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !2395
  %228 = load i64, ptr %227, align 8, !dbg !2395, !tbaa !2530
  %229 = and i64 %228, 4294967295, !dbg !2395
  %230 = icmp eq i64 %229, 1, !dbg !2395
  %231 = and i1 %226, %230, !dbg !2395
  %232 = and i1 %222, %231, !dbg !2395
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2395, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2395
  %234 = load i64, ptr %233, align 8, !dbg !2395
  %235 = icmp eq i64 %234, 0, !dbg !2395
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2395, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %236(ptr nonnull @.str.695), !dbg !2395
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %237(ptr nonnull @.str.696), !dbg !2395
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2395
  %239 = load i32, ptr %238, align 4, !dbg !2395
  %240 = icmp eq i32 %239, 2, !dbg !2395
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2395, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %241(ptr nonnull @.str.697), !dbg !2395
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2395
  %243 = load i32, ptr %242, align 4, !dbg !2395
  %244 = icmp eq i32 %dev_id, %243, !dbg !2395
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2395, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2395, !tbaa !19
  tail call void %245(ptr nonnull @.str.698), !dbg !2395
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2395
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2395, !tbaa !2532
  %246 = sext i32 %dev_id to i64, !dbg !2395
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2395
  store i64 %246, ptr %247, align 8, !dbg !2395
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2395
  store i32 0, ptr %248, align 4, !dbg !2395, !tbaa !2543
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2395
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2395
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2395, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2395
  %.not120 = icmp eq ptr %252, null, !dbg !2395
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2395, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2395, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2395, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2395
  %256 = icmp eq i32 %255, 0, !dbg !2395
  br i1 %256, label %call_end, label %common.ret, !dbg !2395, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2395
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2395
  %259 = icmp eq i32 %258, 0, !dbg !2395
  br i1 %259, label %call_end106, label %common.ret, !dbg !2395, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2395
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2395
  br label %handle_init_end, !dbg !2395

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2395
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2545 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2547, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2548, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2549, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2550, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2551, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2552, metadata !DIExpression()), !dbg !2553
  %0 = alloca ptr, align 8, !dbg !2553
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2553
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2553
  %1 = icmp eq i32 %num_args, 4, !dbg !2553
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2553, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2553

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %2(ptr nonnull @.str.700), !dbg !2553
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2553, !tbaa !2554
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2553
  %p1.code = load i32, ptr %3, align 4, !dbg !2553, !tbaa !2565
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2553
  %p2.code = load i32, ptr %4, align 4, !dbg !2553, !tbaa !2567
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2553
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2553, !tbaa !2570
  %p0 = load ptr, ptr %args, align 8, !dbg !2553
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2553
  %p1 = load ptr, ptr %6, align 8, !dbg !2553
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2553
  %p2 = load ptr, ptr %7, align 8, !dbg !2553
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2553
  %T_cast = load ptr, ptr %8, align 8, !dbg !2553
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2553
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2553
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %9, align 8, !dbg !2553
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %10, align 8, !dbg !2553
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2553
  %dev_id = load i32, ptr %11, align 4, !dbg !2553
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2553
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2553
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %12, align 8, !dbg !2553
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %13, align 8, !dbg !2553
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2553
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2553
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape = load ptr, ptr %14, align 8, !dbg !2553
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides = load ptr, ptr %15, align 8, !dbg !2553
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2553
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2553
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2553
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2553
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2553
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2553

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %18(ptr nonnull @.str.701), !dbg !2553
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2553

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %19(ptr nonnull @.str.702), !dbg !2553
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2553

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %20(ptr nonnull @.str.703), !dbg !2553
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2553

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %21(ptr nonnull @.str.704), !dbg !2553
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2553
  %23 = load i32, ptr %22, align 4, !dbg !2553
  %24 = icmp eq i32 %23, 4, !dbg !2553
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2553, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %25(ptr nonnull @.str.705), !dbg !2553
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2553
  %27 = load i16, ptr %26, align 2, !dbg !2553
  %28 = icmp eq i16 %27, 1, !dbg !2553
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2553
  %30 = load i8, ptr %29, align 1, !dbg !2553
  %31 = icmp eq i8 %30, 8, !dbg !2553
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2553
  %33 = load i8, ptr %32, align 1, !dbg !2553
  %34 = icmp eq i8 %33, 0, !dbg !2553
  %35 = and i1 %31, %34, !dbg !2553
  %36 = and i1 %28, %35, !dbg !2553
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2553, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %37(ptr nonnull @.str.706), !dbg !2553
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !2553, !tbaa !2572
  %39 = and i64 %38, 4294967295, !dbg !2553
  %40 = icmp eq i64 %39, 1, !dbg !2553
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2553, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %41(ptr nonnull @.str.707), !dbg !2553
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !2553
  %43 = load i64, ptr %42, align 8, !dbg !2553, !tbaa !2582
  %44 = and i64 %43, 4294967295, !dbg !2553
  %45 = icmp eq i64 %44, 256, !dbg !2553
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2553, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %46(ptr nonnull @.str.708), !dbg !2553
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !2553
  %48 = load i64, ptr %47, align 8, !dbg !2553, !tbaa !2584
  %49 = and i64 %48, 4294967295, !dbg !2553
  %50 = icmp eq i64 %49, 56, !dbg !2553
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2553, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %51(ptr nonnull @.str.709), !dbg !2553
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !2553
  %53 = load i64, ptr %52, align 8, !dbg !2553, !tbaa !2587
  %54 = and i64 %53, 4294967295, !dbg !2553
  %55 = icmp eq i64 %54, 56, !dbg !2553
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2553, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %56(ptr nonnull @.str.710), !dbg !2553
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, null, !dbg !2553
  br i1 %.not, label %if_end, label %if_then, !dbg !2553, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !2553
  %58 = load i64, ptr %57, align 8, !dbg !2553, !tbaa !2589
  %59 = and i64 %58, 4294967295, !dbg !2553
  %60 = icmp eq i64 %59, 3136, !dbg !2553
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !2553
  %62 = load i64, ptr %61, align 8, !dbg !2553, !tbaa !2599
  %63 = and i64 %62, 4294967295, !dbg !2553
  %64 = icmp eq i64 %63, 56, !dbg !2553
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !2553
  %66 = load i64, ptr %65, align 8, !dbg !2553, !tbaa !2602
  %67 = and i64 %66, 4294967295, !dbg !2553
  %68 = icmp eq i64 %67, 1, !dbg !2553
  %69 = and i1 %64, %68, !dbg !2553
  %70 = and i1 %60, %69, !dbg !2553
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2553, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2553
  %72 = load i64, ptr %71, align 8, !dbg !2553
  %73 = icmp eq i64 %72, 0, !dbg !2553
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2553, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %74(ptr nonnull @.str.711), !dbg !2553
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %75(ptr nonnull @.str.712), !dbg !2553
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2553
  %77 = load i32, ptr %76, align 4, !dbg !2553
  %78 = icmp eq i32 %77, 2, !dbg !2553
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2553, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %79(ptr nonnull @.str.713), !dbg !2553
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2553
  %81 = load i32, ptr %80, align 4, !dbg !2553
  %82 = icmp eq i32 %81, 4, !dbg !2553
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2553, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %83(ptr nonnull @.str.714), !dbg !2553
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2553
  %85 = load i16, ptr %84, align 2, !dbg !2553
  %86 = icmp eq i16 %85, 1, !dbg !2553
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2553
  %88 = load i8, ptr %87, align 1, !dbg !2553
  %89 = icmp eq i8 %88, 32, !dbg !2553
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2553
  %91 = load i8, ptr %90, align 1, !dbg !2553
  %92 = icmp eq i8 %91, 0, !dbg !2553
  %93 = and i1 %89, %92, !dbg !2553
  %94 = and i1 %86, %93, !dbg !2553
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2553, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %95(ptr nonnull @.str.715), !dbg !2553
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !2553, !tbaa !2604
  %97 = and i64 %96, 4294967295, !dbg !2553
  %98 = icmp eq i64 %97, 1, !dbg !2553
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2553, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %99(ptr nonnull @.str.716), !dbg !2553
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !2553
  %101 = load i64, ptr %100, align 8, !dbg !2553, !tbaa !2614
  %102 = and i64 %101, 4294967295, !dbg !2553
  %103 = icmp eq i64 %102, 256, !dbg !2553
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2553, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %104(ptr nonnull @.str.717), !dbg !2553
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !2553
  %106 = load i64, ptr %105, align 8, !dbg !2553, !tbaa !2616
  %107 = and i64 %106, 4294967295, !dbg !2553
  %108 = icmp eq i64 %107, 1, !dbg !2553
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2553, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %109(ptr nonnull @.str.718), !dbg !2553
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !2553
  %111 = load i64, ptr %110, align 8, !dbg !2553, !tbaa !2619
  %112 = and i64 %111, 4294967295, !dbg !2553
  %113 = icmp eq i64 %112, 1, !dbg !2553
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2553, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %114(ptr nonnull @.str.719), !dbg !2553
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides, null, !dbg !2553
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2553, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !2553
  %116 = load i64, ptr %115, align 8, !dbg !2553, !tbaa !2621
  %117 = and i64 %116, 4294967295, !dbg !2553
  %118 = icmp eq i64 %117, 1, !dbg !2553
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2553, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2553
  %120 = load i64, ptr %119, align 8, !dbg !2553
  %121 = icmp eq i64 %120, 0, !dbg !2553
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2553, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %122(ptr nonnull @.str.720), !dbg !2553
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %123(ptr nonnull @.str.721), !dbg !2553
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2553
  %125 = load i32, ptr %124, align 4, !dbg !2553
  %126 = icmp eq i32 %125, 2, !dbg !2553
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2553, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %127(ptr nonnull @.str.722), !dbg !2553
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2553
  %129 = load i32, ptr %128, align 4, !dbg !2553
  %130 = icmp eq i32 %dev_id, %129, !dbg !2553
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2553, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %131(ptr nonnull @.str.723), !dbg !2553
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2553
  %133 = load i32, ptr %132, align 4, !dbg !2553
  %134 = icmp eq i32 %133, 4, !dbg !2553
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2553, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %135(ptr nonnull @.str.724), !dbg !2553
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2553
  %137 = load i16, ptr %136, align 2, !dbg !2553
  %138 = icmp eq i16 %137, 1, !dbg !2553
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2553
  %140 = load i8, ptr %139, align 1, !dbg !2553
  %141 = icmp eq i8 %140, 32, !dbg !2553
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2553
  %143 = load i8, ptr %142, align 1, !dbg !2553
  %144 = icmp eq i8 %143, 0, !dbg !2553
  %145 = and i1 %141, %144, !dbg !2553
  %146 = and i1 %138, %145, !dbg !2553
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2553, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %147(ptr nonnull @.str.725), !dbg !2553
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, align 8, !dbg !2553, !tbaa !2631
  %149 = and i64 %148, 4294967295, !dbg !2553
  %150 = icmp eq i64 %149, 1, !dbg !2553
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2553, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %151(ptr nonnull @.str.726), !dbg !2553
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 1, !dbg !2553
  %153 = load i64, ptr %152, align 8, !dbg !2553, !tbaa !2641
  %154 = and i64 %153, 4294967295, !dbg !2553
  %155 = icmp eq i64 %154, 256, !dbg !2553
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2553, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %156(ptr nonnull @.str.727), !dbg !2553
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 2, !dbg !2553
  %158 = load i64, ptr %157, align 8, !dbg !2553, !tbaa !2643
  %159 = and i64 %158, 4294967295, !dbg !2553
  %160 = icmp eq i64 %159, 1, !dbg !2553
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2553, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %161(ptr nonnull @.str.728), !dbg !2553
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 3, !dbg !2553
  %163 = load i64, ptr %162, align 8, !dbg !2553, !tbaa !2646
  %164 = and i64 %163, 4294967295, !dbg !2553
  %165 = icmp eq i64 %164, 1, !dbg !2553
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2553, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %166(ptr nonnull @.str.729), !dbg !2553
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides, null, !dbg !2553
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2553, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides, i64 1, !dbg !2553
  %168 = load i64, ptr %167, align 8, !dbg !2553, !tbaa !2648
  %169 = and i64 %168, 4294967295, !dbg !2553
  %170 = icmp eq i64 %169, 1, !dbg !2553
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2553, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2553
  %172 = load i64, ptr %171, align 8, !dbg !2553
  %173 = icmp eq i64 %172, 0, !dbg !2553
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2553, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %174(ptr nonnull @.str.730), !dbg !2553
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %175(ptr nonnull @.str.731), !dbg !2553
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2553
  %177 = load i32, ptr %176, align 4, !dbg !2553
  %178 = icmp eq i32 %177, 2, !dbg !2553
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2553, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %179(ptr nonnull @.str.732), !dbg !2553
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2553
  %181 = load i32, ptr %180, align 4, !dbg !2553
  %182 = icmp eq i32 %dev_id, %181, !dbg !2553
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2553, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %183(ptr nonnull @.str.733), !dbg !2553
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2553
  %185 = load i32, ptr %184, align 4, !dbg !2553
  %186 = icmp eq i32 %185, 4, !dbg !2553
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2553, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %187(ptr nonnull @.str.734), !dbg !2553
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2553
  %189 = load i16, ptr %188, align 2, !dbg !2553
  %190 = icmp eq i16 %189, 1, !dbg !2553
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2553
  %192 = load i8, ptr %191, align 1, !dbg !2553
  %193 = icmp eq i8 %192, 8, !dbg !2553
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2553
  %195 = load i8, ptr %194, align 1, !dbg !2553
  %196 = icmp eq i8 %195, 0, !dbg !2553
  %197 = and i1 %193, %196, !dbg !2553
  %198 = and i1 %190, %197, !dbg !2553
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2553, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %199(ptr nonnull @.str.735), !dbg !2553
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !2553, !tbaa !2658
  %201 = and i64 %200, 4294967295, !dbg !2553
  %202 = icmp eq i64 %201, 1, !dbg !2553
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2553, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %203(ptr nonnull @.str.736), !dbg !2553
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !2553
  %205 = load i64, ptr %204, align 8, !dbg !2553, !tbaa !2668
  %206 = and i64 %205, 4294967295, !dbg !2553
  %207 = icmp eq i64 %206, 256, !dbg !2553
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2553, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %208(ptr nonnull @.str.737), !dbg !2553
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !2553
  %210 = load i64, ptr %209, align 8, !dbg !2553, !tbaa !2670
  %211 = and i64 %210, 4294967295, !dbg !2553
  %212 = icmp eq i64 %211, 56, !dbg !2553
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2553, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %213(ptr nonnull @.str.738), !dbg !2553
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !2553
  %215 = load i64, ptr %214, align 8, !dbg !2553, !tbaa !2673
  %216 = and i64 %215, 4294967295, !dbg !2553
  %217 = icmp eq i64 %216, 56, !dbg !2553
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2553, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %218(ptr nonnull @.str.739), !dbg !2553
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !2553
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2553, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !2553
  %220 = load i64, ptr %219, align 8, !dbg !2553, !tbaa !2675
  %221 = and i64 %220, 4294967295, !dbg !2553
  %222 = icmp eq i64 %221, 3136, !dbg !2553
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !2553
  %224 = load i64, ptr %223, align 8, !dbg !2553, !tbaa !2685
  %225 = and i64 %224, 4294967295, !dbg !2553
  %226 = icmp eq i64 %225, 56, !dbg !2553
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !2553
  %228 = load i64, ptr %227, align 8, !dbg !2553, !tbaa !2688
  %229 = and i64 %228, 4294967295, !dbg !2553
  %230 = icmp eq i64 %229, 1, !dbg !2553
  %231 = and i1 %226, %230, !dbg !2553
  %232 = and i1 %222, %231, !dbg !2553
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2553, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2553
  %234 = load i64, ptr %233, align 8, !dbg !2553
  %235 = icmp eq i64 %234, 0, !dbg !2553
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2553, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %236(ptr nonnull @.str.740), !dbg !2553
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %237(ptr nonnull @.str.741), !dbg !2553
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2553
  %239 = load i32, ptr %238, align 4, !dbg !2553
  %240 = icmp eq i32 %239, 2, !dbg !2553
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2553, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %241(ptr nonnull @.str.742), !dbg !2553
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2553
  %243 = load i32, ptr %242, align 4, !dbg !2553
  %244 = icmp eq i32 %dev_id, %243, !dbg !2553
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2553, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2553, !tbaa !19
  tail call void %245(ptr nonnull @.str.743), !dbg !2553
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2553
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2553, !tbaa !2690
  %246 = sext i32 %dev_id to i64, !dbg !2553
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2553
  store i64 %246, ptr %247, align 8, !dbg !2553
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2553
  store i32 0, ptr %248, align 4, !dbg !2553, !tbaa !2701
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2553
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2553
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2553, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2553
  %.not120 = icmp eq ptr %252, null, !dbg !2553
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2553, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2553, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2553, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2553
  %256 = icmp eq i32 %255, 0, !dbg !2553
  br i1 %256, label %call_end, label %common.ret, !dbg !2553, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2553
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2553
  %259 = icmp eq i32 %258, 0, !dbg !2553
  br i1 %259, label %call_end106, label %common.ret, !dbg !2553, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2553
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2553
  br label %handle_init_end, !dbg !2553

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2553
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2703 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2705, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2706, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2707, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2708, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2709, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2710, metadata !DIExpression()), !dbg !2711
  %0 = alloca ptr, align 8, !dbg !2711
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2711
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2711
  %1 = icmp eq i32 %num_args, 4, !dbg !2711
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2711, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2711

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %2(ptr nonnull @.str.745), !dbg !2711
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2711, !tbaa !2712
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2711
  %p1.code = load i32, ptr %3, align 4, !dbg !2711, !tbaa !2723
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2711
  %p2.code = load i32, ptr %4, align 4, !dbg !2711, !tbaa !2725
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2711
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2711, !tbaa !2728
  %p0 = load ptr, ptr %args, align 8, !dbg !2711
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2711
  %p1 = load ptr, ptr %6, align 8, !dbg !2711
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2711
  %p2 = load ptr, ptr %7, align 8, !dbg !2711
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2711
  %T_cast = load ptr, ptr %8, align 8, !dbg !2711
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2711
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2711
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %9, align 8, !dbg !2711
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %10, align 8, !dbg !2711
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2711
  %dev_id = load i32, ptr %11, align 4, !dbg !2711
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2711
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2711
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %12, align 8, !dbg !2711
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %13, align 8, !dbg !2711
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2711
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2711
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape = load ptr, ptr %14, align 8, !dbg !2711
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides = load ptr, ptr %15, align 8, !dbg !2711
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2711
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2711
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2711
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2711
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2711
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2711

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %18(ptr nonnull @.str.746), !dbg !2711
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2711

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %19(ptr nonnull @.str.747), !dbg !2711
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2711

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %20(ptr nonnull @.str.748), !dbg !2711
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2711

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %21(ptr nonnull @.str.749), !dbg !2711
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2711
  %23 = load i32, ptr %22, align 4, !dbg !2711
  %24 = icmp eq i32 %23, 4, !dbg !2711
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2711, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %25(ptr nonnull @.str.750), !dbg !2711
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2711
  %27 = load i16, ptr %26, align 2, !dbg !2711
  %28 = icmp eq i16 %27, 1, !dbg !2711
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2711
  %30 = load i8, ptr %29, align 1, !dbg !2711
  %31 = icmp eq i8 %30, 8, !dbg !2711
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2711
  %33 = load i8, ptr %32, align 1, !dbg !2711
  %34 = icmp eq i8 %33, 0, !dbg !2711
  %35 = and i1 %31, %34, !dbg !2711
  %36 = and i1 %28, %35, !dbg !2711
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2711, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %37(ptr nonnull @.str.751), !dbg !2711
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !2711, !tbaa !2730
  %39 = and i64 %38, 4294967295, !dbg !2711
  %40 = icmp eq i64 %39, 1, !dbg !2711
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2711, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %41(ptr nonnull @.str.752), !dbg !2711
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !2711
  %43 = load i64, ptr %42, align 8, !dbg !2711, !tbaa !2740
  %44 = and i64 %43, 4294967295, !dbg !2711
  %45 = icmp eq i64 %44, 512, !dbg !2711
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2711, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %46(ptr nonnull @.str.753), !dbg !2711
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !2711
  %48 = load i64, ptr %47, align 8, !dbg !2711, !tbaa !2742
  %49 = and i64 %48, 4294967295, !dbg !2711
  %50 = icmp eq i64 %49, 28, !dbg !2711
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2711, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %51(ptr nonnull @.str.754), !dbg !2711
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !2711
  %53 = load i64, ptr %52, align 8, !dbg !2711, !tbaa !2745
  %54 = and i64 %53, 4294967295, !dbg !2711
  %55 = icmp eq i64 %54, 28, !dbg !2711
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2711, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %56(ptr nonnull @.str.755), !dbg !2711
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, null, !dbg !2711
  br i1 %.not, label %if_end, label %if_then, !dbg !2711, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !2711
  %58 = load i64, ptr %57, align 8, !dbg !2711, !tbaa !2747
  %59 = and i64 %58, 4294967295, !dbg !2711
  %60 = icmp eq i64 %59, 784, !dbg !2711
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !2711
  %62 = load i64, ptr %61, align 8, !dbg !2711, !tbaa !2757
  %63 = and i64 %62, 4294967295, !dbg !2711
  %64 = icmp eq i64 %63, 28, !dbg !2711
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !2711
  %66 = load i64, ptr %65, align 8, !dbg !2711, !tbaa !2760
  %67 = and i64 %66, 4294967295, !dbg !2711
  %68 = icmp eq i64 %67, 1, !dbg !2711
  %69 = and i1 %64, %68, !dbg !2711
  %70 = and i1 %60, %69, !dbg !2711
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2711, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2711
  %72 = load i64, ptr %71, align 8, !dbg !2711
  %73 = icmp eq i64 %72, 0, !dbg !2711
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2711, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %74(ptr nonnull @.str.756), !dbg !2711
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %75(ptr nonnull @.str.757), !dbg !2711
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2711
  %77 = load i32, ptr %76, align 4, !dbg !2711
  %78 = icmp eq i32 %77, 2, !dbg !2711
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2711, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %79(ptr nonnull @.str.758), !dbg !2711
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2711
  %81 = load i32, ptr %80, align 4, !dbg !2711
  %82 = icmp eq i32 %81, 4, !dbg !2711
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2711, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %83(ptr nonnull @.str.759), !dbg !2711
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2711
  %85 = load i16, ptr %84, align 2, !dbg !2711
  %86 = icmp eq i16 %85, 1, !dbg !2711
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2711
  %88 = load i8, ptr %87, align 1, !dbg !2711
  %89 = icmp eq i8 %88, 32, !dbg !2711
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2711
  %91 = load i8, ptr %90, align 1, !dbg !2711
  %92 = icmp eq i8 %91, 0, !dbg !2711
  %93 = and i1 %89, %92, !dbg !2711
  %94 = and i1 %86, %93, !dbg !2711
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2711, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %95(ptr nonnull @.str.760), !dbg !2711
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !2711, !tbaa !2762
  %97 = and i64 %96, 4294967295, !dbg !2711
  %98 = icmp eq i64 %97, 1, !dbg !2711
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2711, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %99(ptr nonnull @.str.761), !dbg !2711
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !2711
  %101 = load i64, ptr %100, align 8, !dbg !2711, !tbaa !2772
  %102 = and i64 %101, 4294967295, !dbg !2711
  %103 = icmp eq i64 %102, 512, !dbg !2711
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2711, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %104(ptr nonnull @.str.762), !dbg !2711
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !2711
  %106 = load i64, ptr %105, align 8, !dbg !2711, !tbaa !2774
  %107 = and i64 %106, 4294967295, !dbg !2711
  %108 = icmp eq i64 %107, 1, !dbg !2711
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2711, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %109(ptr nonnull @.str.763), !dbg !2711
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !2711
  %111 = load i64, ptr %110, align 8, !dbg !2711, !tbaa !2777
  %112 = and i64 %111, 4294967295, !dbg !2711
  %113 = icmp eq i64 %112, 1, !dbg !2711
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2711, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %114(ptr nonnull @.str.764), !dbg !2711
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides, null, !dbg !2711
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2711, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !2711
  %116 = load i64, ptr %115, align 8, !dbg !2711, !tbaa !2779
  %117 = and i64 %116, 4294967295, !dbg !2711
  %118 = icmp eq i64 %117, 1, !dbg !2711
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2711, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2711
  %120 = load i64, ptr %119, align 8, !dbg !2711
  %121 = icmp eq i64 %120, 0, !dbg !2711
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2711, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %122(ptr nonnull @.str.765), !dbg !2711
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %123(ptr nonnull @.str.766), !dbg !2711
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2711
  %125 = load i32, ptr %124, align 4, !dbg !2711
  %126 = icmp eq i32 %125, 2, !dbg !2711
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2711, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %127(ptr nonnull @.str.767), !dbg !2711
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2711
  %129 = load i32, ptr %128, align 4, !dbg !2711
  %130 = icmp eq i32 %dev_id, %129, !dbg !2711
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2711, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %131(ptr nonnull @.str.768), !dbg !2711
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2711
  %133 = load i32, ptr %132, align 4, !dbg !2711
  %134 = icmp eq i32 %133, 4, !dbg !2711
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2711, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %135(ptr nonnull @.str.769), !dbg !2711
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2711
  %137 = load i16, ptr %136, align 2, !dbg !2711
  %138 = icmp eq i16 %137, 1, !dbg !2711
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2711
  %140 = load i8, ptr %139, align 1, !dbg !2711
  %141 = icmp eq i8 %140, 32, !dbg !2711
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2711
  %143 = load i8, ptr %142, align 1, !dbg !2711
  %144 = icmp eq i8 %143, 0, !dbg !2711
  %145 = and i1 %141, %144, !dbg !2711
  %146 = and i1 %138, %145, !dbg !2711
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2711, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %147(ptr nonnull @.str.770), !dbg !2711
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, align 8, !dbg !2711, !tbaa !2789
  %149 = and i64 %148, 4294967295, !dbg !2711
  %150 = icmp eq i64 %149, 1, !dbg !2711
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2711, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %151(ptr nonnull @.str.771), !dbg !2711
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 1, !dbg !2711
  %153 = load i64, ptr %152, align 8, !dbg !2711, !tbaa !2799
  %154 = and i64 %153, 4294967295, !dbg !2711
  %155 = icmp eq i64 %154, 512, !dbg !2711
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2711, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %156(ptr nonnull @.str.772), !dbg !2711
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 2, !dbg !2711
  %158 = load i64, ptr %157, align 8, !dbg !2711, !tbaa !2801
  %159 = and i64 %158, 4294967295, !dbg !2711
  %160 = icmp eq i64 %159, 1, !dbg !2711
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2711, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %161(ptr nonnull @.str.773), !dbg !2711
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 3, !dbg !2711
  %163 = load i64, ptr %162, align 8, !dbg !2711, !tbaa !2804
  %164 = and i64 %163, 4294967295, !dbg !2711
  %165 = icmp eq i64 %164, 1, !dbg !2711
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2711, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %166(ptr nonnull @.str.774), !dbg !2711
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides, null, !dbg !2711
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2711, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides, i64 1, !dbg !2711
  %168 = load i64, ptr %167, align 8, !dbg !2711, !tbaa !2806
  %169 = and i64 %168, 4294967295, !dbg !2711
  %170 = icmp eq i64 %169, 1, !dbg !2711
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2711, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2711
  %172 = load i64, ptr %171, align 8, !dbg !2711
  %173 = icmp eq i64 %172, 0, !dbg !2711
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2711, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %174(ptr nonnull @.str.775), !dbg !2711
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %175(ptr nonnull @.str.776), !dbg !2711
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2711
  %177 = load i32, ptr %176, align 4, !dbg !2711
  %178 = icmp eq i32 %177, 2, !dbg !2711
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2711, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %179(ptr nonnull @.str.777), !dbg !2711
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2711
  %181 = load i32, ptr %180, align 4, !dbg !2711
  %182 = icmp eq i32 %dev_id, %181, !dbg !2711
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2711, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %183(ptr nonnull @.str.778), !dbg !2711
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2711
  %185 = load i32, ptr %184, align 4, !dbg !2711
  %186 = icmp eq i32 %185, 4, !dbg !2711
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2711, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %187(ptr nonnull @.str.779), !dbg !2711
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2711
  %189 = load i16, ptr %188, align 2, !dbg !2711
  %190 = icmp eq i16 %189, 1, !dbg !2711
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2711
  %192 = load i8, ptr %191, align 1, !dbg !2711
  %193 = icmp eq i8 %192, 8, !dbg !2711
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2711
  %195 = load i8, ptr %194, align 1, !dbg !2711
  %196 = icmp eq i8 %195, 0, !dbg !2711
  %197 = and i1 %193, %196, !dbg !2711
  %198 = and i1 %190, %197, !dbg !2711
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2711, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %199(ptr nonnull @.str.780), !dbg !2711
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !2711, !tbaa !2816
  %201 = and i64 %200, 4294967295, !dbg !2711
  %202 = icmp eq i64 %201, 1, !dbg !2711
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2711, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %203(ptr nonnull @.str.781), !dbg !2711
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !2711
  %205 = load i64, ptr %204, align 8, !dbg !2711, !tbaa !2826
  %206 = and i64 %205, 4294967295, !dbg !2711
  %207 = icmp eq i64 %206, 512, !dbg !2711
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2711, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %208(ptr nonnull @.str.782), !dbg !2711
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !2711
  %210 = load i64, ptr %209, align 8, !dbg !2711, !tbaa !2828
  %211 = and i64 %210, 4294967295, !dbg !2711
  %212 = icmp eq i64 %211, 28, !dbg !2711
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2711, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %213(ptr nonnull @.str.783), !dbg !2711
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !2711
  %215 = load i64, ptr %214, align 8, !dbg !2711, !tbaa !2831
  %216 = and i64 %215, 4294967295, !dbg !2711
  %217 = icmp eq i64 %216, 28, !dbg !2711
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2711, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %218(ptr nonnull @.str.784), !dbg !2711
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !2711
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2711, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !2711
  %220 = load i64, ptr %219, align 8, !dbg !2711, !tbaa !2833
  %221 = and i64 %220, 4294967295, !dbg !2711
  %222 = icmp eq i64 %221, 784, !dbg !2711
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !2711
  %224 = load i64, ptr %223, align 8, !dbg !2711, !tbaa !2843
  %225 = and i64 %224, 4294967295, !dbg !2711
  %226 = icmp eq i64 %225, 28, !dbg !2711
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !2711
  %228 = load i64, ptr %227, align 8, !dbg !2711, !tbaa !2846
  %229 = and i64 %228, 4294967295, !dbg !2711
  %230 = icmp eq i64 %229, 1, !dbg !2711
  %231 = and i1 %226, %230, !dbg !2711
  %232 = and i1 %222, %231, !dbg !2711
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2711, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2711
  %234 = load i64, ptr %233, align 8, !dbg !2711
  %235 = icmp eq i64 %234, 0, !dbg !2711
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2711, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %236(ptr nonnull @.str.785), !dbg !2711
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %237(ptr nonnull @.str.786), !dbg !2711
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2711
  %239 = load i32, ptr %238, align 4, !dbg !2711
  %240 = icmp eq i32 %239, 2, !dbg !2711
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2711, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %241(ptr nonnull @.str.787), !dbg !2711
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2711
  %243 = load i32, ptr %242, align 4, !dbg !2711
  %244 = icmp eq i32 %dev_id, %243, !dbg !2711
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2711, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2711, !tbaa !19
  tail call void %245(ptr nonnull @.str.788), !dbg !2711
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2711
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2711, !tbaa !2848
  %246 = sext i32 %dev_id to i64, !dbg !2711
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2711
  store i64 %246, ptr %247, align 8, !dbg !2711
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2711
  store i32 0, ptr %248, align 4, !dbg !2711, !tbaa !2859
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2711
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2711
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2711, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2711
  %.not120 = icmp eq ptr %252, null, !dbg !2711
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2711, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2711, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2711, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2711
  %256 = icmp eq i32 %255, 0, !dbg !2711
  br i1 %256, label %call_end, label %common.ret, !dbg !2711, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2711
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2711
  %259 = icmp eq i32 %258, 0, !dbg !2711
  br i1 %259, label %call_end106, label %common.ret, !dbg !2711, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2711
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2711
  br label %handle_init_end, !dbg !2711

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2711
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2861 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2863, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2864, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2865, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2866, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2867, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2868, metadata !DIExpression()), !dbg !2869
  %0 = alloca ptr, align 8, !dbg !2869
  %stack_value115 = alloca [7 x %0], align 8, !dbg !2869
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !2869
  %1 = icmp eq i32 %num_args, 4, !dbg !2869
  br i1 %1, label %assert_end, label %assert_fail, !dbg !2869, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !2869

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %2(ptr nonnull @.str.790), !dbg !2869
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2869, !tbaa !2870
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2869
  %p1.code = load i32, ptr %3, align 4, !dbg !2869, !tbaa !2881
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2869
  %p2.code = load i32, ptr %4, align 4, !dbg !2869, !tbaa !2883
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2869
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2869, !tbaa !2886
  %p0 = load ptr, ptr %args, align 8, !dbg !2869
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2869
  %p1 = load ptr, ptr %6, align 8, !dbg !2869
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2869
  %p2 = load ptr, ptr %7, align 8, !dbg !2869
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2869
  %T_cast = load ptr, ptr %8, align 8, !dbg !2869
  %p0108 = load ptr, ptr %p0, align 8, !dbg !2869
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !2869
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %9, align 8, !dbg !2869
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %10, align 8, !dbg !2869
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2869
  %dev_id = load i32, ptr %11, align 4, !dbg !2869
  %p1109 = load ptr, ptr %p1, align 8, !dbg !2869
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !2869
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %12, align 8, !dbg !2869
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %13, align 8, !dbg !2869
  %p2110 = load ptr, ptr %p2, align 8, !dbg !2869
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !2869
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape = load ptr, ptr %14, align 8, !dbg !2869
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides = load ptr, ptr %15, align 8, !dbg !2869
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !2869
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !2869
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %16, align 8, !dbg !2869
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2869
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %17, align 8, !dbg !2869
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2869

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %18(ptr nonnull @.str.791), !dbg !2869
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2869

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %19(ptr nonnull @.str.792), !dbg !2869
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2869

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %20(ptr nonnull @.str.793), !dbg !2869
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2869

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %21(ptr nonnull @.str.794), !dbg !2869
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2869
  %23 = load i32, ptr %22, align 4, !dbg !2869
  %24 = icmp eq i32 %23, 4, !dbg !2869
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !2869, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %25(ptr nonnull @.str.795), !dbg !2869
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2869
  %27 = load i16, ptr %26, align 2, !dbg !2869
  %28 = icmp eq i16 %27, 1, !dbg !2869
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2869
  %30 = load i8, ptr %29, align 1, !dbg !2869
  %31 = icmp eq i8 %30, 8, !dbg !2869
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2869
  %33 = load i8, ptr %32, align 1, !dbg !2869
  %34 = icmp eq i8 %33, 0, !dbg !2869
  %35 = and i1 %31, %34, !dbg !2869
  %36 = and i1 %28, %35, !dbg !2869
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !2869, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %37(ptr nonnull @.str.796), !dbg !2869
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !2869, !tbaa !2888
  %39 = and i64 %38, 4294967295, !dbg !2869
  %40 = icmp eq i64 %39, 1, !dbg !2869
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !2869, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %41(ptr nonnull @.str.797), !dbg !2869
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !2869
  %43 = load i64, ptr %42, align 8, !dbg !2869, !tbaa !2898
  %44 = and i64 %43, 4294967295, !dbg !2869
  %45 = icmp eq i64 %44, 512, !dbg !2869
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !2869, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %46(ptr nonnull @.str.798), !dbg !2869
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !2869
  %48 = load i64, ptr %47, align 8, !dbg !2869, !tbaa !2900
  %49 = and i64 %48, 4294967295, !dbg !2869
  %50 = icmp eq i64 %49, 28, !dbg !2869
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !2869, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %51(ptr nonnull @.str.799), !dbg !2869
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !2869
  %53 = load i64, ptr %52, align 8, !dbg !2869, !tbaa !2903
  %54 = and i64 %53, 4294967295, !dbg !2869
  %55 = icmp eq i64 %54, 28, !dbg !2869
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !2869, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %56(ptr nonnull @.str.800), !dbg !2869
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, null, !dbg !2869
  br i1 %.not, label %if_end, label %if_then, !dbg !2869, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !2869
  %58 = load i64, ptr %57, align 8, !dbg !2869, !tbaa !2905
  %59 = and i64 %58, 4294967295, !dbg !2869
  %60 = icmp eq i64 %59, 784, !dbg !2869
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !2869
  %62 = load i64, ptr %61, align 8, !dbg !2869, !tbaa !2915
  %63 = and i64 %62, 4294967295, !dbg !2869
  %64 = icmp eq i64 %63, 28, !dbg !2869
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !2869
  %66 = load i64, ptr %65, align 8, !dbg !2869, !tbaa !2918
  %67 = and i64 %66, 4294967295, !dbg !2869
  %68 = icmp eq i64 %67, 1, !dbg !2869
  %69 = and i1 %64, %68, !dbg !2869
  %70 = and i1 %60, %69, !dbg !2869
  br i1 %70, label %if_end, label %assert_fail27, !dbg !2869, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2869
  %72 = load i64, ptr %71, align 8, !dbg !2869
  %73 = icmp eq i64 %72, 0, !dbg !2869
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !2869, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %74(ptr nonnull @.str.801), !dbg !2869
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %75(ptr nonnull @.str.802), !dbg !2869
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2869
  %77 = load i32, ptr %76, align 4, !dbg !2869
  %78 = icmp eq i32 %77, 2, !dbg !2869
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !2869, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %79(ptr nonnull @.str.803), !dbg !2869
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2869
  %81 = load i32, ptr %80, align 4, !dbg !2869
  %82 = icmp eq i32 %81, 4, !dbg !2869
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !2869, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %83(ptr nonnull @.str.804), !dbg !2869
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2869
  %85 = load i16, ptr %84, align 2, !dbg !2869
  %86 = icmp eq i16 %85, 1, !dbg !2869
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2869
  %88 = load i8, ptr %87, align 1, !dbg !2869
  %89 = icmp eq i8 %88, 32, !dbg !2869
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2869
  %91 = load i8, ptr %90, align 1, !dbg !2869
  %92 = icmp eq i8 %91, 0, !dbg !2869
  %93 = and i1 %89, %92, !dbg !2869
  %94 = and i1 %86, %93, !dbg !2869
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !2869, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %95(ptr nonnull @.str.805), !dbg !2869
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !2869, !tbaa !2920
  %97 = and i64 %96, 4294967295, !dbg !2869
  %98 = icmp eq i64 %97, 1, !dbg !2869
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2869, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %99(ptr nonnull @.str.806), !dbg !2869
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !2869
  %101 = load i64, ptr %100, align 8, !dbg !2869, !tbaa !2930
  %102 = and i64 %101, 4294967295, !dbg !2869
  %103 = icmp eq i64 %102, 512, !dbg !2869
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !2869, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %104(ptr nonnull @.str.807), !dbg !2869
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !2869
  %106 = load i64, ptr %105, align 8, !dbg !2869, !tbaa !2932
  %107 = and i64 %106, 4294967295, !dbg !2869
  %108 = icmp eq i64 %107, 1, !dbg !2869
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !2869, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %109(ptr nonnull @.str.808), !dbg !2869
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !2869
  %111 = load i64, ptr %110, align 8, !dbg !2869, !tbaa !2935
  %112 = and i64 %111, 4294967295, !dbg !2869
  %113 = icmp eq i64 %112, 1, !dbg !2869
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !2869, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %114(ptr nonnull @.str.809), !dbg !2869
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides, null, !dbg !2869
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !2869, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !2869
  %116 = load i64, ptr %115, align 8, !dbg !2869, !tbaa !2937
  %117 = and i64 %116, 4294967295, !dbg !2869
  %118 = icmp eq i64 %117, 1, !dbg !2869
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !2869, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2869
  %120 = load i64, ptr %119, align 8, !dbg !2869
  %121 = icmp eq i64 %120, 0, !dbg !2869
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !2869, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %122(ptr nonnull @.str.810), !dbg !2869
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %123(ptr nonnull @.str.811), !dbg !2869
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2869
  %125 = load i32, ptr %124, align 4, !dbg !2869
  %126 = icmp eq i32 %125, 2, !dbg !2869
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !2869, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %127(ptr nonnull @.str.812), !dbg !2869
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2869
  %129 = load i32, ptr %128, align 4, !dbg !2869
  %130 = icmp eq i32 %dev_id, %129, !dbg !2869
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !2869, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %131(ptr nonnull @.str.813), !dbg !2869
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2869
  %133 = load i32, ptr %132, align 4, !dbg !2869
  %134 = icmp eq i32 %133, 4, !dbg !2869
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !2869, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %135(ptr nonnull @.str.814), !dbg !2869
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2869
  %137 = load i16, ptr %136, align 2, !dbg !2869
  %138 = icmp eq i16 %137, 1, !dbg !2869
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2869
  %140 = load i8, ptr %139, align 1, !dbg !2869
  %141 = icmp eq i8 %140, 32, !dbg !2869
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2869
  %143 = load i8, ptr %142, align 1, !dbg !2869
  %144 = icmp eq i8 %143, 0, !dbg !2869
  %145 = and i1 %141, %144, !dbg !2869
  %146 = and i1 %138, %145, !dbg !2869
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2869, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %147(ptr nonnull @.str.815), !dbg !2869
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, align 8, !dbg !2869, !tbaa !2947
  %149 = and i64 %148, 4294967295, !dbg !2869
  %150 = icmp eq i64 %149, 1, !dbg !2869
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !2869, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %151(ptr nonnull @.str.816), !dbg !2869
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 1, !dbg !2869
  %153 = load i64, ptr %152, align 8, !dbg !2869, !tbaa !2957
  %154 = and i64 %153, 4294967295, !dbg !2869
  %155 = icmp eq i64 %154, 512, !dbg !2869
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2869, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %156(ptr nonnull @.str.817), !dbg !2869
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 2, !dbg !2869
  %158 = load i64, ptr %157, align 8, !dbg !2869, !tbaa !2959
  %159 = and i64 %158, 4294967295, !dbg !2869
  %160 = icmp eq i64 %159, 1, !dbg !2869
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !2869, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %161(ptr nonnull @.str.818), !dbg !2869
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 3, !dbg !2869
  %163 = load i64, ptr %162, align 8, !dbg !2869, !tbaa !2962
  %164 = and i64 %163, 4294967295, !dbg !2869
  %165 = icmp eq i64 %164, 1, !dbg !2869
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !2869, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %166(ptr nonnull @.str.819), !dbg !2869
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides, null, !dbg !2869
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !2869, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides, i64 1, !dbg !2869
  %168 = load i64, ptr %167, align 8, !dbg !2869, !tbaa !2964
  %169 = and i64 %168, 4294967295, !dbg !2869
  %170 = icmp eq i64 %169, 1, !dbg !2869
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !2869, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2869
  %172 = load i64, ptr %171, align 8, !dbg !2869
  %173 = icmp eq i64 %172, 0, !dbg !2869
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !2869, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %174(ptr nonnull @.str.820), !dbg !2869
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %175(ptr nonnull @.str.821), !dbg !2869
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2869
  %177 = load i32, ptr %176, align 4, !dbg !2869
  %178 = icmp eq i32 %177, 2, !dbg !2869
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !2869, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %179(ptr nonnull @.str.822), !dbg !2869
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2869
  %181 = load i32, ptr %180, align 4, !dbg !2869
  %182 = icmp eq i32 %dev_id, %181, !dbg !2869
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !2869, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %183(ptr nonnull @.str.823), !dbg !2869
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2869
  %185 = load i32, ptr %184, align 4, !dbg !2869
  %186 = icmp eq i32 %185, 4, !dbg !2869
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !2869, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %187(ptr nonnull @.str.824), !dbg !2869
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2869
  %189 = load i16, ptr %188, align 2, !dbg !2869
  %190 = icmp eq i16 %189, 1, !dbg !2869
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2869
  %192 = load i8, ptr %191, align 1, !dbg !2869
  %193 = icmp eq i8 %192, 8, !dbg !2869
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2869
  %195 = load i8, ptr %194, align 1, !dbg !2869
  %196 = icmp eq i8 %195, 0, !dbg !2869
  %197 = and i1 %193, %196, !dbg !2869
  %198 = and i1 %190, %197, !dbg !2869
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !2869, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %199(ptr nonnull @.str.825), !dbg !2869
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !2869, !tbaa !2974
  %201 = and i64 %200, 4294967295, !dbg !2869
  %202 = icmp eq i64 %201, 1, !dbg !2869
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !2869, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %203(ptr nonnull @.str.826), !dbg !2869
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !2869
  %205 = load i64, ptr %204, align 8, !dbg !2869, !tbaa !2984
  %206 = and i64 %205, 4294967295, !dbg !2869
  %207 = icmp eq i64 %206, 512, !dbg !2869
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !2869, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %208(ptr nonnull @.str.827), !dbg !2869
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !2869
  %210 = load i64, ptr %209, align 8, !dbg !2869, !tbaa !2986
  %211 = and i64 %210, 4294967295, !dbg !2869
  %212 = icmp eq i64 %211, 28, !dbg !2869
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !2869, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %213(ptr nonnull @.str.828), !dbg !2869
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !2869
  %215 = load i64, ptr %214, align 8, !dbg !2869, !tbaa !2989
  %216 = and i64 %215, 4294967295, !dbg !2869
  %217 = icmp eq i64 %216, 28, !dbg !2869
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !2869, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %218(ptr nonnull @.str.829), !dbg !2869
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !2869
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !2869, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !2869
  %220 = load i64, ptr %219, align 8, !dbg !2869, !tbaa !2991
  %221 = and i64 %220, 4294967295, !dbg !2869
  %222 = icmp eq i64 %221, 784, !dbg !2869
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !2869
  %224 = load i64, ptr %223, align 8, !dbg !2869, !tbaa !3001
  %225 = and i64 %224, 4294967295, !dbg !2869
  %226 = icmp eq i64 %225, 28, !dbg !2869
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !2869
  %228 = load i64, ptr %227, align 8, !dbg !2869, !tbaa !3004
  %229 = and i64 %228, 4294967295, !dbg !2869
  %230 = icmp eq i64 %229, 1, !dbg !2869
  %231 = and i1 %226, %230, !dbg !2869
  %232 = and i1 %222, %231, !dbg !2869
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !2869, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2869
  %234 = load i64, ptr %233, align 8, !dbg !2869
  %235 = icmp eq i64 %234, 0, !dbg !2869
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !2869, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %236(ptr nonnull @.str.830), !dbg !2869
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %237(ptr nonnull @.str.831), !dbg !2869
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2869
  %239 = load i32, ptr %238, align 4, !dbg !2869
  %240 = icmp eq i32 %239, 2, !dbg !2869
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !2869, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %241(ptr nonnull @.str.832), !dbg !2869
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2869
  %243 = load i32, ptr %242, align 4, !dbg !2869
  %244 = icmp eq i32 %dev_id, %243, !dbg !2869
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !2869, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2869, !tbaa !19
  tail call void %245(ptr nonnull @.str.833), !dbg !2869
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !2869
  store i32 0, ptr %stack_tcode116, align 4, !dbg !2869, !tbaa !3006
  %246 = sext i32 %dev_id to i64, !dbg !2869
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !2869
  store i64 %246, ptr %247, align 8, !dbg !2869
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !2869
  store i32 0, ptr %248, align 4, !dbg !2869, !tbaa !3017
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !2869
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !2869
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !2869, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2869
  %.not120 = icmp eq ptr %252, null, !dbg !2869
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !2869, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !2869, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !2869, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !2869
  %256 = icmp eq i32 %255, 0, !dbg !2869
  br i1 %256, label %call_end, label %common.ret, !dbg !2869, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !2869
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !2869
  %259 = icmp eq i32 %258, 0, !dbg !2869
  br i1 %259, label %call_end106, label %common.ret, !dbg !2869, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !2869
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !2869
  br label %handle_init_end, !dbg !2869

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !2869
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3019 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3021, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3022, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3023, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3024, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3025, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3026, metadata !DIExpression()), !dbg !3027
  %0 = alloca ptr, align 8, !dbg !3027
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3027
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3027
  %1 = icmp eq i32 %num_args, 4, !dbg !3027
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3027, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3027

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %2(ptr nonnull @.str.835), !dbg !3027
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3027, !tbaa !3028
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3027
  %p1.code = load i32, ptr %3, align 4, !dbg !3027, !tbaa !3039
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3027
  %p2.code = load i32, ptr %4, align 4, !dbg !3027, !tbaa !3041
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3027
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3027, !tbaa !3044
  %p0 = load ptr, ptr %args, align 8, !dbg !3027
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3027
  %p1 = load ptr, ptr %6, align 8, !dbg !3027
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3027
  %p2 = load ptr, ptr %7, align 8, !dbg !3027
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3027
  %T_cast = load ptr, ptr %8, align 8, !dbg !3027
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3027
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3027
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape = load ptr, ptr %9, align 8, !dbg !3027
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides = load ptr, ptr %10, align 8, !dbg !3027
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3027
  %dev_id = load i32, ptr %11, align 4, !dbg !3027
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3027
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3027
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape = load ptr, ptr %12, align 8, !dbg !3027
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.strides = load ptr, ptr %13, align 8, !dbg !3027
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3027
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3027
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape = load ptr, ptr %14, align 8, !dbg !3027
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.strides = load ptr, ptr %15, align 8, !dbg !3027
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !3027
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !3027
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape = load ptr, ptr %16, align 8, !dbg !3027
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3027
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides = load ptr, ptr %17, align 8, !dbg !3027
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3027

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %18(ptr nonnull @.str.836), !dbg !3027
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3027

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %19(ptr nonnull @.str.837), !dbg !3027
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3027

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %20(ptr nonnull @.str.838), !dbg !3027
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3027

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %21(ptr nonnull @.str.839), !dbg !3027
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3027
  %23 = load i32, ptr %22, align 4, !dbg !3027
  %24 = icmp eq i32 %23, 4, !dbg !3027
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3027, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %25(ptr nonnull @.str.840), !dbg !3027
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3027
  %27 = load i16, ptr %26, align 2, !dbg !3027
  %28 = icmp eq i16 %27, 1, !dbg !3027
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3027
  %30 = load i8, ptr %29, align 1, !dbg !3027
  %31 = icmp eq i8 %30, 8, !dbg !3027
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3027
  %33 = load i8, ptr %32, align 1, !dbg !3027
  %34 = icmp eq i8 %33, 0, !dbg !3027
  %35 = and i1 %31, %34, !dbg !3027
  %36 = and i1 %28, %35, !dbg !3027
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3027, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %37(ptr nonnull @.str.841), !dbg !3027
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape, align 8, !dbg !3027, !tbaa !3046
  %39 = and i64 %38, 4294967295, !dbg !3027
  %40 = icmp eq i64 %39, 1, !dbg !3027
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3027, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %41(ptr nonnull @.str.842), !dbg !3027
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape, i64 1, !dbg !3027
  %43 = load i64, ptr %42, align 8, !dbg !3027, !tbaa !3056
  %44 = and i64 %43, 4294967295, !dbg !3027
  %45 = icmp eq i64 %44, 1024, !dbg !3027
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3027, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %46(ptr nonnull @.str.843), !dbg !3027
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape, i64 2, !dbg !3027
  %48 = load i64, ptr %47, align 8, !dbg !3027, !tbaa !3058
  %49 = and i64 %48, 4294967295, !dbg !3027
  %50 = icmp eq i64 %49, 14, !dbg !3027
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3027, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %51(ptr nonnull @.str.844), !dbg !3027
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.shape, i64 3, !dbg !3027
  %53 = load i64, ptr %52, align 8, !dbg !3027, !tbaa !3061
  %54 = and i64 %53, 4294967295, !dbg !3027
  %55 = icmp eq i64 %54, 14, !dbg !3027
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3027, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %56(ptr nonnull @.str.845), !dbg !3027
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides, null, !dbg !3027
  br i1 %.not, label %if_end, label %if_then, !dbg !3027, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides, i64 1, !dbg !3027
  %58 = load i64, ptr %57, align 8, !dbg !3027, !tbaa !3063
  %59 = and i64 %58, 4294967295, !dbg !3027
  %60 = icmp eq i64 %59, 196, !dbg !3027
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides, i64 2, !dbg !3027
  %62 = load i64, ptr %61, align 8, !dbg !3027, !tbaa !3073
  %63 = and i64 %62, 4294967295, !dbg !3027
  %64 = icmp eq i64 %63, 14, !dbg !3027
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p0.strides, i64 3, !dbg !3027
  %66 = load i64, ptr %65, align 8, !dbg !3027, !tbaa !3076
  %67 = and i64 %66, 4294967295, !dbg !3027
  %68 = icmp eq i64 %67, 1, !dbg !3027
  %69 = and i1 %64, %68, !dbg !3027
  %70 = and i1 %60, %69, !dbg !3027
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3027, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3027
  %72 = load i64, ptr %71, align 8, !dbg !3027
  %73 = icmp eq i64 %72, 0, !dbg !3027
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3027, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %74(ptr nonnull @.str.846), !dbg !3027
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %75(ptr nonnull @.str.847), !dbg !3027
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3027
  %77 = load i32, ptr %76, align 4, !dbg !3027
  %78 = icmp eq i32 %77, 2, !dbg !3027
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3027, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %79(ptr nonnull @.str.848), !dbg !3027
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3027
  %81 = load i32, ptr %80, align 4, !dbg !3027
  %82 = icmp eq i32 %81, 4, !dbg !3027
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3027, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %83(ptr nonnull @.str.849), !dbg !3027
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3027
  %85 = load i16, ptr %84, align 2, !dbg !3027
  %86 = icmp eq i16 %85, 1, !dbg !3027
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3027
  %88 = load i8, ptr %87, align 1, !dbg !3027
  %89 = icmp eq i8 %88, 32, !dbg !3027
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3027
  %91 = load i8, ptr %90, align 1, !dbg !3027
  %92 = icmp eq i8 %91, 0, !dbg !3027
  %93 = and i1 %89, %92, !dbg !3027
  %94 = and i1 %86, %93, !dbg !3027
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3027, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %95(ptr nonnull @.str.850), !dbg !3027
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape, align 8, !dbg !3027, !tbaa !3078
  %97 = and i64 %96, 4294967295, !dbg !3027
  %98 = icmp eq i64 %97, 1, !dbg !3027
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3027, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %99(ptr nonnull @.str.851), !dbg !3027
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape, i64 1, !dbg !3027
  %101 = load i64, ptr %100, align 8, !dbg !3027, !tbaa !3088
  %102 = and i64 %101, 4294967295, !dbg !3027
  %103 = icmp eq i64 %102, 1024, !dbg !3027
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3027, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %104(ptr nonnull @.str.852), !dbg !3027
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape, i64 2, !dbg !3027
  %106 = load i64, ptr %105, align 8, !dbg !3027, !tbaa !3090
  %107 = and i64 %106, 4294967295, !dbg !3027
  %108 = icmp eq i64 %107, 1, !dbg !3027
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3027, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %109(ptr nonnull @.str.853), !dbg !3027
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.shape, i64 3, !dbg !3027
  %111 = load i64, ptr %110, align 8, !dbg !3027, !tbaa !3093
  %112 = and i64 %111, 4294967295, !dbg !3027
  %113 = icmp eq i64 %112, 1, !dbg !3027
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3027, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %114(ptr nonnull @.str.854), !dbg !3027
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.strides, null, !dbg !3027
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3027, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p1.strides, i64 1, !dbg !3027
  %116 = load i64, ptr %115, align 8, !dbg !3027, !tbaa !3095
  %117 = and i64 %116, 4294967295, !dbg !3027
  %118 = icmp eq i64 %117, 1, !dbg !3027
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3027, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3027
  %120 = load i64, ptr %119, align 8, !dbg !3027
  %121 = icmp eq i64 %120, 0, !dbg !3027
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3027, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %122(ptr nonnull @.str.855), !dbg !3027
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %123(ptr nonnull @.str.856), !dbg !3027
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3027
  %125 = load i32, ptr %124, align 4, !dbg !3027
  %126 = icmp eq i32 %125, 2, !dbg !3027
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3027, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %127(ptr nonnull @.str.857), !dbg !3027
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3027
  %129 = load i32, ptr %128, align 4, !dbg !3027
  %130 = icmp eq i32 %dev_id, %129, !dbg !3027
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3027, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %131(ptr nonnull @.str.858), !dbg !3027
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3027
  %133 = load i32, ptr %132, align 4, !dbg !3027
  %134 = icmp eq i32 %133, 4, !dbg !3027
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3027, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %135(ptr nonnull @.str.859), !dbg !3027
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3027
  %137 = load i16, ptr %136, align 2, !dbg !3027
  %138 = icmp eq i16 %137, 1, !dbg !3027
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3027
  %140 = load i8, ptr %139, align 1, !dbg !3027
  %141 = icmp eq i8 %140, 32, !dbg !3027
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3027
  %143 = load i8, ptr %142, align 1, !dbg !3027
  %144 = icmp eq i8 %143, 0, !dbg !3027
  %145 = and i1 %141, %144, !dbg !3027
  %146 = and i1 %138, %145, !dbg !3027
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3027, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %147(ptr nonnull @.str.860), !dbg !3027
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape, align 8, !dbg !3027, !tbaa !3105
  %149 = and i64 %148, 4294967295, !dbg !3027
  %150 = icmp eq i64 %149, 1, !dbg !3027
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3027, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %151(ptr nonnull @.str.861), !dbg !3027
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape, i64 1, !dbg !3027
  %153 = load i64, ptr %152, align 8, !dbg !3027, !tbaa !3115
  %154 = and i64 %153, 4294967295, !dbg !3027
  %155 = icmp eq i64 %154, 1024, !dbg !3027
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3027, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %156(ptr nonnull @.str.862), !dbg !3027
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape, i64 2, !dbg !3027
  %158 = load i64, ptr %157, align 8, !dbg !3027, !tbaa !3117
  %159 = and i64 %158, 4294967295, !dbg !3027
  %160 = icmp eq i64 %159, 1, !dbg !3027
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3027, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %161(ptr nonnull @.str.863), !dbg !3027
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.shape, i64 3, !dbg !3027
  %163 = load i64, ptr %162, align 8, !dbg !3027, !tbaa !3120
  %164 = and i64 %163, 4294967295, !dbg !3027
  %165 = icmp eq i64 %164, 1, !dbg !3027
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3027, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %166(ptr nonnull @.str.864), !dbg !3027
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.strides, null, !dbg !3027
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3027, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.p2.strides, i64 1, !dbg !3027
  %168 = load i64, ptr %167, align 8, !dbg !3027, !tbaa !3122
  %169 = and i64 %168, 4294967295, !dbg !3027
  %170 = icmp eq i64 %169, 1, !dbg !3027
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3027, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3027
  %172 = load i64, ptr %171, align 8, !dbg !3027
  %173 = icmp eq i64 %172, 0, !dbg !3027
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3027, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %174(ptr nonnull @.str.865), !dbg !3027
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %175(ptr nonnull @.str.866), !dbg !3027
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3027
  %177 = load i32, ptr %176, align 4, !dbg !3027
  %178 = icmp eq i32 %177, 2, !dbg !3027
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3027, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %179(ptr nonnull @.str.867), !dbg !3027
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3027
  %181 = load i32, ptr %180, align 4, !dbg !3027
  %182 = icmp eq i32 %dev_id, %181, !dbg !3027
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3027, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %183(ptr nonnull @.str.868), !dbg !3027
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3027
  %185 = load i32, ptr %184, align 4, !dbg !3027
  %186 = icmp eq i32 %185, 4, !dbg !3027
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3027, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %187(ptr nonnull @.str.869), !dbg !3027
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3027
  %189 = load i16, ptr %188, align 2, !dbg !3027
  %190 = icmp eq i16 %189, 1, !dbg !3027
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3027
  %192 = load i8, ptr %191, align 1, !dbg !3027
  %193 = icmp eq i8 %192, 8, !dbg !3027
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3027
  %195 = load i8, ptr %194, align 1, !dbg !3027
  %196 = icmp eq i8 %195, 0, !dbg !3027
  %197 = and i1 %193, %196, !dbg !3027
  %198 = and i1 %190, %197, !dbg !3027
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3027, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %199(ptr nonnull @.str.870), !dbg !3027
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape, align 8, !dbg !3027, !tbaa !3132
  %201 = and i64 %200, 4294967295, !dbg !3027
  %202 = icmp eq i64 %201, 1, !dbg !3027
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3027, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %203(ptr nonnull @.str.871), !dbg !3027
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape, i64 1, !dbg !3027
  %205 = load i64, ptr %204, align 8, !dbg !3027, !tbaa !3142
  %206 = and i64 %205, 4294967295, !dbg !3027
  %207 = icmp eq i64 %206, 1024, !dbg !3027
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3027, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %208(ptr nonnull @.str.872), !dbg !3027
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape, i64 2, !dbg !3027
  %210 = load i64, ptr %209, align 8, !dbg !3027, !tbaa !3144
  %211 = and i64 %210, 4294967295, !dbg !3027
  %212 = icmp eq i64 %211, 14, !dbg !3027
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3027, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %213(ptr nonnull @.str.873), !dbg !3027
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.shape, i64 3, !dbg !3027
  %215 = load i64, ptr %214, align 8, !dbg !3027, !tbaa !3147
  %216 = and i64 %215, 4294967295, !dbg !3027
  %217 = icmp eq i64 %216, 14, !dbg !3027
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3027, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %218(ptr nonnull @.str.874), !dbg !3027
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides, null, !dbg !3027
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3027, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides, i64 1, !dbg !3027
  %220 = load i64, ptr %219, align 8, !dbg !3027, !tbaa !3149
  %221 = and i64 %220, 4294967295, !dbg !3027
  %222 = icmp eq i64 %221, 196, !dbg !3027
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides, i64 2, !dbg !3027
  %224 = load i64, ptr %223, align 8, !dbg !3027, !tbaa !3159
  %225 = and i64 %224, 4294967295, !dbg !3027
  %226 = icmp eq i64 %225, 14, !dbg !3027
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4.T_cast.strides, i64 3, !dbg !3027
  %228 = load i64, ptr %227, align 8, !dbg !3027, !tbaa !3162
  %229 = and i64 %228, 4294967295, !dbg !3027
  %230 = icmp eq i64 %229, 1, !dbg !3027
  %231 = and i1 %226, %230, !dbg !3027
  %232 = and i1 %222, %231, !dbg !3027
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3027, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3027
  %234 = load i64, ptr %233, align 8, !dbg !3027
  %235 = icmp eq i64 %234, 0, !dbg !3027
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3027, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %236(ptr nonnull @.str.875), !dbg !3027
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %237(ptr nonnull @.str.876), !dbg !3027
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3027
  %239 = load i32, ptr %238, align 4, !dbg !3027
  %240 = icmp eq i32 %239, 2, !dbg !3027
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3027, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %241(ptr nonnull @.str.877), !dbg !3027
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3027
  %243 = load i32, ptr %242, align 4, !dbg !3027
  %244 = icmp eq i32 %dev_id, %243, !dbg !3027
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3027, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3027, !tbaa !19
  tail call void %245(ptr nonnull @.str.878), !dbg !3027
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3027
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3027, !tbaa !3164
  %246 = sext i32 %dev_id to i64, !dbg !3027
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3027
  store i64 %246, ptr %247, align 8, !dbg !3027
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3027
  store i32 0, ptr %248, align 4, !dbg !3027, !tbaa !3175
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3027
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3027
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3027, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3027
  %.not120 = icmp eq ptr %252, null, !dbg !3027
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3027, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3027, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3027, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3027
  %256 = icmp eq i32 %255, 0, !dbg !3027
  br i1 %256, label %call_end, label %common.ret, !dbg !3027, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3027
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3027
  %259 = icmp eq i32 %258, 0, !dbg !3027
  br i1 %259, label %call_end106, label %common.ret, !dbg !3027, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3027
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3027
  br label %handle_init_end, !dbg !3027

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3027
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3177 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3179, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3180, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3181, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3182, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3183, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3184, metadata !DIExpression()), !dbg !3185
  %0 = alloca ptr, align 8, !dbg !3185
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3185
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3185
  %1 = icmp eq i32 %num_args, 4, !dbg !3185
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3185, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3185

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %2(ptr nonnull @.str.880), !dbg !3185
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3185, !tbaa !3186
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3185
  %p1.code = load i32, ptr %3, align 4, !dbg !3185, !tbaa !3197
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3185
  %p2.code = load i32, ptr %4, align 4, !dbg !3185, !tbaa !3199
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3185
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3185, !tbaa !3202
  %p0 = load ptr, ptr %args, align 8, !dbg !3185
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3185
  %p1 = load ptr, ptr %6, align 8, !dbg !3185
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3185
  %p2 = load ptr, ptr %7, align 8, !dbg !3185
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3185
  %T_cast = load ptr, ptr %8, align 8, !dbg !3185
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3185
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3185
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape = load ptr, ptr %9, align 8, !dbg !3185
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides = load ptr, ptr %10, align 8, !dbg !3185
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3185
  %dev_id = load i32, ptr %11, align 4, !dbg !3185
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3185
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3185
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape = load ptr, ptr %12, align 8, !dbg !3185
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.strides = load ptr, ptr %13, align 8, !dbg !3185
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3185
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3185
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape = load ptr, ptr %14, align 8, !dbg !3185
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.strides = load ptr, ptr %15, align 8, !dbg !3185
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !3185
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !3185
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape = load ptr, ptr %16, align 8, !dbg !3185
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3185
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides = load ptr, ptr %17, align 8, !dbg !3185
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3185

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %18(ptr nonnull @.str.881), !dbg !3185
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3185

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %19(ptr nonnull @.str.882), !dbg !3185
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3185

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %20(ptr nonnull @.str.883), !dbg !3185
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3185

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %21(ptr nonnull @.str.884), !dbg !3185
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3185
  %23 = load i32, ptr %22, align 4, !dbg !3185
  %24 = icmp eq i32 %23, 4, !dbg !3185
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3185, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %25(ptr nonnull @.str.885), !dbg !3185
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3185
  %27 = load i16, ptr %26, align 2, !dbg !3185
  %28 = icmp eq i16 %27, 1, !dbg !3185
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3185
  %30 = load i8, ptr %29, align 1, !dbg !3185
  %31 = icmp eq i8 %30, 8, !dbg !3185
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3185
  %33 = load i8, ptr %32, align 1, !dbg !3185
  %34 = icmp eq i8 %33, 0, !dbg !3185
  %35 = and i1 %31, %34, !dbg !3185
  %36 = and i1 %28, %35, !dbg !3185
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3185, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %37(ptr nonnull @.str.886), !dbg !3185
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape, align 8, !dbg !3185, !tbaa !3204
  %39 = and i64 %38, 4294967295, !dbg !3185
  %40 = icmp eq i64 %39, 1, !dbg !3185
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3185, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %41(ptr nonnull @.str.887), !dbg !3185
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape, i64 1, !dbg !3185
  %43 = load i64, ptr %42, align 8, !dbg !3185, !tbaa !3214
  %44 = and i64 %43, 4294967295, !dbg !3185
  %45 = icmp eq i64 %44, 1024, !dbg !3185
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3185, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %46(ptr nonnull @.str.888), !dbg !3185
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape, i64 2, !dbg !3185
  %48 = load i64, ptr %47, align 8, !dbg !3185, !tbaa !3216
  %49 = and i64 %48, 4294967295, !dbg !3185
  %50 = icmp eq i64 %49, 14, !dbg !3185
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3185, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %51(ptr nonnull @.str.889), !dbg !3185
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.shape, i64 3, !dbg !3185
  %53 = load i64, ptr %52, align 8, !dbg !3185, !tbaa !3219
  %54 = and i64 %53, 4294967295, !dbg !3185
  %55 = icmp eq i64 %54, 14, !dbg !3185
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3185, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %56(ptr nonnull @.str.890), !dbg !3185
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides, null, !dbg !3185
  br i1 %.not, label %if_end, label %if_then, !dbg !3185, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides, i64 1, !dbg !3185
  %58 = load i64, ptr %57, align 8, !dbg !3185, !tbaa !3221
  %59 = and i64 %58, 4294967295, !dbg !3185
  %60 = icmp eq i64 %59, 196, !dbg !3185
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides, i64 2, !dbg !3185
  %62 = load i64, ptr %61, align 8, !dbg !3185, !tbaa !3231
  %63 = and i64 %62, 4294967295, !dbg !3185
  %64 = icmp eq i64 %63, 14, !dbg !3185
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p0.strides, i64 3, !dbg !3185
  %66 = load i64, ptr %65, align 8, !dbg !3185, !tbaa !3234
  %67 = and i64 %66, 4294967295, !dbg !3185
  %68 = icmp eq i64 %67, 1, !dbg !3185
  %69 = and i1 %64, %68, !dbg !3185
  %70 = and i1 %60, %69, !dbg !3185
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3185, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3185
  %72 = load i64, ptr %71, align 8, !dbg !3185
  %73 = icmp eq i64 %72, 0, !dbg !3185
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3185, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %74(ptr nonnull @.str.891), !dbg !3185
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %75(ptr nonnull @.str.892), !dbg !3185
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3185
  %77 = load i32, ptr %76, align 4, !dbg !3185
  %78 = icmp eq i32 %77, 2, !dbg !3185
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3185, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %79(ptr nonnull @.str.893), !dbg !3185
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3185
  %81 = load i32, ptr %80, align 4, !dbg !3185
  %82 = icmp eq i32 %81, 4, !dbg !3185
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3185, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %83(ptr nonnull @.str.894), !dbg !3185
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3185
  %85 = load i16, ptr %84, align 2, !dbg !3185
  %86 = icmp eq i16 %85, 1, !dbg !3185
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3185
  %88 = load i8, ptr %87, align 1, !dbg !3185
  %89 = icmp eq i8 %88, 32, !dbg !3185
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3185
  %91 = load i8, ptr %90, align 1, !dbg !3185
  %92 = icmp eq i8 %91, 0, !dbg !3185
  %93 = and i1 %89, %92, !dbg !3185
  %94 = and i1 %86, %93, !dbg !3185
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3185, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %95(ptr nonnull @.str.895), !dbg !3185
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape, align 8, !dbg !3185, !tbaa !3236
  %97 = and i64 %96, 4294967295, !dbg !3185
  %98 = icmp eq i64 %97, 1, !dbg !3185
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3185, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %99(ptr nonnull @.str.896), !dbg !3185
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape, i64 1, !dbg !3185
  %101 = load i64, ptr %100, align 8, !dbg !3185, !tbaa !3246
  %102 = and i64 %101, 4294967295, !dbg !3185
  %103 = icmp eq i64 %102, 1024, !dbg !3185
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3185, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %104(ptr nonnull @.str.897), !dbg !3185
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape, i64 2, !dbg !3185
  %106 = load i64, ptr %105, align 8, !dbg !3185, !tbaa !3248
  %107 = and i64 %106, 4294967295, !dbg !3185
  %108 = icmp eq i64 %107, 1, !dbg !3185
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3185, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %109(ptr nonnull @.str.898), !dbg !3185
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.shape, i64 3, !dbg !3185
  %111 = load i64, ptr %110, align 8, !dbg !3185, !tbaa !3251
  %112 = and i64 %111, 4294967295, !dbg !3185
  %113 = icmp eq i64 %112, 1, !dbg !3185
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3185, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %114(ptr nonnull @.str.899), !dbg !3185
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.strides, null, !dbg !3185
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3185, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p1.strides, i64 1, !dbg !3185
  %116 = load i64, ptr %115, align 8, !dbg !3185, !tbaa !3253
  %117 = and i64 %116, 4294967295, !dbg !3185
  %118 = icmp eq i64 %117, 1, !dbg !3185
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3185, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3185
  %120 = load i64, ptr %119, align 8, !dbg !3185
  %121 = icmp eq i64 %120, 0, !dbg !3185
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3185, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %122(ptr nonnull @.str.900), !dbg !3185
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %123(ptr nonnull @.str.901), !dbg !3185
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3185
  %125 = load i32, ptr %124, align 4, !dbg !3185
  %126 = icmp eq i32 %125, 2, !dbg !3185
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3185, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %127(ptr nonnull @.str.902), !dbg !3185
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3185
  %129 = load i32, ptr %128, align 4, !dbg !3185
  %130 = icmp eq i32 %dev_id, %129, !dbg !3185
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3185, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %131(ptr nonnull @.str.903), !dbg !3185
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3185
  %133 = load i32, ptr %132, align 4, !dbg !3185
  %134 = icmp eq i32 %133, 4, !dbg !3185
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3185, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %135(ptr nonnull @.str.904), !dbg !3185
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3185
  %137 = load i16, ptr %136, align 2, !dbg !3185
  %138 = icmp eq i16 %137, 1, !dbg !3185
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3185
  %140 = load i8, ptr %139, align 1, !dbg !3185
  %141 = icmp eq i8 %140, 32, !dbg !3185
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3185
  %143 = load i8, ptr %142, align 1, !dbg !3185
  %144 = icmp eq i8 %143, 0, !dbg !3185
  %145 = and i1 %141, %144, !dbg !3185
  %146 = and i1 %138, %145, !dbg !3185
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3185, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %147(ptr nonnull @.str.905), !dbg !3185
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape, align 8, !dbg !3185, !tbaa !3263
  %149 = and i64 %148, 4294967295, !dbg !3185
  %150 = icmp eq i64 %149, 1, !dbg !3185
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3185, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %151(ptr nonnull @.str.906), !dbg !3185
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape, i64 1, !dbg !3185
  %153 = load i64, ptr %152, align 8, !dbg !3185, !tbaa !3273
  %154 = and i64 %153, 4294967295, !dbg !3185
  %155 = icmp eq i64 %154, 1024, !dbg !3185
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3185, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %156(ptr nonnull @.str.907), !dbg !3185
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape, i64 2, !dbg !3185
  %158 = load i64, ptr %157, align 8, !dbg !3185, !tbaa !3275
  %159 = and i64 %158, 4294967295, !dbg !3185
  %160 = icmp eq i64 %159, 1, !dbg !3185
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3185, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %161(ptr nonnull @.str.908), !dbg !3185
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.shape, i64 3, !dbg !3185
  %163 = load i64, ptr %162, align 8, !dbg !3185, !tbaa !3278
  %164 = and i64 %163, 4294967295, !dbg !3185
  %165 = icmp eq i64 %164, 1, !dbg !3185
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3185, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %166(ptr nonnull @.str.909), !dbg !3185
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.strides, null, !dbg !3185
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3185, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.p2.strides, i64 1, !dbg !3185
  %168 = load i64, ptr %167, align 8, !dbg !3185, !tbaa !3280
  %169 = and i64 %168, 4294967295, !dbg !3185
  %170 = icmp eq i64 %169, 1, !dbg !3185
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3185, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3185
  %172 = load i64, ptr %171, align 8, !dbg !3185
  %173 = icmp eq i64 %172, 0, !dbg !3185
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3185, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %174(ptr nonnull @.str.910), !dbg !3185
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %175(ptr nonnull @.str.911), !dbg !3185
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3185
  %177 = load i32, ptr %176, align 4, !dbg !3185
  %178 = icmp eq i32 %177, 2, !dbg !3185
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3185, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %179(ptr nonnull @.str.912), !dbg !3185
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3185
  %181 = load i32, ptr %180, align 4, !dbg !3185
  %182 = icmp eq i32 %dev_id, %181, !dbg !3185
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3185, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %183(ptr nonnull @.str.913), !dbg !3185
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3185
  %185 = load i32, ptr %184, align 4, !dbg !3185
  %186 = icmp eq i32 %185, 4, !dbg !3185
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3185, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %187(ptr nonnull @.str.914), !dbg !3185
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3185
  %189 = load i16, ptr %188, align 2, !dbg !3185
  %190 = icmp eq i16 %189, 1, !dbg !3185
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3185
  %192 = load i8, ptr %191, align 1, !dbg !3185
  %193 = icmp eq i8 %192, 8, !dbg !3185
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3185
  %195 = load i8, ptr %194, align 1, !dbg !3185
  %196 = icmp eq i8 %195, 0, !dbg !3185
  %197 = and i1 %193, %196, !dbg !3185
  %198 = and i1 %190, %197, !dbg !3185
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3185, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %199(ptr nonnull @.str.915), !dbg !3185
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape, align 8, !dbg !3185, !tbaa !3290
  %201 = and i64 %200, 4294967295, !dbg !3185
  %202 = icmp eq i64 %201, 1, !dbg !3185
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3185, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %203(ptr nonnull @.str.916), !dbg !3185
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape, i64 1, !dbg !3185
  %205 = load i64, ptr %204, align 8, !dbg !3185, !tbaa !3300
  %206 = and i64 %205, 4294967295, !dbg !3185
  %207 = icmp eq i64 %206, 1024, !dbg !3185
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3185, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %208(ptr nonnull @.str.917), !dbg !3185
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape, i64 2, !dbg !3185
  %210 = load i64, ptr %209, align 8, !dbg !3185, !tbaa !3302
  %211 = and i64 %210, 4294967295, !dbg !3185
  %212 = icmp eq i64 %211, 14, !dbg !3185
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3185, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %213(ptr nonnull @.str.918), !dbg !3185
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.shape, i64 3, !dbg !3185
  %215 = load i64, ptr %214, align 8, !dbg !3185, !tbaa !3305
  %216 = and i64 %215, 4294967295, !dbg !3185
  %217 = icmp eq i64 %216, 14, !dbg !3185
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3185, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %218(ptr nonnull @.str.919), !dbg !3185
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides, null, !dbg !3185
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3185, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides, i64 1, !dbg !3185
  %220 = load i64, ptr %219, align 8, !dbg !3185, !tbaa !3307
  %221 = and i64 %220, 4294967295, !dbg !3185
  %222 = icmp eq i64 %221, 196, !dbg !3185
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides, i64 2, !dbg !3185
  %224 = load i64, ptr %223, align 8, !dbg !3185, !tbaa !3317
  %225 = and i64 %224, 4294967295, !dbg !3185
  %226 = icmp eq i64 %225, 14, !dbg !3185
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5.T_cast.strides, i64 3, !dbg !3185
  %228 = load i64, ptr %227, align 8, !dbg !3185, !tbaa !3320
  %229 = and i64 %228, 4294967295, !dbg !3185
  %230 = icmp eq i64 %229, 1, !dbg !3185
  %231 = and i1 %226, %230, !dbg !3185
  %232 = and i1 %222, %231, !dbg !3185
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3185, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3185
  %234 = load i64, ptr %233, align 8, !dbg !3185
  %235 = icmp eq i64 %234, 0, !dbg !3185
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3185, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %236(ptr nonnull @.str.920), !dbg !3185
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %237(ptr nonnull @.str.921), !dbg !3185
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3185
  %239 = load i32, ptr %238, align 4, !dbg !3185
  %240 = icmp eq i32 %239, 2, !dbg !3185
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3185, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %241(ptr nonnull @.str.922), !dbg !3185
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3185
  %243 = load i32, ptr %242, align 4, !dbg !3185
  %244 = icmp eq i32 %dev_id, %243, !dbg !3185
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3185, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3185, !tbaa !19
  tail call void %245(ptr nonnull @.str.923), !dbg !3185
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3185
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3185, !tbaa !3322
  %246 = sext i32 %dev_id to i64, !dbg !3185
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3185
  store i64 %246, ptr %247, align 8, !dbg !3185
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3185
  store i32 0, ptr %248, align 4, !dbg !3185, !tbaa !3333
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3185
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3185
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3185, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3185
  %.not120 = icmp eq ptr %252, null, !dbg !3185
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3185, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3185, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3185, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3185
  %256 = icmp eq i32 %255, 0, !dbg !3185
  br i1 %256, label %call_end, label %common.ret, !dbg !3185, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3185
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3185
  %259 = icmp eq i32 %258, 0, !dbg !3185
  br i1 %259, label %call_end106, label %common.ret, !dbg !3185, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3185
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3185
  br label %handle_init_end, !dbg !3185

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3185
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3335 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3337, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3338, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3339, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3340, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3341, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3342, metadata !DIExpression()), !dbg !3343
  %0 = alloca ptr, align 8, !dbg !3343
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3343
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3343
  %1 = icmp eq i32 %num_args, 4, !dbg !3343
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3343, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3343

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %2(ptr nonnull @.str.925), !dbg !3343
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3343, !tbaa !3344
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3343
  %p1.code = load i32, ptr %3, align 4, !dbg !3343, !tbaa !3355
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3343
  %p2.code = load i32, ptr %4, align 4, !dbg !3343, !tbaa !3357
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3343
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3343, !tbaa !3360
  %p0 = load ptr, ptr %args, align 8, !dbg !3343
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3343
  %p1 = load ptr, ptr %6, align 8, !dbg !3343
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3343
  %p2 = load ptr, ptr %7, align 8, !dbg !3343
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3343
  %T_cast = load ptr, ptr %8, align 8, !dbg !3343
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3343
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3343
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape = load ptr, ptr %9, align 8, !dbg !3343
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides = load ptr, ptr %10, align 8, !dbg !3343
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3343
  %dev_id = load i32, ptr %11, align 4, !dbg !3343
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3343
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3343
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape = load ptr, ptr %12, align 8, !dbg !3343
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.strides = load ptr, ptr %13, align 8, !dbg !3343
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3343
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3343
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape = load ptr, ptr %14, align 8, !dbg !3343
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.strides = load ptr, ptr %15, align 8, !dbg !3343
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !3343
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !3343
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape = load ptr, ptr %16, align 8, !dbg !3343
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3343
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides = load ptr, ptr %17, align 8, !dbg !3343
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3343

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %18(ptr nonnull @.str.926), !dbg !3343
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3343

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %19(ptr nonnull @.str.927), !dbg !3343
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3343

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %20(ptr nonnull @.str.928), !dbg !3343
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3343

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %21(ptr nonnull @.str.929), !dbg !3343
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3343
  %23 = load i32, ptr %22, align 4, !dbg !3343
  %24 = icmp eq i32 %23, 4, !dbg !3343
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3343, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %25(ptr nonnull @.str.930), !dbg !3343
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3343
  %27 = load i16, ptr %26, align 2, !dbg !3343
  %28 = icmp eq i16 %27, 1, !dbg !3343
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3343
  %30 = load i8, ptr %29, align 1, !dbg !3343
  %31 = icmp eq i8 %30, 8, !dbg !3343
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3343
  %33 = load i8, ptr %32, align 1, !dbg !3343
  %34 = icmp eq i8 %33, 0, !dbg !3343
  %35 = and i1 %31, %34, !dbg !3343
  %36 = and i1 %28, %35, !dbg !3343
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3343, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %37(ptr nonnull @.str.931), !dbg !3343
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape, align 8, !dbg !3343, !tbaa !3362
  %39 = and i64 %38, 4294967295, !dbg !3343
  %40 = icmp eq i64 %39, 1, !dbg !3343
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3343, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %41(ptr nonnull @.str.932), !dbg !3343
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape, i64 1, !dbg !3343
  %43 = load i64, ptr %42, align 8, !dbg !3343, !tbaa !3372
  %44 = and i64 %43, 4294967295, !dbg !3343
  %45 = icmp eq i64 %44, 2048, !dbg !3343
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3343, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %46(ptr nonnull @.str.933), !dbg !3343
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape, i64 2, !dbg !3343
  %48 = load i64, ptr %47, align 8, !dbg !3343, !tbaa !3374
  %49 = and i64 %48, 4294967295, !dbg !3343
  %50 = icmp eq i64 %49, 7, !dbg !3343
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3343, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %51(ptr nonnull @.str.934), !dbg !3343
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.shape, i64 3, !dbg !3343
  %53 = load i64, ptr %52, align 8, !dbg !3343, !tbaa !3377
  %54 = and i64 %53, 4294967295, !dbg !3343
  %55 = icmp eq i64 %54, 7, !dbg !3343
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3343, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %56(ptr nonnull @.str.935), !dbg !3343
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides, null, !dbg !3343
  br i1 %.not, label %if_end, label %if_then, !dbg !3343, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides, i64 1, !dbg !3343
  %58 = load i64, ptr %57, align 8, !dbg !3343, !tbaa !3379
  %59 = and i64 %58, 4294967295, !dbg !3343
  %60 = icmp eq i64 %59, 49, !dbg !3343
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides, i64 2, !dbg !3343
  %62 = load i64, ptr %61, align 8, !dbg !3343, !tbaa !3389
  %63 = and i64 %62, 4294967295, !dbg !3343
  %64 = icmp eq i64 %63, 7, !dbg !3343
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p0.strides, i64 3, !dbg !3343
  %66 = load i64, ptr %65, align 8, !dbg !3343, !tbaa !3392
  %67 = and i64 %66, 4294967295, !dbg !3343
  %68 = icmp eq i64 %67, 1, !dbg !3343
  %69 = and i1 %64, %68, !dbg !3343
  %70 = and i1 %60, %69, !dbg !3343
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3343, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3343
  %72 = load i64, ptr %71, align 8, !dbg !3343
  %73 = icmp eq i64 %72, 0, !dbg !3343
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3343, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %74(ptr nonnull @.str.936), !dbg !3343
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %75(ptr nonnull @.str.937), !dbg !3343
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3343
  %77 = load i32, ptr %76, align 4, !dbg !3343
  %78 = icmp eq i32 %77, 2, !dbg !3343
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3343, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %79(ptr nonnull @.str.938), !dbg !3343
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3343
  %81 = load i32, ptr %80, align 4, !dbg !3343
  %82 = icmp eq i32 %81, 4, !dbg !3343
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3343, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %83(ptr nonnull @.str.939), !dbg !3343
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3343
  %85 = load i16, ptr %84, align 2, !dbg !3343
  %86 = icmp eq i16 %85, 1, !dbg !3343
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3343
  %88 = load i8, ptr %87, align 1, !dbg !3343
  %89 = icmp eq i8 %88, 32, !dbg !3343
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3343
  %91 = load i8, ptr %90, align 1, !dbg !3343
  %92 = icmp eq i8 %91, 0, !dbg !3343
  %93 = and i1 %89, %92, !dbg !3343
  %94 = and i1 %86, %93, !dbg !3343
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3343, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %95(ptr nonnull @.str.940), !dbg !3343
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape, align 8, !dbg !3343, !tbaa !3394
  %97 = and i64 %96, 4294967295, !dbg !3343
  %98 = icmp eq i64 %97, 1, !dbg !3343
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3343, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %99(ptr nonnull @.str.941), !dbg !3343
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape, i64 1, !dbg !3343
  %101 = load i64, ptr %100, align 8, !dbg !3343, !tbaa !3404
  %102 = and i64 %101, 4294967295, !dbg !3343
  %103 = icmp eq i64 %102, 2048, !dbg !3343
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3343, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %104(ptr nonnull @.str.942), !dbg !3343
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape, i64 2, !dbg !3343
  %106 = load i64, ptr %105, align 8, !dbg !3343, !tbaa !3406
  %107 = and i64 %106, 4294967295, !dbg !3343
  %108 = icmp eq i64 %107, 1, !dbg !3343
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3343, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %109(ptr nonnull @.str.943), !dbg !3343
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.shape, i64 3, !dbg !3343
  %111 = load i64, ptr %110, align 8, !dbg !3343, !tbaa !3409
  %112 = and i64 %111, 4294967295, !dbg !3343
  %113 = icmp eq i64 %112, 1, !dbg !3343
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3343, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %114(ptr nonnull @.str.944), !dbg !3343
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.strides, null, !dbg !3343
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3343, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p1.strides, i64 1, !dbg !3343
  %116 = load i64, ptr %115, align 8, !dbg !3343, !tbaa !3411
  %117 = and i64 %116, 4294967295, !dbg !3343
  %118 = icmp eq i64 %117, 1, !dbg !3343
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3343, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3343
  %120 = load i64, ptr %119, align 8, !dbg !3343
  %121 = icmp eq i64 %120, 0, !dbg !3343
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3343, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %122(ptr nonnull @.str.945), !dbg !3343
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %123(ptr nonnull @.str.946), !dbg !3343
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3343
  %125 = load i32, ptr %124, align 4, !dbg !3343
  %126 = icmp eq i32 %125, 2, !dbg !3343
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3343, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %127(ptr nonnull @.str.947), !dbg !3343
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3343
  %129 = load i32, ptr %128, align 4, !dbg !3343
  %130 = icmp eq i32 %dev_id, %129, !dbg !3343
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3343, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %131(ptr nonnull @.str.948), !dbg !3343
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3343
  %133 = load i32, ptr %132, align 4, !dbg !3343
  %134 = icmp eq i32 %133, 4, !dbg !3343
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3343, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %135(ptr nonnull @.str.949), !dbg !3343
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3343
  %137 = load i16, ptr %136, align 2, !dbg !3343
  %138 = icmp eq i16 %137, 1, !dbg !3343
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3343
  %140 = load i8, ptr %139, align 1, !dbg !3343
  %141 = icmp eq i8 %140, 32, !dbg !3343
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3343
  %143 = load i8, ptr %142, align 1, !dbg !3343
  %144 = icmp eq i8 %143, 0, !dbg !3343
  %145 = and i1 %141, %144, !dbg !3343
  %146 = and i1 %138, %145, !dbg !3343
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3343, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %147(ptr nonnull @.str.950), !dbg !3343
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape, align 8, !dbg !3343, !tbaa !3421
  %149 = and i64 %148, 4294967295, !dbg !3343
  %150 = icmp eq i64 %149, 1, !dbg !3343
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3343, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %151(ptr nonnull @.str.951), !dbg !3343
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape, i64 1, !dbg !3343
  %153 = load i64, ptr %152, align 8, !dbg !3343, !tbaa !3431
  %154 = and i64 %153, 4294967295, !dbg !3343
  %155 = icmp eq i64 %154, 2048, !dbg !3343
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3343, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %156(ptr nonnull @.str.952), !dbg !3343
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape, i64 2, !dbg !3343
  %158 = load i64, ptr %157, align 8, !dbg !3343, !tbaa !3433
  %159 = and i64 %158, 4294967295, !dbg !3343
  %160 = icmp eq i64 %159, 1, !dbg !3343
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3343, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %161(ptr nonnull @.str.953), !dbg !3343
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.shape, i64 3, !dbg !3343
  %163 = load i64, ptr %162, align 8, !dbg !3343, !tbaa !3436
  %164 = and i64 %163, 4294967295, !dbg !3343
  %165 = icmp eq i64 %164, 1, !dbg !3343
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3343, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %166(ptr nonnull @.str.954), !dbg !3343
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.strides, null, !dbg !3343
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3343, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.p2.strides, i64 1, !dbg !3343
  %168 = load i64, ptr %167, align 8, !dbg !3343, !tbaa !3438
  %169 = and i64 %168, 4294967295, !dbg !3343
  %170 = icmp eq i64 %169, 1, !dbg !3343
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3343, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3343
  %172 = load i64, ptr %171, align 8, !dbg !3343
  %173 = icmp eq i64 %172, 0, !dbg !3343
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3343, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %174(ptr nonnull @.str.955), !dbg !3343
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %175(ptr nonnull @.str.956), !dbg !3343
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3343
  %177 = load i32, ptr %176, align 4, !dbg !3343
  %178 = icmp eq i32 %177, 2, !dbg !3343
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3343, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %179(ptr nonnull @.str.957), !dbg !3343
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3343
  %181 = load i32, ptr %180, align 4, !dbg !3343
  %182 = icmp eq i32 %dev_id, %181, !dbg !3343
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3343, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %183(ptr nonnull @.str.958), !dbg !3343
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3343
  %185 = load i32, ptr %184, align 4, !dbg !3343
  %186 = icmp eq i32 %185, 4, !dbg !3343
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3343, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %187(ptr nonnull @.str.959), !dbg !3343
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3343
  %189 = load i16, ptr %188, align 2, !dbg !3343
  %190 = icmp eq i16 %189, 1, !dbg !3343
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3343
  %192 = load i8, ptr %191, align 1, !dbg !3343
  %193 = icmp eq i8 %192, 8, !dbg !3343
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3343
  %195 = load i8, ptr %194, align 1, !dbg !3343
  %196 = icmp eq i8 %195, 0, !dbg !3343
  %197 = and i1 %193, %196, !dbg !3343
  %198 = and i1 %190, %197, !dbg !3343
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3343, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %199(ptr nonnull @.str.960), !dbg !3343
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape, align 8, !dbg !3343, !tbaa !3448
  %201 = and i64 %200, 4294967295, !dbg !3343
  %202 = icmp eq i64 %201, 1, !dbg !3343
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3343, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %203(ptr nonnull @.str.961), !dbg !3343
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape, i64 1, !dbg !3343
  %205 = load i64, ptr %204, align 8, !dbg !3343, !tbaa !3458
  %206 = and i64 %205, 4294967295, !dbg !3343
  %207 = icmp eq i64 %206, 2048, !dbg !3343
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3343, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %208(ptr nonnull @.str.962), !dbg !3343
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape, i64 2, !dbg !3343
  %210 = load i64, ptr %209, align 8, !dbg !3343, !tbaa !3460
  %211 = and i64 %210, 4294967295, !dbg !3343
  %212 = icmp eq i64 %211, 7, !dbg !3343
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3343, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %213(ptr nonnull @.str.963), !dbg !3343
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.shape, i64 3, !dbg !3343
  %215 = load i64, ptr %214, align 8, !dbg !3343, !tbaa !3463
  %216 = and i64 %215, 4294967295, !dbg !3343
  %217 = icmp eq i64 %216, 7, !dbg !3343
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3343, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %218(ptr nonnull @.str.964), !dbg !3343
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides, null, !dbg !3343
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3343, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides, i64 1, !dbg !3343
  %220 = load i64, ptr %219, align 8, !dbg !3343, !tbaa !3465
  %221 = and i64 %220, 4294967295, !dbg !3343
  %222 = icmp eq i64 %221, 49, !dbg !3343
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides, i64 2, !dbg !3343
  %224 = load i64, ptr %223, align 8, !dbg !3343, !tbaa !3475
  %225 = and i64 %224, 4294967295, !dbg !3343
  %226 = icmp eq i64 %225, 7, !dbg !3343
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6.T_cast.strides, i64 3, !dbg !3343
  %228 = load i64, ptr %227, align 8, !dbg !3343, !tbaa !3478
  %229 = and i64 %228, 4294967295, !dbg !3343
  %230 = icmp eq i64 %229, 1, !dbg !3343
  %231 = and i1 %226, %230, !dbg !3343
  %232 = and i1 %222, %231, !dbg !3343
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3343, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3343
  %234 = load i64, ptr %233, align 8, !dbg !3343
  %235 = icmp eq i64 %234, 0, !dbg !3343
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3343, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %236(ptr nonnull @.str.965), !dbg !3343
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %237(ptr nonnull @.str.966), !dbg !3343
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3343
  %239 = load i32, ptr %238, align 4, !dbg !3343
  %240 = icmp eq i32 %239, 2, !dbg !3343
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3343, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %241(ptr nonnull @.str.967), !dbg !3343
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3343
  %243 = load i32, ptr %242, align 4, !dbg !3343
  %244 = icmp eq i32 %dev_id, %243, !dbg !3343
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3343, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3343, !tbaa !19
  tail call void %245(ptr nonnull @.str.968), !dbg !3343
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3343
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3343, !tbaa !3480
  %246 = sext i32 %dev_id to i64, !dbg !3343
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3343
  store i64 %246, ptr %247, align 8, !dbg !3343
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3343
  store i32 0, ptr %248, align 4, !dbg !3343, !tbaa !3491
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3343
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3343
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3343, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3343
  %.not120 = icmp eq ptr %252, null, !dbg !3343
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3343, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3343, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3343, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3343
  %256 = icmp eq i32 %255, 0, !dbg !3343
  br i1 %256, label %call_end, label %common.ret, !dbg !3343, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3343
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3343
  %259 = icmp eq i32 %258, 0, !dbg !3343
  br i1 %259, label %call_end106, label %common.ret, !dbg !3343, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3343
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3343
  br label %handle_init_end, !dbg !3343

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3343
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3493 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3495, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3496, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3497, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3498, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3499, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3500, metadata !DIExpression()), !dbg !3501
  %0 = alloca ptr, align 8, !dbg !3501
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3501
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3501
  %1 = icmp eq i32 %num_args, 4, !dbg !3501
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3501, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3501

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %2(ptr nonnull @.str.970), !dbg !3501
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3501, !tbaa !3502
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3501
  %p1.code = load i32, ptr %3, align 4, !dbg !3501, !tbaa !3513
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3501
  %p2.code = load i32, ptr %4, align 4, !dbg !3501, !tbaa !3515
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3501
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3501, !tbaa !3518
  %p0 = load ptr, ptr %args, align 8, !dbg !3501
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3501
  %p1 = load ptr, ptr %6, align 8, !dbg !3501
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3501
  %p2 = load ptr, ptr %7, align 8, !dbg !3501
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3501
  %T_cast = load ptr, ptr %8, align 8, !dbg !3501
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3501
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3501
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape = load ptr, ptr %9, align 8, !dbg !3501
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides = load ptr, ptr %10, align 8, !dbg !3501
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3501
  %dev_id = load i32, ptr %11, align 4, !dbg !3501
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3501
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3501
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape = load ptr, ptr %12, align 8, !dbg !3501
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.strides = load ptr, ptr %13, align 8, !dbg !3501
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3501
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3501
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape = load ptr, ptr %14, align 8, !dbg !3501
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.strides = load ptr, ptr %15, align 8, !dbg !3501
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !3501
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !3501
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape = load ptr, ptr %16, align 8, !dbg !3501
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3501
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides = load ptr, ptr %17, align 8, !dbg !3501
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3501

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %18(ptr nonnull @.str.971), !dbg !3501
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3501

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %19(ptr nonnull @.str.972), !dbg !3501
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3501

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %20(ptr nonnull @.str.973), !dbg !3501
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3501

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %21(ptr nonnull @.str.974), !dbg !3501
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3501
  %23 = load i32, ptr %22, align 4, !dbg !3501
  %24 = icmp eq i32 %23, 4, !dbg !3501
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3501, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %25(ptr nonnull @.str.975), !dbg !3501
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3501
  %27 = load i16, ptr %26, align 2, !dbg !3501
  %28 = icmp eq i16 %27, 1, !dbg !3501
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3501
  %30 = load i8, ptr %29, align 1, !dbg !3501
  %31 = icmp eq i8 %30, 8, !dbg !3501
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3501
  %33 = load i8, ptr %32, align 1, !dbg !3501
  %34 = icmp eq i8 %33, 0, !dbg !3501
  %35 = and i1 %31, %34, !dbg !3501
  %36 = and i1 %28, %35, !dbg !3501
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3501, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %37(ptr nonnull @.str.976), !dbg !3501
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape, align 8, !dbg !3501, !tbaa !3520
  %39 = and i64 %38, 4294967295, !dbg !3501
  %40 = icmp eq i64 %39, 1, !dbg !3501
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3501, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %41(ptr nonnull @.str.977), !dbg !3501
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape, i64 1, !dbg !3501
  %43 = load i64, ptr %42, align 8, !dbg !3501, !tbaa !3530
  %44 = and i64 %43, 4294967295, !dbg !3501
  %45 = icmp eq i64 %44, 2048, !dbg !3501
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3501, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %46(ptr nonnull @.str.978), !dbg !3501
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape, i64 2, !dbg !3501
  %48 = load i64, ptr %47, align 8, !dbg !3501, !tbaa !3532
  %49 = and i64 %48, 4294967295, !dbg !3501
  %50 = icmp eq i64 %49, 7, !dbg !3501
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3501, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %51(ptr nonnull @.str.979), !dbg !3501
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.shape, i64 3, !dbg !3501
  %53 = load i64, ptr %52, align 8, !dbg !3501, !tbaa !3535
  %54 = and i64 %53, 4294967295, !dbg !3501
  %55 = icmp eq i64 %54, 7, !dbg !3501
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3501, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %56(ptr nonnull @.str.980), !dbg !3501
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides, null, !dbg !3501
  br i1 %.not, label %if_end, label %if_then, !dbg !3501, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides, i64 1, !dbg !3501
  %58 = load i64, ptr %57, align 8, !dbg !3501, !tbaa !3537
  %59 = and i64 %58, 4294967295, !dbg !3501
  %60 = icmp eq i64 %59, 49, !dbg !3501
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides, i64 2, !dbg !3501
  %62 = load i64, ptr %61, align 8, !dbg !3501, !tbaa !3547
  %63 = and i64 %62, 4294967295, !dbg !3501
  %64 = icmp eq i64 %63, 7, !dbg !3501
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p0.strides, i64 3, !dbg !3501
  %66 = load i64, ptr %65, align 8, !dbg !3501, !tbaa !3550
  %67 = and i64 %66, 4294967295, !dbg !3501
  %68 = icmp eq i64 %67, 1, !dbg !3501
  %69 = and i1 %64, %68, !dbg !3501
  %70 = and i1 %60, %69, !dbg !3501
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3501, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3501
  %72 = load i64, ptr %71, align 8, !dbg !3501
  %73 = icmp eq i64 %72, 0, !dbg !3501
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3501, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %74(ptr nonnull @.str.981), !dbg !3501
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %75(ptr nonnull @.str.982), !dbg !3501
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3501
  %77 = load i32, ptr %76, align 4, !dbg !3501
  %78 = icmp eq i32 %77, 2, !dbg !3501
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3501, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %79(ptr nonnull @.str.983), !dbg !3501
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3501
  %81 = load i32, ptr %80, align 4, !dbg !3501
  %82 = icmp eq i32 %81, 4, !dbg !3501
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3501, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %83(ptr nonnull @.str.984), !dbg !3501
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3501
  %85 = load i16, ptr %84, align 2, !dbg !3501
  %86 = icmp eq i16 %85, 1, !dbg !3501
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3501
  %88 = load i8, ptr %87, align 1, !dbg !3501
  %89 = icmp eq i8 %88, 32, !dbg !3501
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3501
  %91 = load i8, ptr %90, align 1, !dbg !3501
  %92 = icmp eq i8 %91, 0, !dbg !3501
  %93 = and i1 %89, %92, !dbg !3501
  %94 = and i1 %86, %93, !dbg !3501
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3501, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %95(ptr nonnull @.str.985), !dbg !3501
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape, align 8, !dbg !3501, !tbaa !3552
  %97 = and i64 %96, 4294967295, !dbg !3501
  %98 = icmp eq i64 %97, 1, !dbg !3501
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3501, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %99(ptr nonnull @.str.986), !dbg !3501
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape, i64 1, !dbg !3501
  %101 = load i64, ptr %100, align 8, !dbg !3501, !tbaa !3562
  %102 = and i64 %101, 4294967295, !dbg !3501
  %103 = icmp eq i64 %102, 2048, !dbg !3501
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3501, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %104(ptr nonnull @.str.987), !dbg !3501
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape, i64 2, !dbg !3501
  %106 = load i64, ptr %105, align 8, !dbg !3501, !tbaa !3564
  %107 = and i64 %106, 4294967295, !dbg !3501
  %108 = icmp eq i64 %107, 1, !dbg !3501
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3501, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %109(ptr nonnull @.str.988), !dbg !3501
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.shape, i64 3, !dbg !3501
  %111 = load i64, ptr %110, align 8, !dbg !3501, !tbaa !3567
  %112 = and i64 %111, 4294967295, !dbg !3501
  %113 = icmp eq i64 %112, 1, !dbg !3501
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3501, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %114(ptr nonnull @.str.989), !dbg !3501
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.strides, null, !dbg !3501
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3501, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p1.strides, i64 1, !dbg !3501
  %116 = load i64, ptr %115, align 8, !dbg !3501, !tbaa !3569
  %117 = and i64 %116, 4294967295, !dbg !3501
  %118 = icmp eq i64 %117, 1, !dbg !3501
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3501, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3501
  %120 = load i64, ptr %119, align 8, !dbg !3501
  %121 = icmp eq i64 %120, 0, !dbg !3501
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3501, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %122(ptr nonnull @.str.990), !dbg !3501
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %123(ptr nonnull @.str.991), !dbg !3501
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3501
  %125 = load i32, ptr %124, align 4, !dbg !3501
  %126 = icmp eq i32 %125, 2, !dbg !3501
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3501, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %127(ptr nonnull @.str.992), !dbg !3501
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3501
  %129 = load i32, ptr %128, align 4, !dbg !3501
  %130 = icmp eq i32 %dev_id, %129, !dbg !3501
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3501, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %131(ptr nonnull @.str.993), !dbg !3501
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3501
  %133 = load i32, ptr %132, align 4, !dbg !3501
  %134 = icmp eq i32 %133, 4, !dbg !3501
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3501, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %135(ptr nonnull @.str.994), !dbg !3501
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3501
  %137 = load i16, ptr %136, align 2, !dbg !3501
  %138 = icmp eq i16 %137, 1, !dbg !3501
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3501
  %140 = load i8, ptr %139, align 1, !dbg !3501
  %141 = icmp eq i8 %140, 32, !dbg !3501
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3501
  %143 = load i8, ptr %142, align 1, !dbg !3501
  %144 = icmp eq i8 %143, 0, !dbg !3501
  %145 = and i1 %141, %144, !dbg !3501
  %146 = and i1 %138, %145, !dbg !3501
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3501, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %147(ptr nonnull @.str.995), !dbg !3501
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape, align 8, !dbg !3501, !tbaa !3579
  %149 = and i64 %148, 4294967295, !dbg !3501
  %150 = icmp eq i64 %149, 1, !dbg !3501
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3501, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %151(ptr nonnull @.str.996), !dbg !3501
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape, i64 1, !dbg !3501
  %153 = load i64, ptr %152, align 8, !dbg !3501, !tbaa !3589
  %154 = and i64 %153, 4294967295, !dbg !3501
  %155 = icmp eq i64 %154, 2048, !dbg !3501
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3501, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %156(ptr nonnull @.str.997), !dbg !3501
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape, i64 2, !dbg !3501
  %158 = load i64, ptr %157, align 8, !dbg !3501, !tbaa !3591
  %159 = and i64 %158, 4294967295, !dbg !3501
  %160 = icmp eq i64 %159, 1, !dbg !3501
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3501, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %161(ptr nonnull @.str.998), !dbg !3501
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.shape, i64 3, !dbg !3501
  %163 = load i64, ptr %162, align 8, !dbg !3501, !tbaa !3594
  %164 = and i64 %163, 4294967295, !dbg !3501
  %165 = icmp eq i64 %164, 1, !dbg !3501
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3501, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %166(ptr nonnull @.str.999), !dbg !3501
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.strides, null, !dbg !3501
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3501, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.p2.strides, i64 1, !dbg !3501
  %168 = load i64, ptr %167, align 8, !dbg !3501, !tbaa !3596
  %169 = and i64 %168, 4294967295, !dbg !3501
  %170 = icmp eq i64 %169, 1, !dbg !3501
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3501, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3501
  %172 = load i64, ptr %171, align 8, !dbg !3501
  %173 = icmp eq i64 %172, 0, !dbg !3501
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3501, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %174(ptr nonnull @.str.1000), !dbg !3501
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %175(ptr nonnull @.str.1001), !dbg !3501
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3501
  %177 = load i32, ptr %176, align 4, !dbg !3501
  %178 = icmp eq i32 %177, 2, !dbg !3501
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3501, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %179(ptr nonnull @.str.1002), !dbg !3501
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3501
  %181 = load i32, ptr %180, align 4, !dbg !3501
  %182 = icmp eq i32 %dev_id, %181, !dbg !3501
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3501, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %183(ptr nonnull @.str.1003), !dbg !3501
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3501
  %185 = load i32, ptr %184, align 4, !dbg !3501
  %186 = icmp eq i32 %185, 4, !dbg !3501
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3501, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %187(ptr nonnull @.str.1004), !dbg !3501
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3501
  %189 = load i16, ptr %188, align 2, !dbg !3501
  %190 = icmp eq i16 %189, 1, !dbg !3501
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3501
  %192 = load i8, ptr %191, align 1, !dbg !3501
  %193 = icmp eq i8 %192, 8, !dbg !3501
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3501
  %195 = load i8, ptr %194, align 1, !dbg !3501
  %196 = icmp eq i8 %195, 0, !dbg !3501
  %197 = and i1 %193, %196, !dbg !3501
  %198 = and i1 %190, %197, !dbg !3501
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3501, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %199(ptr nonnull @.str.1005), !dbg !3501
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape, align 8, !dbg !3501, !tbaa !3606
  %201 = and i64 %200, 4294967295, !dbg !3501
  %202 = icmp eq i64 %201, 1, !dbg !3501
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3501, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %203(ptr nonnull @.str.1006), !dbg !3501
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape, i64 1, !dbg !3501
  %205 = load i64, ptr %204, align 8, !dbg !3501, !tbaa !3616
  %206 = and i64 %205, 4294967295, !dbg !3501
  %207 = icmp eq i64 %206, 2048, !dbg !3501
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3501, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %208(ptr nonnull @.str.1007), !dbg !3501
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape, i64 2, !dbg !3501
  %210 = load i64, ptr %209, align 8, !dbg !3501, !tbaa !3618
  %211 = and i64 %210, 4294967295, !dbg !3501
  %212 = icmp eq i64 %211, 7, !dbg !3501
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3501, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %213(ptr nonnull @.str.1008), !dbg !3501
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.shape, i64 3, !dbg !3501
  %215 = load i64, ptr %214, align 8, !dbg !3501, !tbaa !3621
  %216 = and i64 %215, 4294967295, !dbg !3501
  %217 = icmp eq i64 %216, 7, !dbg !3501
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3501, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %218(ptr nonnull @.str.1009), !dbg !3501
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides, null, !dbg !3501
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3501, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides, i64 1, !dbg !3501
  %220 = load i64, ptr %219, align 8, !dbg !3501, !tbaa !3623
  %221 = and i64 %220, 4294967295, !dbg !3501
  %222 = icmp eq i64 %221, 49, !dbg !3501
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides, i64 2, !dbg !3501
  %224 = load i64, ptr %223, align 8, !dbg !3501, !tbaa !3633
  %225 = and i64 %224, 4294967295, !dbg !3501
  %226 = icmp eq i64 %225, 7, !dbg !3501
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7.T_cast.strides, i64 3, !dbg !3501
  %228 = load i64, ptr %227, align 8, !dbg !3501, !tbaa !3636
  %229 = and i64 %228, 4294967295, !dbg !3501
  %230 = icmp eq i64 %229, 1, !dbg !3501
  %231 = and i1 %226, %230, !dbg !3501
  %232 = and i1 %222, %231, !dbg !3501
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3501, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3501
  %234 = load i64, ptr %233, align 8, !dbg !3501
  %235 = icmp eq i64 %234, 0, !dbg !3501
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3501, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %236(ptr nonnull @.str.1010), !dbg !3501
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %237(ptr nonnull @.str.1011), !dbg !3501
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3501
  %239 = load i32, ptr %238, align 4, !dbg !3501
  %240 = icmp eq i32 %239, 2, !dbg !3501
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3501, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %241(ptr nonnull @.str.1012), !dbg !3501
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3501
  %243 = load i32, ptr %242, align 4, !dbg !3501
  %244 = icmp eq i32 %dev_id, %243, !dbg !3501
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3501, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3501, !tbaa !19
  tail call void %245(ptr nonnull @.str.1013), !dbg !3501
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3501
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3501, !tbaa !3638
  %246 = sext i32 %dev_id to i64, !dbg !3501
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3501
  store i64 %246, ptr %247, align 8, !dbg !3501
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3501
  store i32 0, ptr %248, align 4, !dbg !3501, !tbaa !3649
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3501
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3501
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3501, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3501
  %.not120 = icmp eq ptr %252, null, !dbg !3501
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3501, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3501, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3501, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3501
  %256 = icmp eq i32 %255, 0, !dbg !3501
  br i1 %256, label %call_end, label %common.ret, !dbg !3501, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3501
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3501
  %259 = icmp eq i32 %258, 0, !dbg !3501
  br i1 %259, label %call_end106, label %common.ret, !dbg !3501, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3501
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3501
  br label %handle_init_end, !dbg !3501

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3501
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3651 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3653, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3654, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3655, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3656, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3657, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3658, metadata !DIExpression()), !dbg !3659
  %0 = alloca ptr, align 8, !dbg !3659
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3659
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3659
  %1 = icmp eq i32 %num_args, 4, !dbg !3659
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3659, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3659

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %2(ptr nonnull @.str.1015), !dbg !3659
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3659, !tbaa !3660
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3659
  %p1.code = load i32, ptr %3, align 4, !dbg !3659, !tbaa !3671
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3659
  %p2.code = load i32, ptr %4, align 4, !dbg !3659, !tbaa !3673
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3659
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3659, !tbaa !3676
  %p0 = load ptr, ptr %args, align 8, !dbg !3659
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3659
  %p1 = load ptr, ptr %6, align 8, !dbg !3659
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3659
  %p2 = load ptr, ptr %7, align 8, !dbg !3659
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3659
  %T_cast = load ptr, ptr %8, align 8, !dbg !3659
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3659
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3659
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape = load ptr, ptr %9, align 8, !dbg !3659
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides = load ptr, ptr %10, align 8, !dbg !3659
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3659
  %dev_id = load i32, ptr %11, align 4, !dbg !3659
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3659
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3659
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape = load ptr, ptr %12, align 8, !dbg !3659
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides = load ptr, ptr %13, align 8, !dbg !3659
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3659
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3659
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape = load ptr, ptr %14, align 8, !dbg !3659
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.strides = load ptr, ptr %15, align 8, !dbg !3659
  %T_cast107 = load ptr, ptr %T_cast, align 8, !dbg !3659
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast107, i64 64) ], !dbg !3659
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %16, align 8, !dbg !3659
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3659
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %17, align 8, !dbg !3659
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3659

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %18(ptr nonnull @.str.1016), !dbg !3659
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3659

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %19(ptr nonnull @.str.1017), !dbg !3659
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3659

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %20(ptr nonnull @.str.1018), !dbg !3659
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_cast.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3659

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %21(ptr nonnull @.str.1019), !dbg !3659
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3659
  %23 = load i32, ptr %22, align 4, !dbg !3659
  %24 = icmp eq i32 %23, 4, !dbg !3659
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3659, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %25(ptr nonnull @.str.1020), !dbg !3659
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3659
  %27 = load i16, ptr %26, align 2, !dbg !3659
  %28 = icmp eq i16 %27, 1, !dbg !3659
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3659
  %30 = load i8, ptr %29, align 1, !dbg !3659
  %31 = icmp eq i8 %30, 8, !dbg !3659
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3659
  %33 = load i8, ptr %32, align 1, !dbg !3659
  %34 = icmp eq i8 %33, 0, !dbg !3659
  %35 = and i1 %31, %34, !dbg !3659
  %36 = and i1 %28, %35, !dbg !3659
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3659, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %37(ptr nonnull @.str.1021), !dbg !3659
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, align 8, !dbg !3659, !tbaa !3678
  %39 = and i64 %38, 4294967295, !dbg !3659
  %40 = icmp eq i64 %39, 1, !dbg !3659
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3659, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %41(ptr nonnull @.str.1022), !dbg !3659
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !3659
  %43 = load i64, ptr %42, align 8, !dbg !3659, !tbaa !3688
  %44 = and i64 %43, 4294967295, !dbg !3659
  %45 = icmp eq i64 %44, 2048, !dbg !3659
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3659, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %46(ptr nonnull @.str.1023), !dbg !3659
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !3659
  %48 = load i64, ptr %47, align 8, !dbg !3659, !tbaa !3690
  %49 = and i64 %48, 4294967295, !dbg !3659
  %50 = icmp eq i64 %49, 7, !dbg !3659
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3659, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %51(ptr nonnull @.str.1024), !dbg !3659
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !3659
  %53 = load i64, ptr %52, align 8, !dbg !3659, !tbaa !3693
  %54 = and i64 %53, 4294967295, !dbg !3659
  %55 = icmp eq i64 %54, 7, !dbg !3659
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3659, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %56(ptr nonnull @.str.1025), !dbg !3659
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, null, !dbg !3659
  br i1 %.not, label %if_end, label %if_then, !dbg !3659, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !3659
  %58 = load i64, ptr %57, align 8, !dbg !3659, !tbaa !3695
  %59 = and i64 %58, 4294967295, !dbg !3659
  %60 = icmp eq i64 %59, 49, !dbg !3659
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !3659
  %62 = load i64, ptr %61, align 8, !dbg !3659, !tbaa !3705
  %63 = and i64 %62, 4294967295, !dbg !3659
  %64 = icmp eq i64 %63, 7, !dbg !3659
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !3659
  %66 = load i64, ptr %65, align 8, !dbg !3659, !tbaa !3708
  %67 = and i64 %66, 4294967295, !dbg !3659
  %68 = icmp eq i64 %67, 1, !dbg !3659
  %69 = and i1 %64, %68, !dbg !3659
  %70 = and i1 %60, %69, !dbg !3659
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3659, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3659
  %72 = load i64, ptr %71, align 8, !dbg !3659
  %73 = icmp eq i64 %72, 0, !dbg !3659
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3659, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %74(ptr nonnull @.str.1026), !dbg !3659
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %75(ptr nonnull @.str.1027), !dbg !3659
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3659
  %77 = load i32, ptr %76, align 4, !dbg !3659
  %78 = icmp eq i32 %77, 2, !dbg !3659
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3659, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %79(ptr nonnull @.str.1028), !dbg !3659
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3659
  %81 = load i32, ptr %80, align 4, !dbg !3659
  %82 = icmp eq i32 %81, 4, !dbg !3659
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3659, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %83(ptr nonnull @.str.1029), !dbg !3659
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3659
  %85 = load i16, ptr %84, align 2, !dbg !3659
  %86 = icmp eq i16 %85, 1, !dbg !3659
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3659
  %88 = load i8, ptr %87, align 1, !dbg !3659
  %89 = icmp eq i8 %88, 32, !dbg !3659
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3659
  %91 = load i8, ptr %90, align 1, !dbg !3659
  %92 = icmp eq i8 %91, 0, !dbg !3659
  %93 = and i1 %89, %92, !dbg !3659
  %94 = and i1 %86, %93, !dbg !3659
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3659, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %95(ptr nonnull @.str.1030), !dbg !3659
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, align 8, !dbg !3659, !tbaa !3710
  %97 = and i64 %96, 4294967295, !dbg !3659
  %98 = icmp eq i64 %97, 1, !dbg !3659
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3659, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %99(ptr nonnull @.str.1031), !dbg !3659
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !3659
  %101 = load i64, ptr %100, align 8, !dbg !3659, !tbaa !3720
  %102 = and i64 %101, 4294967295, !dbg !3659
  %103 = icmp eq i64 %102, 2048, !dbg !3659
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3659, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %104(ptr nonnull @.str.1032), !dbg !3659
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !3659
  %106 = load i64, ptr %105, align 8, !dbg !3659, !tbaa !3722
  %107 = and i64 %106, 4294967295, !dbg !3659
  %108 = icmp eq i64 %107, 1, !dbg !3659
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3659, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %109(ptr nonnull @.str.1033), !dbg !3659
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !3659
  %111 = load i64, ptr %110, align 8, !dbg !3659, !tbaa !3725
  %112 = and i64 %111, 4294967295, !dbg !3659
  %113 = icmp eq i64 %112, 1, !dbg !3659
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3659, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %114(ptr nonnull @.str.1034), !dbg !3659
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides, null, !dbg !3659
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3659, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !3659
  %116 = load i64, ptr %115, align 8, !dbg !3659, !tbaa !3727
  %117 = and i64 %116, 4294967295, !dbg !3659
  %118 = icmp eq i64 %117, 1, !dbg !3659
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3659, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3659
  %120 = load i64, ptr %119, align 8, !dbg !3659
  %121 = icmp eq i64 %120, 0, !dbg !3659
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3659, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %122(ptr nonnull @.str.1035), !dbg !3659
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %123(ptr nonnull @.str.1036), !dbg !3659
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3659
  %125 = load i32, ptr %124, align 4, !dbg !3659
  %126 = icmp eq i32 %125, 2, !dbg !3659
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3659, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %127(ptr nonnull @.str.1037), !dbg !3659
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3659
  %129 = load i32, ptr %128, align 4, !dbg !3659
  %130 = icmp eq i32 %dev_id, %129, !dbg !3659
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3659, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %131(ptr nonnull @.str.1038), !dbg !3659
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3659
  %133 = load i32, ptr %132, align 4, !dbg !3659
  %134 = icmp eq i32 %133, 4, !dbg !3659
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3659, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %135(ptr nonnull @.str.1039), !dbg !3659
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3659
  %137 = load i16, ptr %136, align 2, !dbg !3659
  %138 = icmp eq i16 %137, 1, !dbg !3659
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3659
  %140 = load i8, ptr %139, align 1, !dbg !3659
  %141 = icmp eq i8 %140, 32, !dbg !3659
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3659
  %143 = load i8, ptr %142, align 1, !dbg !3659
  %144 = icmp eq i8 %143, 0, !dbg !3659
  %145 = and i1 %141, %144, !dbg !3659
  %146 = and i1 %138, %145, !dbg !3659
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3659, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %147(ptr nonnull @.str.1040), !dbg !3659
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape, align 8, !dbg !3659, !tbaa !3737
  %149 = and i64 %148, 4294967295, !dbg !3659
  %150 = icmp eq i64 %149, 1, !dbg !3659
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3659, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %151(ptr nonnull @.str.1041), !dbg !3659
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape, i64 1, !dbg !3659
  %153 = load i64, ptr %152, align 8, !dbg !3659, !tbaa !3747
  %154 = and i64 %153, 4294967295, !dbg !3659
  %155 = icmp eq i64 %154, 2048, !dbg !3659
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3659, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %156(ptr nonnull @.str.1042), !dbg !3659
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape, i64 2, !dbg !3659
  %158 = load i64, ptr %157, align 8, !dbg !3659, !tbaa !3749
  %159 = and i64 %158, 4294967295, !dbg !3659
  %160 = icmp eq i64 %159, 1, !dbg !3659
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3659, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %161(ptr nonnull @.str.1043), !dbg !3659
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.shape, i64 3, !dbg !3659
  %163 = load i64, ptr %162, align 8, !dbg !3659, !tbaa !3752
  %164 = and i64 %163, 4294967295, !dbg !3659
  %165 = icmp eq i64 %164, 1, !dbg !3659
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3659, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %166(ptr nonnull @.str.1044), !dbg !3659
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.strides, null, !dbg !3659
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3659, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.strides, i64 1, !dbg !3659
  %168 = load i64, ptr %167, align 8, !dbg !3659, !tbaa !3754
  %169 = and i64 %168, 4294967295, !dbg !3659
  %170 = icmp eq i64 %169, 1, !dbg !3659
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3659, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3659
  %172 = load i64, ptr %171, align 8, !dbg !3659
  %173 = icmp eq i64 %172, 0, !dbg !3659
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3659, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %174(ptr nonnull @.str.1045), !dbg !3659
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %175(ptr nonnull @.str.1046), !dbg !3659
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3659
  %177 = load i32, ptr %176, align 4, !dbg !3659
  %178 = icmp eq i32 %177, 2, !dbg !3659
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3659, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %179(ptr nonnull @.str.1047), !dbg !3659
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3659
  %181 = load i32, ptr %180, align 4, !dbg !3659
  %182 = icmp eq i32 %dev_id, %181, !dbg !3659
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3659, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %183(ptr nonnull @.str.1048), !dbg !3659
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3659
  %185 = load i32, ptr %184, align 4, !dbg !3659
  %186 = icmp eq i32 %185, 4, !dbg !3659
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3659, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %187(ptr nonnull @.str.1049), !dbg !3659
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3659
  %189 = load i16, ptr %188, align 2, !dbg !3659
  %190 = icmp eq i16 %189, 1, !dbg !3659
  %191 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3659
  %192 = load i8, ptr %191, align 1, !dbg !3659
  %193 = icmp eq i8 %192, 8, !dbg !3659
  %194 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3659
  %195 = load i8, ptr %194, align 1, !dbg !3659
  %196 = icmp eq i8 %195, 0, !dbg !3659
  %197 = and i1 %193, %196, !dbg !3659
  %198 = and i1 %190, %197, !dbg !3659
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3659, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %199(ptr nonnull @.str.1050), !dbg !3659
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !3659, !tbaa !3764
  %201 = and i64 %200, 4294967295, !dbg !3659
  %202 = icmp eq i64 %201, 1, !dbg !3659
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3659, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %203(ptr nonnull @.str.1051), !dbg !3659
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !3659
  %205 = load i64, ptr %204, align 8, !dbg !3659, !tbaa !3774
  %206 = and i64 %205, 4294967295, !dbg !3659
  %207 = icmp eq i64 %206, 2048, !dbg !3659
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3659, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %208(ptr nonnull @.str.1052), !dbg !3659
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !3659
  %210 = load i64, ptr %209, align 8, !dbg !3659, !tbaa !3776
  %211 = and i64 %210, 4294967295, !dbg !3659
  %212 = icmp eq i64 %211, 7, !dbg !3659
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3659, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %213(ptr nonnull @.str.1053), !dbg !3659
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !3659
  %215 = load i64, ptr %214, align 8, !dbg !3659, !tbaa !3779
  %216 = and i64 %215, 4294967295, !dbg !3659
  %217 = icmp eq i64 %216, 7, !dbg !3659
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3659, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %218(ptr nonnull @.str.1054), !dbg !3659
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, null, !dbg !3659
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3659, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !3659
  %220 = load i64, ptr %219, align 8, !dbg !3659, !tbaa !3781
  %221 = and i64 %220, 4294967295, !dbg !3659
  %222 = icmp eq i64 %221, 49, !dbg !3659
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !3659
  %224 = load i64, ptr %223, align 8, !dbg !3659, !tbaa !3791
  %225 = and i64 %224, 4294967295, !dbg !3659
  %226 = icmp eq i64 %225, 7, !dbg !3659
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !3659
  %228 = load i64, ptr %227, align 8, !dbg !3659, !tbaa !3794
  %229 = and i64 %228, 4294967295, !dbg !3659
  %230 = icmp eq i64 %229, 1, !dbg !3659
  %231 = and i1 %226, %230, !dbg !3659
  %232 = and i1 %222, %231, !dbg !3659
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3659, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3659
  %234 = load i64, ptr %233, align 8, !dbg !3659
  %235 = icmp eq i64 %234, 0, !dbg !3659
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3659, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %236(ptr nonnull @.str.1055), !dbg !3659
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %237(ptr nonnull @.str.1056), !dbg !3659
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3659
  %239 = load i32, ptr %238, align 4, !dbg !3659
  %240 = icmp eq i32 %239, 2, !dbg !3659
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3659, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %241(ptr nonnull @.str.1057), !dbg !3659
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3659
  %243 = load i32, ptr %242, align 4, !dbg !3659
  %244 = icmp eq i32 %dev_id, %243, !dbg !3659
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3659, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3659, !tbaa !19
  tail call void %245(ptr nonnull @.str.1058), !dbg !3659
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3659
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3659, !tbaa !3796
  %246 = sext i32 %dev_id to i64, !dbg !3659
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3659
  store i64 %246, ptr %247, align 8, !dbg !3659
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3659
  store i32 0, ptr %248, align 4, !dbg !3659, !tbaa !3807
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3659
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3659
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3659, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3659
  %.not120 = icmp eq ptr %252, null, !dbg !3659
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3659, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3659, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3659, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3659
  %256 = icmp eq i32 %255, 0, !dbg !3659
  br i1 %256, label %call_end, label %common.ret, !dbg !3659, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3659
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3659
  %259 = icmp eq i32 %258, 0, !dbg !3659
  br i1 %259, label %call_end106, label %common.ret, !dbg !3659, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3659
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3659
  br label %handle_init_end, !dbg !3659

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_compute_(ptr nonnull %stack_value115, ptr %T_cast107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3659
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_multiply_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3809 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3811, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3812, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3813, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3814, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3815, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3816, metadata !DIExpression()), !dbg !3817
  %0 = alloca ptr, align 8, !dbg !3817
  %stack_value115 = alloca [7 x %0], align 8, !dbg !3817
  %stack_tcode116 = alloca [7 x i32], align 4, !dbg !3817
  %1 = icmp eq i32 %num_args, 4, !dbg !3817
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3817, !prof !18

common.ret:                                       ; preds = %call_end106, %handle_init_end, %handle_init, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ %255, %handle_init ], [ %258, %handle_init_end ], [ %261, %call_end106 ]
  ret i32 %common.ret.op, !dbg !3817

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %2(ptr nonnull @.str.1060), !dbg !3817
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3817, !tbaa !3818
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3817
  %p1.code = load i32, ptr %3, align 4, !dbg !3817, !tbaa !3829
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3817
  %p2.code = load i32, ptr %4, align 4, !dbg !3817, !tbaa !3831
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3817
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3817, !tbaa !3834
  %p0 = load ptr, ptr %args, align 8, !dbg !3817
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3817
  %p1 = load ptr, ptr %6, align 8, !dbg !3817
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3817
  %p2 = load ptr, ptr %7, align 8, !dbg !3817
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3817
  %T_relu = load ptr, ptr %8, align 8, !dbg !3817
  %p0108 = load ptr, ptr %p0, align 8, !dbg !3817
  call void @llvm.assume(i1 true) [ "align"(ptr %p0108, i64 64) ], !dbg !3817
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p0.shape = load ptr, ptr %9, align 8, !dbg !3817
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p0.strides = load ptr, ptr %10, align 8, !dbg !3817
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3817
  %dev_id = load i32, ptr %11, align 4, !dbg !3817
  %p1109 = load ptr, ptr %p1, align 8, !dbg !3817
  call void @llvm.assume(i1 true) [ "align"(ptr %p1109, i64 64) ], !dbg !3817
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p1.shape = load ptr, ptr %12, align 8, !dbg !3817
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p1.strides = load ptr, ptr %13, align 8, !dbg !3817
  %p2110 = load ptr, ptr %p2, align 8, !dbg !3817
  call void @llvm.assume(i1 true) [ "align"(ptr %p2110, i64 64) ], !dbg !3817
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p2.shape = load ptr, ptr %14, align 8, !dbg !3817
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.p2.strides = load ptr, ptr %15, align 8, !dbg !3817
  %T_relu107 = load ptr, ptr %T_relu, align 8, !dbg !3817
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu107, i64 64) ], !dbg !3817
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape = load ptr, ptr %16, align 8, !dbg !3817
  %17 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3817
  %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides = load ptr, ptr %17, align 8, !dbg !3817
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3817

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %18(ptr nonnull @.str.1061), !dbg !3817
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3817

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %19(ptr nonnull @.str.1062), !dbg !3817
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3817

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %20(ptr nonnull @.str.1063), !dbg !3817
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3817

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %21(ptr nonnull @.str.1064), !dbg !3817
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3817
  %23 = load i32, ptr %22, align 4, !dbg !3817
  %24 = icmp eq i32 %23, 4, !dbg !3817
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !3817, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %25(ptr nonnull @.str.1065), !dbg !3817
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3817
  %27 = load i16, ptr %26, align 2, !dbg !3817
  %28 = icmp eq i16 %27, 1, !dbg !3817
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3817
  %30 = load i8, ptr %29, align 1, !dbg !3817
  %31 = icmp eq i8 %30, 32, !dbg !3817
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3817
  %33 = load i8, ptr %32, align 1, !dbg !3817
  %34 = icmp eq i8 %33, 2, !dbg !3817
  %35 = and i1 %31, %34, !dbg !3817
  %36 = and i1 %28, %35, !dbg !3817
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !3817, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %37(ptr nonnull @.str.1066), !dbg !3817
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, align 8, !dbg !3817, !tbaa !3836
  %39 = and i64 %38, 4294967295, !dbg !3817
  %40 = icmp eq i64 %39, 1, !dbg !3817
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !3817, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %41(ptr nonnull @.str.1067), !dbg !3817
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 1, !dbg !3817
  %43 = load i64, ptr %42, align 8, !dbg !3817, !tbaa !3846
  %44 = and i64 %43, 4294967295, !dbg !3817
  %45 = icmp eq i64 %44, 64, !dbg !3817
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !3817, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %46(ptr nonnull @.str.1068), !dbg !3817
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 2, !dbg !3817
  %48 = load i64, ptr %47, align 8, !dbg !3817, !tbaa !3848
  %49 = and i64 %48, 4294967295, !dbg !3817
  %50 = icmp eq i64 %49, 112, !dbg !3817
  br i1 %50, label %assert_end24, label %assert_fail23, !dbg !3817, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %51(ptr nonnull @.str.1069), !dbg !3817
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 3, !dbg !3817
  %53 = load i64, ptr %52, align 8, !dbg !3817, !tbaa !3851
  %54 = and i64 %53, 4294967295, !dbg !3817
  %55 = icmp eq i64 %54, 112, !dbg !3817
  br i1 %55, label %assert_end26, label %assert_fail25, !dbg !3817, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %56(ptr nonnull @.str.1070), !dbg !3817
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %.not = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, null, !dbg !3817
  br i1 %.not, label %if_end, label %if_then, !dbg !3817, !prof !55

if_then:                                          ; preds = %assert_end26
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 1, !dbg !3817
  %58 = load i64, ptr %57, align 8, !dbg !3817, !tbaa !3853
  %59 = and i64 %58, 4294967295, !dbg !3817
  %60 = icmp eq i64 %59, 12544, !dbg !3817
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 2, !dbg !3817
  %62 = load i64, ptr %61, align 8, !dbg !3817, !tbaa !3863
  %63 = and i64 %62, 4294967295, !dbg !3817
  %64 = icmp eq i64 %63, 112, !dbg !3817
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 3, !dbg !3817
  %66 = load i64, ptr %65, align 8, !dbg !3817, !tbaa !3866
  %67 = and i64 %66, 4294967295, !dbg !3817
  %68 = icmp eq i64 %67, 1, !dbg !3817
  %69 = and i1 %64, %68, !dbg !3817
  %70 = and i1 %60, %69, !dbg !3817
  br i1 %70, label %if_end, label %assert_fail27, !dbg !3817, !prof !18

if_end:                                           ; preds = %if_then, %assert_end26
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3817
  %72 = load i64, ptr %71, align 8, !dbg !3817
  %73 = icmp eq i64 %72, 0, !dbg !3817
  br i1 %73, label %assert_end30, label %assert_fail29, !dbg !3817, !prof !18

assert_fail27:                                    ; preds = %if_then
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %74(ptr nonnull @.str.1071), !dbg !3817
  br label %common.ret

assert_fail29:                                    ; preds = %if_end
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %75(ptr nonnull @.str.1072), !dbg !3817
  br label %common.ret

assert_end30:                                     ; preds = %if_end
  %76 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3817
  %77 = load i32, ptr %76, align 4, !dbg !3817
  %78 = icmp eq i32 %77, 2, !dbg !3817
  br i1 %78, label %assert_end32, label %assert_fail31, !dbg !3817, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %79(ptr nonnull @.str.1073), !dbg !3817
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %80 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3817
  %81 = load i32, ptr %80, align 4, !dbg !3817
  %82 = icmp eq i32 %81, 4, !dbg !3817
  br i1 %82, label %assert_end36, label %assert_fail33, !dbg !3817, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %83(ptr nonnull @.str.1074), !dbg !3817
  br label %common.ret

assert_end36:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3817
  %85 = load i16, ptr %84, align 2, !dbg !3817
  %86 = icmp eq i16 %85, 1, !dbg !3817
  %87 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3817
  %88 = load i8, ptr %87, align 1, !dbg !3817
  %89 = icmp eq i8 %88, 32, !dbg !3817
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3817
  %91 = load i8, ptr %90, align 1, !dbg !3817
  %92 = icmp eq i8 %91, 2, !dbg !3817
  %93 = and i1 %89, %92, !dbg !3817
  %94 = and i1 %86, %93, !dbg !3817
  br i1 %94, label %assert_end38, label %assert_fail37, !dbg !3817, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %95(ptr nonnull @.str.1075), !dbg !3817
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %96 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, align 8, !dbg !3817, !tbaa !3868
  %97 = and i64 %96, 4294967295, !dbg !3817
  %98 = icmp eq i64 %97, 1, !dbg !3817
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3817, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %99(ptr nonnull @.str.1076), !dbg !3817
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 1, !dbg !3817
  %101 = load i64, ptr %100, align 8, !dbg !3817, !tbaa !3878
  %102 = and i64 %101, 4294967295, !dbg !3817
  %103 = icmp eq i64 %102, 64, !dbg !3817
  br i1 %103, label %assert_end42, label %assert_fail41, !dbg !3817, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %104(ptr nonnull @.str.1077), !dbg !3817
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 2, !dbg !3817
  %106 = load i64, ptr %105, align 8, !dbg !3817, !tbaa !3880
  %107 = and i64 %106, 4294967295, !dbg !3817
  %108 = icmp eq i64 %107, 1, !dbg !3817
  br i1 %108, label %assert_end44, label %assert_fail43, !dbg !3817, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %109(ptr nonnull @.str.1078), !dbg !3817
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 3, !dbg !3817
  %111 = load i64, ptr %110, align 8, !dbg !3817, !tbaa !3883
  %112 = and i64 %111, 4294967295, !dbg !3817
  %113 = icmp eq i64 %112, 1, !dbg !3817
  br i1 %113, label %assert_end46, label %assert_fail45, !dbg !3817, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %114(ptr nonnull @.str.1079), !dbg !3817
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %.not117 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.strides, null, !dbg !3817
  br i1 %.not117, label %if_end48, label %if_then47, !dbg !3817, !prof !55

if_then47:                                        ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.strides, i64 1, !dbg !3817
  %116 = load i64, ptr %115, align 8, !dbg !3817, !tbaa !3885
  %117 = and i64 %116, 4294967295, !dbg !3817
  %118 = icmp eq i64 %117, 1, !dbg !3817
  br i1 %118, label %if_end48, label %assert_fail49, !dbg !3817, !prof !18

if_end48:                                         ; preds = %if_then47, %assert_end46
  %119 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3817
  %120 = load i64, ptr %119, align 8, !dbg !3817
  %121 = icmp eq i64 %120, 0, !dbg !3817
  br i1 %121, label %assert_end52, label %assert_fail51, !dbg !3817, !prof !18

assert_fail49:                                    ; preds = %if_then47
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %122(ptr nonnull @.str.1080), !dbg !3817
  br label %common.ret

assert_fail51:                                    ; preds = %if_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %123(ptr nonnull @.str.1081), !dbg !3817
  br label %common.ret

assert_end52:                                     ; preds = %if_end48
  %124 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3817
  %125 = load i32, ptr %124, align 4, !dbg !3817
  %126 = icmp eq i32 %125, 2, !dbg !3817
  br i1 %126, label %assert_end54, label %assert_fail53, !dbg !3817, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %127(ptr nonnull @.str.1082), !dbg !3817
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3817
  %129 = load i32, ptr %128, align 4, !dbg !3817
  %130 = icmp eq i32 %dev_id, %129, !dbg !3817
  br i1 %130, label %assert_end56, label %assert_fail55, !dbg !3817, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %131(ptr nonnull @.str.1083), !dbg !3817
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %132 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3817
  %133 = load i32, ptr %132, align 4, !dbg !3817
  %134 = icmp eq i32 %133, 4, !dbg !3817
  br i1 %134, label %assert_end60, label %assert_fail57, !dbg !3817, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %135(ptr nonnull @.str.1084), !dbg !3817
  br label %common.ret

assert_end60:                                     ; preds = %assert_end56
  %136 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3817
  %137 = load i16, ptr %136, align 2, !dbg !3817
  %138 = icmp eq i16 %137, 1, !dbg !3817
  %139 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3817
  %140 = load i8, ptr %139, align 1, !dbg !3817
  %141 = icmp eq i8 %140, 32, !dbg !3817
  %142 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3817
  %143 = load i8, ptr %142, align 1, !dbg !3817
  %144 = icmp eq i8 %143, 2, !dbg !3817
  %145 = and i1 %141, %144, !dbg !3817
  %146 = and i1 %138, %145, !dbg !3817
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !3817, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %147(ptr nonnull @.str.1085), !dbg !3817
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %148 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, align 8, !dbg !3817, !tbaa !3895
  %149 = and i64 %148, 4294967295, !dbg !3817
  %150 = icmp eq i64 %149, 1, !dbg !3817
  br i1 %150, label %assert_end64, label %assert_fail63, !dbg !3817, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %151(ptr nonnull @.str.1086), !dbg !3817
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %152 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 1, !dbg !3817
  %153 = load i64, ptr %152, align 8, !dbg !3817, !tbaa !3905
  %154 = and i64 %153, 4294967295, !dbg !3817
  %155 = icmp eq i64 %154, 64, !dbg !3817
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !3817, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %156(ptr nonnull @.str.1087), !dbg !3817
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 2, !dbg !3817
  %158 = load i64, ptr %157, align 8, !dbg !3817, !tbaa !3907
  %159 = and i64 %158, 4294967295, !dbg !3817
  %160 = icmp eq i64 %159, 1, !dbg !3817
  br i1 %160, label %assert_end68, label %assert_fail67, !dbg !3817, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %161(ptr nonnull @.str.1088), !dbg !3817
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %162 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 3, !dbg !3817
  %163 = load i64, ptr %162, align 8, !dbg !3817, !tbaa !3910
  %164 = and i64 %163, 4294967295, !dbg !3817
  %165 = icmp eq i64 %164, 1, !dbg !3817
  br i1 %165, label %assert_end70, label %assert_fail69, !dbg !3817, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %166(ptr nonnull @.str.1089), !dbg !3817
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %.not118 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.strides, null, !dbg !3817
  br i1 %.not118, label %if_end72, label %if_then71, !dbg !3817, !prof !55

if_then71:                                        ; preds = %assert_end70
  %167 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.strides, i64 1, !dbg !3817
  %168 = load i64, ptr %167, align 8, !dbg !3817, !tbaa !3912
  %169 = and i64 %168, 4294967295, !dbg !3817
  %170 = icmp eq i64 %169, 1, !dbg !3817
  br i1 %170, label %if_end72, label %assert_fail73, !dbg !3817, !prof !18

if_end72:                                         ; preds = %if_then71, %assert_end70
  %171 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3817
  %172 = load i64, ptr %171, align 8, !dbg !3817
  %173 = icmp eq i64 %172, 0, !dbg !3817
  br i1 %173, label %assert_end76, label %assert_fail75, !dbg !3817, !prof !18

assert_fail73:                                    ; preds = %if_then71
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %174(ptr nonnull @.str.1090), !dbg !3817
  br label %common.ret

assert_fail75:                                    ; preds = %if_end72
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %175(ptr nonnull @.str.1091), !dbg !3817
  br label %common.ret

assert_end76:                                     ; preds = %if_end72
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3817
  %177 = load i32, ptr %176, align 4, !dbg !3817
  %178 = icmp eq i32 %177, 2, !dbg !3817
  br i1 %178, label %assert_end78, label %assert_fail77, !dbg !3817, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %179(ptr nonnull @.str.1092), !dbg !3817
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3817
  %181 = load i32, ptr %180, align 4, !dbg !3817
  %182 = icmp eq i32 %dev_id, %181, !dbg !3817
  br i1 %182, label %assert_end80, label %assert_fail79, !dbg !3817, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %183(ptr nonnull @.str.1093), !dbg !3817
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %184 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3817
  %185 = load i32, ptr %184, align 4, !dbg !3817
  %186 = icmp eq i32 %185, 4, !dbg !3817
  br i1 %186, label %assert_end84, label %assert_fail81, !dbg !3817, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %187 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %187(ptr nonnull @.str.1094), !dbg !3817
  br label %common.ret

assert_end84:                                     ; preds = %assert_end80
  %188 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3817
  %189 = load i16, ptr %188, align 2, !dbg !3817
  %190 = icmp eq i16 %189, 1, !dbg !3817
  %191 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3817
  %192 = load i8, ptr %191, align 1, !dbg !3817
  %193 = icmp eq i8 %192, 32, !dbg !3817
  %194 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3817
  %195 = load i8, ptr %194, align 1, !dbg !3817
  %196 = icmp eq i8 %195, 2, !dbg !3817
  %197 = and i1 %193, %196, !dbg !3817
  %198 = and i1 %190, %197, !dbg !3817
  br i1 %198, label %assert_end86, label %assert_fail85, !dbg !3817, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %199(ptr nonnull @.str.1095), !dbg !3817
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %200 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, align 8, !dbg !3817, !tbaa !3922
  %201 = and i64 %200, 4294967295, !dbg !3817
  %202 = icmp eq i64 %201, 1, !dbg !3817
  br i1 %202, label %assert_end88, label %assert_fail87, !dbg !3817, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %203(ptr nonnull @.str.1096), !dbg !3817
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 1, !dbg !3817
  %205 = load i64, ptr %204, align 8, !dbg !3817, !tbaa !3932
  %206 = and i64 %205, 4294967295, !dbg !3817
  %207 = icmp eq i64 %206, 64, !dbg !3817
  br i1 %207, label %assert_end90, label %assert_fail89, !dbg !3817, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %208(ptr nonnull @.str.1097), !dbg !3817
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 2, !dbg !3817
  %210 = load i64, ptr %209, align 8, !dbg !3817, !tbaa !3934
  %211 = and i64 %210, 4294967295, !dbg !3817
  %212 = icmp eq i64 %211, 112, !dbg !3817
  br i1 %212, label %assert_end92, label %assert_fail91, !dbg !3817, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %213(ptr nonnull @.str.1098), !dbg !3817
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 3, !dbg !3817
  %215 = load i64, ptr %214, align 8, !dbg !3817, !tbaa !3937
  %216 = and i64 %215, 4294967295, !dbg !3817
  %217 = icmp eq i64 %216, 112, !dbg !3817
  br i1 %217, label %assert_end94, label %assert_fail93, !dbg !3817, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %218(ptr nonnull @.str.1099), !dbg !3817
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not119 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, null, !dbg !3817
  br i1 %.not119, label %if_end96, label %if_then95, !dbg !3817, !prof !55

if_then95:                                        ; preds = %assert_end94
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 1, !dbg !3817
  %220 = load i64, ptr %219, align 8, !dbg !3817, !tbaa !3939
  %221 = and i64 %220, 4294967295, !dbg !3817
  %222 = icmp eq i64 %221, 12544, !dbg !3817
  %223 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 2, !dbg !3817
  %224 = load i64, ptr %223, align 8, !dbg !3817, !tbaa !3949
  %225 = and i64 %224, 4294967295, !dbg !3817
  %226 = icmp eq i64 %225, 112, !dbg !3817
  %227 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 3, !dbg !3817
  %228 = load i64, ptr %227, align 8, !dbg !3817, !tbaa !3952
  %229 = and i64 %228, 4294967295, !dbg !3817
  %230 = icmp eq i64 %229, 1, !dbg !3817
  %231 = and i1 %226, %230, !dbg !3817
  %232 = and i1 %222, %231, !dbg !3817
  br i1 %232, label %if_end96, label %assert_fail97, !dbg !3817, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %233 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3817
  %234 = load i64, ptr %233, align 8, !dbg !3817
  %235 = icmp eq i64 %234, 0, !dbg !3817
  br i1 %235, label %assert_end100, label %assert_fail99, !dbg !3817, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %236(ptr nonnull @.str.1100), !dbg !3817
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %237(ptr nonnull @.str.1101), !dbg !3817
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %238 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3817
  %239 = load i32, ptr %238, align 4, !dbg !3817
  %240 = icmp eq i32 %239, 2, !dbg !3817
  br i1 %240, label %assert_end102, label %assert_fail101, !dbg !3817, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %241(ptr nonnull @.str.1102), !dbg !3817
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %242 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3817
  %243 = load i32, ptr %242, align 4, !dbg !3817
  %244 = icmp eq i32 %dev_id, %243, !dbg !3817
  br i1 %244, label %assert_end104, label %assert_fail103, !dbg !3817, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %245 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3817, !tbaa !19
  tail call void %245(ptr nonnull @.str.1103), !dbg !3817
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  store i64 2, ptr %stack_value115, align 8, !dbg !3817
  store i32 0, ptr %stack_tcode116, align 4, !dbg !3817, !tbaa !3954
  %246 = sext i32 %dev_id to i64, !dbg !3817
  %247 = getelementptr inbounds i64, ptr %stack_value115, i64 1, !dbg !3817
  store i64 %246, ptr %247, align 8, !dbg !3817
  %248 = getelementptr inbounds i32, ptr %stack_tcode116, i64 1, !dbg !3817
  store i32 0, ptr %248, align 4, !dbg !3817, !tbaa !3965
  %249 = getelementptr inbounds %0, ptr %stack_value115, i64 2, !dbg !3817
  %250 = getelementptr inbounds i32, ptr %stack_tcode116, i64 2, !dbg !3817
  %251 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3817, !tbaa !19
  %252 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3817
  %.not120 = icmp eq ptr %252, null, !dbg !3817
  br i1 %.not120, label %handle_init, label %handle_init_end, !dbg !3817, !prof !55

handle_init:                                      ; preds = %assert_end104
  %253 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3817, !tbaa !19
  %254 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3817, !tbaa !19
  %255 = call i32 %254(ptr %253, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3817
  %256 = icmp eq i32 %255, 0, !dbg !3817
  br i1 %256, label %call_end, label %common.ret, !dbg !3817, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end104
  %257 = phi ptr [ %252, %assert_end104 ], [ %260, %call_end ], !dbg !3817
  %258 = call i32 %251(ptr %257, ptr nonnull %stack_value115, ptr nonnull %stack_tcode116, i32 2, ptr nonnull %249, ptr nonnull %250), !dbg !3817
  %259 = icmp eq i32 %258, 0, !dbg !3817
  br i1 %259, label %call_end106, label %common.ret, !dbg !3817, !prof !18

call_end:                                         ; preds = %handle_init
  %260 = load ptr, ptr %0, align 8, !dbg !3817
  store ptr %260, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3817
  br label %handle_init_end, !dbg !3817

call_end106:                                      ; preds = %handle_init_end
  %261 = call fastcc i32 @tvmgen_default_fused_multiply_add_nn_relu_compute_(ptr nonnull %stack_value115, ptr %T_relu107, ptr nonnull %stack_tcode116, ptr %p0108, ptr %p1109, ptr %p2110), !dbg !3817
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_multiply_round_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3967 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3969, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3970, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3971, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3972, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3973, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3974, metadata !DIExpression()), !dbg !3975
  %0 = alloca ptr, align 8, !dbg !3975
  %stack_value59 = alloca [5 x %0], align 8, !dbg !3975
  %stack_tcode60 = alloca [5 x i32], align 4, !dbg !3975
  %1 = icmp eq i32 %num_args, 2, !dbg !3975
  br i1 %1, label %assert_end, label %assert_fail, !dbg !3975, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %141, %handle_init ], [ %144, %handle_init_end ], [ %147, %call_end52 ]
  ret i32 %common.ret.op, !dbg !3975

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %2(ptr nonnull @.str.1105), !dbg !3975
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3975, !tbaa !3976
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3975
  %T_cast.code = load i32, ptr %3, align 4, !dbg !3975, !tbaa !3987
  %p0 = load ptr, ptr %args, align 8, !dbg !3975
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3975
  %T_cast = load ptr, ptr %4, align 8, !dbg !3975
  %p054 = load ptr, ptr %p0, align 8, !dbg !3975
  call void @llvm.assume(i1 true) [ "align"(ptr %p054, i64 64) ], !dbg !3975
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3975
  %tvmgen_default_fused_multiply_round_clip_cast.p0.shape = load ptr, ptr %5, align 8, !dbg !3975
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3975
  %tvmgen_default_fused_multiply_round_clip_cast.p0.strides = load ptr, ptr %6, align 8, !dbg !3975
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3975
  %dev_id = load i32, ptr %7, align 4, !dbg !3975
  %T_cast53 = load ptr, ptr %T_cast, align 8, !dbg !3975
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast53, i64 64) ], !dbg !3975
  %8 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3975
  %tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape = load ptr, ptr %8, align 8, !dbg !3975
  %9 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3975
  %tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides = load ptr, ptr %9, align 8, !dbg !3975
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !3975

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %10(ptr nonnull @.str.1106), !dbg !3975
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_cast.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3975

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %11(ptr nonnull @.str.1107), !dbg !3975
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3975
  %13 = load i32, ptr %12, align 4, !dbg !3975
  %14 = icmp eq i32 %13, 4, !dbg !3975
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !3975, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %15(ptr nonnull @.str.1108), !dbg !3975
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3975
  %17 = load i16, ptr %16, align 2, !dbg !3975
  %18 = icmp eq i16 %17, 1, !dbg !3975
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3975
  %20 = load i8, ptr %19, align 1, !dbg !3975
  %21 = icmp eq i8 %20, 32, !dbg !3975
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3975
  %23 = load i8, ptr %22, align 1, !dbg !3975
  %24 = icmp eq i8 %23, 2, !dbg !3975
  %25 = and i1 %21, %24, !dbg !3975
  %26 = and i1 %18, %25, !dbg !3975
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !3975, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %27(ptr nonnull @.str.1109), !dbg !3975
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.shape, align 8, !dbg !3975, !tbaa !3989
  %29 = and i64 %28, 4294967295, !dbg !3975
  %30 = icmp eq i64 %29, 1, !dbg !3975
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !3975, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %31(ptr nonnull @.str.1110), !dbg !3975
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.shape, i64 1, !dbg !3975
  %33 = load i64, ptr %32, align 8, !dbg !3975, !tbaa !3999
  %34 = and i64 %33, 4294967295, !dbg !3975
  %35 = icmp eq i64 %34, 64, !dbg !3975
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !3975, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %36(ptr nonnull @.str.1111), !dbg !3975
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.shape, i64 2, !dbg !3975
  %38 = load i64, ptr %37, align 8, !dbg !3975, !tbaa !4001
  %39 = and i64 %38, 4294967295, !dbg !3975
  %40 = icmp eq i64 %39, 56, !dbg !3975
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !3975, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %41(ptr nonnull @.str.1112), !dbg !3975
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.shape, i64 3, !dbg !3975
  %43 = load i64, ptr %42, align 8, !dbg !3975, !tbaa !4004
  %44 = and i64 %43, 4294967295, !dbg !3975
  %45 = icmp eq i64 %44, 56, !dbg !3975
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !3975, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %46(ptr nonnull @.str.1113), !dbg !3975
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.strides, null, !dbg !3975
  br i1 %.not, label %if_end, label %if_then, !dbg !3975, !prof !55

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.strides, i64 1, !dbg !3975
  %48 = load i64, ptr %47, align 8, !dbg !3975, !tbaa !4006
  %49 = and i64 %48, 4294967295, !dbg !3975
  %50 = icmp eq i64 %49, 3136, !dbg !3975
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.strides, i64 2, !dbg !3975
  %52 = load i64, ptr %51, align 8, !dbg !3975, !tbaa !4016
  %53 = and i64 %52, 4294967295, !dbg !3975
  %54 = icmp eq i64 %53, 56, !dbg !3975
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.p0.strides, i64 3, !dbg !3975
  %56 = load i64, ptr %55, align 8, !dbg !3975, !tbaa !4019
  %57 = and i64 %56, 4294967295, !dbg !3975
  %58 = icmp eq i64 %57, 1, !dbg !3975
  %59 = and i1 %54, %58, !dbg !3975
  %60 = and i1 %50, %59, !dbg !3975
  br i1 %60, label %if_end, label %assert_fail21, !dbg !3975, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3975
  %62 = load i64, ptr %61, align 8, !dbg !3975
  %63 = icmp eq i64 %62, 0, !dbg !3975
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !3975, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %64(ptr nonnull @.str.1114), !dbg !3975
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %65(ptr nonnull @.str.1115), !dbg !3975
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3975
  %67 = load i32, ptr %66, align 4, !dbg !3975
  %68 = icmp eq i32 %67, 2, !dbg !3975
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !3975, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %69(ptr nonnull @.str.1116), !dbg !3975
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3975
  %71 = load i32, ptr %70, align 4, !dbg !3975
  %72 = icmp eq i32 %71, 4, !dbg !3975
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !3975, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %73(ptr nonnull @.str.1117), !dbg !3975
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3975
  %75 = load i16, ptr %74, align 2, !dbg !3975
  %76 = icmp eq i16 %75, 1, !dbg !3975
  %77 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3975
  %78 = load i8, ptr %77, align 1, !dbg !3975
  %79 = icmp eq i8 %78, 8, !dbg !3975
  %80 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3975
  %81 = load i8, ptr %80, align 1, !dbg !3975
  %82 = icmp eq i8 %81, 0, !dbg !3975
  %83 = and i1 %79, %82, !dbg !3975
  %84 = and i1 %76, %83, !dbg !3975
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !3975, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %85(ptr nonnull @.str.1118), !dbg !3975
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape, align 8, !dbg !3975, !tbaa !4021
  %87 = and i64 %86, 4294967295, !dbg !3975
  %88 = icmp eq i64 %87, 1, !dbg !3975
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !3975, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %89(ptr nonnull @.str.1119), !dbg !3975
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape, i64 1, !dbg !3975
  %91 = load i64, ptr %90, align 8, !dbg !3975, !tbaa !4031
  %92 = and i64 %91, 4294967295, !dbg !3975
  %93 = icmp eq i64 %92, 64, !dbg !3975
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !3975, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %94(ptr nonnull @.str.1120), !dbg !3975
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape, i64 2, !dbg !3975
  %96 = load i64, ptr %95, align 8, !dbg !3975, !tbaa !4033
  %97 = and i64 %96, 4294967295, !dbg !3975
  %98 = icmp eq i64 %97, 56, !dbg !3975
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !3975, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %99(ptr nonnull @.str.1121), !dbg !3975
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.shape, i64 3, !dbg !3975
  %101 = load i64, ptr %100, align 8, !dbg !3975, !tbaa !4036
  %102 = and i64 %101, 4294967295, !dbg !3975
  %103 = icmp eq i64 %102, 56, !dbg !3975
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !3975, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %104(ptr nonnull @.str.1122), !dbg !3975
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides, null, !dbg !3975
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !3975, !prof !55

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides, i64 1, !dbg !3975
  %106 = load i64, ptr %105, align 8, !dbg !3975, !tbaa !4038
  %107 = and i64 %106, 4294967295, !dbg !3975
  %108 = icmp eq i64 %107, 3136, !dbg !3975
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides, i64 2, !dbg !3975
  %110 = load i64, ptr %109, align 8, !dbg !3975, !tbaa !4048
  %111 = and i64 %110, 4294967295, !dbg !3975
  %112 = icmp eq i64 %111, 56, !dbg !3975
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast.T_cast.strides, i64 3, !dbg !3975
  %114 = load i64, ptr %113, align 8, !dbg !3975, !tbaa !4051
  %115 = and i64 %114, 4294967295, !dbg !3975
  %116 = icmp eq i64 %115, 1, !dbg !3975
  %117 = and i1 %112, %116, !dbg !3975
  %118 = and i1 %108, %117, !dbg !3975
  br i1 %118, label %if_end42, label %assert_fail43, !dbg !3975, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %119 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3975
  %120 = load i64, ptr %119, align 8, !dbg !3975
  %121 = icmp eq i64 %120, 0, !dbg !3975
  br i1 %121, label %assert_end46, label %assert_fail45, !dbg !3975, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %122(ptr nonnull @.str.1123), !dbg !3975
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %123(ptr nonnull @.str.1124), !dbg !3975
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %124 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3975
  %125 = load i32, ptr %124, align 4, !dbg !3975
  %126 = icmp eq i32 %125, 2, !dbg !3975
  br i1 %126, label %assert_end48, label %assert_fail47, !dbg !3975, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %127(ptr nonnull @.str.1125), !dbg !3975
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %128 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3975
  %129 = load i32, ptr %128, align 4, !dbg !3975
  %130 = icmp eq i32 %dev_id, %129, !dbg !3975
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !3975, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3975, !tbaa !19
  tail call void %131(ptr nonnull @.str.1126), !dbg !3975
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !3975
  store i32 0, ptr %stack_tcode60, align 4, !dbg !3975, !tbaa !4053
  %132 = sext i32 %dev_id to i64, !dbg !3975
  %133 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !3975
  store i64 %132, ptr %133, align 8, !dbg !3975
  %134 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !3975
  store i32 0, ptr %134, align 4, !dbg !3975, !tbaa !4064
  %135 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !3975
  %136 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !3975
  %137 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !3975, !tbaa !19
  %138 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3975
  %.not62 = icmp eq ptr %138, null, !dbg !3975
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !3975, !prof !55

handle_init:                                      ; preds = %assert_end50
  %139 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !3975, !tbaa !19
  %140 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !3975, !tbaa !19
  %141 = call i32 %140(ptr %139, ptr nonnull @.str.33, ptr nonnull %0), !dbg !3975
  %142 = icmp eq i32 %141, 0, !dbg !3975
  br i1 %142, label %call_end, label %common.ret, !dbg !3975, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %143 = phi ptr [ %138, %assert_end50 ], [ %146, %call_end ], !dbg !3975
  %144 = call i32 %137(ptr %143, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %135, ptr nonnull %136), !dbg !3975
  %145 = icmp eq i32 %144, 0, !dbg !3975
  br i1 %145, label %call_end52, label %common.ret, !dbg !3975, !prof !18

call_end:                                         ; preds = %handle_init
  %146 = load ptr, ptr %0, align 8, !dbg !3975
  store ptr %146, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !3975
  br label %handle_init_end, !dbg !3975

call_end52:                                       ; preds = %handle_init_end
  %147 = call fastcc i32 @tvmgen_default_fused_multiply_round_clip_cast_compute_(ptr nonnull %stack_value59, ptr %T_cast53, ptr nonnull %stack_tcode60, ptr %p054), !dbg !3975
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4066 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4068, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4069, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4070, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4071, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4072, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4073, metadata !DIExpression()), !dbg !4074
  %0 = alloca ptr, align 8, !dbg !4074
  %stack_value59 = alloca [6 x %0], align 8, !dbg !4074
  %stack_tcode60 = alloca [6 x i32], align 4, !dbg !4074
  %1 = icmp eq i32 %num_args, 2, !dbg !4074
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4074, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %131, %handle_init ], [ %134, %handle_init_end ], [ %137, %call_end52 ]
  ret i32 %common.ret.op, !dbg !4074

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %2(ptr nonnull @.str.1128), !dbg !4074
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4074, !tbaa !4075
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4074
  %adaptive_pool_avg.code = load i32, ptr %3, align 4, !dbg !4074, !tbaa !4086
  %p0 = load ptr, ptr %args, align 8, !dbg !4074
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4074
  %adaptive_pool_avg = load ptr, ptr %4, align 8, !dbg !4074
  %p053 = load ptr, ptr %p0, align 8, !dbg !4074
  call void @llvm.assume(i1 true) [ "align"(ptr %p053, i64 64) ], !dbg !4074
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4074
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape = load ptr, ptr %5, align 8, !dbg !4074
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4074
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides = load ptr, ptr %6, align 8, !dbg !4074
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4074
  %dev_id = load i32, ptr %7, align 4, !dbg !4074
  %adaptive_pool_avg54 = load ptr, ptr %adaptive_pool_avg, align 8, !dbg !4074
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_avg54, i64 64) ], !dbg !4074
  %8 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 4, !dbg !4074
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape = load ptr, ptr %8, align 8, !dbg !4074
  %9 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 5, !dbg !4074
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides = load ptr, ptr %9, align 8, !dbg !4074
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !4074

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %10(ptr nonnull @.str.1129), !dbg !4074
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %adaptive_pool_avg.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4074

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %11(ptr nonnull @.str.1130), !dbg !4074
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4074
  %13 = load i32, ptr %12, align 4, !dbg !4074
  %14 = icmp eq i32 %13, 4, !dbg !4074
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !4074, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %15(ptr nonnull @.str.1131), !dbg !4074
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4074
  %17 = load i16, ptr %16, align 2, !dbg !4074
  %18 = icmp eq i16 %17, 1, !dbg !4074
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4074
  %20 = load i8, ptr %19, align 1, !dbg !4074
  %21 = icmp eq i8 %20, 32, !dbg !4074
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4074
  %23 = load i8, ptr %22, align 1, !dbg !4074
  %24 = icmp eq i8 %23, 2, !dbg !4074
  %25 = and i1 %21, %24, !dbg !4074
  %26 = and i1 %18, %25, !dbg !4074
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !4074, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %27(ptr nonnull @.str.1132), !dbg !4074
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, align 8, !dbg !4074, !tbaa !4088
  %29 = and i64 %28, 4294967295, !dbg !4074
  %30 = icmp eq i64 %29, 1, !dbg !4074
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !4074, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %31(ptr nonnull @.str.1133), !dbg !4074
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 1, !dbg !4074
  %33 = load i64, ptr %32, align 8, !dbg !4074, !tbaa !4098
  %34 = and i64 %33, 4294967295, !dbg !4074
  %35 = icmp eq i64 %34, 2048, !dbg !4074
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !4074, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %36(ptr nonnull @.str.1134), !dbg !4074
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 2, !dbg !4074
  %38 = load i64, ptr %37, align 8, !dbg !4074, !tbaa !4100
  %39 = and i64 %38, 4294967295, !dbg !4074
  %40 = icmp eq i64 %39, 7, !dbg !4074
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !4074, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %41(ptr nonnull @.str.1135), !dbg !4074
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 3, !dbg !4074
  %43 = load i64, ptr %42, align 8, !dbg !4074, !tbaa !4103
  %44 = and i64 %43, 4294967295, !dbg !4074
  %45 = icmp eq i64 %44, 7, !dbg !4074
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !4074, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %46(ptr nonnull @.str.1136), !dbg !4074
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, null, !dbg !4074
  br i1 %.not, label %if_end, label %if_then, !dbg !4074, !prof !55

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 1, !dbg !4074
  %48 = load i64, ptr %47, align 8, !dbg !4074, !tbaa !4105
  %49 = and i64 %48, 4294967295, !dbg !4074
  %50 = icmp eq i64 %49, 49, !dbg !4074
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 2, !dbg !4074
  %52 = load i64, ptr %51, align 8, !dbg !4074, !tbaa !4115
  %53 = and i64 %52, 4294967295, !dbg !4074
  %54 = icmp eq i64 %53, 7, !dbg !4074
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 3, !dbg !4074
  %56 = load i64, ptr %55, align 8, !dbg !4074, !tbaa !4118
  %57 = and i64 %56, 4294967295, !dbg !4074
  %58 = icmp eq i64 %57, 1, !dbg !4074
  %59 = and i1 %54, %58, !dbg !4074
  %60 = and i1 %50, %59, !dbg !4074
  br i1 %60, label %if_end, label %assert_fail21, !dbg !4074, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4074
  %62 = load i64, ptr %61, align 8, !dbg !4074
  %63 = icmp eq i64 %62, 0, !dbg !4074
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !4074, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %64(ptr nonnull @.str.1137), !dbg !4074
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %65(ptr nonnull @.str.1138), !dbg !4074
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4074
  %67 = load i32, ptr %66, align 4, !dbg !4074
  %68 = icmp eq i32 %67, 2, !dbg !4074
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !4074, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %69(ptr nonnull @.str.1139), !dbg !4074
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 2, !dbg !4074
  %71 = load i32, ptr %70, align 4, !dbg !4074
  %72 = icmp eq i32 %71, 4, !dbg !4074
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !4074, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %73(ptr nonnull @.str.1140), !dbg !4074
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 2, !dbg !4074
  %75 = load i16, ptr %74, align 2, !dbg !4074
  %76 = icmp eq i16 %75, 1, !dbg !4074
  %77 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 1, !dbg !4074
  %78 = load i8, ptr %77, align 1, !dbg !4074
  %79 = icmp eq i8 %78, 32, !dbg !4074
  %80 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 0, !dbg !4074
  %81 = load i8, ptr %80, align 1, !dbg !4074
  %82 = icmp eq i8 %81, 2, !dbg !4074
  %83 = and i1 %79, %82, !dbg !4074
  %84 = and i1 %76, %83, !dbg !4074
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !4074, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %85(ptr nonnull @.str.1141), !dbg !4074
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, align 8, !dbg !4074, !tbaa !4120
  %87 = and i64 %86, 4294967295, !dbg !4074
  %88 = icmp eq i64 %87, 1, !dbg !4074
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !4074, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %89(ptr nonnull @.str.1142), !dbg !4074
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 1, !dbg !4074
  %91 = load i64, ptr %90, align 8, !dbg !4074, !tbaa !4130
  %92 = and i64 %91, 4294967295, !dbg !4074
  %93 = icmp eq i64 %92, 2048, !dbg !4074
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !4074, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %94(ptr nonnull @.str.1143), !dbg !4074
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 2, !dbg !4074
  %96 = load i64, ptr %95, align 8, !dbg !4074, !tbaa !4132
  %97 = and i64 %96, 4294967295, !dbg !4074
  %98 = icmp eq i64 %97, 1, !dbg !4074
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !4074, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %99(ptr nonnull @.str.1144), !dbg !4074
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 3, !dbg !4074
  %101 = load i64, ptr %100, align 8, !dbg !4074, !tbaa !4135
  %102 = and i64 %101, 4294967295, !dbg !4074
  %103 = icmp eq i64 %102, 1, !dbg !4074
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4074, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %104(ptr nonnull @.str.1145), !dbg !4074
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, null, !dbg !4074
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !4074, !prof !55

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 1, !dbg !4074
  %106 = load i64, ptr %105, align 8, !dbg !4074, !tbaa !4137
  %107 = and i64 %106, 4294967295, !dbg !4074
  %108 = icmp eq i64 %107, 1, !dbg !4074
  br i1 %108, label %if_end42, label %assert_fail43, !dbg !4074, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %109 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 6, !dbg !4074
  %110 = load i64, ptr %109, align 8, !dbg !4074
  %111 = icmp eq i64 %110, 0, !dbg !4074
  br i1 %111, label %assert_end46, label %assert_fail45, !dbg !4074, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %112 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %112(ptr nonnull @.str.1146), !dbg !4074
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %113(ptr nonnull @.str.1147), !dbg !4074
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %114 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 0, !dbg !4074
  %115 = load i32, ptr %114, align 4, !dbg !4074
  %116 = icmp eq i32 %115, 2, !dbg !4074
  br i1 %116, label %assert_end48, label %assert_fail47, !dbg !4074, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %117 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %117(ptr nonnull @.str.1148), !dbg !4074
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %118 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 1, !dbg !4074
  %119 = load i32, ptr %118, align 4, !dbg !4074
  %120 = icmp eq i32 %dev_id, %119, !dbg !4074
  br i1 %120, label %assert_end50, label %assert_fail49, !dbg !4074, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4074, !tbaa !19
  tail call void %121(ptr nonnull @.str.1149), !dbg !4074
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !4074
  store i32 0, ptr %stack_tcode60, align 4, !dbg !4074, !tbaa !4147
  %122 = sext i32 %dev_id to i64, !dbg !4074
  %123 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !4074
  store i64 %122, ptr %123, align 8, !dbg !4074
  %124 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !4074
  store i32 0, ptr %124, align 4, !dbg !4074, !tbaa !4158
  %125 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !4074
  %126 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !4074
  %127 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4074, !tbaa !19
  %128 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4074
  %.not62 = icmp eq ptr %128, null, !dbg !4074
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !4074, !prof !55

handle_init:                                      ; preds = %assert_end50
  %129 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4074, !tbaa !19
  %130 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4074, !tbaa !19
  %131 = call i32 %130(ptr %129, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4074
  %132 = icmp eq i32 %131, 0, !dbg !4074
  br i1 %132, label %call_end, label %common.ret, !dbg !4074, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %133 = phi ptr [ %128, %assert_end50 ], [ %136, %call_end ], !dbg !4074
  %134 = call i32 %127(ptr %133, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %125, ptr nonnull %126), !dbg !4074
  %135 = icmp eq i32 %134, 0, !dbg !4074
  br i1 %135, label %call_end52, label %common.ret, !dbg !4074, !prof !18

call_end:                                         ; preds = %handle_init
  %136 = load ptr, ptr %0, align 8, !dbg !4074
  store ptr %136, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4074
  br label %handle_init_end, !dbg !4074

call_end52:                                       ; preds = %handle_init_end
  %137 = call fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %dev_id, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, ptr %p053, ptr %adaptive_pool_avg54), !dbg !4074
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4160 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4162, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4163, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4164, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4165, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4166, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4167, metadata !DIExpression()), !dbg !4168
  %0 = alloca ptr, align 8, !dbg !4168
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4168
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4168
  %1 = icmp eq i32 %num_args, 3, !dbg !4168
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4168, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4168

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %2(ptr nonnull @.str.1152), !dbg !4168
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4168, !tbaa !4169
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4168
  %p1.code = load i32, ptr %3, align 4, !dbg !4168, !tbaa !4180
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4168
  %conv2d_nchw.code = load i32, ptr %4, align 4, !dbg !4168, !tbaa !4182
  %p0 = load ptr, ptr %args, align 8, !dbg !4168
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4168
  %p1 = load ptr, ptr %5, align 8, !dbg !4168
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4168
  %conv2d_nchw = load ptr, ptr %6, align 8, !dbg !4168
  %p081 = load ptr, ptr %p0, align 8, !dbg !4168
  call void @llvm.assume(i1 true) [ "align"(ptr %p081, i64 64) ], !dbg !4168
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.p0.shape = load ptr, ptr %7, align 8, !dbg !4168
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.p0.strides = load ptr, ptr %8, align 8, !dbg !4168
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4168
  %dev_id = load i32, ptr %9, align 4, !dbg !4168
  %p182 = load ptr, ptr %p1, align 8, !dbg !4168
  call void @llvm.assume(i1 true) [ "align"(ptr %p182, i64 64) ], !dbg !4168
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.p1.shape = load ptr, ptr %10, align 8, !dbg !4168
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.p1.strides = load ptr, ptr %11, align 8, !dbg !4168
  %conv2d_nchw80 = load ptr, ptr %conv2d_nchw, align 8, !dbg !4168
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_nchw80, i64 64) ], !dbg !4168
  %12 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 4, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape = load ptr, ptr %12, align 8, !dbg !4168
  %13 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 5, !dbg !4168
  %tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides = load ptr, ptr %13, align 8, !dbg !4168
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4168

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %14(ptr nonnull @.str.1153), !dbg !4168
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4168

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %15(ptr nonnull @.str.1154), !dbg !4168
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %conv2d_nchw.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4168

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %16(ptr nonnull @.str.1155), !dbg !4168
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4168
  %18 = load i32, ptr %17, align 4, !dbg !4168
  %19 = icmp eq i32 %18, 4, !dbg !4168
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4168, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %20(ptr nonnull @.str.1156), !dbg !4168
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4168
  %22 = load i16, ptr %21, align 2, !dbg !4168
  %23 = icmp eq i16 %22, 1, !dbg !4168
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4168
  %25 = load i8, ptr %24, align 1, !dbg !4168
  %26 = icmp eq i8 %25, 32, !dbg !4168
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4168
  %28 = load i8, ptr %27, align 1, !dbg !4168
  %29 = icmp eq i8 %28, 2, !dbg !4168
  %30 = and i1 %26, %29, !dbg !4168
  %31 = and i1 %23, %30, !dbg !4168
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4168, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %32(ptr nonnull @.str.1157), !dbg !4168
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d.p0.shape, align 8, !dbg !4168, !tbaa !4185
  %34 = and i64 %33, 4294967295, !dbg !4168
  %35 = icmp eq i64 %34, 1, !dbg !4168
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4168, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %36(ptr nonnull @.str.1158), !dbg !4168
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.shape, i64 1, !dbg !4168
  %38 = load i64, ptr %37, align 8, !dbg !4168, !tbaa !4195
  %39 = and i64 %38, 4294967295, !dbg !4168
  %40 = icmp eq i64 %39, 3, !dbg !4168
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4168, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %41(ptr nonnull @.str.1159), !dbg !4168
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.shape, i64 2, !dbg !4168
  %43 = load i64, ptr %42, align 8, !dbg !4168, !tbaa !4197
  %44 = and i64 %43, 4294967295, !dbg !4168
  %45 = icmp eq i64 %44, 224, !dbg !4168
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4168, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %46(ptr nonnull @.str.1160), !dbg !4168
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.shape, i64 3, !dbg !4168
  %48 = load i64, ptr %47, align 8, !dbg !4168, !tbaa !4200
  %49 = and i64 %48, 4294967295, !dbg !4168
  %50 = icmp eq i64 %49, 224, !dbg !4168
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4168, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %51(ptr nonnull @.str.1161), !dbg !4168
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d.p0.strides, null, !dbg !4168
  br i1 %.not, label %if_end, label %if_then, !dbg !4168, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.strides, i64 1, !dbg !4168
  %53 = load i64, ptr %52, align 8, !dbg !4168, !tbaa !4202
  %54 = and i64 %53, 4294967295, !dbg !4168
  %55 = icmp eq i64 %54, 50176, !dbg !4168
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.strides, i64 2, !dbg !4168
  %57 = load i64, ptr %56, align 8, !dbg !4168, !tbaa !4212
  %58 = and i64 %57, 4294967295, !dbg !4168
  %59 = icmp eq i64 %58, 224, !dbg !4168
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p0.strides, i64 3, !dbg !4168
  %61 = load i64, ptr %60, align 8, !dbg !4168, !tbaa !4215
  %62 = and i64 %61, 4294967295, !dbg !4168
  %63 = icmp eq i64 %62, 1, !dbg !4168
  %64 = and i1 %59, %63, !dbg !4168
  %65 = and i1 %55, %64, !dbg !4168
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4168, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4168
  %67 = load i64, ptr %66, align 8, !dbg !4168
  %68 = icmp eq i64 %67, 0, !dbg !4168
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4168, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %69(ptr nonnull @.str.1162), !dbg !4168
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %70(ptr nonnull @.str.1163), !dbg !4168
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4168
  %72 = load i32, ptr %71, align 4, !dbg !4168
  %73 = icmp eq i32 %72, 2, !dbg !4168
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4168, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %74(ptr nonnull @.str.1164), !dbg !4168
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4168
  %76 = load i32, ptr %75, align 4, !dbg !4168
  %77 = icmp eq i32 %76, 4, !dbg !4168
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4168, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %78(ptr nonnull @.str.1165), !dbg !4168
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4168
  %80 = load i16, ptr %79, align 2, !dbg !4168
  %81 = icmp eq i16 %80, 1, !dbg !4168
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4168
  %83 = load i8, ptr %82, align 1, !dbg !4168
  %84 = icmp eq i8 %83, 32, !dbg !4168
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4168
  %86 = load i8, ptr %85, align 1, !dbg !4168
  %87 = icmp eq i8 %86, 2, !dbg !4168
  %88 = and i1 %84, %87, !dbg !4168
  %89 = and i1 %81, %88, !dbg !4168
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4168, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %90(ptr nonnull @.str.1166), !dbg !4168
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d.p1.shape, align 8, !dbg !4168, !tbaa !4217
  %92 = and i64 %91, 4294967295, !dbg !4168
  %93 = icmp eq i64 %92, 64, !dbg !4168
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4168, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %94(ptr nonnull @.str.1167), !dbg !4168
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.shape, i64 1, !dbg !4168
  %96 = load i64, ptr %95, align 8, !dbg !4168, !tbaa !4227
  %97 = and i64 %96, 4294967295, !dbg !4168
  %98 = icmp eq i64 %97, 3, !dbg !4168
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4168, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %99(ptr nonnull @.str.1168), !dbg !4168
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.shape, i64 2, !dbg !4168
  %101 = load i64, ptr %100, align 8, !dbg !4168, !tbaa !4229
  %102 = and i64 %101, 4294967295, !dbg !4168
  %103 = icmp eq i64 %102, 7, !dbg !4168
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4168, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %104(ptr nonnull @.str.1169), !dbg !4168
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.shape, i64 3, !dbg !4168
  %106 = load i64, ptr %105, align 8, !dbg !4168, !tbaa !4232
  %107 = and i64 %106, 4294967295, !dbg !4168
  %108 = icmp eq i64 %107, 7, !dbg !4168
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4168, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %109(ptr nonnull @.str.1170), !dbg !4168
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d.p1.strides, null, !dbg !4168
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4168, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d.p1.strides, align 8, !dbg !4168, !tbaa !4234
  %111 = and i64 %110, 4294967295, !dbg !4168
  %112 = icmp eq i64 %111, 147, !dbg !4168
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.strides, i64 1, !dbg !4168
  %114 = load i64, ptr %113, align 8, !dbg !4168, !tbaa !4244
  %115 = and i64 %114, 4294967295, !dbg !4168
  %116 = icmp eq i64 %115, 49, !dbg !4168
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.strides, i64 2, !dbg !4168
  %118 = load i64, ptr %117, align 8, !dbg !4168, !tbaa !4246
  %119 = and i64 %118, 4294967295, !dbg !4168
  %120 = icmp eq i64 %119, 7, !dbg !4168
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.p1.strides, i64 3, !dbg !4168
  %122 = load i64, ptr %121, align 8, !dbg !4168, !tbaa !4249
  %123 = and i64 %122, 4294967295, !dbg !4168
  %124 = icmp eq i64 %123, 1, !dbg !4168
  %125 = and i1 %120, %124, !dbg !4168
  %126 = and i1 %116, %125, !dbg !4168
  %127 = and i1 %112, %126, !dbg !4168
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !4168, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4168
  %129 = load i64, ptr %128, align 8, !dbg !4168
  %130 = icmp eq i64 %129, 0, !dbg !4168
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !4168, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %131(ptr nonnull @.str.1171), !dbg !4168
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %132(ptr nonnull @.str.1172), !dbg !4168
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4168
  %134 = load i32, ptr %133, align 4, !dbg !4168
  %135 = icmp eq i32 %134, 2, !dbg !4168
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !4168, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %136(ptr nonnull @.str.1173), !dbg !4168
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4168
  %138 = load i32, ptr %137, align 4, !dbg !4168
  %139 = icmp eq i32 %dev_id, %138, !dbg !4168
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !4168, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %140(ptr nonnull @.str.1174), !dbg !4168
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 2, !dbg !4168
  %142 = load i32, ptr %141, align 4, !dbg !4168
  %143 = icmp eq i32 %142, 4, !dbg !4168
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !4168, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %144(ptr nonnull @.str.1175), !dbg !4168
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 3, i32 2, !dbg !4168
  %146 = load i16, ptr %145, align 2, !dbg !4168
  %147 = icmp eq i16 %146, 1, !dbg !4168
  %148 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 3, i32 1, !dbg !4168
  %149 = load i8, ptr %148, align 1, !dbg !4168
  %150 = icmp eq i8 %149, 32, !dbg !4168
  %151 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 3, i32 0, !dbg !4168
  %152 = load i8, ptr %151, align 1, !dbg !4168
  %153 = icmp eq i8 %152, 2, !dbg !4168
  %154 = and i1 %150, %153, !dbg !4168
  %155 = and i1 %147, %154, !dbg !4168
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !4168, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %156(ptr nonnull @.str.1176), !dbg !4168
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape, align 8, !dbg !4168, !tbaa !4251
  %158 = and i64 %157, 4294967295, !dbg !4168
  %159 = icmp eq i64 %158, 1, !dbg !4168
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !4168, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %160(ptr nonnull @.str.1177), !dbg !4168
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape, i64 1, !dbg !4168
  %162 = load i64, ptr %161, align 8, !dbg !4168, !tbaa !4261
  %163 = and i64 %162, 4294967295, !dbg !4168
  %164 = icmp eq i64 %163, 64, !dbg !4168
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !4168, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %165(ptr nonnull @.str.1178), !dbg !4168
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape, i64 2, !dbg !4168
  %167 = load i64, ptr %166, align 8, !dbg !4168, !tbaa !4263
  %168 = and i64 %167, 4294967295, !dbg !4168
  %169 = icmp eq i64 %168, 112, !dbg !4168
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !4168, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %170(ptr nonnull @.str.1179), !dbg !4168
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.shape, i64 3, !dbg !4168
  %172 = load i64, ptr %171, align 8, !dbg !4168, !tbaa !4266
  %173 = and i64 %172, 4294967295, !dbg !4168
  %174 = icmp eq i64 %173, 112, !dbg !4168
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !4168, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %175(ptr nonnull @.str.1180), !dbg !4168
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides, null, !dbg !4168
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4168, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides, i64 1, !dbg !4168
  %177 = load i64, ptr %176, align 8, !dbg !4168, !tbaa !4268
  %178 = and i64 %177, 4294967295, !dbg !4168
  %179 = icmp eq i64 %178, 12544, !dbg !4168
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides, i64 2, !dbg !4168
  %181 = load i64, ptr %180, align 8, !dbg !4168, !tbaa !4278
  %182 = and i64 %181, 4294967295, !dbg !4168
  %183 = icmp eq i64 %182, 112, !dbg !4168
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d.conv2d_nchw.strides, i64 3, !dbg !4168
  %185 = load i64, ptr %184, align 8, !dbg !4168, !tbaa !4281
  %186 = and i64 %185, 4294967295, !dbg !4168
  %187 = icmp eq i64 %186, 1, !dbg !4168
  %188 = and i1 %183, %187, !dbg !4168
  %189 = and i1 %179, %188, !dbg !4168
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !4168, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 6, !dbg !4168
  %191 = load i64, ptr %190, align 8, !dbg !4168
  %192 = icmp eq i64 %191, 0, !dbg !4168
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !4168, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %193(ptr nonnull @.str.1181), !dbg !4168
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %194(ptr nonnull @.str.1182), !dbg !4168
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 1, i32 0, !dbg !4168
  %196 = load i32, ptr %195, align 4, !dbg !4168
  %197 = icmp eq i32 %196, 2, !dbg !4168
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !4168, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %198(ptr nonnull @.str.1183), !dbg !4168
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %conv2d_nchw, i64 0, i32 1, i32 1, !dbg !4168
  %200 = load i32, ptr %199, align 4, !dbg !4168
  %201 = icmp eq i32 %dev_id, %200, !dbg !4168
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !4168, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4168, !tbaa !19
  tail call void %202(ptr nonnull @.str.1184), !dbg !4168
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4168
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4168, !tbaa !4283
  %203 = sext i32 %dev_id to i64, !dbg !4168
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4168
  store i64 %203, ptr %204, align 8, !dbg !4168
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4168
  store i32 0, ptr %205, align 4, !dbg !4168, !tbaa !4294
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4168
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4168
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4168, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4168
  %.not91 = icmp eq ptr %209, null, !dbg !4168
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4168, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4168, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4168, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4168
  %213 = icmp eq i32 %212, 0, !dbg !4168
  br i1 %213, label %call_end, label %common.ret, !dbg !4168, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !4168
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !4168
  %216 = icmp eq i32 %215, 0, !dbg !4168
  br i1 %216, label %call_end79, label %common.ret, !dbg !4168, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !4168
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4168
  br label %handle_init_end, !dbg !4168

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_compute_(ptr nonnull %stack_value87, ptr %conv2d_nchw80, ptr nonnull %stack_tcode88, ptr %p081, ptr %p182), !dbg !4168
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4296 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4298, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4299, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4300, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4301, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4302, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4303, metadata !DIExpression()), !dbg !4304
  %0 = alloca ptr, align 8, !dbg !4304
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4304
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4304
  %1 = icmp eq i32 %num_args, 3, !dbg !4304
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4304, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4304

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %2(ptr nonnull @.str.1186), !dbg !4304
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4304, !tbaa !4305
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4304
  %p1.code = load i32, ptr %3, align 4, !dbg !4304, !tbaa !4316
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4304
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4304, !tbaa !4318
  %p0 = load ptr, ptr %args, align 8, !dbg !4304
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4304
  %p1 = load ptr, ptr %5, align 8, !dbg !4304
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4304
  %T_cast = load ptr, ptr %6, align 8, !dbg !4304
  %p080 = load ptr, ptr %p0, align 8, !dbg !4304
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4304
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape = load ptr, ptr %7, align 8, !dbg !4304
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides = load ptr, ptr %8, align 8, !dbg !4304
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4304
  %dev_id = load i32, ptr %9, align 4, !dbg !4304
  %p181 = load ptr, ptr %p1, align 8, !dbg !4304
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4304
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape = load ptr, ptr %10, align 8, !dbg !4304
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.strides = load ptr, ptr %11, align 8, !dbg !4304
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4304
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4304
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4304
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4304
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4304
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4304

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %14(ptr nonnull @.str.1187), !dbg !4304
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4304

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %15(ptr nonnull @.str.1188), !dbg !4304
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4304

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %16(ptr nonnull @.str.1189), !dbg !4304
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4304
  %18 = load i32, ptr %17, align 4, !dbg !4304
  %19 = icmp eq i32 %18, 4, !dbg !4304
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4304, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %20(ptr nonnull @.str.1190), !dbg !4304
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4304
  %22 = load i16, ptr %21, align 2, !dbg !4304
  %23 = icmp eq i16 %22, 1, !dbg !4304
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4304
  %25 = load i8, ptr %24, align 1, !dbg !4304
  %26 = icmp eq i8 %25, 8, !dbg !4304
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4304
  %28 = load i8, ptr %27, align 1, !dbg !4304
  %29 = icmp eq i8 %28, 0, !dbg !4304
  %30 = and i1 %26, %29, !dbg !4304
  %31 = and i1 %23, %30, !dbg !4304
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4304, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %32(ptr nonnull @.str.1191), !dbg !4304
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape, align 8, !dbg !4304, !tbaa !4321
  %34 = and i64 %33, 4294967295, !dbg !4304
  %35 = icmp eq i64 %34, 1, !dbg !4304
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4304, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %36(ptr nonnull @.str.1192), !dbg !4304
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !4304
  %38 = load i64, ptr %37, align 8, !dbg !4304, !tbaa !4331
  %39 = and i64 %38, 4294967295, !dbg !4304
  %40 = icmp eq i64 %39, 64, !dbg !4304
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4304, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %41(ptr nonnull @.str.1193), !dbg !4304
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !4304
  %43 = load i64, ptr %42, align 8, !dbg !4304, !tbaa !4333
  %44 = and i64 %43, 4294967295, !dbg !4304
  %45 = icmp eq i64 %44, 56, !dbg !4304
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4304, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %46(ptr nonnull @.str.1194), !dbg !4304
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !4304
  %48 = load i64, ptr %47, align 8, !dbg !4304, !tbaa !4336
  %49 = and i64 %48, 4294967295, !dbg !4304
  %50 = icmp eq i64 %49, 56, !dbg !4304
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4304, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %51(ptr nonnull @.str.1195), !dbg !4304
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides, null, !dbg !4304
  br i1 %.not, label %if_end, label %if_then, !dbg !4304, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !4304
  %53 = load i64, ptr %52, align 8, !dbg !4304, !tbaa !4338
  %54 = and i64 %53, 4294967295, !dbg !4304
  %55 = icmp eq i64 %54, 3136, !dbg !4304
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !4304
  %57 = load i64, ptr %56, align 8, !dbg !4304, !tbaa !4348
  %58 = and i64 %57, 4294967295, !dbg !4304
  %59 = icmp eq i64 %58, 56, !dbg !4304
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !4304
  %61 = load i64, ptr %60, align 8, !dbg !4304, !tbaa !4351
  %62 = and i64 %61, 4294967295, !dbg !4304
  %63 = icmp eq i64 %62, 1, !dbg !4304
  %64 = and i1 %59, %63, !dbg !4304
  %65 = and i1 %55, %64, !dbg !4304
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4304, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4304
  %67 = load i64, ptr %66, align 8, !dbg !4304
  %68 = icmp eq i64 %67, 0, !dbg !4304
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4304, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %69(ptr nonnull @.str.1196), !dbg !4304
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %70(ptr nonnull @.str.1197), !dbg !4304
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4304
  %72 = load i32, ptr %71, align 4, !dbg !4304
  %73 = icmp eq i32 %72, 2, !dbg !4304
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4304, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %74(ptr nonnull @.str.1198), !dbg !4304
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4304
  %76 = load i32, ptr %75, align 4, !dbg !4304
  %77 = icmp eq i32 %76, 4, !dbg !4304
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4304, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %78(ptr nonnull @.str.1199), !dbg !4304
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4304
  %80 = load i16, ptr %79, align 2, !dbg !4304
  %81 = icmp eq i16 %80, 1, !dbg !4304
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4304
  %83 = load i8, ptr %82, align 1, !dbg !4304
  %84 = icmp eq i8 %83, 8, !dbg !4304
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4304
  %86 = load i8, ptr %85, align 1, !dbg !4304
  %87 = icmp eq i8 %86, 0, !dbg !4304
  %88 = and i1 %84, %87, !dbg !4304
  %89 = and i1 %81, %88, !dbg !4304
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4304, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %90(ptr nonnull @.str.1200), !dbg !4304
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape, align 8, !dbg !4304, !tbaa !4353
  %92 = and i64 %91, 4294967295, !dbg !4304
  %93 = icmp eq i64 %92, 64, !dbg !4304
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4304, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %94(ptr nonnull @.str.1201), !dbg !4304
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !4304
  %96 = load i64, ptr %95, align 8, !dbg !4304, !tbaa !4363
  %97 = and i64 %96, 4294967295, !dbg !4304
  %98 = icmp eq i64 %97, 64, !dbg !4304
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4304, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %99(ptr nonnull @.str.1202), !dbg !4304
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !4304
  %101 = load i64, ptr %100, align 8, !dbg !4304, !tbaa !4365
  %102 = and i64 %101, 4294967295, !dbg !4304
  %103 = icmp eq i64 %102, 1, !dbg !4304
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4304, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %104(ptr nonnull @.str.1203), !dbg !4304
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !4304
  %106 = load i64, ptr %105, align 8, !dbg !4304, !tbaa !4368
  %107 = and i64 %106, 4294967295, !dbg !4304
  %108 = icmp eq i64 %107, 1, !dbg !4304
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4304, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %109(ptr nonnull @.str.1204), !dbg !4304
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.strides, null, !dbg !4304
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4304, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.strides, align 8, !dbg !4304, !tbaa !4370
  %111 = and i64 %110, 4294967295, !dbg !4304
  %112 = icmp eq i64 %111, 64, !dbg !4304
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !4304
  %114 = load i64, ptr %113, align 8, !dbg !4304, !tbaa !4380
  %115 = and i64 %114, 4294967295, !dbg !4304
  %116 = icmp eq i64 %115, 1, !dbg !4304
  %117 = and i1 %112, %116, !dbg !4304
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !4304, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4304
  %119 = load i64, ptr %118, align 8, !dbg !4304
  %120 = icmp eq i64 %119, 0, !dbg !4304
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !4304, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %121(ptr nonnull @.str.1205), !dbg !4304
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %122(ptr nonnull @.str.1206), !dbg !4304
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4304
  %124 = load i32, ptr %123, align 4, !dbg !4304
  %125 = icmp eq i32 %124, 2, !dbg !4304
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !4304, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %126(ptr nonnull @.str.1207), !dbg !4304
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4304
  %128 = load i32, ptr %127, align 4, !dbg !4304
  %129 = icmp eq i32 %dev_id, %128, !dbg !4304
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !4304, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %130(ptr nonnull @.str.1208), !dbg !4304
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4304
  %132 = load i32, ptr %131, align 4, !dbg !4304
  %133 = icmp eq i32 %132, 4, !dbg !4304
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !4304, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %134(ptr nonnull @.str.1209), !dbg !4304
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4304
  %136 = load i16, ptr %135, align 2, !dbg !4304
  %137 = icmp eq i16 %136, 1, !dbg !4304
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4304
  %139 = load i8, ptr %138, align 1, !dbg !4304
  %140 = icmp eq i8 %139, 8, !dbg !4304
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4304
  %142 = load i8, ptr %141, align 1, !dbg !4304
  %143 = icmp eq i8 %142, 0, !dbg !4304
  %144 = and i1 %140, %143, !dbg !4304
  %145 = and i1 %137, %144, !dbg !4304
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !4304, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %146(ptr nonnull @.str.1210), !dbg !4304
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !4304, !tbaa !4382
  %148 = and i64 %147, 4294967295, !dbg !4304
  %149 = icmp eq i64 %148, 1, !dbg !4304
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !4304, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %150(ptr nonnull @.str.1211), !dbg !4304
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !4304
  %152 = load i64, ptr %151, align 8, !dbg !4304, !tbaa !4392
  %153 = and i64 %152, 4294967295, !dbg !4304
  %154 = icmp eq i64 %153, 64, !dbg !4304
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !4304, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %155(ptr nonnull @.str.1212), !dbg !4304
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !4304
  %157 = load i64, ptr %156, align 8, !dbg !4304, !tbaa !4394
  %158 = and i64 %157, 4294967295, !dbg !4304
  %159 = icmp eq i64 %158, 56, !dbg !4304
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !4304, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %160(ptr nonnull @.str.1213), !dbg !4304
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !4304
  %162 = load i64, ptr %161, align 8, !dbg !4304, !tbaa !4397
  %163 = and i64 %162, 4294967295, !dbg !4304
  %164 = icmp eq i64 %163, 56, !dbg !4304
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !4304, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %165(ptr nonnull @.str.1214), !dbg !4304
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides, null, !dbg !4304
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4304, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !4304
  %167 = load i64, ptr %166, align 8, !dbg !4304, !tbaa !4399
  %168 = and i64 %167, 4294967295, !dbg !4304
  %169 = icmp eq i64 %168, 3136, !dbg !4304
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !4304
  %171 = load i64, ptr %170, align 8, !dbg !4304, !tbaa !4409
  %172 = and i64 %171, 4294967295, !dbg !4304
  %173 = icmp eq i64 %172, 56, !dbg !4304
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !4304
  %175 = load i64, ptr %174, align 8, !dbg !4304, !tbaa !4412
  %176 = and i64 %175, 4294967295, !dbg !4304
  %177 = icmp eq i64 %176, 1, !dbg !4304
  %178 = and i1 %173, %177, !dbg !4304
  %179 = and i1 %169, %178, !dbg !4304
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !4304, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4304
  %181 = load i64, ptr %180, align 8, !dbg !4304
  %182 = icmp eq i64 %181, 0, !dbg !4304
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !4304, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %183(ptr nonnull @.str.1215), !dbg !4304
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %184(ptr nonnull @.str.1216), !dbg !4304
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4304
  %186 = load i32, ptr %185, align 4, !dbg !4304
  %187 = icmp eq i32 %186, 2, !dbg !4304
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !4304, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %188(ptr nonnull @.str.1217), !dbg !4304
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4304
  %190 = load i32, ptr %189, align 4, !dbg !4304
  %191 = icmp eq i32 %dev_id, %190, !dbg !4304
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !4304, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4304, !tbaa !19
  tail call void %192(ptr nonnull @.str.1218), !dbg !4304
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4304
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4304, !tbaa !4414
  %193 = sext i32 %dev_id to i64, !dbg !4304
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4304
  store i64 %193, ptr %194, align 8, !dbg !4304
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4304
  store i32 0, ptr %195, align 4, !dbg !4304, !tbaa !4425
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4304
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4304
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4304, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4304
  %.not91 = icmp eq ptr %199, null, !dbg !4304
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4304, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4304, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4304, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4304
  %203 = icmp eq i32 %202, 0, !dbg !4304
  br i1 %203, label %call_end, label %common.ret, !dbg !4304, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !4304
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !4304
  %206 = icmp eq i32 %205, 0, !dbg !4304
  br i1 %206, label %call_end79, label %common.ret, !dbg !4304, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !4304
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4304
  br label %handle_init_end, !dbg !4304

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4304
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4427 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4429, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4430, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4431, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4432, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4434, metadata !DIExpression()), !dbg !4435
  %0 = alloca ptr, align 8, !dbg !4435
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4435
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4435
  %1 = icmp eq i32 %num_args, 3, !dbg !4435
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4435, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4435

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %2(ptr nonnull @.str.1222), !dbg !4435
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4435, !tbaa !4436
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4435
  %p1.code = load i32, ptr %3, align 4, !dbg !4435, !tbaa !4447
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4435
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4435, !tbaa !4449
  %p0 = load ptr, ptr %args, align 8, !dbg !4435
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4435
  %p1 = load ptr, ptr %5, align 8, !dbg !4435
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4435
  %T_cast = load ptr, ptr %6, align 8, !dbg !4435
  %p080 = load ptr, ptr %p0, align 8, !dbg !4435
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4435
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %7, align 8, !dbg !4435
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %8, align 8, !dbg !4435
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4435
  %dev_id = load i32, ptr %9, align 4, !dbg !4435
  %p181 = load ptr, ptr %p1, align 8, !dbg !4435
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4435
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %10, align 8, !dbg !4435
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %11, align 8, !dbg !4435
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4435
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4435
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4435
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4435
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4435
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4435

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %14(ptr nonnull @.str.1223), !dbg !4435
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4435

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %15(ptr nonnull @.str.1224), !dbg !4435
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4435

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %16(ptr nonnull @.str.1225), !dbg !4435
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4435
  %18 = load i32, ptr %17, align 4, !dbg !4435
  %19 = icmp eq i32 %18, 4, !dbg !4435
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4435, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %20(ptr nonnull @.str.1226), !dbg !4435
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4435
  %22 = load i16, ptr %21, align 2, !dbg !4435
  %23 = icmp eq i16 %22, 1, !dbg !4435
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4435
  %25 = load i8, ptr %24, align 1, !dbg !4435
  %26 = icmp eq i8 %25, 8, !dbg !4435
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4435
  %28 = load i8, ptr %27, align 1, !dbg !4435
  %29 = icmp eq i8 %28, 0, !dbg !4435
  %30 = and i1 %26, %29, !dbg !4435
  %31 = and i1 %23, %30, !dbg !4435
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4435, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %32(ptr nonnull @.str.1227), !dbg !4435
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !4435, !tbaa !4452
  %34 = and i64 %33, 4294967295, !dbg !4435
  %35 = icmp eq i64 %34, 1, !dbg !4435
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4435, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %36(ptr nonnull @.str.1228), !dbg !4435
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !4435
  %38 = load i64, ptr %37, align 8, !dbg !4435, !tbaa !4462
  %39 = and i64 %38, 4294967295, !dbg !4435
  %40 = icmp eq i64 %39, 64, !dbg !4435
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4435, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %41(ptr nonnull @.str.1229), !dbg !4435
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !4435
  %43 = load i64, ptr %42, align 8, !dbg !4435, !tbaa !4464
  %44 = and i64 %43, 4294967295, !dbg !4435
  %45 = icmp eq i64 %44, 56, !dbg !4435
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4435, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %46(ptr nonnull @.str.1230), !dbg !4435
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !4435
  %48 = load i64, ptr %47, align 8, !dbg !4435, !tbaa !4467
  %49 = and i64 %48, 4294967295, !dbg !4435
  %50 = icmp eq i64 %49, 56, !dbg !4435
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4435, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %51(ptr nonnull @.str.1231), !dbg !4435
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides, null, !dbg !4435
  br i1 %.not, label %if_end, label %if_then, !dbg !4435, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !4435
  %53 = load i64, ptr %52, align 8, !dbg !4435, !tbaa !4469
  %54 = and i64 %53, 4294967295, !dbg !4435
  %55 = icmp eq i64 %54, 3136, !dbg !4435
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !4435
  %57 = load i64, ptr %56, align 8, !dbg !4435, !tbaa !4479
  %58 = and i64 %57, 4294967295, !dbg !4435
  %59 = icmp eq i64 %58, 56, !dbg !4435
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !4435
  %61 = load i64, ptr %60, align 8, !dbg !4435, !tbaa !4482
  %62 = and i64 %61, 4294967295, !dbg !4435
  %63 = icmp eq i64 %62, 1, !dbg !4435
  %64 = and i1 %59, %63, !dbg !4435
  %65 = and i1 %55, %64, !dbg !4435
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4435, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4435
  %67 = load i64, ptr %66, align 8, !dbg !4435
  %68 = icmp eq i64 %67, 0, !dbg !4435
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4435, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %69(ptr nonnull @.str.1232), !dbg !4435
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %70(ptr nonnull @.str.1233), !dbg !4435
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4435
  %72 = load i32, ptr %71, align 4, !dbg !4435
  %73 = icmp eq i32 %72, 2, !dbg !4435
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4435, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %74(ptr nonnull @.str.1234), !dbg !4435
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4435
  %76 = load i32, ptr %75, align 4, !dbg !4435
  %77 = icmp eq i32 %76, 4, !dbg !4435
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4435, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %78(ptr nonnull @.str.1235), !dbg !4435
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4435
  %80 = load i16, ptr %79, align 2, !dbg !4435
  %81 = icmp eq i16 %80, 1, !dbg !4435
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4435
  %83 = load i8, ptr %82, align 1, !dbg !4435
  %84 = icmp eq i8 %83, 8, !dbg !4435
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4435
  %86 = load i8, ptr %85, align 1, !dbg !4435
  %87 = icmp eq i8 %86, 0, !dbg !4435
  %88 = and i1 %84, %87, !dbg !4435
  %89 = and i1 %81, %88, !dbg !4435
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4435, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %90(ptr nonnull @.str.1236), !dbg !4435
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !4435, !tbaa !4484
  %92 = and i64 %91, 4294967295, !dbg !4435
  %93 = icmp eq i64 %92, 64, !dbg !4435
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4435, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %94(ptr nonnull @.str.1237), !dbg !4435
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !4435
  %96 = load i64, ptr %95, align 8, !dbg !4435, !tbaa !4494
  %97 = and i64 %96, 4294967295, !dbg !4435
  %98 = icmp eq i64 %97, 64, !dbg !4435
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4435, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %99(ptr nonnull @.str.1238), !dbg !4435
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !4435
  %101 = load i64, ptr %100, align 8, !dbg !4435, !tbaa !4496
  %102 = and i64 %101, 4294967295, !dbg !4435
  %103 = icmp eq i64 %102, 3, !dbg !4435
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4435, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %104(ptr nonnull @.str.1239), !dbg !4435
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !4435
  %106 = load i64, ptr %105, align 8, !dbg !4435, !tbaa !4499
  %107 = and i64 %106, 4294967295, !dbg !4435
  %108 = icmp eq i64 %107, 3, !dbg !4435
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4435, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %109(ptr nonnull @.str.1240), !dbg !4435
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides, null, !dbg !4435
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4435, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides, align 8, !dbg !4435, !tbaa !4501
  %111 = and i64 %110, 4294967295, !dbg !4435
  %112 = icmp eq i64 %111, 576, !dbg !4435
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !4435
  %114 = load i64, ptr %113, align 8, !dbg !4435, !tbaa !4511
  %115 = and i64 %114, 4294967295, !dbg !4435
  %116 = icmp eq i64 %115, 9, !dbg !4435
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides, i64 2, !dbg !4435
  %118 = load i64, ptr %117, align 8, !dbg !4435, !tbaa !4513
  %119 = and i64 %118, 4294967295, !dbg !4435
  %120 = icmp eq i64 %119, 3, !dbg !4435
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.p1.strides, i64 3, !dbg !4435
  %122 = load i64, ptr %121, align 8, !dbg !4435, !tbaa !4516
  %123 = and i64 %122, 4294967295, !dbg !4435
  %124 = icmp eq i64 %123, 1, !dbg !4435
  %125 = and i1 %120, %124, !dbg !4435
  %126 = and i1 %116, %125, !dbg !4435
  %127 = and i1 %112, %126, !dbg !4435
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !4435, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4435
  %129 = load i64, ptr %128, align 8, !dbg !4435
  %130 = icmp eq i64 %129, 0, !dbg !4435
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !4435, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %131(ptr nonnull @.str.1241), !dbg !4435
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %132(ptr nonnull @.str.1242), !dbg !4435
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4435
  %134 = load i32, ptr %133, align 4, !dbg !4435
  %135 = icmp eq i32 %134, 2, !dbg !4435
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !4435, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %136(ptr nonnull @.str.1243), !dbg !4435
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4435
  %138 = load i32, ptr %137, align 4, !dbg !4435
  %139 = icmp eq i32 %dev_id, %138, !dbg !4435
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !4435, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %140(ptr nonnull @.str.1244), !dbg !4435
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4435
  %142 = load i32, ptr %141, align 4, !dbg !4435
  %143 = icmp eq i32 %142, 4, !dbg !4435
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !4435, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %144(ptr nonnull @.str.1245), !dbg !4435
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4435
  %146 = load i16, ptr %145, align 2, !dbg !4435
  %147 = icmp eq i16 %146, 1, !dbg !4435
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4435
  %149 = load i8, ptr %148, align 1, !dbg !4435
  %150 = icmp eq i8 %149, 8, !dbg !4435
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4435
  %152 = load i8, ptr %151, align 1, !dbg !4435
  %153 = icmp eq i8 %152, 0, !dbg !4435
  %154 = and i1 %150, %153, !dbg !4435
  %155 = and i1 %147, %154, !dbg !4435
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !4435, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %156(ptr nonnull @.str.1246), !dbg !4435
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !4435, !tbaa !4518
  %158 = and i64 %157, 4294967295, !dbg !4435
  %159 = icmp eq i64 %158, 1, !dbg !4435
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !4435, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %160(ptr nonnull @.str.1247), !dbg !4435
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !4435
  %162 = load i64, ptr %161, align 8, !dbg !4435, !tbaa !4528
  %163 = and i64 %162, 4294967295, !dbg !4435
  %164 = icmp eq i64 %163, 64, !dbg !4435
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !4435, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %165(ptr nonnull @.str.1248), !dbg !4435
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !4435
  %167 = load i64, ptr %166, align 8, !dbg !4435, !tbaa !4530
  %168 = and i64 %167, 4294967295, !dbg !4435
  %169 = icmp eq i64 %168, 56, !dbg !4435
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !4435, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %170(ptr nonnull @.str.1249), !dbg !4435
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !4435
  %172 = load i64, ptr %171, align 8, !dbg !4435, !tbaa !4533
  %173 = and i64 %172, 4294967295, !dbg !4435
  %174 = icmp eq i64 %173, 56, !dbg !4435
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !4435, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %175(ptr nonnull @.str.1250), !dbg !4435
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !4435
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4435, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !4435
  %177 = load i64, ptr %176, align 8, !dbg !4435, !tbaa !4535
  %178 = and i64 %177, 4294967295, !dbg !4435
  %179 = icmp eq i64 %178, 3136, !dbg !4435
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !4435
  %181 = load i64, ptr %180, align 8, !dbg !4435, !tbaa !4545
  %182 = and i64 %181, 4294967295, !dbg !4435
  %183 = icmp eq i64 %182, 56, !dbg !4435
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !4435
  %185 = load i64, ptr %184, align 8, !dbg !4435, !tbaa !4548
  %186 = and i64 %185, 4294967295, !dbg !4435
  %187 = icmp eq i64 %186, 1, !dbg !4435
  %188 = and i1 %183, %187, !dbg !4435
  %189 = and i1 %179, %188, !dbg !4435
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !4435, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4435
  %191 = load i64, ptr %190, align 8, !dbg !4435
  %192 = icmp eq i64 %191, 0, !dbg !4435
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !4435, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %193(ptr nonnull @.str.1251), !dbg !4435
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %194(ptr nonnull @.str.1252), !dbg !4435
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4435
  %196 = load i32, ptr %195, align 4, !dbg !4435
  %197 = icmp eq i32 %196, 2, !dbg !4435
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !4435, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %198(ptr nonnull @.str.1253), !dbg !4435
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4435
  %200 = load i32, ptr %199, align 4, !dbg !4435
  %201 = icmp eq i32 %dev_id, %200, !dbg !4435
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !4435, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4435, !tbaa !19
  tail call void %202(ptr nonnull @.str.1254), !dbg !4435
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4435
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4435, !tbaa !4550
  %203 = sext i32 %dev_id to i64, !dbg !4435
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4435
  store i64 %203, ptr %204, align 8, !dbg !4435
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4435
  store i32 0, ptr %205, align 4, !dbg !4435, !tbaa !4561
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4435
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4435
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4435, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4435
  %.not91 = icmp eq ptr %209, null, !dbg !4435
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4435, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4435, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4435, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4435
  %213 = icmp eq i32 %212, 0, !dbg !4435
  br i1 %213, label %call_end, label %common.ret, !dbg !4435, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !4435
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !4435
  %216 = icmp eq i32 %215, 0, !dbg !4435
  br i1 %216, label %call_end79, label %common.ret, !dbg !4435, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !4435
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4435
  br label %handle_init_end, !dbg !4435

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4435
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4563 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4565, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4566, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4567, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4568, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4569, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4570, metadata !DIExpression()), !dbg !4571
  %0 = alloca ptr, align 8, !dbg !4571
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4571
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4571
  %1 = icmp eq i32 %num_args, 3, !dbg !4571
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4571, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4571

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %2(ptr nonnull @.str.1258), !dbg !4571
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4571, !tbaa !4572
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4571
  %p1.code = load i32, ptr %3, align 4, !dbg !4571, !tbaa !4583
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4571
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4571, !tbaa !4585
  %p0 = load ptr, ptr %args, align 8, !dbg !4571
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4571
  %p1 = load ptr, ptr %5, align 8, !dbg !4571
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4571
  %T_cast = load ptr, ptr %6, align 8, !dbg !4571
  %p080 = load ptr, ptr %p0, align 8, !dbg !4571
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4571
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape = load ptr, ptr %7, align 8, !dbg !4571
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides = load ptr, ptr %8, align 8, !dbg !4571
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4571
  %dev_id = load i32, ptr %9, align 4, !dbg !4571
  %p181 = load ptr, ptr %p1, align 8, !dbg !4571
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4571
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape = load ptr, ptr %10, align 8, !dbg !4571
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.strides = load ptr, ptr %11, align 8, !dbg !4571
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4571
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4571
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4571
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4571
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4571
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4571

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %14(ptr nonnull @.str.1259), !dbg !4571
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4571

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %15(ptr nonnull @.str.1260), !dbg !4571
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4571

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %16(ptr nonnull @.str.1261), !dbg !4571
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4571
  %18 = load i32, ptr %17, align 4, !dbg !4571
  %19 = icmp eq i32 %18, 4, !dbg !4571
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4571, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %20(ptr nonnull @.str.1262), !dbg !4571
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4571
  %22 = load i16, ptr %21, align 2, !dbg !4571
  %23 = icmp eq i16 %22, 1, !dbg !4571
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4571
  %25 = load i8, ptr %24, align 1, !dbg !4571
  %26 = icmp eq i8 %25, 8, !dbg !4571
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4571
  %28 = load i8, ptr %27, align 1, !dbg !4571
  %29 = icmp eq i8 %28, 0, !dbg !4571
  %30 = and i1 %26, %29, !dbg !4571
  %31 = and i1 %23, %30, !dbg !4571
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4571, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %32(ptr nonnull @.str.1263), !dbg !4571
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape, align 8, !dbg !4571, !tbaa !4588
  %34 = and i64 %33, 4294967295, !dbg !4571
  %35 = icmp eq i64 %34, 1, !dbg !4571
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4571, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %36(ptr nonnull @.str.1264), !dbg !4571
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape, i64 1, !dbg !4571
  %38 = load i64, ptr %37, align 8, !dbg !4571, !tbaa !4598
  %39 = and i64 %38, 4294967295, !dbg !4571
  %40 = icmp eq i64 %39, 256, !dbg !4571
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4571, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %41(ptr nonnull @.str.1265), !dbg !4571
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape, i64 2, !dbg !4571
  %43 = load i64, ptr %42, align 8, !dbg !4571, !tbaa !4600
  %44 = and i64 %43, 4294967295, !dbg !4571
  %45 = icmp eq i64 %44, 56, !dbg !4571
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4571, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %46(ptr nonnull @.str.1266), !dbg !4571
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.shape, i64 3, !dbg !4571
  %48 = load i64, ptr %47, align 8, !dbg !4571, !tbaa !4603
  %49 = and i64 %48, 4294967295, !dbg !4571
  %50 = icmp eq i64 %49, 56, !dbg !4571
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4571, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %51(ptr nonnull @.str.1267), !dbg !4571
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides, null, !dbg !4571
  br i1 %.not, label %if_end, label %if_then, !dbg !4571, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides, i64 1, !dbg !4571
  %53 = load i64, ptr %52, align 8, !dbg !4571, !tbaa !4605
  %54 = and i64 %53, 4294967295, !dbg !4571
  %55 = icmp eq i64 %54, 3136, !dbg !4571
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides, i64 2, !dbg !4571
  %57 = load i64, ptr %56, align 8, !dbg !4571, !tbaa !4615
  %58 = and i64 %57, 4294967295, !dbg !4571
  %59 = icmp eq i64 %58, 56, !dbg !4571
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p0.strides, i64 3, !dbg !4571
  %61 = load i64, ptr %60, align 8, !dbg !4571, !tbaa !4618
  %62 = and i64 %61, 4294967295, !dbg !4571
  %63 = icmp eq i64 %62, 1, !dbg !4571
  %64 = and i1 %59, %63, !dbg !4571
  %65 = and i1 %55, %64, !dbg !4571
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4571, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4571
  %67 = load i64, ptr %66, align 8, !dbg !4571
  %68 = icmp eq i64 %67, 0, !dbg !4571
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4571, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %69(ptr nonnull @.str.1268), !dbg !4571
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %70(ptr nonnull @.str.1269), !dbg !4571
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4571
  %72 = load i32, ptr %71, align 4, !dbg !4571
  %73 = icmp eq i32 %72, 2, !dbg !4571
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4571, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %74(ptr nonnull @.str.1270), !dbg !4571
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4571
  %76 = load i32, ptr %75, align 4, !dbg !4571
  %77 = icmp eq i32 %76, 4, !dbg !4571
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4571, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %78(ptr nonnull @.str.1271), !dbg !4571
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4571
  %80 = load i16, ptr %79, align 2, !dbg !4571
  %81 = icmp eq i16 %80, 1, !dbg !4571
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4571
  %83 = load i8, ptr %82, align 1, !dbg !4571
  %84 = icmp eq i8 %83, 8, !dbg !4571
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4571
  %86 = load i8, ptr %85, align 1, !dbg !4571
  %87 = icmp eq i8 %86, 0, !dbg !4571
  %88 = and i1 %84, %87, !dbg !4571
  %89 = and i1 %81, %88, !dbg !4571
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4571, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %90(ptr nonnull @.str.1272), !dbg !4571
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape, align 8, !dbg !4571, !tbaa !4620
  %92 = and i64 %91, 4294967295, !dbg !4571
  %93 = icmp eq i64 %92, 512, !dbg !4571
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4571, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %94(ptr nonnull @.str.1273), !dbg !4571
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape, i64 1, !dbg !4571
  %96 = load i64, ptr %95, align 8, !dbg !4571, !tbaa !4630
  %97 = and i64 %96, 4294967295, !dbg !4571
  %98 = icmp eq i64 %97, 256, !dbg !4571
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4571, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %99(ptr nonnull @.str.1274), !dbg !4571
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape, i64 2, !dbg !4571
  %101 = load i64, ptr %100, align 8, !dbg !4571, !tbaa !4632
  %102 = and i64 %101, 4294967295, !dbg !4571
  %103 = icmp eq i64 %102, 1, !dbg !4571
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4571, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %104(ptr nonnull @.str.1275), !dbg !4571
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.shape, i64 3, !dbg !4571
  %106 = load i64, ptr %105, align 8, !dbg !4571, !tbaa !4635
  %107 = and i64 %106, 4294967295, !dbg !4571
  %108 = icmp eq i64 %107, 1, !dbg !4571
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4571, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %109(ptr nonnull @.str.1276), !dbg !4571
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.strides, null, !dbg !4571
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4571, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.strides, align 8, !dbg !4571, !tbaa !4637
  %111 = and i64 %110, 4294967295, !dbg !4571
  %112 = icmp eq i64 %111, 256, !dbg !4571
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.p1.strides, i64 1, !dbg !4571
  %114 = load i64, ptr %113, align 8, !dbg !4571, !tbaa !4647
  %115 = and i64 %114, 4294967295, !dbg !4571
  %116 = icmp eq i64 %115, 1, !dbg !4571
  %117 = and i1 %112, %116, !dbg !4571
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !4571, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4571
  %119 = load i64, ptr %118, align 8, !dbg !4571
  %120 = icmp eq i64 %119, 0, !dbg !4571
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !4571, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %121(ptr nonnull @.str.1277), !dbg !4571
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %122(ptr nonnull @.str.1278), !dbg !4571
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4571
  %124 = load i32, ptr %123, align 4, !dbg !4571
  %125 = icmp eq i32 %124, 2, !dbg !4571
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !4571, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %126(ptr nonnull @.str.1279), !dbg !4571
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4571
  %128 = load i32, ptr %127, align 4, !dbg !4571
  %129 = icmp eq i32 %dev_id, %128, !dbg !4571
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !4571, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %130(ptr nonnull @.str.1280), !dbg !4571
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4571
  %132 = load i32, ptr %131, align 4, !dbg !4571
  %133 = icmp eq i32 %132, 4, !dbg !4571
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !4571, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %134(ptr nonnull @.str.1281), !dbg !4571
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4571
  %136 = load i16, ptr %135, align 2, !dbg !4571
  %137 = icmp eq i16 %136, 1, !dbg !4571
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4571
  %139 = load i8, ptr %138, align 1, !dbg !4571
  %140 = icmp eq i8 %139, 8, !dbg !4571
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4571
  %142 = load i8, ptr %141, align 1, !dbg !4571
  %143 = icmp eq i8 %142, 0, !dbg !4571
  %144 = and i1 %140, %143, !dbg !4571
  %145 = and i1 %137, %144, !dbg !4571
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !4571, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %146(ptr nonnull @.str.1282), !dbg !4571
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape, align 8, !dbg !4571, !tbaa !4649
  %148 = and i64 %147, 4294967295, !dbg !4571
  %149 = icmp eq i64 %148, 1, !dbg !4571
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !4571, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %150(ptr nonnull @.str.1283), !dbg !4571
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape, i64 1, !dbg !4571
  %152 = load i64, ptr %151, align 8, !dbg !4571, !tbaa !4659
  %153 = and i64 %152, 4294967295, !dbg !4571
  %154 = icmp eq i64 %153, 512, !dbg !4571
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !4571, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %155(ptr nonnull @.str.1284), !dbg !4571
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape, i64 2, !dbg !4571
  %157 = load i64, ptr %156, align 8, !dbg !4571, !tbaa !4661
  %158 = and i64 %157, 4294967295, !dbg !4571
  %159 = icmp eq i64 %158, 28, !dbg !4571
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !4571, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %160(ptr nonnull @.str.1285), !dbg !4571
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.shape, i64 3, !dbg !4571
  %162 = load i64, ptr %161, align 8, !dbg !4571, !tbaa !4664
  %163 = and i64 %162, 4294967295, !dbg !4571
  %164 = icmp eq i64 %163, 28, !dbg !4571
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !4571, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %165(ptr nonnull @.str.1286), !dbg !4571
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides, null, !dbg !4571
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4571, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides, i64 1, !dbg !4571
  %167 = load i64, ptr %166, align 8, !dbg !4571, !tbaa !4666
  %168 = and i64 %167, 4294967295, !dbg !4571
  %169 = icmp eq i64 %168, 784, !dbg !4571
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides, i64 2, !dbg !4571
  %171 = load i64, ptr %170, align 8, !dbg !4571, !tbaa !4676
  %172 = and i64 %171, 4294967295, !dbg !4571
  %173 = icmp eq i64 %172, 28, !dbg !4571
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10.T_cast.strides, i64 3, !dbg !4571
  %175 = load i64, ptr %174, align 8, !dbg !4571, !tbaa !4679
  %176 = and i64 %175, 4294967295, !dbg !4571
  %177 = icmp eq i64 %176, 1, !dbg !4571
  %178 = and i1 %173, %177, !dbg !4571
  %179 = and i1 %169, %178, !dbg !4571
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !4571, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4571
  %181 = load i64, ptr %180, align 8, !dbg !4571
  %182 = icmp eq i64 %181, 0, !dbg !4571
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !4571, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %183(ptr nonnull @.str.1287), !dbg !4571
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %184(ptr nonnull @.str.1288), !dbg !4571
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4571
  %186 = load i32, ptr %185, align 4, !dbg !4571
  %187 = icmp eq i32 %186, 2, !dbg !4571
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !4571, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %188(ptr nonnull @.str.1289), !dbg !4571
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4571
  %190 = load i32, ptr %189, align 4, !dbg !4571
  %191 = icmp eq i32 %dev_id, %190, !dbg !4571
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !4571, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4571, !tbaa !19
  tail call void %192(ptr nonnull @.str.1290), !dbg !4571
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4571
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4571, !tbaa !4681
  %193 = sext i32 %dev_id to i64, !dbg !4571
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4571
  store i64 %193, ptr %194, align 8, !dbg !4571
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4571
  store i32 0, ptr %195, align 4, !dbg !4571, !tbaa !4692
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4571
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4571
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4571, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4571
  %.not91 = icmp eq ptr %199, null, !dbg !4571
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4571, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4571, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4571, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4571
  %203 = icmp eq i32 %202, 0, !dbg !4571
  br i1 %203, label %call_end, label %common.ret, !dbg !4571, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !4571
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !4571
  %206 = icmp eq i32 %205, 0, !dbg !4571
  br i1 %206, label %call_end79, label %common.ret, !dbg !4571, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !4571
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4571
  br label %handle_init_end, !dbg !4571

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4571
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4694 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4696, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4697, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4698, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4699, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4701, metadata !DIExpression()), !dbg !4702
  %0 = alloca ptr, align 8, !dbg !4702
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4702
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4702
  %1 = icmp eq i32 %num_args, 3, !dbg !4702
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4702, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4702

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %2(ptr nonnull @.str.1294), !dbg !4702
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4702, !tbaa !4703
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4702
  %p1.code = load i32, ptr %3, align 4, !dbg !4702, !tbaa !4714
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4702
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4702, !tbaa !4716
  %p0 = load ptr, ptr %args, align 8, !dbg !4702
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4702
  %p1 = load ptr, ptr %5, align 8, !dbg !4702
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4702
  %T_cast = load ptr, ptr %6, align 8, !dbg !4702
  %p080 = load ptr, ptr %p0, align 8, !dbg !4702
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4702
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape = load ptr, ptr %7, align 8, !dbg !4702
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides = load ptr, ptr %8, align 8, !dbg !4702
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4702
  %dev_id = load i32, ptr %9, align 4, !dbg !4702
  %p181 = load ptr, ptr %p1, align 8, !dbg !4702
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4702
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape = load ptr, ptr %10, align 8, !dbg !4702
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.strides = load ptr, ptr %11, align 8, !dbg !4702
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4702
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4702
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4702
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4702
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4702
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4702

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %14(ptr nonnull @.str.1295), !dbg !4702
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4702

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %15(ptr nonnull @.str.1296), !dbg !4702
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4702

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %16(ptr nonnull @.str.1297), !dbg !4702
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4702
  %18 = load i32, ptr %17, align 4, !dbg !4702
  %19 = icmp eq i32 %18, 4, !dbg !4702
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4702, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %20(ptr nonnull @.str.1298), !dbg !4702
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4702
  %22 = load i16, ptr %21, align 2, !dbg !4702
  %23 = icmp eq i16 %22, 1, !dbg !4702
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4702
  %25 = load i8, ptr %24, align 1, !dbg !4702
  %26 = icmp eq i8 %25, 8, !dbg !4702
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4702
  %28 = load i8, ptr %27, align 1, !dbg !4702
  %29 = icmp eq i8 %28, 0, !dbg !4702
  %30 = and i1 %26, %29, !dbg !4702
  %31 = and i1 %23, %30, !dbg !4702
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4702, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %32(ptr nonnull @.str.1299), !dbg !4702
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape, align 8, !dbg !4702, !tbaa !4719
  %34 = and i64 %33, 4294967295, !dbg !4702
  %35 = icmp eq i64 %34, 1, !dbg !4702
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4702, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %36(ptr nonnull @.str.1300), !dbg !4702
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape, i64 1, !dbg !4702
  %38 = load i64, ptr %37, align 8, !dbg !4702, !tbaa !4729
  %39 = and i64 %38, 4294967295, !dbg !4702
  %40 = icmp eq i64 %39, 512, !dbg !4702
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4702, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %41(ptr nonnull @.str.1301), !dbg !4702
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape, i64 2, !dbg !4702
  %43 = load i64, ptr %42, align 8, !dbg !4702, !tbaa !4731
  %44 = and i64 %43, 4294967295, !dbg !4702
  %45 = icmp eq i64 %44, 28, !dbg !4702
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4702, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %46(ptr nonnull @.str.1302), !dbg !4702
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.shape, i64 3, !dbg !4702
  %48 = load i64, ptr %47, align 8, !dbg !4702, !tbaa !4734
  %49 = and i64 %48, 4294967295, !dbg !4702
  %50 = icmp eq i64 %49, 28, !dbg !4702
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4702, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %51(ptr nonnull @.str.1303), !dbg !4702
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides, null, !dbg !4702
  br i1 %.not, label %if_end, label %if_then, !dbg !4702, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides, i64 1, !dbg !4702
  %53 = load i64, ptr %52, align 8, !dbg !4702, !tbaa !4736
  %54 = and i64 %53, 4294967295, !dbg !4702
  %55 = icmp eq i64 %54, 784, !dbg !4702
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides, i64 2, !dbg !4702
  %57 = load i64, ptr %56, align 8, !dbg !4702, !tbaa !4746
  %58 = and i64 %57, 4294967295, !dbg !4702
  %59 = icmp eq i64 %58, 28, !dbg !4702
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p0.strides, i64 3, !dbg !4702
  %61 = load i64, ptr %60, align 8, !dbg !4702, !tbaa !4749
  %62 = and i64 %61, 4294967295, !dbg !4702
  %63 = icmp eq i64 %62, 1, !dbg !4702
  %64 = and i1 %59, %63, !dbg !4702
  %65 = and i1 %55, %64, !dbg !4702
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4702, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4702
  %67 = load i64, ptr %66, align 8, !dbg !4702
  %68 = icmp eq i64 %67, 0, !dbg !4702
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4702, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %69(ptr nonnull @.str.1304), !dbg !4702
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %70(ptr nonnull @.str.1305), !dbg !4702
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4702
  %72 = load i32, ptr %71, align 4, !dbg !4702
  %73 = icmp eq i32 %72, 2, !dbg !4702
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4702, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %74(ptr nonnull @.str.1306), !dbg !4702
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4702
  %76 = load i32, ptr %75, align 4, !dbg !4702
  %77 = icmp eq i32 %76, 4, !dbg !4702
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4702, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %78(ptr nonnull @.str.1307), !dbg !4702
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4702
  %80 = load i16, ptr %79, align 2, !dbg !4702
  %81 = icmp eq i16 %80, 1, !dbg !4702
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4702
  %83 = load i8, ptr %82, align 1, !dbg !4702
  %84 = icmp eq i8 %83, 8, !dbg !4702
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4702
  %86 = load i8, ptr %85, align 1, !dbg !4702
  %87 = icmp eq i8 %86, 0, !dbg !4702
  %88 = and i1 %84, %87, !dbg !4702
  %89 = and i1 %81, %88, !dbg !4702
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4702, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %90(ptr nonnull @.str.1308), !dbg !4702
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape, align 8, !dbg !4702, !tbaa !4751
  %92 = and i64 %91, 4294967295, !dbg !4702
  %93 = icmp eq i64 %92, 128, !dbg !4702
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4702, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %94(ptr nonnull @.str.1309), !dbg !4702
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape, i64 1, !dbg !4702
  %96 = load i64, ptr %95, align 8, !dbg !4702, !tbaa !4761
  %97 = and i64 %96, 4294967295, !dbg !4702
  %98 = icmp eq i64 %97, 512, !dbg !4702
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4702, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %99(ptr nonnull @.str.1310), !dbg !4702
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape, i64 2, !dbg !4702
  %101 = load i64, ptr %100, align 8, !dbg !4702, !tbaa !4763
  %102 = and i64 %101, 4294967295, !dbg !4702
  %103 = icmp eq i64 %102, 1, !dbg !4702
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4702, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %104(ptr nonnull @.str.1311), !dbg !4702
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.shape, i64 3, !dbg !4702
  %106 = load i64, ptr %105, align 8, !dbg !4702, !tbaa !4766
  %107 = and i64 %106, 4294967295, !dbg !4702
  %108 = icmp eq i64 %107, 1, !dbg !4702
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4702, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %109(ptr nonnull @.str.1312), !dbg !4702
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.strides, null, !dbg !4702
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4702, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.strides, align 8, !dbg !4702, !tbaa !4768
  %111 = and i64 %110, 4294967295, !dbg !4702
  %112 = icmp eq i64 %111, 512, !dbg !4702
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.p1.strides, i64 1, !dbg !4702
  %114 = load i64, ptr %113, align 8, !dbg !4702, !tbaa !4778
  %115 = and i64 %114, 4294967295, !dbg !4702
  %116 = icmp eq i64 %115, 1, !dbg !4702
  %117 = and i1 %112, %116, !dbg !4702
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !4702, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4702
  %119 = load i64, ptr %118, align 8, !dbg !4702
  %120 = icmp eq i64 %119, 0, !dbg !4702
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !4702, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %121(ptr nonnull @.str.1313), !dbg !4702
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %122(ptr nonnull @.str.1314), !dbg !4702
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4702
  %124 = load i32, ptr %123, align 4, !dbg !4702
  %125 = icmp eq i32 %124, 2, !dbg !4702
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !4702, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %126(ptr nonnull @.str.1315), !dbg !4702
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4702
  %128 = load i32, ptr %127, align 4, !dbg !4702
  %129 = icmp eq i32 %dev_id, %128, !dbg !4702
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !4702, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %130(ptr nonnull @.str.1316), !dbg !4702
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4702
  %132 = load i32, ptr %131, align 4, !dbg !4702
  %133 = icmp eq i32 %132, 4, !dbg !4702
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !4702, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %134(ptr nonnull @.str.1317), !dbg !4702
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4702
  %136 = load i16, ptr %135, align 2, !dbg !4702
  %137 = icmp eq i16 %136, 1, !dbg !4702
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4702
  %139 = load i8, ptr %138, align 1, !dbg !4702
  %140 = icmp eq i8 %139, 8, !dbg !4702
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4702
  %142 = load i8, ptr %141, align 1, !dbg !4702
  %143 = icmp eq i8 %142, 0, !dbg !4702
  %144 = and i1 %140, %143, !dbg !4702
  %145 = and i1 %137, %144, !dbg !4702
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !4702, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %146(ptr nonnull @.str.1318), !dbg !4702
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape, align 8, !dbg !4702, !tbaa !4780
  %148 = and i64 %147, 4294967295, !dbg !4702
  %149 = icmp eq i64 %148, 1, !dbg !4702
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !4702, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %150(ptr nonnull @.str.1319), !dbg !4702
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape, i64 1, !dbg !4702
  %152 = load i64, ptr %151, align 8, !dbg !4702, !tbaa !4790
  %153 = and i64 %152, 4294967295, !dbg !4702
  %154 = icmp eq i64 %153, 128, !dbg !4702
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !4702, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %155(ptr nonnull @.str.1320), !dbg !4702
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape, i64 2, !dbg !4702
  %157 = load i64, ptr %156, align 8, !dbg !4702, !tbaa !4792
  %158 = and i64 %157, 4294967295, !dbg !4702
  %159 = icmp eq i64 %158, 28, !dbg !4702
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !4702, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %160(ptr nonnull @.str.1321), !dbg !4702
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.shape, i64 3, !dbg !4702
  %162 = load i64, ptr %161, align 8, !dbg !4702, !tbaa !4795
  %163 = and i64 %162, 4294967295, !dbg !4702
  %164 = icmp eq i64 %163, 28, !dbg !4702
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !4702, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %165(ptr nonnull @.str.1322), !dbg !4702
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides, null, !dbg !4702
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4702, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides, i64 1, !dbg !4702
  %167 = load i64, ptr %166, align 8, !dbg !4702, !tbaa !4797
  %168 = and i64 %167, 4294967295, !dbg !4702
  %169 = icmp eq i64 %168, 784, !dbg !4702
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides, i64 2, !dbg !4702
  %171 = load i64, ptr %170, align 8, !dbg !4702, !tbaa !4807
  %172 = and i64 %171, 4294967295, !dbg !4702
  %173 = icmp eq i64 %172, 28, !dbg !4702
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11.T_cast.strides, i64 3, !dbg !4702
  %175 = load i64, ptr %174, align 8, !dbg !4702, !tbaa !4810
  %176 = and i64 %175, 4294967295, !dbg !4702
  %177 = icmp eq i64 %176, 1, !dbg !4702
  %178 = and i1 %173, %177, !dbg !4702
  %179 = and i1 %169, %178, !dbg !4702
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !4702, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4702
  %181 = load i64, ptr %180, align 8, !dbg !4702
  %182 = icmp eq i64 %181, 0, !dbg !4702
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !4702, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %183(ptr nonnull @.str.1323), !dbg !4702
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %184(ptr nonnull @.str.1324), !dbg !4702
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4702
  %186 = load i32, ptr %185, align 4, !dbg !4702
  %187 = icmp eq i32 %186, 2, !dbg !4702
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !4702, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %188(ptr nonnull @.str.1325), !dbg !4702
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4702
  %190 = load i32, ptr %189, align 4, !dbg !4702
  %191 = icmp eq i32 %dev_id, %190, !dbg !4702
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !4702, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4702, !tbaa !19
  tail call void %192(ptr nonnull @.str.1326), !dbg !4702
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4702
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4702, !tbaa !4812
  %193 = sext i32 %dev_id to i64, !dbg !4702
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4702
  store i64 %193, ptr %194, align 8, !dbg !4702
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4702
  store i32 0, ptr %195, align 4, !dbg !4702, !tbaa !4823
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4702
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4702
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4702, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4702
  %.not91 = icmp eq ptr %199, null, !dbg !4702
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4702, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4702, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4702, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4702
  %203 = icmp eq i32 %202, 0, !dbg !4702
  br i1 %203, label %call_end, label %common.ret, !dbg !4702, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !4702
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !4702
  %206 = icmp eq i32 %205, 0, !dbg !4702
  br i1 %206, label %call_end79, label %common.ret, !dbg !4702, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !4702
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4702
  br label %handle_init_end, !dbg !4702

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4702
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4825 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4827, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4828, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4829, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4830, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4831, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4832, metadata !DIExpression()), !dbg !4833
  %0 = alloca ptr, align 8, !dbg !4833
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4833
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4833
  %1 = icmp eq i32 %num_args, 3, !dbg !4833
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4833, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4833

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %2(ptr nonnull @.str.1330), !dbg !4833
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4833, !tbaa !4834
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4833
  %p1.code = load i32, ptr %3, align 4, !dbg !4833, !tbaa !4845
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4833
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4833, !tbaa !4847
  %p0 = load ptr, ptr %args, align 8, !dbg !4833
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4833
  %p1 = load ptr, ptr %5, align 8, !dbg !4833
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4833
  %T_cast = load ptr, ptr %6, align 8, !dbg !4833
  %p080 = load ptr, ptr %p0, align 8, !dbg !4833
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4833
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape = load ptr, ptr %7, align 8, !dbg !4833
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides = load ptr, ptr %8, align 8, !dbg !4833
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4833
  %dev_id = load i32, ptr %9, align 4, !dbg !4833
  %p181 = load ptr, ptr %p1, align 8, !dbg !4833
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4833
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape = load ptr, ptr %10, align 8, !dbg !4833
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides = load ptr, ptr %11, align 8, !dbg !4833
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4833
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4833
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4833
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4833
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4833
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4833

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %14(ptr nonnull @.str.1331), !dbg !4833
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4833

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %15(ptr nonnull @.str.1332), !dbg !4833
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4833

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %16(ptr nonnull @.str.1333), !dbg !4833
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4833
  %18 = load i32, ptr %17, align 4, !dbg !4833
  %19 = icmp eq i32 %18, 4, !dbg !4833
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4833, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %20(ptr nonnull @.str.1334), !dbg !4833
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4833
  %22 = load i16, ptr %21, align 2, !dbg !4833
  %23 = icmp eq i16 %22, 1, !dbg !4833
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4833
  %25 = load i8, ptr %24, align 1, !dbg !4833
  %26 = icmp eq i8 %25, 8, !dbg !4833
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4833
  %28 = load i8, ptr %27, align 1, !dbg !4833
  %29 = icmp eq i8 %28, 0, !dbg !4833
  %30 = and i1 %26, %29, !dbg !4833
  %31 = and i1 %23, %30, !dbg !4833
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4833, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %32(ptr nonnull @.str.1335), !dbg !4833
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape, align 8, !dbg !4833, !tbaa !4850
  %34 = and i64 %33, 4294967295, !dbg !4833
  %35 = icmp eq i64 %34, 1, !dbg !4833
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4833, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %36(ptr nonnull @.str.1336), !dbg !4833
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape, i64 1, !dbg !4833
  %38 = load i64, ptr %37, align 8, !dbg !4833, !tbaa !4860
  %39 = and i64 %38, 4294967295, !dbg !4833
  %40 = icmp eq i64 %39, 128, !dbg !4833
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4833, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %41(ptr nonnull @.str.1337), !dbg !4833
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape, i64 2, !dbg !4833
  %43 = load i64, ptr %42, align 8, !dbg !4833, !tbaa !4862
  %44 = and i64 %43, 4294967295, !dbg !4833
  %45 = icmp eq i64 %44, 28, !dbg !4833
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4833, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %46(ptr nonnull @.str.1338), !dbg !4833
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.shape, i64 3, !dbg !4833
  %48 = load i64, ptr %47, align 8, !dbg !4833, !tbaa !4865
  %49 = and i64 %48, 4294967295, !dbg !4833
  %50 = icmp eq i64 %49, 28, !dbg !4833
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4833, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %51(ptr nonnull @.str.1339), !dbg !4833
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides, null, !dbg !4833
  br i1 %.not, label %if_end, label %if_then, !dbg !4833, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides, i64 1, !dbg !4833
  %53 = load i64, ptr %52, align 8, !dbg !4833, !tbaa !4867
  %54 = and i64 %53, 4294967295, !dbg !4833
  %55 = icmp eq i64 %54, 784, !dbg !4833
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides, i64 2, !dbg !4833
  %57 = load i64, ptr %56, align 8, !dbg !4833, !tbaa !4877
  %58 = and i64 %57, 4294967295, !dbg !4833
  %59 = icmp eq i64 %58, 28, !dbg !4833
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p0.strides, i64 3, !dbg !4833
  %61 = load i64, ptr %60, align 8, !dbg !4833, !tbaa !4880
  %62 = and i64 %61, 4294967295, !dbg !4833
  %63 = icmp eq i64 %62, 1, !dbg !4833
  %64 = and i1 %59, %63, !dbg !4833
  %65 = and i1 %55, %64, !dbg !4833
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4833, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4833
  %67 = load i64, ptr %66, align 8, !dbg !4833
  %68 = icmp eq i64 %67, 0, !dbg !4833
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4833, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %69(ptr nonnull @.str.1340), !dbg !4833
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %70(ptr nonnull @.str.1341), !dbg !4833
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4833
  %72 = load i32, ptr %71, align 4, !dbg !4833
  %73 = icmp eq i32 %72, 2, !dbg !4833
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4833, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %74(ptr nonnull @.str.1342), !dbg !4833
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4833
  %76 = load i32, ptr %75, align 4, !dbg !4833
  %77 = icmp eq i32 %76, 4, !dbg !4833
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4833, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %78(ptr nonnull @.str.1343), !dbg !4833
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4833
  %80 = load i16, ptr %79, align 2, !dbg !4833
  %81 = icmp eq i16 %80, 1, !dbg !4833
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4833
  %83 = load i8, ptr %82, align 1, !dbg !4833
  %84 = icmp eq i8 %83, 8, !dbg !4833
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4833
  %86 = load i8, ptr %85, align 1, !dbg !4833
  %87 = icmp eq i8 %86, 0, !dbg !4833
  %88 = and i1 %84, %87, !dbg !4833
  %89 = and i1 %81, %88, !dbg !4833
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4833, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %90(ptr nonnull @.str.1344), !dbg !4833
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape, align 8, !dbg !4833, !tbaa !4882
  %92 = and i64 %91, 4294967295, !dbg !4833
  %93 = icmp eq i64 %92, 128, !dbg !4833
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4833, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %94(ptr nonnull @.str.1345), !dbg !4833
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape, i64 1, !dbg !4833
  %96 = load i64, ptr %95, align 8, !dbg !4833, !tbaa !4892
  %97 = and i64 %96, 4294967295, !dbg !4833
  %98 = icmp eq i64 %97, 128, !dbg !4833
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4833, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %99(ptr nonnull @.str.1346), !dbg !4833
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape, i64 2, !dbg !4833
  %101 = load i64, ptr %100, align 8, !dbg !4833, !tbaa !4894
  %102 = and i64 %101, 4294967295, !dbg !4833
  %103 = icmp eq i64 %102, 3, !dbg !4833
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4833, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %104(ptr nonnull @.str.1347), !dbg !4833
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.shape, i64 3, !dbg !4833
  %106 = load i64, ptr %105, align 8, !dbg !4833, !tbaa !4897
  %107 = and i64 %106, 4294967295, !dbg !4833
  %108 = icmp eq i64 %107, 3, !dbg !4833
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4833, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %109(ptr nonnull @.str.1348), !dbg !4833
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides, null, !dbg !4833
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4833, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides, align 8, !dbg !4833, !tbaa !4899
  %111 = and i64 %110, 4294967295, !dbg !4833
  %112 = icmp eq i64 %111, 1152, !dbg !4833
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides, i64 1, !dbg !4833
  %114 = load i64, ptr %113, align 8, !dbg !4833, !tbaa !4909
  %115 = and i64 %114, 4294967295, !dbg !4833
  %116 = icmp eq i64 %115, 9, !dbg !4833
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides, i64 2, !dbg !4833
  %118 = load i64, ptr %117, align 8, !dbg !4833, !tbaa !4911
  %119 = and i64 %118, 4294967295, !dbg !4833
  %120 = icmp eq i64 %119, 3, !dbg !4833
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.p1.strides, i64 3, !dbg !4833
  %122 = load i64, ptr %121, align 8, !dbg !4833, !tbaa !4914
  %123 = and i64 %122, 4294967295, !dbg !4833
  %124 = icmp eq i64 %123, 1, !dbg !4833
  %125 = and i1 %120, %124, !dbg !4833
  %126 = and i1 %116, %125, !dbg !4833
  %127 = and i1 %112, %126, !dbg !4833
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !4833, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4833
  %129 = load i64, ptr %128, align 8, !dbg !4833
  %130 = icmp eq i64 %129, 0, !dbg !4833
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !4833, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %131(ptr nonnull @.str.1349), !dbg !4833
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %132(ptr nonnull @.str.1350), !dbg !4833
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4833
  %134 = load i32, ptr %133, align 4, !dbg !4833
  %135 = icmp eq i32 %134, 2, !dbg !4833
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !4833, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %136(ptr nonnull @.str.1351), !dbg !4833
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4833
  %138 = load i32, ptr %137, align 4, !dbg !4833
  %139 = icmp eq i32 %dev_id, %138, !dbg !4833
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !4833, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %140(ptr nonnull @.str.1352), !dbg !4833
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4833
  %142 = load i32, ptr %141, align 4, !dbg !4833
  %143 = icmp eq i32 %142, 4, !dbg !4833
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !4833, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %144(ptr nonnull @.str.1353), !dbg !4833
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4833
  %146 = load i16, ptr %145, align 2, !dbg !4833
  %147 = icmp eq i16 %146, 1, !dbg !4833
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4833
  %149 = load i8, ptr %148, align 1, !dbg !4833
  %150 = icmp eq i8 %149, 8, !dbg !4833
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4833
  %152 = load i8, ptr %151, align 1, !dbg !4833
  %153 = icmp eq i8 %152, 0, !dbg !4833
  %154 = and i1 %150, %153, !dbg !4833
  %155 = and i1 %147, %154, !dbg !4833
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !4833, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %156(ptr nonnull @.str.1354), !dbg !4833
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape, align 8, !dbg !4833, !tbaa !4916
  %158 = and i64 %157, 4294967295, !dbg !4833
  %159 = icmp eq i64 %158, 1, !dbg !4833
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !4833, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %160(ptr nonnull @.str.1355), !dbg !4833
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape, i64 1, !dbg !4833
  %162 = load i64, ptr %161, align 8, !dbg !4833, !tbaa !4926
  %163 = and i64 %162, 4294967295, !dbg !4833
  %164 = icmp eq i64 %163, 128, !dbg !4833
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !4833, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %165(ptr nonnull @.str.1356), !dbg !4833
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape, i64 2, !dbg !4833
  %167 = load i64, ptr %166, align 8, !dbg !4833, !tbaa !4928
  %168 = and i64 %167, 4294967295, !dbg !4833
  %169 = icmp eq i64 %168, 28, !dbg !4833
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !4833, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %170(ptr nonnull @.str.1357), !dbg !4833
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.shape, i64 3, !dbg !4833
  %172 = load i64, ptr %171, align 8, !dbg !4833, !tbaa !4931
  %173 = and i64 %172, 4294967295, !dbg !4833
  %174 = icmp eq i64 %173, 28, !dbg !4833
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !4833, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %175(ptr nonnull @.str.1358), !dbg !4833
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides, null, !dbg !4833
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4833, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides, i64 1, !dbg !4833
  %177 = load i64, ptr %176, align 8, !dbg !4833, !tbaa !4933
  %178 = and i64 %177, 4294967295, !dbg !4833
  %179 = icmp eq i64 %178, 784, !dbg !4833
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides, i64 2, !dbg !4833
  %181 = load i64, ptr %180, align 8, !dbg !4833, !tbaa !4943
  %182 = and i64 %181, 4294967295, !dbg !4833
  %183 = icmp eq i64 %182, 28, !dbg !4833
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12.T_cast.strides, i64 3, !dbg !4833
  %185 = load i64, ptr %184, align 8, !dbg !4833, !tbaa !4946
  %186 = and i64 %185, 4294967295, !dbg !4833
  %187 = icmp eq i64 %186, 1, !dbg !4833
  %188 = and i1 %183, %187, !dbg !4833
  %189 = and i1 %179, %188, !dbg !4833
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !4833, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4833
  %191 = load i64, ptr %190, align 8, !dbg !4833
  %192 = icmp eq i64 %191, 0, !dbg !4833
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !4833, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %193(ptr nonnull @.str.1359), !dbg !4833
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %194(ptr nonnull @.str.1360), !dbg !4833
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4833
  %196 = load i32, ptr %195, align 4, !dbg !4833
  %197 = icmp eq i32 %196, 2, !dbg !4833
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !4833, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %198(ptr nonnull @.str.1361), !dbg !4833
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4833
  %200 = load i32, ptr %199, align 4, !dbg !4833
  %201 = icmp eq i32 %dev_id, %200, !dbg !4833
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !4833, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4833, !tbaa !19
  tail call void %202(ptr nonnull @.str.1362), !dbg !4833
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4833
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4833, !tbaa !4948
  %203 = sext i32 %dev_id to i64, !dbg !4833
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4833
  store i64 %203, ptr %204, align 8, !dbg !4833
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4833
  store i32 0, ptr %205, align 4, !dbg !4833, !tbaa !4959
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4833
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4833
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4833, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4833
  %.not91 = icmp eq ptr %209, null, !dbg !4833
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4833, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4833, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4833, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4833
  %213 = icmp eq i32 %212, 0, !dbg !4833
  br i1 %213, label %call_end, label %common.ret, !dbg !4833, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !4833
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !4833
  %216 = icmp eq i32 %215, 0, !dbg !4833
  br i1 %216, label %call_end79, label %common.ret, !dbg !4833, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !4833
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4833
  br label %handle_init_end, !dbg !4833

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4833
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4961 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4963, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4964, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4965, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4966, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4967, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4968, metadata !DIExpression()), !dbg !4969
  %0 = alloca ptr, align 8, !dbg !4969
  %stack_value87 = alloca [16 x %0], align 8, !dbg !4969
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !4969
  %1 = icmp eq i32 %num_args, 3, !dbg !4969
  br i1 %1, label %assert_end, label %assert_fail, !dbg !4969, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !4969

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %2(ptr nonnull @.str.1366), !dbg !4969
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4969, !tbaa !4970
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4969
  %p1.code = load i32, ptr %3, align 4, !dbg !4969, !tbaa !4981
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4969
  %T_cast.code = load i32, ptr %4, align 4, !dbg !4969, !tbaa !4983
  %p0 = load ptr, ptr %args, align 8, !dbg !4969
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4969
  %p1 = load ptr, ptr %5, align 8, !dbg !4969
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4969
  %T_cast = load ptr, ptr %6, align 8, !dbg !4969
  %p080 = load ptr, ptr %p0, align 8, !dbg !4969
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !4969
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape = load ptr, ptr %7, align 8, !dbg !4969
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides = load ptr, ptr %8, align 8, !dbg !4969
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4969
  %dev_id = load i32, ptr %9, align 4, !dbg !4969
  %p181 = load ptr, ptr %p1, align 8, !dbg !4969
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !4969
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape = load ptr, ptr %10, align 8, !dbg !4969
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.strides = load ptr, ptr %11, align 8, !dbg !4969
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !4969
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !4969
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape = load ptr, ptr %12, align 8, !dbg !4969
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4969
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides = load ptr, ptr %13, align 8, !dbg !4969
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !4969

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %14(ptr nonnull @.str.1367), !dbg !4969
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4969

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %15(ptr nonnull @.str.1368), !dbg !4969
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4969

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %16(ptr nonnull @.str.1369), !dbg !4969
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4969
  %18 = load i32, ptr %17, align 4, !dbg !4969
  %19 = icmp eq i32 %18, 4, !dbg !4969
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !4969, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %20(ptr nonnull @.str.1370), !dbg !4969
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4969
  %22 = load i16, ptr %21, align 2, !dbg !4969
  %23 = icmp eq i16 %22, 1, !dbg !4969
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4969
  %25 = load i8, ptr %24, align 1, !dbg !4969
  %26 = icmp eq i8 %25, 8, !dbg !4969
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4969
  %28 = load i8, ptr %27, align 1, !dbg !4969
  %29 = icmp eq i8 %28, 0, !dbg !4969
  %30 = and i1 %26, %29, !dbg !4969
  %31 = and i1 %23, %30, !dbg !4969
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !4969, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %32(ptr nonnull @.str.1371), !dbg !4969
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape, align 8, !dbg !4969, !tbaa !4986
  %34 = and i64 %33, 4294967295, !dbg !4969
  %35 = icmp eq i64 %34, 1, !dbg !4969
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !4969, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %36(ptr nonnull @.str.1372), !dbg !4969
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape, i64 1, !dbg !4969
  %38 = load i64, ptr %37, align 8, !dbg !4969, !tbaa !4996
  %39 = and i64 %38, 4294967295, !dbg !4969
  %40 = icmp eq i64 %39, 512, !dbg !4969
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !4969, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %41(ptr nonnull @.str.1373), !dbg !4969
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape, i64 2, !dbg !4969
  %43 = load i64, ptr %42, align 8, !dbg !4969, !tbaa !4998
  %44 = and i64 %43, 4294967295, !dbg !4969
  %45 = icmp eq i64 %44, 28, !dbg !4969
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !4969, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %46(ptr nonnull @.str.1374), !dbg !4969
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.shape, i64 3, !dbg !4969
  %48 = load i64, ptr %47, align 8, !dbg !4969, !tbaa !5001
  %49 = and i64 %48, 4294967295, !dbg !4969
  %50 = icmp eq i64 %49, 28, !dbg !4969
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !4969, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %51(ptr nonnull @.str.1375), !dbg !4969
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides, null, !dbg !4969
  br i1 %.not, label %if_end, label %if_then, !dbg !4969, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides, i64 1, !dbg !4969
  %53 = load i64, ptr %52, align 8, !dbg !4969, !tbaa !5003
  %54 = and i64 %53, 4294967295, !dbg !4969
  %55 = icmp eq i64 %54, 784, !dbg !4969
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides, i64 2, !dbg !4969
  %57 = load i64, ptr %56, align 8, !dbg !4969, !tbaa !5013
  %58 = and i64 %57, 4294967295, !dbg !4969
  %59 = icmp eq i64 %58, 28, !dbg !4969
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p0.strides, i64 3, !dbg !4969
  %61 = load i64, ptr %60, align 8, !dbg !4969, !tbaa !5016
  %62 = and i64 %61, 4294967295, !dbg !4969
  %63 = icmp eq i64 %62, 1, !dbg !4969
  %64 = and i1 %59, %63, !dbg !4969
  %65 = and i1 %55, %64, !dbg !4969
  br i1 %65, label %if_end, label %assert_fail24, !dbg !4969, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4969
  %67 = load i64, ptr %66, align 8, !dbg !4969
  %68 = icmp eq i64 %67, 0, !dbg !4969
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !4969, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %69(ptr nonnull @.str.1376), !dbg !4969
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %70(ptr nonnull @.str.1377), !dbg !4969
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4969
  %72 = load i32, ptr %71, align 4, !dbg !4969
  %73 = icmp eq i32 %72, 2, !dbg !4969
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !4969, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %74(ptr nonnull @.str.1378), !dbg !4969
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4969
  %76 = load i32, ptr %75, align 4, !dbg !4969
  %77 = icmp eq i32 %76, 4, !dbg !4969
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !4969, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %78(ptr nonnull @.str.1379), !dbg !4969
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4969
  %80 = load i16, ptr %79, align 2, !dbg !4969
  %81 = icmp eq i16 %80, 1, !dbg !4969
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4969
  %83 = load i8, ptr %82, align 1, !dbg !4969
  %84 = icmp eq i8 %83, 8, !dbg !4969
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4969
  %86 = load i8, ptr %85, align 1, !dbg !4969
  %87 = icmp eq i8 %86, 0, !dbg !4969
  %88 = and i1 %84, %87, !dbg !4969
  %89 = and i1 %81, %88, !dbg !4969
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !4969, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %90(ptr nonnull @.str.1380), !dbg !4969
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape, align 8, !dbg !4969, !tbaa !5018
  %92 = and i64 %91, 4294967295, !dbg !4969
  %93 = icmp eq i64 %92, 128, !dbg !4969
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !4969, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %94(ptr nonnull @.str.1381), !dbg !4969
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape, i64 1, !dbg !4969
  %96 = load i64, ptr %95, align 8, !dbg !4969, !tbaa !5028
  %97 = and i64 %96, 4294967295, !dbg !4969
  %98 = icmp eq i64 %97, 512, !dbg !4969
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !4969, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %99(ptr nonnull @.str.1382), !dbg !4969
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape, i64 2, !dbg !4969
  %101 = load i64, ptr %100, align 8, !dbg !4969, !tbaa !5030
  %102 = and i64 %101, 4294967295, !dbg !4969
  %103 = icmp eq i64 %102, 1, !dbg !4969
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !4969, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %104(ptr nonnull @.str.1383), !dbg !4969
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.shape, i64 3, !dbg !4969
  %106 = load i64, ptr %105, align 8, !dbg !4969, !tbaa !5033
  %107 = and i64 %106, 4294967295, !dbg !4969
  %108 = icmp eq i64 %107, 1, !dbg !4969
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !4969, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %109(ptr nonnull @.str.1384), !dbg !4969
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.strides, null, !dbg !4969
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !4969, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.strides, align 8, !dbg !4969, !tbaa !5035
  %111 = and i64 %110, 4294967295, !dbg !4969
  %112 = icmp eq i64 %111, 512, !dbg !4969
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.p1.strides, i64 1, !dbg !4969
  %114 = load i64, ptr %113, align 8, !dbg !4969, !tbaa !5045
  %115 = and i64 %114, 4294967295, !dbg !4969
  %116 = icmp eq i64 %115, 1, !dbg !4969
  %117 = and i1 %112, %116, !dbg !4969
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !4969, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4969
  %119 = load i64, ptr %118, align 8, !dbg !4969
  %120 = icmp eq i64 %119, 0, !dbg !4969
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !4969, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %121(ptr nonnull @.str.1385), !dbg !4969
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %122(ptr nonnull @.str.1386), !dbg !4969
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4969
  %124 = load i32, ptr %123, align 4, !dbg !4969
  %125 = icmp eq i32 %124, 2, !dbg !4969
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !4969, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %126(ptr nonnull @.str.1387), !dbg !4969
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4969
  %128 = load i32, ptr %127, align 4, !dbg !4969
  %129 = icmp eq i32 %dev_id, %128, !dbg !4969
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !4969, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %130(ptr nonnull @.str.1388), !dbg !4969
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4969
  %132 = load i32, ptr %131, align 4, !dbg !4969
  %133 = icmp eq i32 %132, 4, !dbg !4969
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !4969, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %134(ptr nonnull @.str.1389), !dbg !4969
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4969
  %136 = load i16, ptr %135, align 2, !dbg !4969
  %137 = icmp eq i16 %136, 1, !dbg !4969
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4969
  %139 = load i8, ptr %138, align 1, !dbg !4969
  %140 = icmp eq i8 %139, 8, !dbg !4969
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4969
  %142 = load i8, ptr %141, align 1, !dbg !4969
  %143 = icmp eq i8 %142, 0, !dbg !4969
  %144 = and i1 %140, %143, !dbg !4969
  %145 = and i1 %137, %144, !dbg !4969
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !4969, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %146(ptr nonnull @.str.1390), !dbg !4969
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape, align 8, !dbg !4969, !tbaa !5047
  %148 = and i64 %147, 4294967295, !dbg !4969
  %149 = icmp eq i64 %148, 1, !dbg !4969
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !4969, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %150(ptr nonnull @.str.1391), !dbg !4969
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape, i64 1, !dbg !4969
  %152 = load i64, ptr %151, align 8, !dbg !4969, !tbaa !5057
  %153 = and i64 %152, 4294967295, !dbg !4969
  %154 = icmp eq i64 %153, 128, !dbg !4969
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !4969, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %155(ptr nonnull @.str.1392), !dbg !4969
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape, i64 2, !dbg !4969
  %157 = load i64, ptr %156, align 8, !dbg !4969, !tbaa !5059
  %158 = and i64 %157, 4294967295, !dbg !4969
  %159 = icmp eq i64 %158, 28, !dbg !4969
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !4969, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %160(ptr nonnull @.str.1393), !dbg !4969
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.shape, i64 3, !dbg !4969
  %162 = load i64, ptr %161, align 8, !dbg !4969, !tbaa !5062
  %163 = and i64 %162, 4294967295, !dbg !4969
  %164 = icmp eq i64 %163, 28, !dbg !4969
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !4969, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %165(ptr nonnull @.str.1394), !dbg !4969
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides, null, !dbg !4969
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !4969, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides, i64 1, !dbg !4969
  %167 = load i64, ptr %166, align 8, !dbg !4969, !tbaa !5064
  %168 = and i64 %167, 4294967295, !dbg !4969
  %169 = icmp eq i64 %168, 784, !dbg !4969
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides, i64 2, !dbg !4969
  %171 = load i64, ptr %170, align 8, !dbg !4969, !tbaa !5074
  %172 = and i64 %171, 4294967295, !dbg !4969
  %173 = icmp eq i64 %172, 28, !dbg !4969
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13.T_cast.strides, i64 3, !dbg !4969
  %175 = load i64, ptr %174, align 8, !dbg !4969, !tbaa !5077
  %176 = and i64 %175, 4294967295, !dbg !4969
  %177 = icmp eq i64 %176, 1, !dbg !4969
  %178 = and i1 %173, %177, !dbg !4969
  %179 = and i1 %169, %178, !dbg !4969
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !4969, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4969
  %181 = load i64, ptr %180, align 8, !dbg !4969
  %182 = icmp eq i64 %181, 0, !dbg !4969
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !4969, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %183(ptr nonnull @.str.1395), !dbg !4969
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %184(ptr nonnull @.str.1396), !dbg !4969
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4969
  %186 = load i32, ptr %185, align 4, !dbg !4969
  %187 = icmp eq i32 %186, 2, !dbg !4969
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !4969, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %188(ptr nonnull @.str.1397), !dbg !4969
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4969
  %190 = load i32, ptr %189, align 4, !dbg !4969
  %191 = icmp eq i32 %dev_id, %190, !dbg !4969
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !4969, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4969, !tbaa !19
  tail call void %192(ptr nonnull @.str.1398), !dbg !4969
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !4969
  store i32 0, ptr %stack_tcode88, align 4, !dbg !4969, !tbaa !5079
  %193 = sext i32 %dev_id to i64, !dbg !4969
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !4969
  store i64 %193, ptr %194, align 8, !dbg !4969
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !4969
  store i32 0, ptr %195, align 4, !dbg !4969, !tbaa !5090
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !4969
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !4969
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !4969, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4969
  %.not91 = icmp eq ptr %199, null, !dbg !4969
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !4969, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !4969, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !4969, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !4969
  %203 = icmp eq i32 %202, 0, !dbg !4969
  br i1 %203, label %call_end, label %common.ret, !dbg !4969, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !4969
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !4969
  %206 = icmp eq i32 %205, 0, !dbg !4969
  br i1 %206, label %call_end79, label %common.ret, !dbg !4969, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !4969
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !4969
  br label %handle_init_end, !dbg !4969

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !4969
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5092 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5094, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5095, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5096, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5097, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5099, metadata !DIExpression()), !dbg !5100
  %0 = alloca ptr, align 8, !dbg !5100
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5100
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5100
  %1 = icmp eq i32 %num_args, 3, !dbg !5100
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5100, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5100

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %2(ptr nonnull @.str.1402), !dbg !5100
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5100, !tbaa !5101
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5100
  %p1.code = load i32, ptr %3, align 4, !dbg !5100, !tbaa !5112
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5100
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5100, !tbaa !5114
  %p0 = load ptr, ptr %args, align 8, !dbg !5100
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5100
  %p1 = load ptr, ptr %5, align 8, !dbg !5100
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5100
  %T_cast = load ptr, ptr %6, align 8, !dbg !5100
  %p080 = load ptr, ptr %p0, align 8, !dbg !5100
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5100
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape = load ptr, ptr %7, align 8, !dbg !5100
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides = load ptr, ptr %8, align 8, !dbg !5100
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5100
  %dev_id = load i32, ptr %9, align 4, !dbg !5100
  %p181 = load ptr, ptr %p1, align 8, !dbg !5100
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5100
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape = load ptr, ptr %10, align 8, !dbg !5100
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides = load ptr, ptr %11, align 8, !dbg !5100
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5100
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5100
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5100
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5100
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5100
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5100

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %14(ptr nonnull @.str.1403), !dbg !5100
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5100

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %15(ptr nonnull @.str.1404), !dbg !5100
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5100

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %16(ptr nonnull @.str.1405), !dbg !5100
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5100
  %18 = load i32, ptr %17, align 4, !dbg !5100
  %19 = icmp eq i32 %18, 4, !dbg !5100
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5100, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %20(ptr nonnull @.str.1406), !dbg !5100
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5100
  %22 = load i16, ptr %21, align 2, !dbg !5100
  %23 = icmp eq i16 %22, 1, !dbg !5100
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5100
  %25 = load i8, ptr %24, align 1, !dbg !5100
  %26 = icmp eq i8 %25, 8, !dbg !5100
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5100
  %28 = load i8, ptr %27, align 1, !dbg !5100
  %29 = icmp eq i8 %28, 0, !dbg !5100
  %30 = and i1 %26, %29, !dbg !5100
  %31 = and i1 %23, %30, !dbg !5100
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5100, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %32(ptr nonnull @.str.1407), !dbg !5100
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape, align 8, !dbg !5100, !tbaa !5117
  %34 = and i64 %33, 4294967295, !dbg !5100
  %35 = icmp eq i64 %34, 1, !dbg !5100
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5100, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %36(ptr nonnull @.str.1408), !dbg !5100
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape, i64 1, !dbg !5100
  %38 = load i64, ptr %37, align 8, !dbg !5100, !tbaa !5127
  %39 = and i64 %38, 4294967295, !dbg !5100
  %40 = icmp eq i64 %39, 128, !dbg !5100
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5100, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %41(ptr nonnull @.str.1409), !dbg !5100
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape, i64 2, !dbg !5100
  %43 = load i64, ptr %42, align 8, !dbg !5100, !tbaa !5129
  %44 = and i64 %43, 4294967295, !dbg !5100
  %45 = icmp eq i64 %44, 28, !dbg !5100
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5100, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %46(ptr nonnull @.str.1410), !dbg !5100
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.shape, i64 3, !dbg !5100
  %48 = load i64, ptr %47, align 8, !dbg !5100, !tbaa !5132
  %49 = and i64 %48, 4294967295, !dbg !5100
  %50 = icmp eq i64 %49, 28, !dbg !5100
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5100, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %51(ptr nonnull @.str.1411), !dbg !5100
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides, null, !dbg !5100
  br i1 %.not, label %if_end, label %if_then, !dbg !5100, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides, i64 1, !dbg !5100
  %53 = load i64, ptr %52, align 8, !dbg !5100, !tbaa !5134
  %54 = and i64 %53, 4294967295, !dbg !5100
  %55 = icmp eq i64 %54, 784, !dbg !5100
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides, i64 2, !dbg !5100
  %57 = load i64, ptr %56, align 8, !dbg !5100, !tbaa !5144
  %58 = and i64 %57, 4294967295, !dbg !5100
  %59 = icmp eq i64 %58, 28, !dbg !5100
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p0.strides, i64 3, !dbg !5100
  %61 = load i64, ptr %60, align 8, !dbg !5100, !tbaa !5147
  %62 = and i64 %61, 4294967295, !dbg !5100
  %63 = icmp eq i64 %62, 1, !dbg !5100
  %64 = and i1 %59, %63, !dbg !5100
  %65 = and i1 %55, %64, !dbg !5100
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5100, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5100
  %67 = load i64, ptr %66, align 8, !dbg !5100
  %68 = icmp eq i64 %67, 0, !dbg !5100
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5100, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %69(ptr nonnull @.str.1412), !dbg !5100
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %70(ptr nonnull @.str.1413), !dbg !5100
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5100
  %72 = load i32, ptr %71, align 4, !dbg !5100
  %73 = icmp eq i32 %72, 2, !dbg !5100
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5100, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %74(ptr nonnull @.str.1414), !dbg !5100
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5100
  %76 = load i32, ptr %75, align 4, !dbg !5100
  %77 = icmp eq i32 %76, 4, !dbg !5100
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5100, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %78(ptr nonnull @.str.1415), !dbg !5100
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5100
  %80 = load i16, ptr %79, align 2, !dbg !5100
  %81 = icmp eq i16 %80, 1, !dbg !5100
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5100
  %83 = load i8, ptr %82, align 1, !dbg !5100
  %84 = icmp eq i8 %83, 8, !dbg !5100
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5100
  %86 = load i8, ptr %85, align 1, !dbg !5100
  %87 = icmp eq i8 %86, 0, !dbg !5100
  %88 = and i1 %84, %87, !dbg !5100
  %89 = and i1 %81, %88, !dbg !5100
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5100, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %90(ptr nonnull @.str.1416), !dbg !5100
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape, align 8, !dbg !5100, !tbaa !5149
  %92 = and i64 %91, 4294967295, !dbg !5100
  %93 = icmp eq i64 %92, 128, !dbg !5100
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5100, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %94(ptr nonnull @.str.1417), !dbg !5100
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape, i64 1, !dbg !5100
  %96 = load i64, ptr %95, align 8, !dbg !5100, !tbaa !5159
  %97 = and i64 %96, 4294967295, !dbg !5100
  %98 = icmp eq i64 %97, 128, !dbg !5100
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5100, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %99(ptr nonnull @.str.1418), !dbg !5100
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape, i64 2, !dbg !5100
  %101 = load i64, ptr %100, align 8, !dbg !5100, !tbaa !5161
  %102 = and i64 %101, 4294967295, !dbg !5100
  %103 = icmp eq i64 %102, 3, !dbg !5100
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5100, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %104(ptr nonnull @.str.1419), !dbg !5100
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.shape, i64 3, !dbg !5100
  %106 = load i64, ptr %105, align 8, !dbg !5100, !tbaa !5164
  %107 = and i64 %106, 4294967295, !dbg !5100
  %108 = icmp eq i64 %107, 3, !dbg !5100
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5100, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %109(ptr nonnull @.str.1420), !dbg !5100
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides, null, !dbg !5100
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5100, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides, align 8, !dbg !5100, !tbaa !5166
  %111 = and i64 %110, 4294967295, !dbg !5100
  %112 = icmp eq i64 %111, 1152, !dbg !5100
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides, i64 1, !dbg !5100
  %114 = load i64, ptr %113, align 8, !dbg !5100, !tbaa !5176
  %115 = and i64 %114, 4294967295, !dbg !5100
  %116 = icmp eq i64 %115, 9, !dbg !5100
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides, i64 2, !dbg !5100
  %118 = load i64, ptr %117, align 8, !dbg !5100, !tbaa !5178
  %119 = and i64 %118, 4294967295, !dbg !5100
  %120 = icmp eq i64 %119, 3, !dbg !5100
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.p1.strides, i64 3, !dbg !5100
  %122 = load i64, ptr %121, align 8, !dbg !5100, !tbaa !5181
  %123 = and i64 %122, 4294967295, !dbg !5100
  %124 = icmp eq i64 %123, 1, !dbg !5100
  %125 = and i1 %120, %124, !dbg !5100
  %126 = and i1 %116, %125, !dbg !5100
  %127 = and i1 %112, %126, !dbg !5100
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !5100, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5100
  %129 = load i64, ptr %128, align 8, !dbg !5100
  %130 = icmp eq i64 %129, 0, !dbg !5100
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !5100, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %131(ptr nonnull @.str.1421), !dbg !5100
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %132(ptr nonnull @.str.1422), !dbg !5100
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5100
  %134 = load i32, ptr %133, align 4, !dbg !5100
  %135 = icmp eq i32 %134, 2, !dbg !5100
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !5100, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %136(ptr nonnull @.str.1423), !dbg !5100
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5100
  %138 = load i32, ptr %137, align 4, !dbg !5100
  %139 = icmp eq i32 %dev_id, %138, !dbg !5100
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !5100, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %140(ptr nonnull @.str.1424), !dbg !5100
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5100
  %142 = load i32, ptr %141, align 4, !dbg !5100
  %143 = icmp eq i32 %142, 4, !dbg !5100
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !5100, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %144(ptr nonnull @.str.1425), !dbg !5100
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5100
  %146 = load i16, ptr %145, align 2, !dbg !5100
  %147 = icmp eq i16 %146, 1, !dbg !5100
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5100
  %149 = load i8, ptr %148, align 1, !dbg !5100
  %150 = icmp eq i8 %149, 8, !dbg !5100
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5100
  %152 = load i8, ptr %151, align 1, !dbg !5100
  %153 = icmp eq i8 %152, 0, !dbg !5100
  %154 = and i1 %150, %153, !dbg !5100
  %155 = and i1 %147, %154, !dbg !5100
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !5100, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %156(ptr nonnull @.str.1426), !dbg !5100
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape, align 8, !dbg !5100, !tbaa !5183
  %158 = and i64 %157, 4294967295, !dbg !5100
  %159 = icmp eq i64 %158, 1, !dbg !5100
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !5100, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %160(ptr nonnull @.str.1427), !dbg !5100
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape, i64 1, !dbg !5100
  %162 = load i64, ptr %161, align 8, !dbg !5100, !tbaa !5193
  %163 = and i64 %162, 4294967295, !dbg !5100
  %164 = icmp eq i64 %163, 128, !dbg !5100
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !5100, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %165(ptr nonnull @.str.1428), !dbg !5100
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape, i64 2, !dbg !5100
  %167 = load i64, ptr %166, align 8, !dbg !5100, !tbaa !5195
  %168 = and i64 %167, 4294967295, !dbg !5100
  %169 = icmp eq i64 %168, 28, !dbg !5100
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !5100, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %170(ptr nonnull @.str.1429), !dbg !5100
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.shape, i64 3, !dbg !5100
  %172 = load i64, ptr %171, align 8, !dbg !5100, !tbaa !5198
  %173 = and i64 %172, 4294967295, !dbg !5100
  %174 = icmp eq i64 %173, 28, !dbg !5100
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !5100, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %175(ptr nonnull @.str.1430), !dbg !5100
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides, null, !dbg !5100
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5100, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides, i64 1, !dbg !5100
  %177 = load i64, ptr %176, align 8, !dbg !5100, !tbaa !5200
  %178 = and i64 %177, 4294967295, !dbg !5100
  %179 = icmp eq i64 %178, 784, !dbg !5100
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides, i64 2, !dbg !5100
  %181 = load i64, ptr %180, align 8, !dbg !5100, !tbaa !5210
  %182 = and i64 %181, 4294967295, !dbg !5100
  %183 = icmp eq i64 %182, 28, !dbg !5100
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14.T_cast.strides, i64 3, !dbg !5100
  %185 = load i64, ptr %184, align 8, !dbg !5100, !tbaa !5213
  %186 = and i64 %185, 4294967295, !dbg !5100
  %187 = icmp eq i64 %186, 1, !dbg !5100
  %188 = and i1 %183, %187, !dbg !5100
  %189 = and i1 %179, %188, !dbg !5100
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !5100, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5100
  %191 = load i64, ptr %190, align 8, !dbg !5100
  %192 = icmp eq i64 %191, 0, !dbg !5100
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !5100, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %193(ptr nonnull @.str.1431), !dbg !5100
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %194(ptr nonnull @.str.1432), !dbg !5100
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5100
  %196 = load i32, ptr %195, align 4, !dbg !5100
  %197 = icmp eq i32 %196, 2, !dbg !5100
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !5100, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %198(ptr nonnull @.str.1433), !dbg !5100
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5100
  %200 = load i32, ptr %199, align 4, !dbg !5100
  %201 = icmp eq i32 %dev_id, %200, !dbg !5100
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !5100, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5100, !tbaa !19
  tail call void %202(ptr nonnull @.str.1434), !dbg !5100
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5100
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5100, !tbaa !5215
  %203 = sext i32 %dev_id to i64, !dbg !5100
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5100
  store i64 %203, ptr %204, align 8, !dbg !5100
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5100
  store i32 0, ptr %205, align 4, !dbg !5100, !tbaa !5226
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5100
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5100
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5100, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5100
  %.not91 = icmp eq ptr %209, null, !dbg !5100
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5100, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5100, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5100, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5100
  %213 = icmp eq i32 %212, 0, !dbg !5100
  br i1 %213, label %call_end, label %common.ret, !dbg !5100, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !5100
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !5100
  %216 = icmp eq i32 %215, 0, !dbg !5100
  br i1 %216, label %call_end79, label %common.ret, !dbg !5100, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !5100
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5100
  br label %handle_init_end, !dbg !5100

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5100
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5228 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5230, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5231, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5232, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5233, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5235, metadata !DIExpression()), !dbg !5236
  %0 = alloca ptr, align 8, !dbg !5236
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5236
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5236
  %1 = icmp eq i32 %num_args, 3, !dbg !5236
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5236, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5236

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %2(ptr nonnull @.str.1438), !dbg !5236
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5236, !tbaa !5237
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5236
  %p1.code = load i32, ptr %3, align 4, !dbg !5236, !tbaa !5248
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5236
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5236, !tbaa !5250
  %p0 = load ptr, ptr %args, align 8, !dbg !5236
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5236
  %p1 = load ptr, ptr %5, align 8, !dbg !5236
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5236
  %T_cast = load ptr, ptr %6, align 8, !dbg !5236
  %p080 = load ptr, ptr %p0, align 8, !dbg !5236
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5236
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape = load ptr, ptr %7, align 8, !dbg !5236
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides = load ptr, ptr %8, align 8, !dbg !5236
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5236
  %dev_id = load i32, ptr %9, align 4, !dbg !5236
  %p181 = load ptr, ptr %p1, align 8, !dbg !5236
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5236
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape = load ptr, ptr %10, align 8, !dbg !5236
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.strides = load ptr, ptr %11, align 8, !dbg !5236
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5236
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5236
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5236
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5236
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5236
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5236

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %14(ptr nonnull @.str.1439), !dbg !5236
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5236

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %15(ptr nonnull @.str.1440), !dbg !5236
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5236

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %16(ptr nonnull @.str.1441), !dbg !5236
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5236
  %18 = load i32, ptr %17, align 4, !dbg !5236
  %19 = icmp eq i32 %18, 4, !dbg !5236
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5236, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %20(ptr nonnull @.str.1442), !dbg !5236
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5236
  %22 = load i16, ptr %21, align 2, !dbg !5236
  %23 = icmp eq i16 %22, 1, !dbg !5236
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5236
  %25 = load i8, ptr %24, align 1, !dbg !5236
  %26 = icmp eq i8 %25, 8, !dbg !5236
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5236
  %28 = load i8, ptr %27, align 1, !dbg !5236
  %29 = icmp eq i8 %28, 0, !dbg !5236
  %30 = and i1 %26, %29, !dbg !5236
  %31 = and i1 %23, %30, !dbg !5236
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5236, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %32(ptr nonnull @.str.1443), !dbg !5236
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape, align 8, !dbg !5236, !tbaa !5253
  %34 = and i64 %33, 4294967295, !dbg !5236
  %35 = icmp eq i64 %34, 1, !dbg !5236
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5236, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %36(ptr nonnull @.str.1444), !dbg !5236
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape, i64 1, !dbg !5236
  %38 = load i64, ptr %37, align 8, !dbg !5236, !tbaa !5263
  %39 = and i64 %38, 4294967295, !dbg !5236
  %40 = icmp eq i64 %39, 512, !dbg !5236
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5236, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %41(ptr nonnull @.str.1445), !dbg !5236
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape, i64 2, !dbg !5236
  %43 = load i64, ptr %42, align 8, !dbg !5236, !tbaa !5265
  %44 = and i64 %43, 4294967295, !dbg !5236
  %45 = icmp eq i64 %44, 28, !dbg !5236
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5236, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %46(ptr nonnull @.str.1446), !dbg !5236
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.shape, i64 3, !dbg !5236
  %48 = load i64, ptr %47, align 8, !dbg !5236, !tbaa !5268
  %49 = and i64 %48, 4294967295, !dbg !5236
  %50 = icmp eq i64 %49, 28, !dbg !5236
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5236, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %51(ptr nonnull @.str.1447), !dbg !5236
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides, null, !dbg !5236
  br i1 %.not, label %if_end, label %if_then, !dbg !5236, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides, i64 1, !dbg !5236
  %53 = load i64, ptr %52, align 8, !dbg !5236, !tbaa !5270
  %54 = and i64 %53, 4294967295, !dbg !5236
  %55 = icmp eq i64 %54, 784, !dbg !5236
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides, i64 2, !dbg !5236
  %57 = load i64, ptr %56, align 8, !dbg !5236, !tbaa !5280
  %58 = and i64 %57, 4294967295, !dbg !5236
  %59 = icmp eq i64 %58, 28, !dbg !5236
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p0.strides, i64 3, !dbg !5236
  %61 = load i64, ptr %60, align 8, !dbg !5236, !tbaa !5283
  %62 = and i64 %61, 4294967295, !dbg !5236
  %63 = icmp eq i64 %62, 1, !dbg !5236
  %64 = and i1 %59, %63, !dbg !5236
  %65 = and i1 %55, %64, !dbg !5236
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5236, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5236
  %67 = load i64, ptr %66, align 8, !dbg !5236
  %68 = icmp eq i64 %67, 0, !dbg !5236
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5236, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %69(ptr nonnull @.str.1448), !dbg !5236
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %70(ptr nonnull @.str.1449), !dbg !5236
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5236
  %72 = load i32, ptr %71, align 4, !dbg !5236
  %73 = icmp eq i32 %72, 2, !dbg !5236
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5236, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %74(ptr nonnull @.str.1450), !dbg !5236
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5236
  %76 = load i32, ptr %75, align 4, !dbg !5236
  %77 = icmp eq i32 %76, 4, !dbg !5236
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5236, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %78(ptr nonnull @.str.1451), !dbg !5236
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5236
  %80 = load i16, ptr %79, align 2, !dbg !5236
  %81 = icmp eq i16 %80, 1, !dbg !5236
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5236
  %83 = load i8, ptr %82, align 1, !dbg !5236
  %84 = icmp eq i8 %83, 8, !dbg !5236
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5236
  %86 = load i8, ptr %85, align 1, !dbg !5236
  %87 = icmp eq i8 %86, 0, !dbg !5236
  %88 = and i1 %84, %87, !dbg !5236
  %89 = and i1 %81, %88, !dbg !5236
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5236, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %90(ptr nonnull @.str.1452), !dbg !5236
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape, align 8, !dbg !5236, !tbaa !5285
  %92 = and i64 %91, 4294967295, !dbg !5236
  %93 = icmp eq i64 %92, 256, !dbg !5236
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5236, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %94(ptr nonnull @.str.1453), !dbg !5236
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape, i64 1, !dbg !5236
  %96 = load i64, ptr %95, align 8, !dbg !5236, !tbaa !5295
  %97 = and i64 %96, 4294967295, !dbg !5236
  %98 = icmp eq i64 %97, 512, !dbg !5236
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5236, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %99(ptr nonnull @.str.1454), !dbg !5236
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape, i64 2, !dbg !5236
  %101 = load i64, ptr %100, align 8, !dbg !5236, !tbaa !5297
  %102 = and i64 %101, 4294967295, !dbg !5236
  %103 = icmp eq i64 %102, 1, !dbg !5236
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5236, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %104(ptr nonnull @.str.1455), !dbg !5236
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.shape, i64 3, !dbg !5236
  %106 = load i64, ptr %105, align 8, !dbg !5236, !tbaa !5300
  %107 = and i64 %106, 4294967295, !dbg !5236
  %108 = icmp eq i64 %107, 1, !dbg !5236
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5236, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %109(ptr nonnull @.str.1456), !dbg !5236
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.strides, null, !dbg !5236
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5236, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.strides, align 8, !dbg !5236, !tbaa !5302
  %111 = and i64 %110, 4294967295, !dbg !5236
  %112 = icmp eq i64 %111, 512, !dbg !5236
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.p1.strides, i64 1, !dbg !5236
  %114 = load i64, ptr %113, align 8, !dbg !5236, !tbaa !5312
  %115 = and i64 %114, 4294967295, !dbg !5236
  %116 = icmp eq i64 %115, 1, !dbg !5236
  %117 = and i1 %112, %116, !dbg !5236
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !5236, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5236
  %119 = load i64, ptr %118, align 8, !dbg !5236
  %120 = icmp eq i64 %119, 0, !dbg !5236
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !5236, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %121(ptr nonnull @.str.1457), !dbg !5236
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %122(ptr nonnull @.str.1458), !dbg !5236
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5236
  %124 = load i32, ptr %123, align 4, !dbg !5236
  %125 = icmp eq i32 %124, 2, !dbg !5236
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !5236, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %126(ptr nonnull @.str.1459), !dbg !5236
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5236
  %128 = load i32, ptr %127, align 4, !dbg !5236
  %129 = icmp eq i32 %dev_id, %128, !dbg !5236
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !5236, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %130(ptr nonnull @.str.1460), !dbg !5236
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5236
  %132 = load i32, ptr %131, align 4, !dbg !5236
  %133 = icmp eq i32 %132, 4, !dbg !5236
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !5236, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %134(ptr nonnull @.str.1461), !dbg !5236
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5236
  %136 = load i16, ptr %135, align 2, !dbg !5236
  %137 = icmp eq i16 %136, 1, !dbg !5236
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5236
  %139 = load i8, ptr %138, align 1, !dbg !5236
  %140 = icmp eq i8 %139, 8, !dbg !5236
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5236
  %142 = load i8, ptr %141, align 1, !dbg !5236
  %143 = icmp eq i8 %142, 0, !dbg !5236
  %144 = and i1 %140, %143, !dbg !5236
  %145 = and i1 %137, %144, !dbg !5236
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !5236, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %146(ptr nonnull @.str.1462), !dbg !5236
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape, align 8, !dbg !5236, !tbaa !5314
  %148 = and i64 %147, 4294967295, !dbg !5236
  %149 = icmp eq i64 %148, 1, !dbg !5236
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !5236, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %150(ptr nonnull @.str.1463), !dbg !5236
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape, i64 1, !dbg !5236
  %152 = load i64, ptr %151, align 8, !dbg !5236, !tbaa !5324
  %153 = and i64 %152, 4294967295, !dbg !5236
  %154 = icmp eq i64 %153, 256, !dbg !5236
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !5236, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %155(ptr nonnull @.str.1464), !dbg !5236
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape, i64 2, !dbg !5236
  %157 = load i64, ptr %156, align 8, !dbg !5236, !tbaa !5326
  %158 = and i64 %157, 4294967295, !dbg !5236
  %159 = icmp eq i64 %158, 28, !dbg !5236
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !5236, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %160(ptr nonnull @.str.1465), !dbg !5236
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.shape, i64 3, !dbg !5236
  %162 = load i64, ptr %161, align 8, !dbg !5236, !tbaa !5329
  %163 = and i64 %162, 4294967295, !dbg !5236
  %164 = icmp eq i64 %163, 28, !dbg !5236
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !5236, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %165(ptr nonnull @.str.1466), !dbg !5236
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides, null, !dbg !5236
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5236, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides, i64 1, !dbg !5236
  %167 = load i64, ptr %166, align 8, !dbg !5236, !tbaa !5331
  %168 = and i64 %167, 4294967295, !dbg !5236
  %169 = icmp eq i64 %168, 784, !dbg !5236
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides, i64 2, !dbg !5236
  %171 = load i64, ptr %170, align 8, !dbg !5236, !tbaa !5341
  %172 = and i64 %171, 4294967295, !dbg !5236
  %173 = icmp eq i64 %172, 28, !dbg !5236
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15.T_cast.strides, i64 3, !dbg !5236
  %175 = load i64, ptr %174, align 8, !dbg !5236, !tbaa !5344
  %176 = and i64 %175, 4294967295, !dbg !5236
  %177 = icmp eq i64 %176, 1, !dbg !5236
  %178 = and i1 %173, %177, !dbg !5236
  %179 = and i1 %169, %178, !dbg !5236
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !5236, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5236
  %181 = load i64, ptr %180, align 8, !dbg !5236
  %182 = icmp eq i64 %181, 0, !dbg !5236
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !5236, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %183(ptr nonnull @.str.1467), !dbg !5236
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %184(ptr nonnull @.str.1468), !dbg !5236
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5236
  %186 = load i32, ptr %185, align 4, !dbg !5236
  %187 = icmp eq i32 %186, 2, !dbg !5236
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !5236, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %188(ptr nonnull @.str.1469), !dbg !5236
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5236
  %190 = load i32, ptr %189, align 4, !dbg !5236
  %191 = icmp eq i32 %dev_id, %190, !dbg !5236
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !5236, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5236, !tbaa !19
  tail call void %192(ptr nonnull @.str.1470), !dbg !5236
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5236
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5236, !tbaa !5346
  %193 = sext i32 %dev_id to i64, !dbg !5236
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5236
  store i64 %193, ptr %194, align 8, !dbg !5236
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5236
  store i32 0, ptr %195, align 4, !dbg !5236, !tbaa !5357
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5236
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5236
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5236, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5236
  %.not91 = icmp eq ptr %199, null, !dbg !5236
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5236, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5236, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5236, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5236
  %203 = icmp eq i32 %202, 0, !dbg !5236
  br i1 %203, label %call_end, label %common.ret, !dbg !5236, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !5236
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !5236
  %206 = icmp eq i32 %205, 0, !dbg !5236
  br i1 %206, label %call_end79, label %common.ret, !dbg !5236, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !5236
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5236
  br label %handle_init_end, !dbg !5236

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5236
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5359 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5361, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5362, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5363, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5364, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5365, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5366, metadata !DIExpression()), !dbg !5367
  %0 = alloca ptr, align 8, !dbg !5367
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5367
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5367
  %1 = icmp eq i32 %num_args, 3, !dbg !5367
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5367, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5367

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %2(ptr nonnull @.str.1474), !dbg !5367
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5367, !tbaa !5368
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5367
  %p1.code = load i32, ptr %3, align 4, !dbg !5367, !tbaa !5379
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5367
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5367, !tbaa !5381
  %p0 = load ptr, ptr %args, align 8, !dbg !5367
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5367
  %p1 = load ptr, ptr %5, align 8, !dbg !5367
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5367
  %T_cast = load ptr, ptr %6, align 8, !dbg !5367
  %p080 = load ptr, ptr %p0, align 8, !dbg !5367
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5367
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape = load ptr, ptr %7, align 8, !dbg !5367
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides = load ptr, ptr %8, align 8, !dbg !5367
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5367
  %dev_id = load i32, ptr %9, align 4, !dbg !5367
  %p181 = load ptr, ptr %p1, align 8, !dbg !5367
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5367
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape = load ptr, ptr %10, align 8, !dbg !5367
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides = load ptr, ptr %11, align 8, !dbg !5367
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5367
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5367
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5367
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5367
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5367
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5367

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %14(ptr nonnull @.str.1475), !dbg !5367
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5367

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %15(ptr nonnull @.str.1476), !dbg !5367
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5367

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %16(ptr nonnull @.str.1477), !dbg !5367
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5367
  %18 = load i32, ptr %17, align 4, !dbg !5367
  %19 = icmp eq i32 %18, 4, !dbg !5367
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5367, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %20(ptr nonnull @.str.1478), !dbg !5367
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5367
  %22 = load i16, ptr %21, align 2, !dbg !5367
  %23 = icmp eq i16 %22, 1, !dbg !5367
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5367
  %25 = load i8, ptr %24, align 1, !dbg !5367
  %26 = icmp eq i8 %25, 8, !dbg !5367
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5367
  %28 = load i8, ptr %27, align 1, !dbg !5367
  %29 = icmp eq i8 %28, 0, !dbg !5367
  %30 = and i1 %26, %29, !dbg !5367
  %31 = and i1 %23, %30, !dbg !5367
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5367, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %32(ptr nonnull @.str.1479), !dbg !5367
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape, align 8, !dbg !5367, !tbaa !5384
  %34 = and i64 %33, 4294967295, !dbg !5367
  %35 = icmp eq i64 %34, 1, !dbg !5367
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5367, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %36(ptr nonnull @.str.1480), !dbg !5367
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape, i64 1, !dbg !5367
  %38 = load i64, ptr %37, align 8, !dbg !5367, !tbaa !5394
  %39 = and i64 %38, 4294967295, !dbg !5367
  %40 = icmp eq i64 %39, 256, !dbg !5367
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5367, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %41(ptr nonnull @.str.1481), !dbg !5367
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape, i64 2, !dbg !5367
  %43 = load i64, ptr %42, align 8, !dbg !5367, !tbaa !5396
  %44 = and i64 %43, 4294967295, !dbg !5367
  %45 = icmp eq i64 %44, 28, !dbg !5367
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5367, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %46(ptr nonnull @.str.1482), !dbg !5367
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.shape, i64 3, !dbg !5367
  %48 = load i64, ptr %47, align 8, !dbg !5367, !tbaa !5399
  %49 = and i64 %48, 4294967295, !dbg !5367
  %50 = icmp eq i64 %49, 28, !dbg !5367
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5367, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %51(ptr nonnull @.str.1483), !dbg !5367
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides, null, !dbg !5367
  br i1 %.not, label %if_end, label %if_then, !dbg !5367, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides, i64 1, !dbg !5367
  %53 = load i64, ptr %52, align 8, !dbg !5367, !tbaa !5401
  %54 = and i64 %53, 4294967295, !dbg !5367
  %55 = icmp eq i64 %54, 784, !dbg !5367
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides, i64 2, !dbg !5367
  %57 = load i64, ptr %56, align 8, !dbg !5367, !tbaa !5411
  %58 = and i64 %57, 4294967295, !dbg !5367
  %59 = icmp eq i64 %58, 28, !dbg !5367
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p0.strides, i64 3, !dbg !5367
  %61 = load i64, ptr %60, align 8, !dbg !5367, !tbaa !5414
  %62 = and i64 %61, 4294967295, !dbg !5367
  %63 = icmp eq i64 %62, 1, !dbg !5367
  %64 = and i1 %59, %63, !dbg !5367
  %65 = and i1 %55, %64, !dbg !5367
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5367, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5367
  %67 = load i64, ptr %66, align 8, !dbg !5367
  %68 = icmp eq i64 %67, 0, !dbg !5367
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5367, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %69(ptr nonnull @.str.1484), !dbg !5367
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %70(ptr nonnull @.str.1485), !dbg !5367
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5367
  %72 = load i32, ptr %71, align 4, !dbg !5367
  %73 = icmp eq i32 %72, 2, !dbg !5367
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5367, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %74(ptr nonnull @.str.1486), !dbg !5367
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5367
  %76 = load i32, ptr %75, align 4, !dbg !5367
  %77 = icmp eq i32 %76, 4, !dbg !5367
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5367, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %78(ptr nonnull @.str.1487), !dbg !5367
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5367
  %80 = load i16, ptr %79, align 2, !dbg !5367
  %81 = icmp eq i16 %80, 1, !dbg !5367
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5367
  %83 = load i8, ptr %82, align 1, !dbg !5367
  %84 = icmp eq i8 %83, 8, !dbg !5367
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5367
  %86 = load i8, ptr %85, align 1, !dbg !5367
  %87 = icmp eq i8 %86, 0, !dbg !5367
  %88 = and i1 %84, %87, !dbg !5367
  %89 = and i1 %81, %88, !dbg !5367
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5367, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %90(ptr nonnull @.str.1488), !dbg !5367
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape, align 8, !dbg !5367, !tbaa !5416
  %92 = and i64 %91, 4294967295, !dbg !5367
  %93 = icmp eq i64 %92, 256, !dbg !5367
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5367, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %94(ptr nonnull @.str.1489), !dbg !5367
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape, i64 1, !dbg !5367
  %96 = load i64, ptr %95, align 8, !dbg !5367, !tbaa !5426
  %97 = and i64 %96, 4294967295, !dbg !5367
  %98 = icmp eq i64 %97, 256, !dbg !5367
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5367, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %99(ptr nonnull @.str.1490), !dbg !5367
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape, i64 2, !dbg !5367
  %101 = load i64, ptr %100, align 8, !dbg !5367, !tbaa !5428
  %102 = and i64 %101, 4294967295, !dbg !5367
  %103 = icmp eq i64 %102, 3, !dbg !5367
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5367, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %104(ptr nonnull @.str.1491), !dbg !5367
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.shape, i64 3, !dbg !5367
  %106 = load i64, ptr %105, align 8, !dbg !5367, !tbaa !5431
  %107 = and i64 %106, 4294967295, !dbg !5367
  %108 = icmp eq i64 %107, 3, !dbg !5367
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5367, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %109(ptr nonnull @.str.1492), !dbg !5367
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides, null, !dbg !5367
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5367, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides, align 8, !dbg !5367, !tbaa !5433
  %111 = and i64 %110, 4294967295, !dbg !5367
  %112 = icmp eq i64 %111, 2304, !dbg !5367
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides, i64 1, !dbg !5367
  %114 = load i64, ptr %113, align 8, !dbg !5367, !tbaa !5443
  %115 = and i64 %114, 4294967295, !dbg !5367
  %116 = icmp eq i64 %115, 9, !dbg !5367
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides, i64 2, !dbg !5367
  %118 = load i64, ptr %117, align 8, !dbg !5367, !tbaa !5445
  %119 = and i64 %118, 4294967295, !dbg !5367
  %120 = icmp eq i64 %119, 3, !dbg !5367
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.p1.strides, i64 3, !dbg !5367
  %122 = load i64, ptr %121, align 8, !dbg !5367, !tbaa !5448
  %123 = and i64 %122, 4294967295, !dbg !5367
  %124 = icmp eq i64 %123, 1, !dbg !5367
  %125 = and i1 %120, %124, !dbg !5367
  %126 = and i1 %116, %125, !dbg !5367
  %127 = and i1 %112, %126, !dbg !5367
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !5367, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5367
  %129 = load i64, ptr %128, align 8, !dbg !5367
  %130 = icmp eq i64 %129, 0, !dbg !5367
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !5367, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %131(ptr nonnull @.str.1493), !dbg !5367
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %132(ptr nonnull @.str.1494), !dbg !5367
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5367
  %134 = load i32, ptr %133, align 4, !dbg !5367
  %135 = icmp eq i32 %134, 2, !dbg !5367
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !5367, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %136(ptr nonnull @.str.1495), !dbg !5367
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5367
  %138 = load i32, ptr %137, align 4, !dbg !5367
  %139 = icmp eq i32 %dev_id, %138, !dbg !5367
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !5367, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %140(ptr nonnull @.str.1496), !dbg !5367
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5367
  %142 = load i32, ptr %141, align 4, !dbg !5367
  %143 = icmp eq i32 %142, 4, !dbg !5367
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !5367, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %144(ptr nonnull @.str.1497), !dbg !5367
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5367
  %146 = load i16, ptr %145, align 2, !dbg !5367
  %147 = icmp eq i16 %146, 1, !dbg !5367
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5367
  %149 = load i8, ptr %148, align 1, !dbg !5367
  %150 = icmp eq i8 %149, 8, !dbg !5367
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5367
  %152 = load i8, ptr %151, align 1, !dbg !5367
  %153 = icmp eq i8 %152, 0, !dbg !5367
  %154 = and i1 %150, %153, !dbg !5367
  %155 = and i1 %147, %154, !dbg !5367
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !5367, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %156(ptr nonnull @.str.1498), !dbg !5367
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape, align 8, !dbg !5367, !tbaa !5450
  %158 = and i64 %157, 4294967295, !dbg !5367
  %159 = icmp eq i64 %158, 1, !dbg !5367
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !5367, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %160(ptr nonnull @.str.1499), !dbg !5367
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape, i64 1, !dbg !5367
  %162 = load i64, ptr %161, align 8, !dbg !5367, !tbaa !5460
  %163 = and i64 %162, 4294967295, !dbg !5367
  %164 = icmp eq i64 %163, 256, !dbg !5367
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !5367, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %165(ptr nonnull @.str.1500), !dbg !5367
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape, i64 2, !dbg !5367
  %167 = load i64, ptr %166, align 8, !dbg !5367, !tbaa !5462
  %168 = and i64 %167, 4294967295, !dbg !5367
  %169 = icmp eq i64 %168, 14, !dbg !5367
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !5367, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %170(ptr nonnull @.str.1501), !dbg !5367
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.shape, i64 3, !dbg !5367
  %172 = load i64, ptr %171, align 8, !dbg !5367, !tbaa !5465
  %173 = and i64 %172, 4294967295, !dbg !5367
  %174 = icmp eq i64 %173, 14, !dbg !5367
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !5367, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %175(ptr nonnull @.str.1502), !dbg !5367
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides, null, !dbg !5367
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5367, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides, i64 1, !dbg !5367
  %177 = load i64, ptr %176, align 8, !dbg !5367, !tbaa !5467
  %178 = and i64 %177, 4294967295, !dbg !5367
  %179 = icmp eq i64 %178, 196, !dbg !5367
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides, i64 2, !dbg !5367
  %181 = load i64, ptr %180, align 8, !dbg !5367, !tbaa !5477
  %182 = and i64 %181, 4294967295, !dbg !5367
  %183 = icmp eq i64 %182, 14, !dbg !5367
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16.T_cast.strides, i64 3, !dbg !5367
  %185 = load i64, ptr %184, align 8, !dbg !5367, !tbaa !5480
  %186 = and i64 %185, 4294967295, !dbg !5367
  %187 = icmp eq i64 %186, 1, !dbg !5367
  %188 = and i1 %183, %187, !dbg !5367
  %189 = and i1 %179, %188, !dbg !5367
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !5367, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5367
  %191 = load i64, ptr %190, align 8, !dbg !5367
  %192 = icmp eq i64 %191, 0, !dbg !5367
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !5367, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %193(ptr nonnull @.str.1503), !dbg !5367
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %194(ptr nonnull @.str.1504), !dbg !5367
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5367
  %196 = load i32, ptr %195, align 4, !dbg !5367
  %197 = icmp eq i32 %196, 2, !dbg !5367
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !5367, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %198(ptr nonnull @.str.1505), !dbg !5367
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5367
  %200 = load i32, ptr %199, align 4, !dbg !5367
  %201 = icmp eq i32 %dev_id, %200, !dbg !5367
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !5367, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5367, !tbaa !19
  tail call void %202(ptr nonnull @.str.1506), !dbg !5367
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5367
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5367, !tbaa !5482
  %203 = sext i32 %dev_id to i64, !dbg !5367
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5367
  store i64 %203, ptr %204, align 8, !dbg !5367
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5367
  store i32 0, ptr %205, align 4, !dbg !5367, !tbaa !5493
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5367
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5367
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5367, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5367
  %.not91 = icmp eq ptr %209, null, !dbg !5367
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5367, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5367, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5367, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5367
  %213 = icmp eq i32 %212, 0, !dbg !5367
  br i1 %213, label %call_end, label %common.ret, !dbg !5367, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !5367
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !5367
  %216 = icmp eq i32 %215, 0, !dbg !5367
  br i1 %216, label %call_end79, label %common.ret, !dbg !5367, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !5367
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5367
  br label %handle_init_end, !dbg !5367

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5367
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5495 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5497, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5498, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5499, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5500, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5501, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5502, metadata !DIExpression()), !dbg !5503
  %0 = alloca ptr, align 8, !dbg !5503
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5503
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5503
  %1 = icmp eq i32 %num_args, 3, !dbg !5503
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5503, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5503

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %2(ptr nonnull @.str.1510), !dbg !5503
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5503, !tbaa !5504
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5503
  %p1.code = load i32, ptr %3, align 4, !dbg !5503, !tbaa !5515
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5503
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5503, !tbaa !5517
  %p0 = load ptr, ptr %args, align 8, !dbg !5503
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5503
  %p1 = load ptr, ptr %5, align 8, !dbg !5503
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5503
  %T_cast = load ptr, ptr %6, align 8, !dbg !5503
  %p080 = load ptr, ptr %p0, align 8, !dbg !5503
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5503
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape = load ptr, ptr %7, align 8, !dbg !5503
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides = load ptr, ptr %8, align 8, !dbg !5503
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5503
  %dev_id = load i32, ptr %9, align 4, !dbg !5503
  %p181 = load ptr, ptr %p1, align 8, !dbg !5503
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5503
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape = load ptr, ptr %10, align 8, !dbg !5503
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.strides = load ptr, ptr %11, align 8, !dbg !5503
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5503
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5503
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5503
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5503
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5503
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5503

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %14(ptr nonnull @.str.1511), !dbg !5503
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5503

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %15(ptr nonnull @.str.1512), !dbg !5503
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5503

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %16(ptr nonnull @.str.1513), !dbg !5503
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5503
  %18 = load i32, ptr %17, align 4, !dbg !5503
  %19 = icmp eq i32 %18, 4, !dbg !5503
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5503, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %20(ptr nonnull @.str.1514), !dbg !5503
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5503
  %22 = load i16, ptr %21, align 2, !dbg !5503
  %23 = icmp eq i16 %22, 1, !dbg !5503
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5503
  %25 = load i8, ptr %24, align 1, !dbg !5503
  %26 = icmp eq i8 %25, 8, !dbg !5503
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5503
  %28 = load i8, ptr %27, align 1, !dbg !5503
  %29 = icmp eq i8 %28, 0, !dbg !5503
  %30 = and i1 %26, %29, !dbg !5503
  %31 = and i1 %23, %30, !dbg !5503
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5503, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %32(ptr nonnull @.str.1515), !dbg !5503
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape, align 8, !dbg !5503, !tbaa !5520
  %34 = and i64 %33, 4294967295, !dbg !5503
  %35 = icmp eq i64 %34, 1, !dbg !5503
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5503, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %36(ptr nonnull @.str.1516), !dbg !5503
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape, i64 1, !dbg !5503
  %38 = load i64, ptr %37, align 8, !dbg !5503, !tbaa !5530
  %39 = and i64 %38, 4294967295, !dbg !5503
  %40 = icmp eq i64 %39, 256, !dbg !5503
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5503, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %41(ptr nonnull @.str.1517), !dbg !5503
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape, i64 2, !dbg !5503
  %43 = load i64, ptr %42, align 8, !dbg !5503, !tbaa !5532
  %44 = and i64 %43, 4294967295, !dbg !5503
  %45 = icmp eq i64 %44, 14, !dbg !5503
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5503, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %46(ptr nonnull @.str.1518), !dbg !5503
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.shape, i64 3, !dbg !5503
  %48 = load i64, ptr %47, align 8, !dbg !5503, !tbaa !5535
  %49 = and i64 %48, 4294967295, !dbg !5503
  %50 = icmp eq i64 %49, 14, !dbg !5503
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5503, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %51(ptr nonnull @.str.1519), !dbg !5503
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides, null, !dbg !5503
  br i1 %.not, label %if_end, label %if_then, !dbg !5503, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides, i64 1, !dbg !5503
  %53 = load i64, ptr %52, align 8, !dbg !5503, !tbaa !5537
  %54 = and i64 %53, 4294967295, !dbg !5503
  %55 = icmp eq i64 %54, 196, !dbg !5503
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides, i64 2, !dbg !5503
  %57 = load i64, ptr %56, align 8, !dbg !5503, !tbaa !5547
  %58 = and i64 %57, 4294967295, !dbg !5503
  %59 = icmp eq i64 %58, 14, !dbg !5503
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p0.strides, i64 3, !dbg !5503
  %61 = load i64, ptr %60, align 8, !dbg !5503, !tbaa !5550
  %62 = and i64 %61, 4294967295, !dbg !5503
  %63 = icmp eq i64 %62, 1, !dbg !5503
  %64 = and i1 %59, %63, !dbg !5503
  %65 = and i1 %55, %64, !dbg !5503
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5503, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5503
  %67 = load i64, ptr %66, align 8, !dbg !5503
  %68 = icmp eq i64 %67, 0, !dbg !5503
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5503, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %69(ptr nonnull @.str.1520), !dbg !5503
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %70(ptr nonnull @.str.1521), !dbg !5503
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5503
  %72 = load i32, ptr %71, align 4, !dbg !5503
  %73 = icmp eq i32 %72, 2, !dbg !5503
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5503, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %74(ptr nonnull @.str.1522), !dbg !5503
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5503
  %76 = load i32, ptr %75, align 4, !dbg !5503
  %77 = icmp eq i32 %76, 4, !dbg !5503
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5503, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %78(ptr nonnull @.str.1523), !dbg !5503
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5503
  %80 = load i16, ptr %79, align 2, !dbg !5503
  %81 = icmp eq i16 %80, 1, !dbg !5503
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5503
  %83 = load i8, ptr %82, align 1, !dbg !5503
  %84 = icmp eq i8 %83, 8, !dbg !5503
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5503
  %86 = load i8, ptr %85, align 1, !dbg !5503
  %87 = icmp eq i8 %86, 0, !dbg !5503
  %88 = and i1 %84, %87, !dbg !5503
  %89 = and i1 %81, %88, !dbg !5503
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5503, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %90(ptr nonnull @.str.1524), !dbg !5503
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape, align 8, !dbg !5503, !tbaa !5552
  %92 = and i64 %91, 4294967295, !dbg !5503
  %93 = icmp eq i64 %92, 1024, !dbg !5503
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5503, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %94(ptr nonnull @.str.1525), !dbg !5503
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape, i64 1, !dbg !5503
  %96 = load i64, ptr %95, align 8, !dbg !5503, !tbaa !5562
  %97 = and i64 %96, 4294967295, !dbg !5503
  %98 = icmp eq i64 %97, 256, !dbg !5503
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5503, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %99(ptr nonnull @.str.1526), !dbg !5503
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape, i64 2, !dbg !5503
  %101 = load i64, ptr %100, align 8, !dbg !5503, !tbaa !5564
  %102 = and i64 %101, 4294967295, !dbg !5503
  %103 = icmp eq i64 %102, 1, !dbg !5503
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5503, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %104(ptr nonnull @.str.1527), !dbg !5503
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.shape, i64 3, !dbg !5503
  %106 = load i64, ptr %105, align 8, !dbg !5503, !tbaa !5567
  %107 = and i64 %106, 4294967295, !dbg !5503
  %108 = icmp eq i64 %107, 1, !dbg !5503
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5503, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %109(ptr nonnull @.str.1528), !dbg !5503
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.strides, null, !dbg !5503
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5503, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.strides, align 8, !dbg !5503, !tbaa !5569
  %111 = and i64 %110, 4294967295, !dbg !5503
  %112 = icmp eq i64 %111, 256, !dbg !5503
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.p1.strides, i64 1, !dbg !5503
  %114 = load i64, ptr %113, align 8, !dbg !5503, !tbaa !5579
  %115 = and i64 %114, 4294967295, !dbg !5503
  %116 = icmp eq i64 %115, 1, !dbg !5503
  %117 = and i1 %112, %116, !dbg !5503
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !5503, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5503
  %119 = load i64, ptr %118, align 8, !dbg !5503
  %120 = icmp eq i64 %119, 0, !dbg !5503
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !5503, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %121(ptr nonnull @.str.1529), !dbg !5503
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %122(ptr nonnull @.str.1530), !dbg !5503
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5503
  %124 = load i32, ptr %123, align 4, !dbg !5503
  %125 = icmp eq i32 %124, 2, !dbg !5503
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !5503, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %126(ptr nonnull @.str.1531), !dbg !5503
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5503
  %128 = load i32, ptr %127, align 4, !dbg !5503
  %129 = icmp eq i32 %dev_id, %128, !dbg !5503
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !5503, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %130(ptr nonnull @.str.1532), !dbg !5503
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5503
  %132 = load i32, ptr %131, align 4, !dbg !5503
  %133 = icmp eq i32 %132, 4, !dbg !5503
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !5503, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %134(ptr nonnull @.str.1533), !dbg !5503
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5503
  %136 = load i16, ptr %135, align 2, !dbg !5503
  %137 = icmp eq i16 %136, 1, !dbg !5503
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5503
  %139 = load i8, ptr %138, align 1, !dbg !5503
  %140 = icmp eq i8 %139, 8, !dbg !5503
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5503
  %142 = load i8, ptr %141, align 1, !dbg !5503
  %143 = icmp eq i8 %142, 0, !dbg !5503
  %144 = and i1 %140, %143, !dbg !5503
  %145 = and i1 %137, %144, !dbg !5503
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !5503, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %146(ptr nonnull @.str.1534), !dbg !5503
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape, align 8, !dbg !5503, !tbaa !5581
  %148 = and i64 %147, 4294967295, !dbg !5503
  %149 = icmp eq i64 %148, 1, !dbg !5503
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !5503, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %150(ptr nonnull @.str.1535), !dbg !5503
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape, i64 1, !dbg !5503
  %152 = load i64, ptr %151, align 8, !dbg !5503, !tbaa !5591
  %153 = and i64 %152, 4294967295, !dbg !5503
  %154 = icmp eq i64 %153, 1024, !dbg !5503
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !5503, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %155(ptr nonnull @.str.1536), !dbg !5503
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape, i64 2, !dbg !5503
  %157 = load i64, ptr %156, align 8, !dbg !5503, !tbaa !5593
  %158 = and i64 %157, 4294967295, !dbg !5503
  %159 = icmp eq i64 %158, 14, !dbg !5503
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !5503, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %160(ptr nonnull @.str.1537), !dbg !5503
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.shape, i64 3, !dbg !5503
  %162 = load i64, ptr %161, align 8, !dbg !5503, !tbaa !5596
  %163 = and i64 %162, 4294967295, !dbg !5503
  %164 = icmp eq i64 %163, 14, !dbg !5503
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !5503, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %165(ptr nonnull @.str.1538), !dbg !5503
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides, null, !dbg !5503
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5503, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides, i64 1, !dbg !5503
  %167 = load i64, ptr %166, align 8, !dbg !5503, !tbaa !5598
  %168 = and i64 %167, 4294967295, !dbg !5503
  %169 = icmp eq i64 %168, 196, !dbg !5503
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides, i64 2, !dbg !5503
  %171 = load i64, ptr %170, align 8, !dbg !5503, !tbaa !5608
  %172 = and i64 %171, 4294967295, !dbg !5503
  %173 = icmp eq i64 %172, 14, !dbg !5503
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17.T_cast.strides, i64 3, !dbg !5503
  %175 = load i64, ptr %174, align 8, !dbg !5503, !tbaa !5611
  %176 = and i64 %175, 4294967295, !dbg !5503
  %177 = icmp eq i64 %176, 1, !dbg !5503
  %178 = and i1 %173, %177, !dbg !5503
  %179 = and i1 %169, %178, !dbg !5503
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !5503, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5503
  %181 = load i64, ptr %180, align 8, !dbg !5503
  %182 = icmp eq i64 %181, 0, !dbg !5503
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !5503, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %183(ptr nonnull @.str.1539), !dbg !5503
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %184(ptr nonnull @.str.1540), !dbg !5503
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5503
  %186 = load i32, ptr %185, align 4, !dbg !5503
  %187 = icmp eq i32 %186, 2, !dbg !5503
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !5503, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %188(ptr nonnull @.str.1541), !dbg !5503
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5503
  %190 = load i32, ptr %189, align 4, !dbg !5503
  %191 = icmp eq i32 %dev_id, %190, !dbg !5503
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !5503, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5503, !tbaa !19
  tail call void %192(ptr nonnull @.str.1542), !dbg !5503
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5503
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5503, !tbaa !5613
  %193 = sext i32 %dev_id to i64, !dbg !5503
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5503
  store i64 %193, ptr %194, align 8, !dbg !5503
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5503
  store i32 0, ptr %195, align 4, !dbg !5503, !tbaa !5624
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5503
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5503
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5503, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5503
  %.not91 = icmp eq ptr %199, null, !dbg !5503
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5503, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5503, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5503, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5503
  %203 = icmp eq i32 %202, 0, !dbg !5503
  br i1 %203, label %call_end, label %common.ret, !dbg !5503, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !5503
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !5503
  %206 = icmp eq i32 %205, 0, !dbg !5503
  br i1 %206, label %call_end79, label %common.ret, !dbg !5503, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !5503
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5503
  br label %handle_init_end, !dbg !5503

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5503
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5626 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5628, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5629, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5630, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5631, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5632, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5633, metadata !DIExpression()), !dbg !5634
  %0 = alloca ptr, align 8, !dbg !5634
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5634
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5634
  %1 = icmp eq i32 %num_args, 3, !dbg !5634
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5634, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5634

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %2(ptr nonnull @.str.1546), !dbg !5634
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5634, !tbaa !5635
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5634
  %p1.code = load i32, ptr %3, align 4, !dbg !5634, !tbaa !5646
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5634
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5634, !tbaa !5648
  %p0 = load ptr, ptr %args, align 8, !dbg !5634
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5634
  %p1 = load ptr, ptr %5, align 8, !dbg !5634
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5634
  %T_cast = load ptr, ptr %6, align 8, !dbg !5634
  %p080 = load ptr, ptr %p0, align 8, !dbg !5634
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5634
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape = load ptr, ptr %7, align 8, !dbg !5634
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides = load ptr, ptr %8, align 8, !dbg !5634
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5634
  %dev_id = load i32, ptr %9, align 4, !dbg !5634
  %p181 = load ptr, ptr %p1, align 8, !dbg !5634
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5634
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape = load ptr, ptr %10, align 8, !dbg !5634
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.strides = load ptr, ptr %11, align 8, !dbg !5634
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5634
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5634
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5634
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5634
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5634
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5634

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %14(ptr nonnull @.str.1547), !dbg !5634
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5634

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %15(ptr nonnull @.str.1548), !dbg !5634
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5634

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %16(ptr nonnull @.str.1549), !dbg !5634
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5634
  %18 = load i32, ptr %17, align 4, !dbg !5634
  %19 = icmp eq i32 %18, 4, !dbg !5634
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5634, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %20(ptr nonnull @.str.1550), !dbg !5634
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5634
  %22 = load i16, ptr %21, align 2, !dbg !5634
  %23 = icmp eq i16 %22, 1, !dbg !5634
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5634
  %25 = load i8, ptr %24, align 1, !dbg !5634
  %26 = icmp eq i8 %25, 8, !dbg !5634
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5634
  %28 = load i8, ptr %27, align 1, !dbg !5634
  %29 = icmp eq i8 %28, 0, !dbg !5634
  %30 = and i1 %26, %29, !dbg !5634
  %31 = and i1 %23, %30, !dbg !5634
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5634, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %32(ptr nonnull @.str.1551), !dbg !5634
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape, align 8, !dbg !5634, !tbaa !5651
  %34 = and i64 %33, 4294967295, !dbg !5634
  %35 = icmp eq i64 %34, 1, !dbg !5634
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5634, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %36(ptr nonnull @.str.1552), !dbg !5634
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape, i64 1, !dbg !5634
  %38 = load i64, ptr %37, align 8, !dbg !5634, !tbaa !5661
  %39 = and i64 %38, 4294967295, !dbg !5634
  %40 = icmp eq i64 %39, 512, !dbg !5634
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5634, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %41(ptr nonnull @.str.1553), !dbg !5634
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape, i64 2, !dbg !5634
  %43 = load i64, ptr %42, align 8, !dbg !5634, !tbaa !5663
  %44 = and i64 %43, 4294967295, !dbg !5634
  %45 = icmp eq i64 %44, 28, !dbg !5634
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5634, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %46(ptr nonnull @.str.1554), !dbg !5634
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.shape, i64 3, !dbg !5634
  %48 = load i64, ptr %47, align 8, !dbg !5634, !tbaa !5666
  %49 = and i64 %48, 4294967295, !dbg !5634
  %50 = icmp eq i64 %49, 28, !dbg !5634
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5634, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %51(ptr nonnull @.str.1555), !dbg !5634
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides, null, !dbg !5634
  br i1 %.not, label %if_end, label %if_then, !dbg !5634, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides, i64 1, !dbg !5634
  %53 = load i64, ptr %52, align 8, !dbg !5634, !tbaa !5668
  %54 = and i64 %53, 4294967295, !dbg !5634
  %55 = icmp eq i64 %54, 784, !dbg !5634
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides, i64 2, !dbg !5634
  %57 = load i64, ptr %56, align 8, !dbg !5634, !tbaa !5678
  %58 = and i64 %57, 4294967295, !dbg !5634
  %59 = icmp eq i64 %58, 28, !dbg !5634
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p0.strides, i64 3, !dbg !5634
  %61 = load i64, ptr %60, align 8, !dbg !5634, !tbaa !5681
  %62 = and i64 %61, 4294967295, !dbg !5634
  %63 = icmp eq i64 %62, 1, !dbg !5634
  %64 = and i1 %59, %63, !dbg !5634
  %65 = and i1 %55, %64, !dbg !5634
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5634, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5634
  %67 = load i64, ptr %66, align 8, !dbg !5634
  %68 = icmp eq i64 %67, 0, !dbg !5634
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5634, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %69(ptr nonnull @.str.1556), !dbg !5634
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %70(ptr nonnull @.str.1557), !dbg !5634
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5634
  %72 = load i32, ptr %71, align 4, !dbg !5634
  %73 = icmp eq i32 %72, 2, !dbg !5634
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5634, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %74(ptr nonnull @.str.1558), !dbg !5634
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5634
  %76 = load i32, ptr %75, align 4, !dbg !5634
  %77 = icmp eq i32 %76, 4, !dbg !5634
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5634, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %78(ptr nonnull @.str.1559), !dbg !5634
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5634
  %80 = load i16, ptr %79, align 2, !dbg !5634
  %81 = icmp eq i16 %80, 1, !dbg !5634
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5634
  %83 = load i8, ptr %82, align 1, !dbg !5634
  %84 = icmp eq i8 %83, 8, !dbg !5634
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5634
  %86 = load i8, ptr %85, align 1, !dbg !5634
  %87 = icmp eq i8 %86, 0, !dbg !5634
  %88 = and i1 %84, %87, !dbg !5634
  %89 = and i1 %81, %88, !dbg !5634
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5634, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %90(ptr nonnull @.str.1560), !dbg !5634
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape, align 8, !dbg !5634, !tbaa !5683
  %92 = and i64 %91, 4294967295, !dbg !5634
  %93 = icmp eq i64 %92, 1024, !dbg !5634
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5634, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %94(ptr nonnull @.str.1561), !dbg !5634
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape, i64 1, !dbg !5634
  %96 = load i64, ptr %95, align 8, !dbg !5634, !tbaa !5693
  %97 = and i64 %96, 4294967295, !dbg !5634
  %98 = icmp eq i64 %97, 512, !dbg !5634
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5634, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %99(ptr nonnull @.str.1562), !dbg !5634
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape, i64 2, !dbg !5634
  %101 = load i64, ptr %100, align 8, !dbg !5634, !tbaa !5695
  %102 = and i64 %101, 4294967295, !dbg !5634
  %103 = icmp eq i64 %102, 1, !dbg !5634
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5634, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %104(ptr nonnull @.str.1563), !dbg !5634
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.shape, i64 3, !dbg !5634
  %106 = load i64, ptr %105, align 8, !dbg !5634, !tbaa !5698
  %107 = and i64 %106, 4294967295, !dbg !5634
  %108 = icmp eq i64 %107, 1, !dbg !5634
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5634, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %109(ptr nonnull @.str.1564), !dbg !5634
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.strides, null, !dbg !5634
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5634, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.strides, align 8, !dbg !5634, !tbaa !5700
  %111 = and i64 %110, 4294967295, !dbg !5634
  %112 = icmp eq i64 %111, 512, !dbg !5634
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.p1.strides, i64 1, !dbg !5634
  %114 = load i64, ptr %113, align 8, !dbg !5634, !tbaa !5710
  %115 = and i64 %114, 4294967295, !dbg !5634
  %116 = icmp eq i64 %115, 1, !dbg !5634
  %117 = and i1 %112, %116, !dbg !5634
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !5634, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5634
  %119 = load i64, ptr %118, align 8, !dbg !5634
  %120 = icmp eq i64 %119, 0, !dbg !5634
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !5634, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %121(ptr nonnull @.str.1565), !dbg !5634
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %122(ptr nonnull @.str.1566), !dbg !5634
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5634
  %124 = load i32, ptr %123, align 4, !dbg !5634
  %125 = icmp eq i32 %124, 2, !dbg !5634
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !5634, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %126(ptr nonnull @.str.1567), !dbg !5634
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5634
  %128 = load i32, ptr %127, align 4, !dbg !5634
  %129 = icmp eq i32 %dev_id, %128, !dbg !5634
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !5634, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %130(ptr nonnull @.str.1568), !dbg !5634
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5634
  %132 = load i32, ptr %131, align 4, !dbg !5634
  %133 = icmp eq i32 %132, 4, !dbg !5634
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !5634, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %134(ptr nonnull @.str.1569), !dbg !5634
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5634
  %136 = load i16, ptr %135, align 2, !dbg !5634
  %137 = icmp eq i16 %136, 1, !dbg !5634
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5634
  %139 = load i8, ptr %138, align 1, !dbg !5634
  %140 = icmp eq i8 %139, 8, !dbg !5634
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5634
  %142 = load i8, ptr %141, align 1, !dbg !5634
  %143 = icmp eq i8 %142, 0, !dbg !5634
  %144 = and i1 %140, %143, !dbg !5634
  %145 = and i1 %137, %144, !dbg !5634
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !5634, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %146(ptr nonnull @.str.1570), !dbg !5634
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape, align 8, !dbg !5634, !tbaa !5712
  %148 = and i64 %147, 4294967295, !dbg !5634
  %149 = icmp eq i64 %148, 1, !dbg !5634
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !5634, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %150(ptr nonnull @.str.1571), !dbg !5634
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape, i64 1, !dbg !5634
  %152 = load i64, ptr %151, align 8, !dbg !5634, !tbaa !5722
  %153 = and i64 %152, 4294967295, !dbg !5634
  %154 = icmp eq i64 %153, 1024, !dbg !5634
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !5634, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %155(ptr nonnull @.str.1572), !dbg !5634
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape, i64 2, !dbg !5634
  %157 = load i64, ptr %156, align 8, !dbg !5634, !tbaa !5724
  %158 = and i64 %157, 4294967295, !dbg !5634
  %159 = icmp eq i64 %158, 14, !dbg !5634
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !5634, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %160(ptr nonnull @.str.1573), !dbg !5634
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.shape, i64 3, !dbg !5634
  %162 = load i64, ptr %161, align 8, !dbg !5634, !tbaa !5727
  %163 = and i64 %162, 4294967295, !dbg !5634
  %164 = icmp eq i64 %163, 14, !dbg !5634
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !5634, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %165(ptr nonnull @.str.1574), !dbg !5634
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides, null, !dbg !5634
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5634, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides, i64 1, !dbg !5634
  %167 = load i64, ptr %166, align 8, !dbg !5634, !tbaa !5729
  %168 = and i64 %167, 4294967295, !dbg !5634
  %169 = icmp eq i64 %168, 196, !dbg !5634
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides, i64 2, !dbg !5634
  %171 = load i64, ptr %170, align 8, !dbg !5634, !tbaa !5739
  %172 = and i64 %171, 4294967295, !dbg !5634
  %173 = icmp eq i64 %172, 14, !dbg !5634
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18.T_cast.strides, i64 3, !dbg !5634
  %175 = load i64, ptr %174, align 8, !dbg !5634, !tbaa !5742
  %176 = and i64 %175, 4294967295, !dbg !5634
  %177 = icmp eq i64 %176, 1, !dbg !5634
  %178 = and i1 %173, %177, !dbg !5634
  %179 = and i1 %169, %178, !dbg !5634
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !5634, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5634
  %181 = load i64, ptr %180, align 8, !dbg !5634
  %182 = icmp eq i64 %181, 0, !dbg !5634
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !5634, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %183(ptr nonnull @.str.1575), !dbg !5634
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %184(ptr nonnull @.str.1576), !dbg !5634
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5634
  %186 = load i32, ptr %185, align 4, !dbg !5634
  %187 = icmp eq i32 %186, 2, !dbg !5634
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !5634, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %188(ptr nonnull @.str.1577), !dbg !5634
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5634
  %190 = load i32, ptr %189, align 4, !dbg !5634
  %191 = icmp eq i32 %dev_id, %190, !dbg !5634
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !5634, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5634, !tbaa !19
  tail call void %192(ptr nonnull @.str.1578), !dbg !5634
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5634
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5634, !tbaa !5744
  %193 = sext i32 %dev_id to i64, !dbg !5634
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5634
  store i64 %193, ptr %194, align 8, !dbg !5634
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5634
  store i32 0, ptr %195, align 4, !dbg !5634, !tbaa !5755
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5634
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5634
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5634, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5634
  %.not91 = icmp eq ptr %199, null, !dbg !5634
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5634, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5634, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5634, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5634
  %203 = icmp eq i32 %202, 0, !dbg !5634
  br i1 %203, label %call_end, label %common.ret, !dbg !5634, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !5634
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !5634
  %206 = icmp eq i32 %205, 0, !dbg !5634
  br i1 %206, label %call_end79, label %common.ret, !dbg !5634, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !5634
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5634
  br label %handle_init_end, !dbg !5634

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5634
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5757 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5759, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5760, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5761, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5762, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5763, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5764, metadata !DIExpression()), !dbg !5765
  %0 = alloca ptr, align 8, !dbg !5765
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5765
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5765
  %1 = icmp eq i32 %num_args, 3, !dbg !5765
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5765, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5765

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %2(ptr nonnull @.str.1582), !dbg !5765
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5765, !tbaa !5766
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5765
  %p1.code = load i32, ptr %3, align 4, !dbg !5765, !tbaa !5777
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5765
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5765, !tbaa !5779
  %p0 = load ptr, ptr %args, align 8, !dbg !5765
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5765
  %p1 = load ptr, ptr %5, align 8, !dbg !5765
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5765
  %T_cast = load ptr, ptr %6, align 8, !dbg !5765
  %p080 = load ptr, ptr %p0, align 8, !dbg !5765
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5765
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape = load ptr, ptr %7, align 8, !dbg !5765
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides = load ptr, ptr %8, align 8, !dbg !5765
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5765
  %dev_id = load i32, ptr %9, align 4, !dbg !5765
  %p181 = load ptr, ptr %p1, align 8, !dbg !5765
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5765
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape = load ptr, ptr %10, align 8, !dbg !5765
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.strides = load ptr, ptr %11, align 8, !dbg !5765
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5765
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5765
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5765
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5765
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5765
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5765

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %14(ptr nonnull @.str.1583), !dbg !5765
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5765

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %15(ptr nonnull @.str.1584), !dbg !5765
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5765

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %16(ptr nonnull @.str.1585), !dbg !5765
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5765
  %18 = load i32, ptr %17, align 4, !dbg !5765
  %19 = icmp eq i32 %18, 4, !dbg !5765
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5765, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %20(ptr nonnull @.str.1586), !dbg !5765
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5765
  %22 = load i16, ptr %21, align 2, !dbg !5765
  %23 = icmp eq i16 %22, 1, !dbg !5765
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5765
  %25 = load i8, ptr %24, align 1, !dbg !5765
  %26 = icmp eq i8 %25, 8, !dbg !5765
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5765
  %28 = load i8, ptr %27, align 1, !dbg !5765
  %29 = icmp eq i8 %28, 0, !dbg !5765
  %30 = and i1 %26, %29, !dbg !5765
  %31 = and i1 %23, %30, !dbg !5765
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5765, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %32(ptr nonnull @.str.1587), !dbg !5765
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape, align 8, !dbg !5765, !tbaa !5782
  %34 = and i64 %33, 4294967295, !dbg !5765
  %35 = icmp eq i64 %34, 1, !dbg !5765
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5765, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %36(ptr nonnull @.str.1588), !dbg !5765
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape, i64 1, !dbg !5765
  %38 = load i64, ptr %37, align 8, !dbg !5765, !tbaa !5792
  %39 = and i64 %38, 4294967295, !dbg !5765
  %40 = icmp eq i64 %39, 1024, !dbg !5765
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5765, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %41(ptr nonnull @.str.1589), !dbg !5765
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape, i64 2, !dbg !5765
  %43 = load i64, ptr %42, align 8, !dbg !5765, !tbaa !5794
  %44 = and i64 %43, 4294967295, !dbg !5765
  %45 = icmp eq i64 %44, 14, !dbg !5765
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5765, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %46(ptr nonnull @.str.1590), !dbg !5765
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.shape, i64 3, !dbg !5765
  %48 = load i64, ptr %47, align 8, !dbg !5765, !tbaa !5797
  %49 = and i64 %48, 4294967295, !dbg !5765
  %50 = icmp eq i64 %49, 14, !dbg !5765
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5765, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %51(ptr nonnull @.str.1591), !dbg !5765
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides, null, !dbg !5765
  br i1 %.not, label %if_end, label %if_then, !dbg !5765, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides, i64 1, !dbg !5765
  %53 = load i64, ptr %52, align 8, !dbg !5765, !tbaa !5799
  %54 = and i64 %53, 4294967295, !dbg !5765
  %55 = icmp eq i64 %54, 196, !dbg !5765
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides, i64 2, !dbg !5765
  %57 = load i64, ptr %56, align 8, !dbg !5765, !tbaa !5809
  %58 = and i64 %57, 4294967295, !dbg !5765
  %59 = icmp eq i64 %58, 14, !dbg !5765
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p0.strides, i64 3, !dbg !5765
  %61 = load i64, ptr %60, align 8, !dbg !5765, !tbaa !5812
  %62 = and i64 %61, 4294967295, !dbg !5765
  %63 = icmp eq i64 %62, 1, !dbg !5765
  %64 = and i1 %59, %63, !dbg !5765
  %65 = and i1 %55, %64, !dbg !5765
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5765, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5765
  %67 = load i64, ptr %66, align 8, !dbg !5765
  %68 = icmp eq i64 %67, 0, !dbg !5765
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5765, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %69(ptr nonnull @.str.1592), !dbg !5765
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %70(ptr nonnull @.str.1593), !dbg !5765
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5765
  %72 = load i32, ptr %71, align 4, !dbg !5765
  %73 = icmp eq i32 %72, 2, !dbg !5765
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5765, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %74(ptr nonnull @.str.1594), !dbg !5765
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5765
  %76 = load i32, ptr %75, align 4, !dbg !5765
  %77 = icmp eq i32 %76, 4, !dbg !5765
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5765, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %78(ptr nonnull @.str.1595), !dbg !5765
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5765
  %80 = load i16, ptr %79, align 2, !dbg !5765
  %81 = icmp eq i16 %80, 1, !dbg !5765
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5765
  %83 = load i8, ptr %82, align 1, !dbg !5765
  %84 = icmp eq i8 %83, 8, !dbg !5765
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5765
  %86 = load i8, ptr %85, align 1, !dbg !5765
  %87 = icmp eq i8 %86, 0, !dbg !5765
  %88 = and i1 %84, %87, !dbg !5765
  %89 = and i1 %81, %88, !dbg !5765
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5765, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %90(ptr nonnull @.str.1596), !dbg !5765
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape, align 8, !dbg !5765, !tbaa !5814
  %92 = and i64 %91, 4294967295, !dbg !5765
  %93 = icmp eq i64 %92, 256, !dbg !5765
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5765, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %94(ptr nonnull @.str.1597), !dbg !5765
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape, i64 1, !dbg !5765
  %96 = load i64, ptr %95, align 8, !dbg !5765, !tbaa !5824
  %97 = and i64 %96, 4294967295, !dbg !5765
  %98 = icmp eq i64 %97, 1024, !dbg !5765
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5765, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %99(ptr nonnull @.str.1598), !dbg !5765
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape, i64 2, !dbg !5765
  %101 = load i64, ptr %100, align 8, !dbg !5765, !tbaa !5826
  %102 = and i64 %101, 4294967295, !dbg !5765
  %103 = icmp eq i64 %102, 1, !dbg !5765
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5765, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %104(ptr nonnull @.str.1599), !dbg !5765
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.shape, i64 3, !dbg !5765
  %106 = load i64, ptr %105, align 8, !dbg !5765, !tbaa !5829
  %107 = and i64 %106, 4294967295, !dbg !5765
  %108 = icmp eq i64 %107, 1, !dbg !5765
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5765, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %109(ptr nonnull @.str.1600), !dbg !5765
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.strides, null, !dbg !5765
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5765, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.strides, align 8, !dbg !5765, !tbaa !5831
  %111 = and i64 %110, 4294967295, !dbg !5765
  %112 = icmp eq i64 %111, 1024, !dbg !5765
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.p1.strides, i64 1, !dbg !5765
  %114 = load i64, ptr %113, align 8, !dbg !5765, !tbaa !5841
  %115 = and i64 %114, 4294967295, !dbg !5765
  %116 = icmp eq i64 %115, 1, !dbg !5765
  %117 = and i1 %112, %116, !dbg !5765
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !5765, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5765
  %119 = load i64, ptr %118, align 8, !dbg !5765
  %120 = icmp eq i64 %119, 0, !dbg !5765
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !5765, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %121(ptr nonnull @.str.1601), !dbg !5765
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %122(ptr nonnull @.str.1602), !dbg !5765
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5765
  %124 = load i32, ptr %123, align 4, !dbg !5765
  %125 = icmp eq i32 %124, 2, !dbg !5765
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !5765, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %126(ptr nonnull @.str.1603), !dbg !5765
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5765
  %128 = load i32, ptr %127, align 4, !dbg !5765
  %129 = icmp eq i32 %dev_id, %128, !dbg !5765
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !5765, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %130(ptr nonnull @.str.1604), !dbg !5765
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5765
  %132 = load i32, ptr %131, align 4, !dbg !5765
  %133 = icmp eq i32 %132, 4, !dbg !5765
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !5765, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %134(ptr nonnull @.str.1605), !dbg !5765
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5765
  %136 = load i16, ptr %135, align 2, !dbg !5765
  %137 = icmp eq i16 %136, 1, !dbg !5765
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5765
  %139 = load i8, ptr %138, align 1, !dbg !5765
  %140 = icmp eq i8 %139, 8, !dbg !5765
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5765
  %142 = load i8, ptr %141, align 1, !dbg !5765
  %143 = icmp eq i8 %142, 0, !dbg !5765
  %144 = and i1 %140, %143, !dbg !5765
  %145 = and i1 %137, %144, !dbg !5765
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !5765, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %146(ptr nonnull @.str.1606), !dbg !5765
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape, align 8, !dbg !5765, !tbaa !5843
  %148 = and i64 %147, 4294967295, !dbg !5765
  %149 = icmp eq i64 %148, 1, !dbg !5765
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !5765, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %150(ptr nonnull @.str.1607), !dbg !5765
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape, i64 1, !dbg !5765
  %152 = load i64, ptr %151, align 8, !dbg !5765, !tbaa !5853
  %153 = and i64 %152, 4294967295, !dbg !5765
  %154 = icmp eq i64 %153, 256, !dbg !5765
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !5765, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %155(ptr nonnull @.str.1608), !dbg !5765
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape, i64 2, !dbg !5765
  %157 = load i64, ptr %156, align 8, !dbg !5765, !tbaa !5855
  %158 = and i64 %157, 4294967295, !dbg !5765
  %159 = icmp eq i64 %158, 14, !dbg !5765
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !5765, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %160(ptr nonnull @.str.1609), !dbg !5765
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.shape, i64 3, !dbg !5765
  %162 = load i64, ptr %161, align 8, !dbg !5765, !tbaa !5858
  %163 = and i64 %162, 4294967295, !dbg !5765
  %164 = icmp eq i64 %163, 14, !dbg !5765
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !5765, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %165(ptr nonnull @.str.1610), !dbg !5765
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides, null, !dbg !5765
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5765, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides, i64 1, !dbg !5765
  %167 = load i64, ptr %166, align 8, !dbg !5765, !tbaa !5860
  %168 = and i64 %167, 4294967295, !dbg !5765
  %169 = icmp eq i64 %168, 196, !dbg !5765
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides, i64 2, !dbg !5765
  %171 = load i64, ptr %170, align 8, !dbg !5765, !tbaa !5870
  %172 = and i64 %171, 4294967295, !dbg !5765
  %173 = icmp eq i64 %172, 14, !dbg !5765
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19.T_cast.strides, i64 3, !dbg !5765
  %175 = load i64, ptr %174, align 8, !dbg !5765, !tbaa !5873
  %176 = and i64 %175, 4294967295, !dbg !5765
  %177 = icmp eq i64 %176, 1, !dbg !5765
  %178 = and i1 %173, %177, !dbg !5765
  %179 = and i1 %169, %178, !dbg !5765
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !5765, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5765
  %181 = load i64, ptr %180, align 8, !dbg !5765
  %182 = icmp eq i64 %181, 0, !dbg !5765
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !5765, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %183(ptr nonnull @.str.1611), !dbg !5765
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %184(ptr nonnull @.str.1612), !dbg !5765
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5765
  %186 = load i32, ptr %185, align 4, !dbg !5765
  %187 = icmp eq i32 %186, 2, !dbg !5765
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !5765, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %188(ptr nonnull @.str.1613), !dbg !5765
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5765
  %190 = load i32, ptr %189, align 4, !dbg !5765
  %191 = icmp eq i32 %dev_id, %190, !dbg !5765
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !5765, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5765, !tbaa !19
  tail call void %192(ptr nonnull @.str.1614), !dbg !5765
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5765
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5765, !tbaa !5875
  %193 = sext i32 %dev_id to i64, !dbg !5765
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5765
  store i64 %193, ptr %194, align 8, !dbg !5765
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5765
  store i32 0, ptr %195, align 4, !dbg !5765, !tbaa !5886
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5765
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5765
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5765, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5765
  %.not91 = icmp eq ptr %199, null, !dbg !5765
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5765, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5765, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5765, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5765
  %203 = icmp eq i32 %202, 0, !dbg !5765
  br i1 %203, label %call_end, label %common.ret, !dbg !5765, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !5765
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !5765
  %206 = icmp eq i32 %205, 0, !dbg !5765
  br i1 %206, label %call_end79, label %common.ret, !dbg !5765, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !5765
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5765
  br label %handle_init_end, !dbg !5765

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5765
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5888 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5890, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5891, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5892, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5893, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5894, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5895, metadata !DIExpression()), !dbg !5896
  %0 = alloca ptr, align 8, !dbg !5896
  %stack_value87 = alloca [16 x %0], align 8, !dbg !5896
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !5896
  %1 = icmp eq i32 %num_args, 3, !dbg !5896
  br i1 %1, label %assert_end, label %assert_fail, !dbg !5896, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !5896

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %2(ptr nonnull @.str.1618), !dbg !5896
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5896, !tbaa !5897
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5896
  %p1.code = load i32, ptr %3, align 4, !dbg !5896, !tbaa !5908
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5896
  %T_cast.code = load i32, ptr %4, align 4, !dbg !5896, !tbaa !5910
  %p0 = load ptr, ptr %args, align 8, !dbg !5896
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5896
  %p1 = load ptr, ptr %5, align 8, !dbg !5896
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5896
  %T_cast = load ptr, ptr %6, align 8, !dbg !5896
  %p080 = load ptr, ptr %p0, align 8, !dbg !5896
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !5896
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %7, align 8, !dbg !5896
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %8, align 8, !dbg !5896
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5896
  %dev_id = load i32, ptr %9, align 4, !dbg !5896
  %p181 = load ptr, ptr %p1, align 8, !dbg !5896
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !5896
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %10, align 8, !dbg !5896
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %11, align 8, !dbg !5896
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !5896
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !5896
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %12, align 8, !dbg !5896
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5896
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %13, align 8, !dbg !5896
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !5896

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %14(ptr nonnull @.str.1619), !dbg !5896
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5896

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %15(ptr nonnull @.str.1620), !dbg !5896
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5896

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %16(ptr nonnull @.str.1621), !dbg !5896
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5896
  %18 = load i32, ptr %17, align 4, !dbg !5896
  %19 = icmp eq i32 %18, 4, !dbg !5896
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !5896, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %20(ptr nonnull @.str.1622), !dbg !5896
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5896
  %22 = load i16, ptr %21, align 2, !dbg !5896
  %23 = icmp eq i16 %22, 1, !dbg !5896
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5896
  %25 = load i8, ptr %24, align 1, !dbg !5896
  %26 = icmp eq i8 %25, 8, !dbg !5896
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5896
  %28 = load i8, ptr %27, align 1, !dbg !5896
  %29 = icmp eq i8 %28, 0, !dbg !5896
  %30 = and i1 %26, %29, !dbg !5896
  %31 = and i1 %23, %30, !dbg !5896
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !5896, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %32(ptr nonnull @.str.1623), !dbg !5896
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !5896, !tbaa !5913
  %34 = and i64 %33, 4294967295, !dbg !5896
  %35 = icmp eq i64 %34, 1, !dbg !5896
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !5896, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %36(ptr nonnull @.str.1624), !dbg !5896
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !5896
  %38 = load i64, ptr %37, align 8, !dbg !5896, !tbaa !5923
  %39 = and i64 %38, 4294967295, !dbg !5896
  %40 = icmp eq i64 %39, 64, !dbg !5896
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !5896, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %41(ptr nonnull @.str.1625), !dbg !5896
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !5896
  %43 = load i64, ptr %42, align 8, !dbg !5896, !tbaa !5925
  %44 = and i64 %43, 4294967295, !dbg !5896
  %45 = icmp eq i64 %44, 56, !dbg !5896
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !5896, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %46(ptr nonnull @.str.1626), !dbg !5896
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !5896
  %48 = load i64, ptr %47, align 8, !dbg !5896, !tbaa !5928
  %49 = and i64 %48, 4294967295, !dbg !5896
  %50 = icmp eq i64 %49, 56, !dbg !5896
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !5896, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %51(ptr nonnull @.str.1627), !dbg !5896
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides, null, !dbg !5896
  br i1 %.not, label %if_end, label %if_then, !dbg !5896, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !5896
  %53 = load i64, ptr %52, align 8, !dbg !5896, !tbaa !5930
  %54 = and i64 %53, 4294967295, !dbg !5896
  %55 = icmp eq i64 %54, 3136, !dbg !5896
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !5896
  %57 = load i64, ptr %56, align 8, !dbg !5896, !tbaa !5940
  %58 = and i64 %57, 4294967295, !dbg !5896
  %59 = icmp eq i64 %58, 56, !dbg !5896
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !5896
  %61 = load i64, ptr %60, align 8, !dbg !5896, !tbaa !5943
  %62 = and i64 %61, 4294967295, !dbg !5896
  %63 = icmp eq i64 %62, 1, !dbg !5896
  %64 = and i1 %59, %63, !dbg !5896
  %65 = and i1 %55, %64, !dbg !5896
  br i1 %65, label %if_end, label %assert_fail24, !dbg !5896, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5896
  %67 = load i64, ptr %66, align 8, !dbg !5896
  %68 = icmp eq i64 %67, 0, !dbg !5896
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !5896, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %69(ptr nonnull @.str.1628), !dbg !5896
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %70(ptr nonnull @.str.1629), !dbg !5896
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5896
  %72 = load i32, ptr %71, align 4, !dbg !5896
  %73 = icmp eq i32 %72, 2, !dbg !5896
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !5896, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %74(ptr nonnull @.str.1630), !dbg !5896
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5896
  %76 = load i32, ptr %75, align 4, !dbg !5896
  %77 = icmp eq i32 %76, 4, !dbg !5896
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !5896, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %78(ptr nonnull @.str.1631), !dbg !5896
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5896
  %80 = load i16, ptr %79, align 2, !dbg !5896
  %81 = icmp eq i16 %80, 1, !dbg !5896
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5896
  %83 = load i8, ptr %82, align 1, !dbg !5896
  %84 = icmp eq i8 %83, 8, !dbg !5896
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5896
  %86 = load i8, ptr %85, align 1, !dbg !5896
  %87 = icmp eq i8 %86, 0, !dbg !5896
  %88 = and i1 %84, %87, !dbg !5896
  %89 = and i1 %81, %88, !dbg !5896
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !5896, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %90(ptr nonnull @.str.1632), !dbg !5896
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !5896, !tbaa !5945
  %92 = and i64 %91, 4294967295, !dbg !5896
  %93 = icmp eq i64 %92, 256, !dbg !5896
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !5896, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %94(ptr nonnull @.str.1633), !dbg !5896
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !5896
  %96 = load i64, ptr %95, align 8, !dbg !5896, !tbaa !5955
  %97 = and i64 %96, 4294967295, !dbg !5896
  %98 = icmp eq i64 %97, 64, !dbg !5896
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !5896, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %99(ptr nonnull @.str.1634), !dbg !5896
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !5896
  %101 = load i64, ptr %100, align 8, !dbg !5896, !tbaa !5957
  %102 = and i64 %101, 4294967295, !dbg !5896
  %103 = icmp eq i64 %102, 1, !dbg !5896
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !5896, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %104(ptr nonnull @.str.1635), !dbg !5896
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !5896
  %106 = load i64, ptr %105, align 8, !dbg !5896, !tbaa !5960
  %107 = and i64 %106, 4294967295, !dbg !5896
  %108 = icmp eq i64 %107, 1, !dbg !5896
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !5896, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %109(ptr nonnull @.str.1636), !dbg !5896
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.strides, null, !dbg !5896
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !5896, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.strides, align 8, !dbg !5896, !tbaa !5962
  %111 = and i64 %110, 4294967295, !dbg !5896
  %112 = icmp eq i64 %111, 64, !dbg !5896
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !5896
  %114 = load i64, ptr %113, align 8, !dbg !5896, !tbaa !5972
  %115 = and i64 %114, 4294967295, !dbg !5896
  %116 = icmp eq i64 %115, 1, !dbg !5896
  %117 = and i1 %112, %116, !dbg !5896
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !5896, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5896
  %119 = load i64, ptr %118, align 8, !dbg !5896
  %120 = icmp eq i64 %119, 0, !dbg !5896
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !5896, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %121(ptr nonnull @.str.1637), !dbg !5896
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %122(ptr nonnull @.str.1638), !dbg !5896
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5896
  %124 = load i32, ptr %123, align 4, !dbg !5896
  %125 = icmp eq i32 %124, 2, !dbg !5896
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !5896, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %126(ptr nonnull @.str.1639), !dbg !5896
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5896
  %128 = load i32, ptr %127, align 4, !dbg !5896
  %129 = icmp eq i32 %dev_id, %128, !dbg !5896
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !5896, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %130(ptr nonnull @.str.1640), !dbg !5896
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5896
  %132 = load i32, ptr %131, align 4, !dbg !5896
  %133 = icmp eq i32 %132, 4, !dbg !5896
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !5896, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %134(ptr nonnull @.str.1641), !dbg !5896
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5896
  %136 = load i16, ptr %135, align 2, !dbg !5896
  %137 = icmp eq i16 %136, 1, !dbg !5896
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5896
  %139 = load i8, ptr %138, align 1, !dbg !5896
  %140 = icmp eq i8 %139, 8, !dbg !5896
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5896
  %142 = load i8, ptr %141, align 1, !dbg !5896
  %143 = icmp eq i8 %142, 0, !dbg !5896
  %144 = and i1 %140, %143, !dbg !5896
  %145 = and i1 %137, %144, !dbg !5896
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !5896, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %146(ptr nonnull @.str.1642), !dbg !5896
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !5896, !tbaa !5974
  %148 = and i64 %147, 4294967295, !dbg !5896
  %149 = icmp eq i64 %148, 1, !dbg !5896
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !5896, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %150(ptr nonnull @.str.1643), !dbg !5896
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !5896
  %152 = load i64, ptr %151, align 8, !dbg !5896, !tbaa !5984
  %153 = and i64 %152, 4294967295, !dbg !5896
  %154 = icmp eq i64 %153, 256, !dbg !5896
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !5896, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %155(ptr nonnull @.str.1644), !dbg !5896
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !5896
  %157 = load i64, ptr %156, align 8, !dbg !5896, !tbaa !5986
  %158 = and i64 %157, 4294967295, !dbg !5896
  %159 = icmp eq i64 %158, 56, !dbg !5896
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !5896, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %160(ptr nonnull @.str.1645), !dbg !5896
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !5896
  %162 = load i64, ptr %161, align 8, !dbg !5896, !tbaa !5989
  %163 = and i64 %162, 4294967295, !dbg !5896
  %164 = icmp eq i64 %163, 56, !dbg !5896
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !5896, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %165(ptr nonnull @.str.1646), !dbg !5896
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !5896
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !5896, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !5896
  %167 = load i64, ptr %166, align 8, !dbg !5896, !tbaa !5991
  %168 = and i64 %167, 4294967295, !dbg !5896
  %169 = icmp eq i64 %168, 3136, !dbg !5896
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !5896
  %171 = load i64, ptr %170, align 8, !dbg !5896, !tbaa !6001
  %172 = and i64 %171, 4294967295, !dbg !5896
  %173 = icmp eq i64 %172, 56, !dbg !5896
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !5896
  %175 = load i64, ptr %174, align 8, !dbg !5896, !tbaa !6004
  %176 = and i64 %175, 4294967295, !dbg !5896
  %177 = icmp eq i64 %176, 1, !dbg !5896
  %178 = and i1 %173, %177, !dbg !5896
  %179 = and i1 %169, %178, !dbg !5896
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !5896, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5896
  %181 = load i64, ptr %180, align 8, !dbg !5896
  %182 = icmp eq i64 %181, 0, !dbg !5896
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !5896, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %183(ptr nonnull @.str.1647), !dbg !5896
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %184(ptr nonnull @.str.1648), !dbg !5896
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5896
  %186 = load i32, ptr %185, align 4, !dbg !5896
  %187 = icmp eq i32 %186, 2, !dbg !5896
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !5896, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %188(ptr nonnull @.str.1649), !dbg !5896
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5896
  %190 = load i32, ptr %189, align 4, !dbg !5896
  %191 = icmp eq i32 %dev_id, %190, !dbg !5896
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !5896, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5896, !tbaa !19
  tail call void %192(ptr nonnull @.str.1650), !dbg !5896
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !5896
  store i32 0, ptr %stack_tcode88, align 4, !dbg !5896, !tbaa !6006
  %193 = sext i32 %dev_id to i64, !dbg !5896
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !5896
  store i64 %193, ptr %194, align 8, !dbg !5896
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !5896
  store i32 0, ptr %195, align 4, !dbg !5896, !tbaa !6017
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !5896
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !5896
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !5896, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5896
  %.not91 = icmp eq ptr %199, null, !dbg !5896
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !5896, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !5896, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !5896, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !5896
  %203 = icmp eq i32 %202, 0, !dbg !5896
  br i1 %203, label %call_end, label %common.ret, !dbg !5896, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !5896
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !5896
  %206 = icmp eq i32 %205, 0, !dbg !5896
  br i1 %206, label %call_end79, label %common.ret, !dbg !5896, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !5896
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !5896
  br label %handle_init_end, !dbg !5896

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !5896
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6019 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6021, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6022, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6023, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6024, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6025, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6026, metadata !DIExpression()), !dbg !6027
  %0 = alloca ptr, align 8, !dbg !6027
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6027
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6027
  %1 = icmp eq i32 %num_args, 3, !dbg !6027
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6027, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6027

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %2(ptr nonnull @.str.1654), !dbg !6027
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6027, !tbaa !6028
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6027
  %p1.code = load i32, ptr %3, align 4, !dbg !6027, !tbaa !6039
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6027
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6027, !tbaa !6041
  %p0 = load ptr, ptr %args, align 8, !dbg !6027
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6027
  %p1 = load ptr, ptr %5, align 8, !dbg !6027
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6027
  %T_cast = load ptr, ptr %6, align 8, !dbg !6027
  %p080 = load ptr, ptr %p0, align 8, !dbg !6027
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6027
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape = load ptr, ptr %7, align 8, !dbg !6027
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides = load ptr, ptr %8, align 8, !dbg !6027
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6027
  %dev_id = load i32, ptr %9, align 4, !dbg !6027
  %p181 = load ptr, ptr %p1, align 8, !dbg !6027
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6027
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape = load ptr, ptr %10, align 8, !dbg !6027
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides = load ptr, ptr %11, align 8, !dbg !6027
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6027
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6027
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6027
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6027
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6027
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6027

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %14(ptr nonnull @.str.1655), !dbg !6027
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6027

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %15(ptr nonnull @.str.1656), !dbg !6027
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6027

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %16(ptr nonnull @.str.1657), !dbg !6027
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6027
  %18 = load i32, ptr %17, align 4, !dbg !6027
  %19 = icmp eq i32 %18, 4, !dbg !6027
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6027, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %20(ptr nonnull @.str.1658), !dbg !6027
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6027
  %22 = load i16, ptr %21, align 2, !dbg !6027
  %23 = icmp eq i16 %22, 1, !dbg !6027
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6027
  %25 = load i8, ptr %24, align 1, !dbg !6027
  %26 = icmp eq i8 %25, 8, !dbg !6027
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6027
  %28 = load i8, ptr %27, align 1, !dbg !6027
  %29 = icmp eq i8 %28, 0, !dbg !6027
  %30 = and i1 %26, %29, !dbg !6027
  %31 = and i1 %23, %30, !dbg !6027
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6027, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %32(ptr nonnull @.str.1659), !dbg !6027
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape, align 8, !dbg !6027, !tbaa !6044
  %34 = and i64 %33, 4294967295, !dbg !6027
  %35 = icmp eq i64 %34, 1, !dbg !6027
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6027, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %36(ptr nonnull @.str.1660), !dbg !6027
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape, i64 1, !dbg !6027
  %38 = load i64, ptr %37, align 8, !dbg !6027, !tbaa !6054
  %39 = and i64 %38, 4294967295, !dbg !6027
  %40 = icmp eq i64 %39, 256, !dbg !6027
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6027, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %41(ptr nonnull @.str.1661), !dbg !6027
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape, i64 2, !dbg !6027
  %43 = load i64, ptr %42, align 8, !dbg !6027, !tbaa !6056
  %44 = and i64 %43, 4294967295, !dbg !6027
  %45 = icmp eq i64 %44, 14, !dbg !6027
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6027, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %46(ptr nonnull @.str.1662), !dbg !6027
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.shape, i64 3, !dbg !6027
  %48 = load i64, ptr %47, align 8, !dbg !6027, !tbaa !6059
  %49 = and i64 %48, 4294967295, !dbg !6027
  %50 = icmp eq i64 %49, 14, !dbg !6027
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6027, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %51(ptr nonnull @.str.1663), !dbg !6027
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides, null, !dbg !6027
  br i1 %.not, label %if_end, label %if_then, !dbg !6027, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides, i64 1, !dbg !6027
  %53 = load i64, ptr %52, align 8, !dbg !6027, !tbaa !6061
  %54 = and i64 %53, 4294967295, !dbg !6027
  %55 = icmp eq i64 %54, 196, !dbg !6027
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides, i64 2, !dbg !6027
  %57 = load i64, ptr %56, align 8, !dbg !6027, !tbaa !6071
  %58 = and i64 %57, 4294967295, !dbg !6027
  %59 = icmp eq i64 %58, 14, !dbg !6027
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p0.strides, i64 3, !dbg !6027
  %61 = load i64, ptr %60, align 8, !dbg !6027, !tbaa !6074
  %62 = and i64 %61, 4294967295, !dbg !6027
  %63 = icmp eq i64 %62, 1, !dbg !6027
  %64 = and i1 %59, %63, !dbg !6027
  %65 = and i1 %55, %64, !dbg !6027
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6027, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6027
  %67 = load i64, ptr %66, align 8, !dbg !6027
  %68 = icmp eq i64 %67, 0, !dbg !6027
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6027, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %69(ptr nonnull @.str.1664), !dbg !6027
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %70(ptr nonnull @.str.1665), !dbg !6027
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6027
  %72 = load i32, ptr %71, align 4, !dbg !6027
  %73 = icmp eq i32 %72, 2, !dbg !6027
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6027, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %74(ptr nonnull @.str.1666), !dbg !6027
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6027
  %76 = load i32, ptr %75, align 4, !dbg !6027
  %77 = icmp eq i32 %76, 4, !dbg !6027
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6027, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %78(ptr nonnull @.str.1667), !dbg !6027
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6027
  %80 = load i16, ptr %79, align 2, !dbg !6027
  %81 = icmp eq i16 %80, 1, !dbg !6027
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6027
  %83 = load i8, ptr %82, align 1, !dbg !6027
  %84 = icmp eq i8 %83, 8, !dbg !6027
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6027
  %86 = load i8, ptr %85, align 1, !dbg !6027
  %87 = icmp eq i8 %86, 0, !dbg !6027
  %88 = and i1 %84, %87, !dbg !6027
  %89 = and i1 %81, %88, !dbg !6027
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6027, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %90(ptr nonnull @.str.1668), !dbg !6027
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape, align 8, !dbg !6027, !tbaa !6076
  %92 = and i64 %91, 4294967295, !dbg !6027
  %93 = icmp eq i64 %92, 256, !dbg !6027
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6027, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %94(ptr nonnull @.str.1669), !dbg !6027
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape, i64 1, !dbg !6027
  %96 = load i64, ptr %95, align 8, !dbg !6027, !tbaa !6086
  %97 = and i64 %96, 4294967295, !dbg !6027
  %98 = icmp eq i64 %97, 256, !dbg !6027
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6027, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %99(ptr nonnull @.str.1670), !dbg !6027
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape, i64 2, !dbg !6027
  %101 = load i64, ptr %100, align 8, !dbg !6027, !tbaa !6088
  %102 = and i64 %101, 4294967295, !dbg !6027
  %103 = icmp eq i64 %102, 3, !dbg !6027
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6027, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %104(ptr nonnull @.str.1671), !dbg !6027
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.shape, i64 3, !dbg !6027
  %106 = load i64, ptr %105, align 8, !dbg !6027, !tbaa !6091
  %107 = and i64 %106, 4294967295, !dbg !6027
  %108 = icmp eq i64 %107, 3, !dbg !6027
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6027, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %109(ptr nonnull @.str.1672), !dbg !6027
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides, null, !dbg !6027
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6027, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides, align 8, !dbg !6027, !tbaa !6093
  %111 = and i64 %110, 4294967295, !dbg !6027
  %112 = icmp eq i64 %111, 2304, !dbg !6027
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides, i64 1, !dbg !6027
  %114 = load i64, ptr %113, align 8, !dbg !6027, !tbaa !6103
  %115 = and i64 %114, 4294967295, !dbg !6027
  %116 = icmp eq i64 %115, 9, !dbg !6027
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides, i64 2, !dbg !6027
  %118 = load i64, ptr %117, align 8, !dbg !6027, !tbaa !6105
  %119 = and i64 %118, 4294967295, !dbg !6027
  %120 = icmp eq i64 %119, 3, !dbg !6027
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.p1.strides, i64 3, !dbg !6027
  %122 = load i64, ptr %121, align 8, !dbg !6027, !tbaa !6108
  %123 = and i64 %122, 4294967295, !dbg !6027
  %124 = icmp eq i64 %123, 1, !dbg !6027
  %125 = and i1 %120, %124, !dbg !6027
  %126 = and i1 %116, %125, !dbg !6027
  %127 = and i1 %112, %126, !dbg !6027
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !6027, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6027
  %129 = load i64, ptr %128, align 8, !dbg !6027
  %130 = icmp eq i64 %129, 0, !dbg !6027
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !6027, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %131(ptr nonnull @.str.1673), !dbg !6027
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %132(ptr nonnull @.str.1674), !dbg !6027
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6027
  %134 = load i32, ptr %133, align 4, !dbg !6027
  %135 = icmp eq i32 %134, 2, !dbg !6027
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !6027, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %136(ptr nonnull @.str.1675), !dbg !6027
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6027
  %138 = load i32, ptr %137, align 4, !dbg !6027
  %139 = icmp eq i32 %dev_id, %138, !dbg !6027
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !6027, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %140(ptr nonnull @.str.1676), !dbg !6027
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6027
  %142 = load i32, ptr %141, align 4, !dbg !6027
  %143 = icmp eq i32 %142, 4, !dbg !6027
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !6027, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %144(ptr nonnull @.str.1677), !dbg !6027
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6027
  %146 = load i16, ptr %145, align 2, !dbg !6027
  %147 = icmp eq i16 %146, 1, !dbg !6027
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6027
  %149 = load i8, ptr %148, align 1, !dbg !6027
  %150 = icmp eq i8 %149, 8, !dbg !6027
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6027
  %152 = load i8, ptr %151, align 1, !dbg !6027
  %153 = icmp eq i8 %152, 0, !dbg !6027
  %154 = and i1 %150, %153, !dbg !6027
  %155 = and i1 %147, %154, !dbg !6027
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !6027, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %156(ptr nonnull @.str.1678), !dbg !6027
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape, align 8, !dbg !6027, !tbaa !6110
  %158 = and i64 %157, 4294967295, !dbg !6027
  %159 = icmp eq i64 %158, 1, !dbg !6027
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !6027, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %160(ptr nonnull @.str.1679), !dbg !6027
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape, i64 1, !dbg !6027
  %162 = load i64, ptr %161, align 8, !dbg !6027, !tbaa !6120
  %163 = and i64 %162, 4294967295, !dbg !6027
  %164 = icmp eq i64 %163, 256, !dbg !6027
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !6027, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %165(ptr nonnull @.str.1680), !dbg !6027
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape, i64 2, !dbg !6027
  %167 = load i64, ptr %166, align 8, !dbg !6027, !tbaa !6122
  %168 = and i64 %167, 4294967295, !dbg !6027
  %169 = icmp eq i64 %168, 14, !dbg !6027
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !6027, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %170(ptr nonnull @.str.1681), !dbg !6027
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.shape, i64 3, !dbg !6027
  %172 = load i64, ptr %171, align 8, !dbg !6027, !tbaa !6125
  %173 = and i64 %172, 4294967295, !dbg !6027
  %174 = icmp eq i64 %173, 14, !dbg !6027
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !6027, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %175(ptr nonnull @.str.1682), !dbg !6027
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides, null, !dbg !6027
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6027, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides, i64 1, !dbg !6027
  %177 = load i64, ptr %176, align 8, !dbg !6027, !tbaa !6127
  %178 = and i64 %177, 4294967295, !dbg !6027
  %179 = icmp eq i64 %178, 196, !dbg !6027
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides, i64 2, !dbg !6027
  %181 = load i64, ptr %180, align 8, !dbg !6027, !tbaa !6137
  %182 = and i64 %181, 4294967295, !dbg !6027
  %183 = icmp eq i64 %182, 14, !dbg !6027
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20.T_cast.strides, i64 3, !dbg !6027
  %185 = load i64, ptr %184, align 8, !dbg !6027, !tbaa !6140
  %186 = and i64 %185, 4294967295, !dbg !6027
  %187 = icmp eq i64 %186, 1, !dbg !6027
  %188 = and i1 %183, %187, !dbg !6027
  %189 = and i1 %179, %188, !dbg !6027
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !6027, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6027
  %191 = load i64, ptr %190, align 8, !dbg !6027
  %192 = icmp eq i64 %191, 0, !dbg !6027
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !6027, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %193(ptr nonnull @.str.1683), !dbg !6027
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %194(ptr nonnull @.str.1684), !dbg !6027
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6027
  %196 = load i32, ptr %195, align 4, !dbg !6027
  %197 = icmp eq i32 %196, 2, !dbg !6027
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !6027, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %198(ptr nonnull @.str.1685), !dbg !6027
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6027
  %200 = load i32, ptr %199, align 4, !dbg !6027
  %201 = icmp eq i32 %dev_id, %200, !dbg !6027
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !6027, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6027, !tbaa !19
  tail call void %202(ptr nonnull @.str.1686), !dbg !6027
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6027
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6027, !tbaa !6142
  %203 = sext i32 %dev_id to i64, !dbg !6027
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6027
  store i64 %203, ptr %204, align 8, !dbg !6027
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6027
  store i32 0, ptr %205, align 4, !dbg !6027, !tbaa !6153
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6027
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6027
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6027, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6027
  %.not91 = icmp eq ptr %209, null, !dbg !6027
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6027, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6027, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6027, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6027
  %213 = icmp eq i32 %212, 0, !dbg !6027
  br i1 %213, label %call_end, label %common.ret, !dbg !6027, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !6027
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !6027
  %216 = icmp eq i32 %215, 0, !dbg !6027
  br i1 %216, label %call_end79, label %common.ret, !dbg !6027, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !6027
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6027
  br label %handle_init_end, !dbg !6027

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6027
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6155 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6157, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6158, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6159, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6160, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6162, metadata !DIExpression()), !dbg !6163
  %0 = alloca ptr, align 8, !dbg !6163
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6163
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6163
  %1 = icmp eq i32 %num_args, 3, !dbg !6163
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6163, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6163

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %2(ptr nonnull @.str.1690), !dbg !6163
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6163, !tbaa !6164
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6163
  %p1.code = load i32, ptr %3, align 4, !dbg !6163, !tbaa !6175
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6163
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6163, !tbaa !6177
  %p0 = load ptr, ptr %args, align 8, !dbg !6163
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6163
  %p1 = load ptr, ptr %5, align 8, !dbg !6163
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6163
  %T_cast = load ptr, ptr %6, align 8, !dbg !6163
  %p080 = load ptr, ptr %p0, align 8, !dbg !6163
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6163
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape = load ptr, ptr %7, align 8, !dbg !6163
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides = load ptr, ptr %8, align 8, !dbg !6163
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6163
  %dev_id = load i32, ptr %9, align 4, !dbg !6163
  %p181 = load ptr, ptr %p1, align 8, !dbg !6163
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6163
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape = load ptr, ptr %10, align 8, !dbg !6163
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides = load ptr, ptr %11, align 8, !dbg !6163
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6163
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6163
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6163
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6163
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6163
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6163

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %14(ptr nonnull @.str.1691), !dbg !6163
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6163

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %15(ptr nonnull @.str.1692), !dbg !6163
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6163

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %16(ptr nonnull @.str.1693), !dbg !6163
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6163
  %18 = load i32, ptr %17, align 4, !dbg !6163
  %19 = icmp eq i32 %18, 4, !dbg !6163
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6163, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %20(ptr nonnull @.str.1694), !dbg !6163
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6163
  %22 = load i16, ptr %21, align 2, !dbg !6163
  %23 = icmp eq i16 %22, 1, !dbg !6163
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6163
  %25 = load i8, ptr %24, align 1, !dbg !6163
  %26 = icmp eq i8 %25, 8, !dbg !6163
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6163
  %28 = load i8, ptr %27, align 1, !dbg !6163
  %29 = icmp eq i8 %28, 0, !dbg !6163
  %30 = and i1 %26, %29, !dbg !6163
  %31 = and i1 %23, %30, !dbg !6163
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6163, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %32(ptr nonnull @.str.1695), !dbg !6163
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape, align 8, !dbg !6163, !tbaa !6180
  %34 = and i64 %33, 4294967295, !dbg !6163
  %35 = icmp eq i64 %34, 1, !dbg !6163
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6163, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %36(ptr nonnull @.str.1696), !dbg !6163
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape, i64 1, !dbg !6163
  %38 = load i64, ptr %37, align 8, !dbg !6163, !tbaa !6190
  %39 = and i64 %38, 4294967295, !dbg !6163
  %40 = icmp eq i64 %39, 256, !dbg !6163
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6163, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %41(ptr nonnull @.str.1697), !dbg !6163
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape, i64 2, !dbg !6163
  %43 = load i64, ptr %42, align 8, !dbg !6163, !tbaa !6192
  %44 = and i64 %43, 4294967295, !dbg !6163
  %45 = icmp eq i64 %44, 14, !dbg !6163
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6163, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %46(ptr nonnull @.str.1698), !dbg !6163
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.shape, i64 3, !dbg !6163
  %48 = load i64, ptr %47, align 8, !dbg !6163, !tbaa !6195
  %49 = and i64 %48, 4294967295, !dbg !6163
  %50 = icmp eq i64 %49, 14, !dbg !6163
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6163, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %51(ptr nonnull @.str.1699), !dbg !6163
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides, null, !dbg !6163
  br i1 %.not, label %if_end, label %if_then, !dbg !6163, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides, i64 1, !dbg !6163
  %53 = load i64, ptr %52, align 8, !dbg !6163, !tbaa !6197
  %54 = and i64 %53, 4294967295, !dbg !6163
  %55 = icmp eq i64 %54, 196, !dbg !6163
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides, i64 2, !dbg !6163
  %57 = load i64, ptr %56, align 8, !dbg !6163, !tbaa !6207
  %58 = and i64 %57, 4294967295, !dbg !6163
  %59 = icmp eq i64 %58, 14, !dbg !6163
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p0.strides, i64 3, !dbg !6163
  %61 = load i64, ptr %60, align 8, !dbg !6163, !tbaa !6210
  %62 = and i64 %61, 4294967295, !dbg !6163
  %63 = icmp eq i64 %62, 1, !dbg !6163
  %64 = and i1 %59, %63, !dbg !6163
  %65 = and i1 %55, %64, !dbg !6163
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6163, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6163
  %67 = load i64, ptr %66, align 8, !dbg !6163
  %68 = icmp eq i64 %67, 0, !dbg !6163
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6163, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %69(ptr nonnull @.str.1700), !dbg !6163
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %70(ptr nonnull @.str.1701), !dbg !6163
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6163
  %72 = load i32, ptr %71, align 4, !dbg !6163
  %73 = icmp eq i32 %72, 2, !dbg !6163
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6163, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %74(ptr nonnull @.str.1702), !dbg !6163
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6163
  %76 = load i32, ptr %75, align 4, !dbg !6163
  %77 = icmp eq i32 %76, 4, !dbg !6163
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6163, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %78(ptr nonnull @.str.1703), !dbg !6163
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6163
  %80 = load i16, ptr %79, align 2, !dbg !6163
  %81 = icmp eq i16 %80, 1, !dbg !6163
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6163
  %83 = load i8, ptr %82, align 1, !dbg !6163
  %84 = icmp eq i8 %83, 8, !dbg !6163
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6163
  %86 = load i8, ptr %85, align 1, !dbg !6163
  %87 = icmp eq i8 %86, 0, !dbg !6163
  %88 = and i1 %84, %87, !dbg !6163
  %89 = and i1 %81, %88, !dbg !6163
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6163, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %90(ptr nonnull @.str.1704), !dbg !6163
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape, align 8, !dbg !6163, !tbaa !6212
  %92 = and i64 %91, 4294967295, !dbg !6163
  %93 = icmp eq i64 %92, 256, !dbg !6163
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6163, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %94(ptr nonnull @.str.1705), !dbg !6163
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape, i64 1, !dbg !6163
  %96 = load i64, ptr %95, align 8, !dbg !6163, !tbaa !6222
  %97 = and i64 %96, 4294967295, !dbg !6163
  %98 = icmp eq i64 %97, 256, !dbg !6163
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6163, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %99(ptr nonnull @.str.1706), !dbg !6163
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape, i64 2, !dbg !6163
  %101 = load i64, ptr %100, align 8, !dbg !6163, !tbaa !6224
  %102 = and i64 %101, 4294967295, !dbg !6163
  %103 = icmp eq i64 %102, 3, !dbg !6163
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6163, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %104(ptr nonnull @.str.1707), !dbg !6163
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.shape, i64 3, !dbg !6163
  %106 = load i64, ptr %105, align 8, !dbg !6163, !tbaa !6227
  %107 = and i64 %106, 4294967295, !dbg !6163
  %108 = icmp eq i64 %107, 3, !dbg !6163
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6163, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %109(ptr nonnull @.str.1708), !dbg !6163
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides, null, !dbg !6163
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6163, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides, align 8, !dbg !6163, !tbaa !6229
  %111 = and i64 %110, 4294967295, !dbg !6163
  %112 = icmp eq i64 %111, 2304, !dbg !6163
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides, i64 1, !dbg !6163
  %114 = load i64, ptr %113, align 8, !dbg !6163, !tbaa !6239
  %115 = and i64 %114, 4294967295, !dbg !6163
  %116 = icmp eq i64 %115, 9, !dbg !6163
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides, i64 2, !dbg !6163
  %118 = load i64, ptr %117, align 8, !dbg !6163, !tbaa !6241
  %119 = and i64 %118, 4294967295, !dbg !6163
  %120 = icmp eq i64 %119, 3, !dbg !6163
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.p1.strides, i64 3, !dbg !6163
  %122 = load i64, ptr %121, align 8, !dbg !6163, !tbaa !6244
  %123 = and i64 %122, 4294967295, !dbg !6163
  %124 = icmp eq i64 %123, 1, !dbg !6163
  %125 = and i1 %120, %124, !dbg !6163
  %126 = and i1 %116, %125, !dbg !6163
  %127 = and i1 %112, %126, !dbg !6163
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !6163, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6163
  %129 = load i64, ptr %128, align 8, !dbg !6163
  %130 = icmp eq i64 %129, 0, !dbg !6163
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !6163, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %131(ptr nonnull @.str.1709), !dbg !6163
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %132(ptr nonnull @.str.1710), !dbg !6163
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6163
  %134 = load i32, ptr %133, align 4, !dbg !6163
  %135 = icmp eq i32 %134, 2, !dbg !6163
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !6163, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %136(ptr nonnull @.str.1711), !dbg !6163
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6163
  %138 = load i32, ptr %137, align 4, !dbg !6163
  %139 = icmp eq i32 %dev_id, %138, !dbg !6163
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !6163, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %140(ptr nonnull @.str.1712), !dbg !6163
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6163
  %142 = load i32, ptr %141, align 4, !dbg !6163
  %143 = icmp eq i32 %142, 4, !dbg !6163
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !6163, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %144(ptr nonnull @.str.1713), !dbg !6163
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6163
  %146 = load i16, ptr %145, align 2, !dbg !6163
  %147 = icmp eq i16 %146, 1, !dbg !6163
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6163
  %149 = load i8, ptr %148, align 1, !dbg !6163
  %150 = icmp eq i8 %149, 8, !dbg !6163
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6163
  %152 = load i8, ptr %151, align 1, !dbg !6163
  %153 = icmp eq i8 %152, 0, !dbg !6163
  %154 = and i1 %150, %153, !dbg !6163
  %155 = and i1 %147, %154, !dbg !6163
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !6163, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %156(ptr nonnull @.str.1714), !dbg !6163
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape, align 8, !dbg !6163, !tbaa !6246
  %158 = and i64 %157, 4294967295, !dbg !6163
  %159 = icmp eq i64 %158, 1, !dbg !6163
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !6163, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %160(ptr nonnull @.str.1715), !dbg !6163
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape, i64 1, !dbg !6163
  %162 = load i64, ptr %161, align 8, !dbg !6163, !tbaa !6256
  %163 = and i64 %162, 4294967295, !dbg !6163
  %164 = icmp eq i64 %163, 256, !dbg !6163
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !6163, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %165(ptr nonnull @.str.1716), !dbg !6163
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape, i64 2, !dbg !6163
  %167 = load i64, ptr %166, align 8, !dbg !6163, !tbaa !6258
  %168 = and i64 %167, 4294967295, !dbg !6163
  %169 = icmp eq i64 %168, 14, !dbg !6163
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !6163, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %170(ptr nonnull @.str.1717), !dbg !6163
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.shape, i64 3, !dbg !6163
  %172 = load i64, ptr %171, align 8, !dbg !6163, !tbaa !6261
  %173 = and i64 %172, 4294967295, !dbg !6163
  %174 = icmp eq i64 %173, 14, !dbg !6163
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !6163, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %175(ptr nonnull @.str.1718), !dbg !6163
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides, null, !dbg !6163
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6163, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides, i64 1, !dbg !6163
  %177 = load i64, ptr %176, align 8, !dbg !6163, !tbaa !6263
  %178 = and i64 %177, 4294967295, !dbg !6163
  %179 = icmp eq i64 %178, 196, !dbg !6163
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides, i64 2, !dbg !6163
  %181 = load i64, ptr %180, align 8, !dbg !6163, !tbaa !6273
  %182 = and i64 %181, 4294967295, !dbg !6163
  %183 = icmp eq i64 %182, 14, !dbg !6163
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21.T_cast.strides, i64 3, !dbg !6163
  %185 = load i64, ptr %184, align 8, !dbg !6163, !tbaa !6276
  %186 = and i64 %185, 4294967295, !dbg !6163
  %187 = icmp eq i64 %186, 1, !dbg !6163
  %188 = and i1 %183, %187, !dbg !6163
  %189 = and i1 %179, %188, !dbg !6163
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !6163, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6163
  %191 = load i64, ptr %190, align 8, !dbg !6163
  %192 = icmp eq i64 %191, 0, !dbg !6163
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !6163, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %193(ptr nonnull @.str.1719), !dbg !6163
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %194(ptr nonnull @.str.1720), !dbg !6163
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6163
  %196 = load i32, ptr %195, align 4, !dbg !6163
  %197 = icmp eq i32 %196, 2, !dbg !6163
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !6163, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %198(ptr nonnull @.str.1721), !dbg !6163
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6163
  %200 = load i32, ptr %199, align 4, !dbg !6163
  %201 = icmp eq i32 %dev_id, %200, !dbg !6163
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !6163, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6163, !tbaa !19
  tail call void %202(ptr nonnull @.str.1722), !dbg !6163
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6163
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6163, !tbaa !6278
  %203 = sext i32 %dev_id to i64, !dbg !6163
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6163
  store i64 %203, ptr %204, align 8, !dbg !6163
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6163
  store i32 0, ptr %205, align 4, !dbg !6163, !tbaa !6289
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6163
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6163
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6163, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6163
  %.not91 = icmp eq ptr %209, null, !dbg !6163
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6163, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6163, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6163, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6163
  %213 = icmp eq i32 %212, 0, !dbg !6163
  br i1 %213, label %call_end, label %common.ret, !dbg !6163, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !6163
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !6163
  %216 = icmp eq i32 %215, 0, !dbg !6163
  br i1 %216, label %call_end79, label %common.ret, !dbg !6163, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !6163
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6163
  br label %handle_init_end, !dbg !6163

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6163
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6291 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6293, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6294, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6295, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6296, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6297, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6298, metadata !DIExpression()), !dbg !6299
  %0 = alloca ptr, align 8, !dbg !6299
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6299
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6299
  %1 = icmp eq i32 %num_args, 3, !dbg !6299
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6299, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6299

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %2(ptr nonnull @.str.1726), !dbg !6299
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6299, !tbaa !6300
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6299
  %p1.code = load i32, ptr %3, align 4, !dbg !6299, !tbaa !6311
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6299
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6299, !tbaa !6313
  %p0 = load ptr, ptr %args, align 8, !dbg !6299
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6299
  %p1 = load ptr, ptr %5, align 8, !dbg !6299
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6299
  %T_cast = load ptr, ptr %6, align 8, !dbg !6299
  %p080 = load ptr, ptr %p0, align 8, !dbg !6299
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6299
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape = load ptr, ptr %7, align 8, !dbg !6299
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides = load ptr, ptr %8, align 8, !dbg !6299
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6299
  %dev_id = load i32, ptr %9, align 4, !dbg !6299
  %p181 = load ptr, ptr %p1, align 8, !dbg !6299
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6299
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape = load ptr, ptr %10, align 8, !dbg !6299
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.strides = load ptr, ptr %11, align 8, !dbg !6299
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6299
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6299
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6299
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6299
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6299
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6299

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %14(ptr nonnull @.str.1727), !dbg !6299
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6299

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %15(ptr nonnull @.str.1728), !dbg !6299
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6299

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %16(ptr nonnull @.str.1729), !dbg !6299
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6299
  %18 = load i32, ptr %17, align 4, !dbg !6299
  %19 = icmp eq i32 %18, 4, !dbg !6299
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6299, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %20(ptr nonnull @.str.1730), !dbg !6299
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6299
  %22 = load i16, ptr %21, align 2, !dbg !6299
  %23 = icmp eq i16 %22, 1, !dbg !6299
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6299
  %25 = load i8, ptr %24, align 1, !dbg !6299
  %26 = icmp eq i8 %25, 8, !dbg !6299
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6299
  %28 = load i8, ptr %27, align 1, !dbg !6299
  %29 = icmp eq i8 %28, 0, !dbg !6299
  %30 = and i1 %26, %29, !dbg !6299
  %31 = and i1 %23, %30, !dbg !6299
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6299, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %32(ptr nonnull @.str.1731), !dbg !6299
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape, align 8, !dbg !6299, !tbaa !6316
  %34 = and i64 %33, 4294967295, !dbg !6299
  %35 = icmp eq i64 %34, 1, !dbg !6299
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6299, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %36(ptr nonnull @.str.1732), !dbg !6299
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape, i64 1, !dbg !6299
  %38 = load i64, ptr %37, align 8, !dbg !6299, !tbaa !6326
  %39 = and i64 %38, 4294967295, !dbg !6299
  %40 = icmp eq i64 %39, 1024, !dbg !6299
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6299, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %41(ptr nonnull @.str.1733), !dbg !6299
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape, i64 2, !dbg !6299
  %43 = load i64, ptr %42, align 8, !dbg !6299, !tbaa !6328
  %44 = and i64 %43, 4294967295, !dbg !6299
  %45 = icmp eq i64 %44, 14, !dbg !6299
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6299, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %46(ptr nonnull @.str.1734), !dbg !6299
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.shape, i64 3, !dbg !6299
  %48 = load i64, ptr %47, align 8, !dbg !6299, !tbaa !6331
  %49 = and i64 %48, 4294967295, !dbg !6299
  %50 = icmp eq i64 %49, 14, !dbg !6299
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6299, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %51(ptr nonnull @.str.1735), !dbg !6299
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides, null, !dbg !6299
  br i1 %.not, label %if_end, label %if_then, !dbg !6299, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides, i64 1, !dbg !6299
  %53 = load i64, ptr %52, align 8, !dbg !6299, !tbaa !6333
  %54 = and i64 %53, 4294967295, !dbg !6299
  %55 = icmp eq i64 %54, 196, !dbg !6299
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides, i64 2, !dbg !6299
  %57 = load i64, ptr %56, align 8, !dbg !6299, !tbaa !6343
  %58 = and i64 %57, 4294967295, !dbg !6299
  %59 = icmp eq i64 %58, 14, !dbg !6299
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p0.strides, i64 3, !dbg !6299
  %61 = load i64, ptr %60, align 8, !dbg !6299, !tbaa !6346
  %62 = and i64 %61, 4294967295, !dbg !6299
  %63 = icmp eq i64 %62, 1, !dbg !6299
  %64 = and i1 %59, %63, !dbg !6299
  %65 = and i1 %55, %64, !dbg !6299
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6299, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6299
  %67 = load i64, ptr %66, align 8, !dbg !6299
  %68 = icmp eq i64 %67, 0, !dbg !6299
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6299, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %69(ptr nonnull @.str.1736), !dbg !6299
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %70(ptr nonnull @.str.1737), !dbg !6299
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6299
  %72 = load i32, ptr %71, align 4, !dbg !6299
  %73 = icmp eq i32 %72, 2, !dbg !6299
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6299, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %74(ptr nonnull @.str.1738), !dbg !6299
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6299
  %76 = load i32, ptr %75, align 4, !dbg !6299
  %77 = icmp eq i32 %76, 4, !dbg !6299
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6299, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %78(ptr nonnull @.str.1739), !dbg !6299
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6299
  %80 = load i16, ptr %79, align 2, !dbg !6299
  %81 = icmp eq i16 %80, 1, !dbg !6299
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6299
  %83 = load i8, ptr %82, align 1, !dbg !6299
  %84 = icmp eq i8 %83, 8, !dbg !6299
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6299
  %86 = load i8, ptr %85, align 1, !dbg !6299
  %87 = icmp eq i8 %86, 0, !dbg !6299
  %88 = and i1 %84, %87, !dbg !6299
  %89 = and i1 %81, %88, !dbg !6299
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6299, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %90(ptr nonnull @.str.1740), !dbg !6299
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape, align 8, !dbg !6299, !tbaa !6348
  %92 = and i64 %91, 4294967295, !dbg !6299
  %93 = icmp eq i64 %92, 256, !dbg !6299
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6299, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %94(ptr nonnull @.str.1741), !dbg !6299
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape, i64 1, !dbg !6299
  %96 = load i64, ptr %95, align 8, !dbg !6299, !tbaa !6358
  %97 = and i64 %96, 4294967295, !dbg !6299
  %98 = icmp eq i64 %97, 1024, !dbg !6299
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6299, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %99(ptr nonnull @.str.1742), !dbg !6299
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape, i64 2, !dbg !6299
  %101 = load i64, ptr %100, align 8, !dbg !6299, !tbaa !6360
  %102 = and i64 %101, 4294967295, !dbg !6299
  %103 = icmp eq i64 %102, 1, !dbg !6299
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6299, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %104(ptr nonnull @.str.1743), !dbg !6299
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.shape, i64 3, !dbg !6299
  %106 = load i64, ptr %105, align 8, !dbg !6299, !tbaa !6363
  %107 = and i64 %106, 4294967295, !dbg !6299
  %108 = icmp eq i64 %107, 1, !dbg !6299
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6299, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %109(ptr nonnull @.str.1744), !dbg !6299
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.strides, null, !dbg !6299
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6299, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.strides, align 8, !dbg !6299, !tbaa !6365
  %111 = and i64 %110, 4294967295, !dbg !6299
  %112 = icmp eq i64 %111, 1024, !dbg !6299
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.p1.strides, i64 1, !dbg !6299
  %114 = load i64, ptr %113, align 8, !dbg !6299, !tbaa !6375
  %115 = and i64 %114, 4294967295, !dbg !6299
  %116 = icmp eq i64 %115, 1, !dbg !6299
  %117 = and i1 %112, %116, !dbg !6299
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !6299, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6299
  %119 = load i64, ptr %118, align 8, !dbg !6299
  %120 = icmp eq i64 %119, 0, !dbg !6299
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !6299, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %121(ptr nonnull @.str.1745), !dbg !6299
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %122(ptr nonnull @.str.1746), !dbg !6299
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6299
  %124 = load i32, ptr %123, align 4, !dbg !6299
  %125 = icmp eq i32 %124, 2, !dbg !6299
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !6299, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %126(ptr nonnull @.str.1747), !dbg !6299
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6299
  %128 = load i32, ptr %127, align 4, !dbg !6299
  %129 = icmp eq i32 %dev_id, %128, !dbg !6299
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !6299, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %130(ptr nonnull @.str.1748), !dbg !6299
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6299
  %132 = load i32, ptr %131, align 4, !dbg !6299
  %133 = icmp eq i32 %132, 4, !dbg !6299
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !6299, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %134(ptr nonnull @.str.1749), !dbg !6299
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6299
  %136 = load i16, ptr %135, align 2, !dbg !6299
  %137 = icmp eq i16 %136, 1, !dbg !6299
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6299
  %139 = load i8, ptr %138, align 1, !dbg !6299
  %140 = icmp eq i8 %139, 8, !dbg !6299
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6299
  %142 = load i8, ptr %141, align 1, !dbg !6299
  %143 = icmp eq i8 %142, 0, !dbg !6299
  %144 = and i1 %140, %143, !dbg !6299
  %145 = and i1 %137, %144, !dbg !6299
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !6299, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %146(ptr nonnull @.str.1750), !dbg !6299
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape, align 8, !dbg !6299, !tbaa !6377
  %148 = and i64 %147, 4294967295, !dbg !6299
  %149 = icmp eq i64 %148, 1, !dbg !6299
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !6299, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %150(ptr nonnull @.str.1751), !dbg !6299
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape, i64 1, !dbg !6299
  %152 = load i64, ptr %151, align 8, !dbg !6299, !tbaa !6387
  %153 = and i64 %152, 4294967295, !dbg !6299
  %154 = icmp eq i64 %153, 256, !dbg !6299
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !6299, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %155(ptr nonnull @.str.1752), !dbg !6299
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape, i64 2, !dbg !6299
  %157 = load i64, ptr %156, align 8, !dbg !6299, !tbaa !6389
  %158 = and i64 %157, 4294967295, !dbg !6299
  %159 = icmp eq i64 %158, 14, !dbg !6299
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !6299, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %160(ptr nonnull @.str.1753), !dbg !6299
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.shape, i64 3, !dbg !6299
  %162 = load i64, ptr %161, align 8, !dbg !6299, !tbaa !6392
  %163 = and i64 %162, 4294967295, !dbg !6299
  %164 = icmp eq i64 %163, 14, !dbg !6299
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !6299, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %165(ptr nonnull @.str.1754), !dbg !6299
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides, null, !dbg !6299
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6299, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides, i64 1, !dbg !6299
  %167 = load i64, ptr %166, align 8, !dbg !6299, !tbaa !6394
  %168 = and i64 %167, 4294967295, !dbg !6299
  %169 = icmp eq i64 %168, 196, !dbg !6299
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides, i64 2, !dbg !6299
  %171 = load i64, ptr %170, align 8, !dbg !6299, !tbaa !6404
  %172 = and i64 %171, 4294967295, !dbg !6299
  %173 = icmp eq i64 %172, 14, !dbg !6299
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22.T_cast.strides, i64 3, !dbg !6299
  %175 = load i64, ptr %174, align 8, !dbg !6299, !tbaa !6407
  %176 = and i64 %175, 4294967295, !dbg !6299
  %177 = icmp eq i64 %176, 1, !dbg !6299
  %178 = and i1 %173, %177, !dbg !6299
  %179 = and i1 %169, %178, !dbg !6299
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !6299, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6299
  %181 = load i64, ptr %180, align 8, !dbg !6299
  %182 = icmp eq i64 %181, 0, !dbg !6299
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !6299, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %183(ptr nonnull @.str.1755), !dbg !6299
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %184(ptr nonnull @.str.1756), !dbg !6299
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6299
  %186 = load i32, ptr %185, align 4, !dbg !6299
  %187 = icmp eq i32 %186, 2, !dbg !6299
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !6299, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %188(ptr nonnull @.str.1757), !dbg !6299
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6299
  %190 = load i32, ptr %189, align 4, !dbg !6299
  %191 = icmp eq i32 %dev_id, %190, !dbg !6299
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !6299, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6299, !tbaa !19
  tail call void %192(ptr nonnull @.str.1758), !dbg !6299
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6299
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6299, !tbaa !6409
  %193 = sext i32 %dev_id to i64, !dbg !6299
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6299
  store i64 %193, ptr %194, align 8, !dbg !6299
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6299
  store i32 0, ptr %195, align 4, !dbg !6299, !tbaa !6420
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6299
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6299
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6299, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6299
  %.not91 = icmp eq ptr %199, null, !dbg !6299
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6299, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6299, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6299, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6299
  %203 = icmp eq i32 %202, 0, !dbg !6299
  br i1 %203, label %call_end, label %common.ret, !dbg !6299, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !6299
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !6299
  %206 = icmp eq i32 %205, 0, !dbg !6299
  br i1 %206, label %call_end79, label %common.ret, !dbg !6299, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !6299
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6299
  br label %handle_init_end, !dbg !6299

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6299
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6422 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6424, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6425, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6426, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6427, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6428, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6429, metadata !DIExpression()), !dbg !6430
  %0 = alloca ptr, align 8, !dbg !6430
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6430
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6430
  %1 = icmp eq i32 %num_args, 3, !dbg !6430
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6430, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6430

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %2(ptr nonnull @.str.1762), !dbg !6430
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6430, !tbaa !6431
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6430
  %p1.code = load i32, ptr %3, align 4, !dbg !6430, !tbaa !6442
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6430
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6430, !tbaa !6444
  %p0 = load ptr, ptr %args, align 8, !dbg !6430
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6430
  %p1 = load ptr, ptr %5, align 8, !dbg !6430
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6430
  %T_cast = load ptr, ptr %6, align 8, !dbg !6430
  %p080 = load ptr, ptr %p0, align 8, !dbg !6430
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6430
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape = load ptr, ptr %7, align 8, !dbg !6430
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides = load ptr, ptr %8, align 8, !dbg !6430
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6430
  %dev_id = load i32, ptr %9, align 4, !dbg !6430
  %p181 = load ptr, ptr %p1, align 8, !dbg !6430
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6430
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape = load ptr, ptr %10, align 8, !dbg !6430
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.strides = load ptr, ptr %11, align 8, !dbg !6430
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6430
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6430
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6430
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6430
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6430
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6430

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %14(ptr nonnull @.str.1763), !dbg !6430
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6430

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %15(ptr nonnull @.str.1764), !dbg !6430
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6430

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %16(ptr nonnull @.str.1765), !dbg !6430
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6430
  %18 = load i32, ptr %17, align 4, !dbg !6430
  %19 = icmp eq i32 %18, 4, !dbg !6430
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6430, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %20(ptr nonnull @.str.1766), !dbg !6430
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6430
  %22 = load i16, ptr %21, align 2, !dbg !6430
  %23 = icmp eq i16 %22, 1, !dbg !6430
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6430
  %25 = load i8, ptr %24, align 1, !dbg !6430
  %26 = icmp eq i8 %25, 8, !dbg !6430
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6430
  %28 = load i8, ptr %27, align 1, !dbg !6430
  %29 = icmp eq i8 %28, 0, !dbg !6430
  %30 = and i1 %26, %29, !dbg !6430
  %31 = and i1 %23, %30, !dbg !6430
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6430, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %32(ptr nonnull @.str.1767), !dbg !6430
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape, align 8, !dbg !6430, !tbaa !6447
  %34 = and i64 %33, 4294967295, !dbg !6430
  %35 = icmp eq i64 %34, 1, !dbg !6430
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6430, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %36(ptr nonnull @.str.1768), !dbg !6430
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape, i64 1, !dbg !6430
  %38 = load i64, ptr %37, align 8, !dbg !6430, !tbaa !6457
  %39 = and i64 %38, 4294967295, !dbg !6430
  %40 = icmp eq i64 %39, 1024, !dbg !6430
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6430, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %41(ptr nonnull @.str.1769), !dbg !6430
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape, i64 2, !dbg !6430
  %43 = load i64, ptr %42, align 8, !dbg !6430, !tbaa !6459
  %44 = and i64 %43, 4294967295, !dbg !6430
  %45 = icmp eq i64 %44, 14, !dbg !6430
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6430, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %46(ptr nonnull @.str.1770), !dbg !6430
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.shape, i64 3, !dbg !6430
  %48 = load i64, ptr %47, align 8, !dbg !6430, !tbaa !6462
  %49 = and i64 %48, 4294967295, !dbg !6430
  %50 = icmp eq i64 %49, 14, !dbg !6430
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6430, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %51(ptr nonnull @.str.1771), !dbg !6430
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides, null, !dbg !6430
  br i1 %.not, label %if_end, label %if_then, !dbg !6430, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides, i64 1, !dbg !6430
  %53 = load i64, ptr %52, align 8, !dbg !6430, !tbaa !6464
  %54 = and i64 %53, 4294967295, !dbg !6430
  %55 = icmp eq i64 %54, 196, !dbg !6430
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides, i64 2, !dbg !6430
  %57 = load i64, ptr %56, align 8, !dbg !6430, !tbaa !6474
  %58 = and i64 %57, 4294967295, !dbg !6430
  %59 = icmp eq i64 %58, 14, !dbg !6430
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p0.strides, i64 3, !dbg !6430
  %61 = load i64, ptr %60, align 8, !dbg !6430, !tbaa !6477
  %62 = and i64 %61, 4294967295, !dbg !6430
  %63 = icmp eq i64 %62, 1, !dbg !6430
  %64 = and i1 %59, %63, !dbg !6430
  %65 = and i1 %55, %64, !dbg !6430
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6430, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6430
  %67 = load i64, ptr %66, align 8, !dbg !6430
  %68 = icmp eq i64 %67, 0, !dbg !6430
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6430, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %69(ptr nonnull @.str.1772), !dbg !6430
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %70(ptr nonnull @.str.1773), !dbg !6430
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6430
  %72 = load i32, ptr %71, align 4, !dbg !6430
  %73 = icmp eq i32 %72, 2, !dbg !6430
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6430, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %74(ptr nonnull @.str.1774), !dbg !6430
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6430
  %76 = load i32, ptr %75, align 4, !dbg !6430
  %77 = icmp eq i32 %76, 4, !dbg !6430
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6430, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %78(ptr nonnull @.str.1775), !dbg !6430
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6430
  %80 = load i16, ptr %79, align 2, !dbg !6430
  %81 = icmp eq i16 %80, 1, !dbg !6430
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6430
  %83 = load i8, ptr %82, align 1, !dbg !6430
  %84 = icmp eq i8 %83, 8, !dbg !6430
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6430
  %86 = load i8, ptr %85, align 1, !dbg !6430
  %87 = icmp eq i8 %86, 0, !dbg !6430
  %88 = and i1 %84, %87, !dbg !6430
  %89 = and i1 %81, %88, !dbg !6430
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6430, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %90(ptr nonnull @.str.1776), !dbg !6430
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape, align 8, !dbg !6430, !tbaa !6479
  %92 = and i64 %91, 4294967295, !dbg !6430
  %93 = icmp eq i64 %92, 512, !dbg !6430
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6430, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %94(ptr nonnull @.str.1777), !dbg !6430
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape, i64 1, !dbg !6430
  %96 = load i64, ptr %95, align 8, !dbg !6430, !tbaa !6489
  %97 = and i64 %96, 4294967295, !dbg !6430
  %98 = icmp eq i64 %97, 1024, !dbg !6430
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6430, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %99(ptr nonnull @.str.1778), !dbg !6430
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape, i64 2, !dbg !6430
  %101 = load i64, ptr %100, align 8, !dbg !6430, !tbaa !6491
  %102 = and i64 %101, 4294967295, !dbg !6430
  %103 = icmp eq i64 %102, 1, !dbg !6430
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6430, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %104(ptr nonnull @.str.1779), !dbg !6430
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.shape, i64 3, !dbg !6430
  %106 = load i64, ptr %105, align 8, !dbg !6430, !tbaa !6494
  %107 = and i64 %106, 4294967295, !dbg !6430
  %108 = icmp eq i64 %107, 1, !dbg !6430
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6430, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %109(ptr nonnull @.str.1780), !dbg !6430
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.strides, null, !dbg !6430
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6430, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.strides, align 8, !dbg !6430, !tbaa !6496
  %111 = and i64 %110, 4294967295, !dbg !6430
  %112 = icmp eq i64 %111, 1024, !dbg !6430
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.p1.strides, i64 1, !dbg !6430
  %114 = load i64, ptr %113, align 8, !dbg !6430, !tbaa !6506
  %115 = and i64 %114, 4294967295, !dbg !6430
  %116 = icmp eq i64 %115, 1, !dbg !6430
  %117 = and i1 %112, %116, !dbg !6430
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !6430, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6430
  %119 = load i64, ptr %118, align 8, !dbg !6430
  %120 = icmp eq i64 %119, 0, !dbg !6430
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !6430, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %121(ptr nonnull @.str.1781), !dbg !6430
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %122(ptr nonnull @.str.1782), !dbg !6430
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6430
  %124 = load i32, ptr %123, align 4, !dbg !6430
  %125 = icmp eq i32 %124, 2, !dbg !6430
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !6430, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %126(ptr nonnull @.str.1783), !dbg !6430
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6430
  %128 = load i32, ptr %127, align 4, !dbg !6430
  %129 = icmp eq i32 %dev_id, %128, !dbg !6430
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !6430, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %130(ptr nonnull @.str.1784), !dbg !6430
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6430
  %132 = load i32, ptr %131, align 4, !dbg !6430
  %133 = icmp eq i32 %132, 4, !dbg !6430
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !6430, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %134(ptr nonnull @.str.1785), !dbg !6430
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6430
  %136 = load i16, ptr %135, align 2, !dbg !6430
  %137 = icmp eq i16 %136, 1, !dbg !6430
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6430
  %139 = load i8, ptr %138, align 1, !dbg !6430
  %140 = icmp eq i8 %139, 8, !dbg !6430
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6430
  %142 = load i8, ptr %141, align 1, !dbg !6430
  %143 = icmp eq i8 %142, 0, !dbg !6430
  %144 = and i1 %140, %143, !dbg !6430
  %145 = and i1 %137, %144, !dbg !6430
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !6430, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %146(ptr nonnull @.str.1786), !dbg !6430
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape, align 8, !dbg !6430, !tbaa !6508
  %148 = and i64 %147, 4294967295, !dbg !6430
  %149 = icmp eq i64 %148, 1, !dbg !6430
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !6430, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %150(ptr nonnull @.str.1787), !dbg !6430
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape, i64 1, !dbg !6430
  %152 = load i64, ptr %151, align 8, !dbg !6430, !tbaa !6518
  %153 = and i64 %152, 4294967295, !dbg !6430
  %154 = icmp eq i64 %153, 512, !dbg !6430
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !6430, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %155(ptr nonnull @.str.1788), !dbg !6430
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape, i64 2, !dbg !6430
  %157 = load i64, ptr %156, align 8, !dbg !6430, !tbaa !6520
  %158 = and i64 %157, 4294967295, !dbg !6430
  %159 = icmp eq i64 %158, 14, !dbg !6430
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !6430, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %160(ptr nonnull @.str.1789), !dbg !6430
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.shape, i64 3, !dbg !6430
  %162 = load i64, ptr %161, align 8, !dbg !6430, !tbaa !6523
  %163 = and i64 %162, 4294967295, !dbg !6430
  %164 = icmp eq i64 %163, 14, !dbg !6430
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !6430, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %165(ptr nonnull @.str.1790), !dbg !6430
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides, null, !dbg !6430
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6430, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides, i64 1, !dbg !6430
  %167 = load i64, ptr %166, align 8, !dbg !6430, !tbaa !6525
  %168 = and i64 %167, 4294967295, !dbg !6430
  %169 = icmp eq i64 %168, 196, !dbg !6430
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides, i64 2, !dbg !6430
  %171 = load i64, ptr %170, align 8, !dbg !6430, !tbaa !6535
  %172 = and i64 %171, 4294967295, !dbg !6430
  %173 = icmp eq i64 %172, 14, !dbg !6430
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23.T_cast.strides, i64 3, !dbg !6430
  %175 = load i64, ptr %174, align 8, !dbg !6430, !tbaa !6538
  %176 = and i64 %175, 4294967295, !dbg !6430
  %177 = icmp eq i64 %176, 1, !dbg !6430
  %178 = and i1 %173, %177, !dbg !6430
  %179 = and i1 %169, %178, !dbg !6430
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !6430, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6430
  %181 = load i64, ptr %180, align 8, !dbg !6430
  %182 = icmp eq i64 %181, 0, !dbg !6430
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !6430, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %183(ptr nonnull @.str.1791), !dbg !6430
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %184(ptr nonnull @.str.1792), !dbg !6430
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6430
  %186 = load i32, ptr %185, align 4, !dbg !6430
  %187 = icmp eq i32 %186, 2, !dbg !6430
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !6430, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %188(ptr nonnull @.str.1793), !dbg !6430
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6430
  %190 = load i32, ptr %189, align 4, !dbg !6430
  %191 = icmp eq i32 %dev_id, %190, !dbg !6430
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !6430, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6430, !tbaa !19
  tail call void %192(ptr nonnull @.str.1794), !dbg !6430
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6430
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6430, !tbaa !6540
  %193 = sext i32 %dev_id to i64, !dbg !6430
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6430
  store i64 %193, ptr %194, align 8, !dbg !6430
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6430
  store i32 0, ptr %195, align 4, !dbg !6430, !tbaa !6551
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6430
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6430
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6430, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6430
  %.not91 = icmp eq ptr %199, null, !dbg !6430
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6430, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6430, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6430, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6430
  %203 = icmp eq i32 %202, 0, !dbg !6430
  br i1 %203, label %call_end, label %common.ret, !dbg !6430, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !6430
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !6430
  %206 = icmp eq i32 %205, 0, !dbg !6430
  br i1 %206, label %call_end79, label %common.ret, !dbg !6430, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !6430
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6430
  br label %handle_init_end, !dbg !6430

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6430
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6553 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6555, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6556, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6557, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6558, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6560, metadata !DIExpression()), !dbg !6561
  %0 = alloca ptr, align 8, !dbg !6561
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6561
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6561
  %1 = icmp eq i32 %num_args, 3, !dbg !6561
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6561, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6561

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %2(ptr nonnull @.str.1798), !dbg !6561
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6561, !tbaa !6562
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6561
  %p1.code = load i32, ptr %3, align 4, !dbg !6561, !tbaa !6573
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6561
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6561, !tbaa !6575
  %p0 = load ptr, ptr %args, align 8, !dbg !6561
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6561
  %p1 = load ptr, ptr %5, align 8, !dbg !6561
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6561
  %T_cast = load ptr, ptr %6, align 8, !dbg !6561
  %p080 = load ptr, ptr %p0, align 8, !dbg !6561
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6561
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape = load ptr, ptr %7, align 8, !dbg !6561
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides = load ptr, ptr %8, align 8, !dbg !6561
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6561
  %dev_id = load i32, ptr %9, align 4, !dbg !6561
  %p181 = load ptr, ptr %p1, align 8, !dbg !6561
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6561
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape = load ptr, ptr %10, align 8, !dbg !6561
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides = load ptr, ptr %11, align 8, !dbg !6561
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6561
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6561
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6561
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6561
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6561
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6561

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %14(ptr nonnull @.str.1799), !dbg !6561
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6561

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %15(ptr nonnull @.str.1800), !dbg !6561
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6561

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %16(ptr nonnull @.str.1801), !dbg !6561
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6561
  %18 = load i32, ptr %17, align 4, !dbg !6561
  %19 = icmp eq i32 %18, 4, !dbg !6561
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6561, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %20(ptr nonnull @.str.1802), !dbg !6561
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6561
  %22 = load i16, ptr %21, align 2, !dbg !6561
  %23 = icmp eq i16 %22, 1, !dbg !6561
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6561
  %25 = load i8, ptr %24, align 1, !dbg !6561
  %26 = icmp eq i8 %25, 8, !dbg !6561
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6561
  %28 = load i8, ptr %27, align 1, !dbg !6561
  %29 = icmp eq i8 %28, 0, !dbg !6561
  %30 = and i1 %26, %29, !dbg !6561
  %31 = and i1 %23, %30, !dbg !6561
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6561, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %32(ptr nonnull @.str.1803), !dbg !6561
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape, align 8, !dbg !6561, !tbaa !6578
  %34 = and i64 %33, 4294967295, !dbg !6561
  %35 = icmp eq i64 %34, 1, !dbg !6561
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6561, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %36(ptr nonnull @.str.1804), !dbg !6561
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape, i64 1, !dbg !6561
  %38 = load i64, ptr %37, align 8, !dbg !6561, !tbaa !6588
  %39 = and i64 %38, 4294967295, !dbg !6561
  %40 = icmp eq i64 %39, 512, !dbg !6561
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6561, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %41(ptr nonnull @.str.1805), !dbg !6561
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape, i64 2, !dbg !6561
  %43 = load i64, ptr %42, align 8, !dbg !6561, !tbaa !6590
  %44 = and i64 %43, 4294967295, !dbg !6561
  %45 = icmp eq i64 %44, 14, !dbg !6561
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6561, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %46(ptr nonnull @.str.1806), !dbg !6561
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.shape, i64 3, !dbg !6561
  %48 = load i64, ptr %47, align 8, !dbg !6561, !tbaa !6593
  %49 = and i64 %48, 4294967295, !dbg !6561
  %50 = icmp eq i64 %49, 14, !dbg !6561
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6561, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %51(ptr nonnull @.str.1807), !dbg !6561
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides, null, !dbg !6561
  br i1 %.not, label %if_end, label %if_then, !dbg !6561, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides, i64 1, !dbg !6561
  %53 = load i64, ptr %52, align 8, !dbg !6561, !tbaa !6595
  %54 = and i64 %53, 4294967295, !dbg !6561
  %55 = icmp eq i64 %54, 196, !dbg !6561
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides, i64 2, !dbg !6561
  %57 = load i64, ptr %56, align 8, !dbg !6561, !tbaa !6605
  %58 = and i64 %57, 4294967295, !dbg !6561
  %59 = icmp eq i64 %58, 14, !dbg !6561
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p0.strides, i64 3, !dbg !6561
  %61 = load i64, ptr %60, align 8, !dbg !6561, !tbaa !6608
  %62 = and i64 %61, 4294967295, !dbg !6561
  %63 = icmp eq i64 %62, 1, !dbg !6561
  %64 = and i1 %59, %63, !dbg !6561
  %65 = and i1 %55, %64, !dbg !6561
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6561, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6561
  %67 = load i64, ptr %66, align 8, !dbg !6561
  %68 = icmp eq i64 %67, 0, !dbg !6561
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6561, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %69(ptr nonnull @.str.1808), !dbg !6561
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %70(ptr nonnull @.str.1809), !dbg !6561
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6561
  %72 = load i32, ptr %71, align 4, !dbg !6561
  %73 = icmp eq i32 %72, 2, !dbg !6561
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6561, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %74(ptr nonnull @.str.1810), !dbg !6561
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6561
  %76 = load i32, ptr %75, align 4, !dbg !6561
  %77 = icmp eq i32 %76, 4, !dbg !6561
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6561, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %78(ptr nonnull @.str.1811), !dbg !6561
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6561
  %80 = load i16, ptr %79, align 2, !dbg !6561
  %81 = icmp eq i16 %80, 1, !dbg !6561
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6561
  %83 = load i8, ptr %82, align 1, !dbg !6561
  %84 = icmp eq i8 %83, 8, !dbg !6561
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6561
  %86 = load i8, ptr %85, align 1, !dbg !6561
  %87 = icmp eq i8 %86, 0, !dbg !6561
  %88 = and i1 %84, %87, !dbg !6561
  %89 = and i1 %81, %88, !dbg !6561
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6561, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %90(ptr nonnull @.str.1812), !dbg !6561
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape, align 8, !dbg !6561, !tbaa !6610
  %92 = and i64 %91, 4294967295, !dbg !6561
  %93 = icmp eq i64 %92, 512, !dbg !6561
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6561, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %94(ptr nonnull @.str.1813), !dbg !6561
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape, i64 1, !dbg !6561
  %96 = load i64, ptr %95, align 8, !dbg !6561, !tbaa !6620
  %97 = and i64 %96, 4294967295, !dbg !6561
  %98 = icmp eq i64 %97, 512, !dbg !6561
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6561, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %99(ptr nonnull @.str.1814), !dbg !6561
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape, i64 2, !dbg !6561
  %101 = load i64, ptr %100, align 8, !dbg !6561, !tbaa !6622
  %102 = and i64 %101, 4294967295, !dbg !6561
  %103 = icmp eq i64 %102, 3, !dbg !6561
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6561, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %104(ptr nonnull @.str.1815), !dbg !6561
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.shape, i64 3, !dbg !6561
  %106 = load i64, ptr %105, align 8, !dbg !6561, !tbaa !6625
  %107 = and i64 %106, 4294967295, !dbg !6561
  %108 = icmp eq i64 %107, 3, !dbg !6561
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6561, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %109(ptr nonnull @.str.1816), !dbg !6561
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides, null, !dbg !6561
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6561, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides, align 8, !dbg !6561, !tbaa !6627
  %111 = and i64 %110, 4294967295, !dbg !6561
  %112 = icmp eq i64 %111, 4608, !dbg !6561
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides, i64 1, !dbg !6561
  %114 = load i64, ptr %113, align 8, !dbg !6561, !tbaa !6637
  %115 = and i64 %114, 4294967295, !dbg !6561
  %116 = icmp eq i64 %115, 9, !dbg !6561
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides, i64 2, !dbg !6561
  %118 = load i64, ptr %117, align 8, !dbg !6561, !tbaa !6639
  %119 = and i64 %118, 4294967295, !dbg !6561
  %120 = icmp eq i64 %119, 3, !dbg !6561
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.p1.strides, i64 3, !dbg !6561
  %122 = load i64, ptr %121, align 8, !dbg !6561, !tbaa !6642
  %123 = and i64 %122, 4294967295, !dbg !6561
  %124 = icmp eq i64 %123, 1, !dbg !6561
  %125 = and i1 %120, %124, !dbg !6561
  %126 = and i1 %116, %125, !dbg !6561
  %127 = and i1 %112, %126, !dbg !6561
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !6561, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6561
  %129 = load i64, ptr %128, align 8, !dbg !6561
  %130 = icmp eq i64 %129, 0, !dbg !6561
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !6561, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %131(ptr nonnull @.str.1817), !dbg !6561
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %132(ptr nonnull @.str.1818), !dbg !6561
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6561
  %134 = load i32, ptr %133, align 4, !dbg !6561
  %135 = icmp eq i32 %134, 2, !dbg !6561
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !6561, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %136(ptr nonnull @.str.1819), !dbg !6561
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6561
  %138 = load i32, ptr %137, align 4, !dbg !6561
  %139 = icmp eq i32 %dev_id, %138, !dbg !6561
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !6561, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %140(ptr nonnull @.str.1820), !dbg !6561
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6561
  %142 = load i32, ptr %141, align 4, !dbg !6561
  %143 = icmp eq i32 %142, 4, !dbg !6561
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !6561, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %144(ptr nonnull @.str.1821), !dbg !6561
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6561
  %146 = load i16, ptr %145, align 2, !dbg !6561
  %147 = icmp eq i16 %146, 1, !dbg !6561
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6561
  %149 = load i8, ptr %148, align 1, !dbg !6561
  %150 = icmp eq i8 %149, 8, !dbg !6561
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6561
  %152 = load i8, ptr %151, align 1, !dbg !6561
  %153 = icmp eq i8 %152, 0, !dbg !6561
  %154 = and i1 %150, %153, !dbg !6561
  %155 = and i1 %147, %154, !dbg !6561
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !6561, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %156(ptr nonnull @.str.1822), !dbg !6561
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape, align 8, !dbg !6561, !tbaa !6644
  %158 = and i64 %157, 4294967295, !dbg !6561
  %159 = icmp eq i64 %158, 1, !dbg !6561
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !6561, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %160(ptr nonnull @.str.1823), !dbg !6561
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape, i64 1, !dbg !6561
  %162 = load i64, ptr %161, align 8, !dbg !6561, !tbaa !6654
  %163 = and i64 %162, 4294967295, !dbg !6561
  %164 = icmp eq i64 %163, 512, !dbg !6561
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !6561, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %165(ptr nonnull @.str.1824), !dbg !6561
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape, i64 2, !dbg !6561
  %167 = load i64, ptr %166, align 8, !dbg !6561, !tbaa !6656
  %168 = and i64 %167, 4294967295, !dbg !6561
  %169 = icmp eq i64 %168, 7, !dbg !6561
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !6561, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %170(ptr nonnull @.str.1825), !dbg !6561
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.shape, i64 3, !dbg !6561
  %172 = load i64, ptr %171, align 8, !dbg !6561, !tbaa !6659
  %173 = and i64 %172, 4294967295, !dbg !6561
  %174 = icmp eq i64 %173, 7, !dbg !6561
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !6561, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %175(ptr nonnull @.str.1826), !dbg !6561
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides, null, !dbg !6561
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6561, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides, i64 1, !dbg !6561
  %177 = load i64, ptr %176, align 8, !dbg !6561, !tbaa !6661
  %178 = and i64 %177, 4294967295, !dbg !6561
  %179 = icmp eq i64 %178, 49, !dbg !6561
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides, i64 2, !dbg !6561
  %181 = load i64, ptr %180, align 8, !dbg !6561, !tbaa !6671
  %182 = and i64 %181, 4294967295, !dbg !6561
  %183 = icmp eq i64 %182, 7, !dbg !6561
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24.T_cast.strides, i64 3, !dbg !6561
  %185 = load i64, ptr %184, align 8, !dbg !6561, !tbaa !6674
  %186 = and i64 %185, 4294967295, !dbg !6561
  %187 = icmp eq i64 %186, 1, !dbg !6561
  %188 = and i1 %183, %187, !dbg !6561
  %189 = and i1 %179, %188, !dbg !6561
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !6561, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6561
  %191 = load i64, ptr %190, align 8, !dbg !6561
  %192 = icmp eq i64 %191, 0, !dbg !6561
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !6561, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %193(ptr nonnull @.str.1827), !dbg !6561
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %194(ptr nonnull @.str.1828), !dbg !6561
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6561
  %196 = load i32, ptr %195, align 4, !dbg !6561
  %197 = icmp eq i32 %196, 2, !dbg !6561
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !6561, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %198(ptr nonnull @.str.1829), !dbg !6561
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6561
  %200 = load i32, ptr %199, align 4, !dbg !6561
  %201 = icmp eq i32 %dev_id, %200, !dbg !6561
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !6561, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6561, !tbaa !19
  tail call void %202(ptr nonnull @.str.1830), !dbg !6561
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6561
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6561, !tbaa !6676
  %203 = sext i32 %dev_id to i64, !dbg !6561
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6561
  store i64 %203, ptr %204, align 8, !dbg !6561
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6561
  store i32 0, ptr %205, align 4, !dbg !6561, !tbaa !6687
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6561
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6561
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6561, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6561
  %.not91 = icmp eq ptr %209, null, !dbg !6561
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6561, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6561, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6561, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6561
  %213 = icmp eq i32 %212, 0, !dbg !6561
  br i1 %213, label %call_end, label %common.ret, !dbg !6561, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !6561
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !6561
  %216 = icmp eq i32 %215, 0, !dbg !6561
  br i1 %216, label %call_end79, label %common.ret, !dbg !6561, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !6561
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6561
  br label %handle_init_end, !dbg !6561

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6561
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6689 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6691, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6692, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6693, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6695, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6696, metadata !DIExpression()), !dbg !6697
  %0 = alloca ptr, align 8, !dbg !6697
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6697
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6697
  %1 = icmp eq i32 %num_args, 3, !dbg !6697
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6697, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6697

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %2(ptr nonnull @.str.1834), !dbg !6697
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6697, !tbaa !6698
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6697
  %p1.code = load i32, ptr %3, align 4, !dbg !6697, !tbaa !6709
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6697
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6697, !tbaa !6711
  %p0 = load ptr, ptr %args, align 8, !dbg !6697
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6697
  %p1 = load ptr, ptr %5, align 8, !dbg !6697
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6697
  %T_cast = load ptr, ptr %6, align 8, !dbg !6697
  %p080 = load ptr, ptr %p0, align 8, !dbg !6697
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6697
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape = load ptr, ptr %7, align 8, !dbg !6697
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides = load ptr, ptr %8, align 8, !dbg !6697
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6697
  %dev_id = load i32, ptr %9, align 4, !dbg !6697
  %p181 = load ptr, ptr %p1, align 8, !dbg !6697
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6697
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape = load ptr, ptr %10, align 8, !dbg !6697
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.strides = load ptr, ptr %11, align 8, !dbg !6697
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6697
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6697
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6697
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6697
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6697
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6697

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %14(ptr nonnull @.str.1835), !dbg !6697
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6697

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %15(ptr nonnull @.str.1836), !dbg !6697
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6697

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %16(ptr nonnull @.str.1837), !dbg !6697
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6697
  %18 = load i32, ptr %17, align 4, !dbg !6697
  %19 = icmp eq i32 %18, 4, !dbg !6697
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6697, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %20(ptr nonnull @.str.1838), !dbg !6697
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6697
  %22 = load i16, ptr %21, align 2, !dbg !6697
  %23 = icmp eq i16 %22, 1, !dbg !6697
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6697
  %25 = load i8, ptr %24, align 1, !dbg !6697
  %26 = icmp eq i8 %25, 8, !dbg !6697
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6697
  %28 = load i8, ptr %27, align 1, !dbg !6697
  %29 = icmp eq i8 %28, 0, !dbg !6697
  %30 = and i1 %26, %29, !dbg !6697
  %31 = and i1 %23, %30, !dbg !6697
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6697, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %32(ptr nonnull @.str.1839), !dbg !6697
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape, align 8, !dbg !6697, !tbaa !6714
  %34 = and i64 %33, 4294967295, !dbg !6697
  %35 = icmp eq i64 %34, 1, !dbg !6697
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6697, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %36(ptr nonnull @.str.1840), !dbg !6697
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape, i64 1, !dbg !6697
  %38 = load i64, ptr %37, align 8, !dbg !6697, !tbaa !6724
  %39 = and i64 %38, 4294967295, !dbg !6697
  %40 = icmp eq i64 %39, 512, !dbg !6697
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6697, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %41(ptr nonnull @.str.1841), !dbg !6697
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape, i64 2, !dbg !6697
  %43 = load i64, ptr %42, align 8, !dbg !6697, !tbaa !6726
  %44 = and i64 %43, 4294967295, !dbg !6697
  %45 = icmp eq i64 %44, 7, !dbg !6697
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6697, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %46(ptr nonnull @.str.1842), !dbg !6697
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.shape, i64 3, !dbg !6697
  %48 = load i64, ptr %47, align 8, !dbg !6697, !tbaa !6729
  %49 = and i64 %48, 4294967295, !dbg !6697
  %50 = icmp eq i64 %49, 7, !dbg !6697
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6697, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %51(ptr nonnull @.str.1843), !dbg !6697
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides, null, !dbg !6697
  br i1 %.not, label %if_end, label %if_then, !dbg !6697, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides, i64 1, !dbg !6697
  %53 = load i64, ptr %52, align 8, !dbg !6697, !tbaa !6731
  %54 = and i64 %53, 4294967295, !dbg !6697
  %55 = icmp eq i64 %54, 49, !dbg !6697
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides, i64 2, !dbg !6697
  %57 = load i64, ptr %56, align 8, !dbg !6697, !tbaa !6741
  %58 = and i64 %57, 4294967295, !dbg !6697
  %59 = icmp eq i64 %58, 7, !dbg !6697
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p0.strides, i64 3, !dbg !6697
  %61 = load i64, ptr %60, align 8, !dbg !6697, !tbaa !6744
  %62 = and i64 %61, 4294967295, !dbg !6697
  %63 = icmp eq i64 %62, 1, !dbg !6697
  %64 = and i1 %59, %63, !dbg !6697
  %65 = and i1 %55, %64, !dbg !6697
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6697, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6697
  %67 = load i64, ptr %66, align 8, !dbg !6697
  %68 = icmp eq i64 %67, 0, !dbg !6697
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6697, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %69(ptr nonnull @.str.1844), !dbg !6697
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %70(ptr nonnull @.str.1845), !dbg !6697
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6697
  %72 = load i32, ptr %71, align 4, !dbg !6697
  %73 = icmp eq i32 %72, 2, !dbg !6697
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6697, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %74(ptr nonnull @.str.1846), !dbg !6697
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6697
  %76 = load i32, ptr %75, align 4, !dbg !6697
  %77 = icmp eq i32 %76, 4, !dbg !6697
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6697, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %78(ptr nonnull @.str.1847), !dbg !6697
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6697
  %80 = load i16, ptr %79, align 2, !dbg !6697
  %81 = icmp eq i16 %80, 1, !dbg !6697
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6697
  %83 = load i8, ptr %82, align 1, !dbg !6697
  %84 = icmp eq i8 %83, 8, !dbg !6697
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6697
  %86 = load i8, ptr %85, align 1, !dbg !6697
  %87 = icmp eq i8 %86, 0, !dbg !6697
  %88 = and i1 %84, %87, !dbg !6697
  %89 = and i1 %81, %88, !dbg !6697
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6697, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %90(ptr nonnull @.str.1848), !dbg !6697
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape, align 8, !dbg !6697, !tbaa !6746
  %92 = and i64 %91, 4294967295, !dbg !6697
  %93 = icmp eq i64 %92, 2048, !dbg !6697
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6697, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %94(ptr nonnull @.str.1849), !dbg !6697
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape, i64 1, !dbg !6697
  %96 = load i64, ptr %95, align 8, !dbg !6697, !tbaa !6756
  %97 = and i64 %96, 4294967295, !dbg !6697
  %98 = icmp eq i64 %97, 512, !dbg !6697
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6697, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %99(ptr nonnull @.str.1850), !dbg !6697
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape, i64 2, !dbg !6697
  %101 = load i64, ptr %100, align 8, !dbg !6697, !tbaa !6758
  %102 = and i64 %101, 4294967295, !dbg !6697
  %103 = icmp eq i64 %102, 1, !dbg !6697
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6697, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %104(ptr nonnull @.str.1851), !dbg !6697
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.shape, i64 3, !dbg !6697
  %106 = load i64, ptr %105, align 8, !dbg !6697, !tbaa !6761
  %107 = and i64 %106, 4294967295, !dbg !6697
  %108 = icmp eq i64 %107, 1, !dbg !6697
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6697, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %109(ptr nonnull @.str.1852), !dbg !6697
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.strides, null, !dbg !6697
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6697, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.strides, align 8, !dbg !6697, !tbaa !6763
  %111 = and i64 %110, 4294967295, !dbg !6697
  %112 = icmp eq i64 %111, 512, !dbg !6697
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.p1.strides, i64 1, !dbg !6697
  %114 = load i64, ptr %113, align 8, !dbg !6697, !tbaa !6773
  %115 = and i64 %114, 4294967295, !dbg !6697
  %116 = icmp eq i64 %115, 1, !dbg !6697
  %117 = and i1 %112, %116, !dbg !6697
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !6697, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6697
  %119 = load i64, ptr %118, align 8, !dbg !6697
  %120 = icmp eq i64 %119, 0, !dbg !6697
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !6697, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %121(ptr nonnull @.str.1853), !dbg !6697
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %122(ptr nonnull @.str.1854), !dbg !6697
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6697
  %124 = load i32, ptr %123, align 4, !dbg !6697
  %125 = icmp eq i32 %124, 2, !dbg !6697
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !6697, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %126(ptr nonnull @.str.1855), !dbg !6697
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6697
  %128 = load i32, ptr %127, align 4, !dbg !6697
  %129 = icmp eq i32 %dev_id, %128, !dbg !6697
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !6697, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %130(ptr nonnull @.str.1856), !dbg !6697
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6697
  %132 = load i32, ptr %131, align 4, !dbg !6697
  %133 = icmp eq i32 %132, 4, !dbg !6697
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !6697, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %134(ptr nonnull @.str.1857), !dbg !6697
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6697
  %136 = load i16, ptr %135, align 2, !dbg !6697
  %137 = icmp eq i16 %136, 1, !dbg !6697
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6697
  %139 = load i8, ptr %138, align 1, !dbg !6697
  %140 = icmp eq i8 %139, 8, !dbg !6697
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6697
  %142 = load i8, ptr %141, align 1, !dbg !6697
  %143 = icmp eq i8 %142, 0, !dbg !6697
  %144 = and i1 %140, %143, !dbg !6697
  %145 = and i1 %137, %144, !dbg !6697
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !6697, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %146(ptr nonnull @.str.1858), !dbg !6697
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape, align 8, !dbg !6697, !tbaa !6775
  %148 = and i64 %147, 4294967295, !dbg !6697
  %149 = icmp eq i64 %148, 1, !dbg !6697
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !6697, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %150(ptr nonnull @.str.1859), !dbg !6697
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape, i64 1, !dbg !6697
  %152 = load i64, ptr %151, align 8, !dbg !6697, !tbaa !6785
  %153 = and i64 %152, 4294967295, !dbg !6697
  %154 = icmp eq i64 %153, 2048, !dbg !6697
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !6697, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %155(ptr nonnull @.str.1860), !dbg !6697
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape, i64 2, !dbg !6697
  %157 = load i64, ptr %156, align 8, !dbg !6697, !tbaa !6787
  %158 = and i64 %157, 4294967295, !dbg !6697
  %159 = icmp eq i64 %158, 7, !dbg !6697
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !6697, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %160(ptr nonnull @.str.1861), !dbg !6697
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.shape, i64 3, !dbg !6697
  %162 = load i64, ptr %161, align 8, !dbg !6697, !tbaa !6790
  %163 = and i64 %162, 4294967295, !dbg !6697
  %164 = icmp eq i64 %163, 7, !dbg !6697
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !6697, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %165(ptr nonnull @.str.1862), !dbg !6697
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides, null, !dbg !6697
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6697, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides, i64 1, !dbg !6697
  %167 = load i64, ptr %166, align 8, !dbg !6697, !tbaa !6792
  %168 = and i64 %167, 4294967295, !dbg !6697
  %169 = icmp eq i64 %168, 49, !dbg !6697
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides, i64 2, !dbg !6697
  %171 = load i64, ptr %170, align 8, !dbg !6697, !tbaa !6802
  %172 = and i64 %171, 4294967295, !dbg !6697
  %173 = icmp eq i64 %172, 7, !dbg !6697
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25.T_cast.strides, i64 3, !dbg !6697
  %175 = load i64, ptr %174, align 8, !dbg !6697, !tbaa !6805
  %176 = and i64 %175, 4294967295, !dbg !6697
  %177 = icmp eq i64 %176, 1, !dbg !6697
  %178 = and i1 %173, %177, !dbg !6697
  %179 = and i1 %169, %178, !dbg !6697
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !6697, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6697
  %181 = load i64, ptr %180, align 8, !dbg !6697
  %182 = icmp eq i64 %181, 0, !dbg !6697
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !6697, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %183(ptr nonnull @.str.1863), !dbg !6697
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %184(ptr nonnull @.str.1864), !dbg !6697
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6697
  %186 = load i32, ptr %185, align 4, !dbg !6697
  %187 = icmp eq i32 %186, 2, !dbg !6697
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !6697, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %188(ptr nonnull @.str.1865), !dbg !6697
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6697
  %190 = load i32, ptr %189, align 4, !dbg !6697
  %191 = icmp eq i32 %dev_id, %190, !dbg !6697
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !6697, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6697, !tbaa !19
  tail call void %192(ptr nonnull @.str.1866), !dbg !6697
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6697
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6697, !tbaa !6807
  %193 = sext i32 %dev_id to i64, !dbg !6697
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6697
  store i64 %193, ptr %194, align 8, !dbg !6697
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6697
  store i32 0, ptr %195, align 4, !dbg !6697, !tbaa !6818
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6697
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6697
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6697, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6697
  %.not91 = icmp eq ptr %199, null, !dbg !6697
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6697, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6697, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6697, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6697
  %203 = icmp eq i32 %202, 0, !dbg !6697
  br i1 %203, label %call_end, label %common.ret, !dbg !6697, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !6697
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !6697
  %206 = icmp eq i32 %205, 0, !dbg !6697
  br i1 %206, label %call_end79, label %common.ret, !dbg !6697, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !6697
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6697
  br label %handle_init_end, !dbg !6697

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6697
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6820 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6822, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6823, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6824, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6825, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6826, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6827, metadata !DIExpression()), !dbg !6828
  %0 = alloca ptr, align 8, !dbg !6828
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6828
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6828
  %1 = icmp eq i32 %num_args, 3, !dbg !6828
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6828, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6828

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %2(ptr nonnull @.str.1870), !dbg !6828
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6828, !tbaa !6829
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6828
  %p1.code = load i32, ptr %3, align 4, !dbg !6828, !tbaa !6840
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6828
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6828, !tbaa !6842
  %p0 = load ptr, ptr %args, align 8, !dbg !6828
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6828
  %p1 = load ptr, ptr %5, align 8, !dbg !6828
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6828
  %T_cast = load ptr, ptr %6, align 8, !dbg !6828
  %p080 = load ptr, ptr %p0, align 8, !dbg !6828
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6828
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape = load ptr, ptr %7, align 8, !dbg !6828
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides = load ptr, ptr %8, align 8, !dbg !6828
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6828
  %dev_id = load i32, ptr %9, align 4, !dbg !6828
  %p181 = load ptr, ptr %p1, align 8, !dbg !6828
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6828
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape = load ptr, ptr %10, align 8, !dbg !6828
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.strides = load ptr, ptr %11, align 8, !dbg !6828
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6828
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6828
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6828
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6828
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6828
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6828

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %14(ptr nonnull @.str.1871), !dbg !6828
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6828

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %15(ptr nonnull @.str.1872), !dbg !6828
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6828

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %16(ptr nonnull @.str.1873), !dbg !6828
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6828
  %18 = load i32, ptr %17, align 4, !dbg !6828
  %19 = icmp eq i32 %18, 4, !dbg !6828
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6828, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %20(ptr nonnull @.str.1874), !dbg !6828
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6828
  %22 = load i16, ptr %21, align 2, !dbg !6828
  %23 = icmp eq i16 %22, 1, !dbg !6828
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6828
  %25 = load i8, ptr %24, align 1, !dbg !6828
  %26 = icmp eq i8 %25, 8, !dbg !6828
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6828
  %28 = load i8, ptr %27, align 1, !dbg !6828
  %29 = icmp eq i8 %28, 0, !dbg !6828
  %30 = and i1 %26, %29, !dbg !6828
  %31 = and i1 %23, %30, !dbg !6828
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6828, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %32(ptr nonnull @.str.1875), !dbg !6828
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape, align 8, !dbg !6828, !tbaa !6845
  %34 = and i64 %33, 4294967295, !dbg !6828
  %35 = icmp eq i64 %34, 1, !dbg !6828
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6828, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %36(ptr nonnull @.str.1876), !dbg !6828
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape, i64 1, !dbg !6828
  %38 = load i64, ptr %37, align 8, !dbg !6828, !tbaa !6855
  %39 = and i64 %38, 4294967295, !dbg !6828
  %40 = icmp eq i64 %39, 1024, !dbg !6828
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6828, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %41(ptr nonnull @.str.1877), !dbg !6828
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape, i64 2, !dbg !6828
  %43 = load i64, ptr %42, align 8, !dbg !6828, !tbaa !6857
  %44 = and i64 %43, 4294967295, !dbg !6828
  %45 = icmp eq i64 %44, 14, !dbg !6828
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6828, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %46(ptr nonnull @.str.1878), !dbg !6828
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.shape, i64 3, !dbg !6828
  %48 = load i64, ptr %47, align 8, !dbg !6828, !tbaa !6860
  %49 = and i64 %48, 4294967295, !dbg !6828
  %50 = icmp eq i64 %49, 14, !dbg !6828
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6828, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %51(ptr nonnull @.str.1879), !dbg !6828
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides, null, !dbg !6828
  br i1 %.not, label %if_end, label %if_then, !dbg !6828, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides, i64 1, !dbg !6828
  %53 = load i64, ptr %52, align 8, !dbg !6828, !tbaa !6862
  %54 = and i64 %53, 4294967295, !dbg !6828
  %55 = icmp eq i64 %54, 196, !dbg !6828
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides, i64 2, !dbg !6828
  %57 = load i64, ptr %56, align 8, !dbg !6828, !tbaa !6872
  %58 = and i64 %57, 4294967295, !dbg !6828
  %59 = icmp eq i64 %58, 14, !dbg !6828
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p0.strides, i64 3, !dbg !6828
  %61 = load i64, ptr %60, align 8, !dbg !6828, !tbaa !6875
  %62 = and i64 %61, 4294967295, !dbg !6828
  %63 = icmp eq i64 %62, 1, !dbg !6828
  %64 = and i1 %59, %63, !dbg !6828
  %65 = and i1 %55, %64, !dbg !6828
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6828, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6828
  %67 = load i64, ptr %66, align 8, !dbg !6828
  %68 = icmp eq i64 %67, 0, !dbg !6828
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6828, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %69(ptr nonnull @.str.1880), !dbg !6828
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %70(ptr nonnull @.str.1881), !dbg !6828
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6828
  %72 = load i32, ptr %71, align 4, !dbg !6828
  %73 = icmp eq i32 %72, 2, !dbg !6828
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6828, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %74(ptr nonnull @.str.1882), !dbg !6828
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6828
  %76 = load i32, ptr %75, align 4, !dbg !6828
  %77 = icmp eq i32 %76, 4, !dbg !6828
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6828, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %78(ptr nonnull @.str.1883), !dbg !6828
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6828
  %80 = load i16, ptr %79, align 2, !dbg !6828
  %81 = icmp eq i16 %80, 1, !dbg !6828
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6828
  %83 = load i8, ptr %82, align 1, !dbg !6828
  %84 = icmp eq i8 %83, 8, !dbg !6828
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6828
  %86 = load i8, ptr %85, align 1, !dbg !6828
  %87 = icmp eq i8 %86, 0, !dbg !6828
  %88 = and i1 %84, %87, !dbg !6828
  %89 = and i1 %81, %88, !dbg !6828
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6828, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %90(ptr nonnull @.str.1884), !dbg !6828
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape, align 8, !dbg !6828, !tbaa !6877
  %92 = and i64 %91, 4294967295, !dbg !6828
  %93 = icmp eq i64 %92, 2048, !dbg !6828
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6828, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %94(ptr nonnull @.str.1885), !dbg !6828
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape, i64 1, !dbg !6828
  %96 = load i64, ptr %95, align 8, !dbg !6828, !tbaa !6887
  %97 = and i64 %96, 4294967295, !dbg !6828
  %98 = icmp eq i64 %97, 1024, !dbg !6828
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6828, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %99(ptr nonnull @.str.1886), !dbg !6828
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape, i64 2, !dbg !6828
  %101 = load i64, ptr %100, align 8, !dbg !6828, !tbaa !6889
  %102 = and i64 %101, 4294967295, !dbg !6828
  %103 = icmp eq i64 %102, 1, !dbg !6828
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6828, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %104(ptr nonnull @.str.1887), !dbg !6828
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.shape, i64 3, !dbg !6828
  %106 = load i64, ptr %105, align 8, !dbg !6828, !tbaa !6892
  %107 = and i64 %106, 4294967295, !dbg !6828
  %108 = icmp eq i64 %107, 1, !dbg !6828
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6828, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %109(ptr nonnull @.str.1888), !dbg !6828
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.strides, null, !dbg !6828
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6828, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.strides, align 8, !dbg !6828, !tbaa !6894
  %111 = and i64 %110, 4294967295, !dbg !6828
  %112 = icmp eq i64 %111, 1024, !dbg !6828
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.p1.strides, i64 1, !dbg !6828
  %114 = load i64, ptr %113, align 8, !dbg !6828, !tbaa !6904
  %115 = and i64 %114, 4294967295, !dbg !6828
  %116 = icmp eq i64 %115, 1, !dbg !6828
  %117 = and i1 %112, %116, !dbg !6828
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !6828, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6828
  %119 = load i64, ptr %118, align 8, !dbg !6828
  %120 = icmp eq i64 %119, 0, !dbg !6828
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !6828, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %121(ptr nonnull @.str.1889), !dbg !6828
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %122(ptr nonnull @.str.1890), !dbg !6828
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6828
  %124 = load i32, ptr %123, align 4, !dbg !6828
  %125 = icmp eq i32 %124, 2, !dbg !6828
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !6828, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %126(ptr nonnull @.str.1891), !dbg !6828
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6828
  %128 = load i32, ptr %127, align 4, !dbg !6828
  %129 = icmp eq i32 %dev_id, %128, !dbg !6828
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !6828, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %130(ptr nonnull @.str.1892), !dbg !6828
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6828
  %132 = load i32, ptr %131, align 4, !dbg !6828
  %133 = icmp eq i32 %132, 4, !dbg !6828
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !6828, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %134(ptr nonnull @.str.1893), !dbg !6828
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6828
  %136 = load i16, ptr %135, align 2, !dbg !6828
  %137 = icmp eq i16 %136, 1, !dbg !6828
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6828
  %139 = load i8, ptr %138, align 1, !dbg !6828
  %140 = icmp eq i8 %139, 8, !dbg !6828
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6828
  %142 = load i8, ptr %141, align 1, !dbg !6828
  %143 = icmp eq i8 %142, 0, !dbg !6828
  %144 = and i1 %140, %143, !dbg !6828
  %145 = and i1 %137, %144, !dbg !6828
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !6828, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %146(ptr nonnull @.str.1894), !dbg !6828
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape, align 8, !dbg !6828, !tbaa !6906
  %148 = and i64 %147, 4294967295, !dbg !6828
  %149 = icmp eq i64 %148, 1, !dbg !6828
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !6828, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %150(ptr nonnull @.str.1895), !dbg !6828
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape, i64 1, !dbg !6828
  %152 = load i64, ptr %151, align 8, !dbg !6828, !tbaa !6916
  %153 = and i64 %152, 4294967295, !dbg !6828
  %154 = icmp eq i64 %153, 2048, !dbg !6828
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !6828, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %155(ptr nonnull @.str.1896), !dbg !6828
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape, i64 2, !dbg !6828
  %157 = load i64, ptr %156, align 8, !dbg !6828, !tbaa !6918
  %158 = and i64 %157, 4294967295, !dbg !6828
  %159 = icmp eq i64 %158, 7, !dbg !6828
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !6828, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %160(ptr nonnull @.str.1897), !dbg !6828
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.shape, i64 3, !dbg !6828
  %162 = load i64, ptr %161, align 8, !dbg !6828, !tbaa !6921
  %163 = and i64 %162, 4294967295, !dbg !6828
  %164 = icmp eq i64 %163, 7, !dbg !6828
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !6828, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %165(ptr nonnull @.str.1898), !dbg !6828
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides, null, !dbg !6828
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6828, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides, i64 1, !dbg !6828
  %167 = load i64, ptr %166, align 8, !dbg !6828, !tbaa !6923
  %168 = and i64 %167, 4294967295, !dbg !6828
  %169 = icmp eq i64 %168, 49, !dbg !6828
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides, i64 2, !dbg !6828
  %171 = load i64, ptr %170, align 8, !dbg !6828, !tbaa !6933
  %172 = and i64 %171, 4294967295, !dbg !6828
  %173 = icmp eq i64 %172, 7, !dbg !6828
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26.T_cast.strides, i64 3, !dbg !6828
  %175 = load i64, ptr %174, align 8, !dbg !6828, !tbaa !6936
  %176 = and i64 %175, 4294967295, !dbg !6828
  %177 = icmp eq i64 %176, 1, !dbg !6828
  %178 = and i1 %173, %177, !dbg !6828
  %179 = and i1 %169, %178, !dbg !6828
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !6828, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6828
  %181 = load i64, ptr %180, align 8, !dbg !6828
  %182 = icmp eq i64 %181, 0, !dbg !6828
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !6828, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %183(ptr nonnull @.str.1899), !dbg !6828
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %184(ptr nonnull @.str.1900), !dbg !6828
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6828
  %186 = load i32, ptr %185, align 4, !dbg !6828
  %187 = icmp eq i32 %186, 2, !dbg !6828
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !6828, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %188(ptr nonnull @.str.1901), !dbg !6828
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6828
  %190 = load i32, ptr %189, align 4, !dbg !6828
  %191 = icmp eq i32 %dev_id, %190, !dbg !6828
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !6828, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6828, !tbaa !19
  tail call void %192(ptr nonnull @.str.1902), !dbg !6828
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6828
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6828, !tbaa !6938
  %193 = sext i32 %dev_id to i64, !dbg !6828
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6828
  store i64 %193, ptr %194, align 8, !dbg !6828
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6828
  store i32 0, ptr %195, align 4, !dbg !6828, !tbaa !6949
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6828
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6828
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6828, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6828
  %.not91 = icmp eq ptr %199, null, !dbg !6828
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6828, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6828, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6828, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6828
  %203 = icmp eq i32 %202, 0, !dbg !6828
  br i1 %203, label %call_end, label %common.ret, !dbg !6828, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !6828
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !6828
  %206 = icmp eq i32 %205, 0, !dbg !6828
  br i1 %206, label %call_end79, label %common.ret, !dbg !6828, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !6828
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6828
  br label %handle_init_end, !dbg !6828

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6828
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6951 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6953, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6954, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6955, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6956, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6957, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6958, metadata !DIExpression()), !dbg !6959
  %0 = alloca ptr, align 8, !dbg !6959
  %stack_value87 = alloca [16 x %0], align 8, !dbg !6959
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !6959
  %1 = icmp eq i32 %num_args, 3, !dbg !6959
  br i1 %1, label %assert_end, label %assert_fail, !dbg !6959, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !6959

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %2(ptr nonnull @.str.1906), !dbg !6959
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6959, !tbaa !6960
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6959
  %p1.code = load i32, ptr %3, align 4, !dbg !6959, !tbaa !6971
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6959
  %T_cast.code = load i32, ptr %4, align 4, !dbg !6959, !tbaa !6973
  %p0 = load ptr, ptr %args, align 8, !dbg !6959
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6959
  %p1 = load ptr, ptr %5, align 8, !dbg !6959
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6959
  %T_cast = load ptr, ptr %6, align 8, !dbg !6959
  %p080 = load ptr, ptr %p0, align 8, !dbg !6959
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !6959
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape = load ptr, ptr %7, align 8, !dbg !6959
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides = load ptr, ptr %8, align 8, !dbg !6959
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6959
  %dev_id = load i32, ptr %9, align 4, !dbg !6959
  %p181 = load ptr, ptr %p1, align 8, !dbg !6959
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !6959
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape = load ptr, ptr %10, align 8, !dbg !6959
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.strides = load ptr, ptr %11, align 8, !dbg !6959
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !6959
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !6959
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape = load ptr, ptr %12, align 8, !dbg !6959
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6959
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides = load ptr, ptr %13, align 8, !dbg !6959
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !6959

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %14(ptr nonnull @.str.1907), !dbg !6959
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6959

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %15(ptr nonnull @.str.1908), !dbg !6959
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6959

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %16(ptr nonnull @.str.1909), !dbg !6959
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6959
  %18 = load i32, ptr %17, align 4, !dbg !6959
  %19 = icmp eq i32 %18, 4, !dbg !6959
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !6959, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %20(ptr nonnull @.str.1910), !dbg !6959
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6959
  %22 = load i16, ptr %21, align 2, !dbg !6959
  %23 = icmp eq i16 %22, 1, !dbg !6959
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6959
  %25 = load i8, ptr %24, align 1, !dbg !6959
  %26 = icmp eq i8 %25, 8, !dbg !6959
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6959
  %28 = load i8, ptr %27, align 1, !dbg !6959
  %29 = icmp eq i8 %28, 0, !dbg !6959
  %30 = and i1 %26, %29, !dbg !6959
  %31 = and i1 %23, %30, !dbg !6959
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !6959, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %32(ptr nonnull @.str.1911), !dbg !6959
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape, align 8, !dbg !6959, !tbaa !6976
  %34 = and i64 %33, 4294967295, !dbg !6959
  %35 = icmp eq i64 %34, 1, !dbg !6959
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !6959, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %36(ptr nonnull @.str.1912), !dbg !6959
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape, i64 1, !dbg !6959
  %38 = load i64, ptr %37, align 8, !dbg !6959, !tbaa !6986
  %39 = and i64 %38, 4294967295, !dbg !6959
  %40 = icmp eq i64 %39, 2048, !dbg !6959
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !6959, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %41(ptr nonnull @.str.1913), !dbg !6959
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape, i64 2, !dbg !6959
  %43 = load i64, ptr %42, align 8, !dbg !6959, !tbaa !6988
  %44 = and i64 %43, 4294967295, !dbg !6959
  %45 = icmp eq i64 %44, 7, !dbg !6959
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !6959, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %46(ptr nonnull @.str.1914), !dbg !6959
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.shape, i64 3, !dbg !6959
  %48 = load i64, ptr %47, align 8, !dbg !6959, !tbaa !6991
  %49 = and i64 %48, 4294967295, !dbg !6959
  %50 = icmp eq i64 %49, 7, !dbg !6959
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !6959, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %51(ptr nonnull @.str.1915), !dbg !6959
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides, null, !dbg !6959
  br i1 %.not, label %if_end, label %if_then, !dbg !6959, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides, i64 1, !dbg !6959
  %53 = load i64, ptr %52, align 8, !dbg !6959, !tbaa !6993
  %54 = and i64 %53, 4294967295, !dbg !6959
  %55 = icmp eq i64 %54, 49, !dbg !6959
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides, i64 2, !dbg !6959
  %57 = load i64, ptr %56, align 8, !dbg !6959, !tbaa !7003
  %58 = and i64 %57, 4294967295, !dbg !6959
  %59 = icmp eq i64 %58, 7, !dbg !6959
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p0.strides, i64 3, !dbg !6959
  %61 = load i64, ptr %60, align 8, !dbg !6959, !tbaa !7006
  %62 = and i64 %61, 4294967295, !dbg !6959
  %63 = icmp eq i64 %62, 1, !dbg !6959
  %64 = and i1 %59, %63, !dbg !6959
  %65 = and i1 %55, %64, !dbg !6959
  br i1 %65, label %if_end, label %assert_fail24, !dbg !6959, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6959
  %67 = load i64, ptr %66, align 8, !dbg !6959
  %68 = icmp eq i64 %67, 0, !dbg !6959
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !6959, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %69(ptr nonnull @.str.1916), !dbg !6959
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %70(ptr nonnull @.str.1917), !dbg !6959
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6959
  %72 = load i32, ptr %71, align 4, !dbg !6959
  %73 = icmp eq i32 %72, 2, !dbg !6959
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !6959, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %74(ptr nonnull @.str.1918), !dbg !6959
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6959
  %76 = load i32, ptr %75, align 4, !dbg !6959
  %77 = icmp eq i32 %76, 4, !dbg !6959
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !6959, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %78(ptr nonnull @.str.1919), !dbg !6959
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6959
  %80 = load i16, ptr %79, align 2, !dbg !6959
  %81 = icmp eq i16 %80, 1, !dbg !6959
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6959
  %83 = load i8, ptr %82, align 1, !dbg !6959
  %84 = icmp eq i8 %83, 8, !dbg !6959
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6959
  %86 = load i8, ptr %85, align 1, !dbg !6959
  %87 = icmp eq i8 %86, 0, !dbg !6959
  %88 = and i1 %84, %87, !dbg !6959
  %89 = and i1 %81, %88, !dbg !6959
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !6959, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %90(ptr nonnull @.str.1920), !dbg !6959
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape, align 8, !dbg !6959, !tbaa !7008
  %92 = and i64 %91, 4294967295, !dbg !6959
  %93 = icmp eq i64 %92, 512, !dbg !6959
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !6959, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %94(ptr nonnull @.str.1921), !dbg !6959
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape, i64 1, !dbg !6959
  %96 = load i64, ptr %95, align 8, !dbg !6959, !tbaa !7018
  %97 = and i64 %96, 4294967295, !dbg !6959
  %98 = icmp eq i64 %97, 2048, !dbg !6959
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !6959, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %99(ptr nonnull @.str.1922), !dbg !6959
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape, i64 2, !dbg !6959
  %101 = load i64, ptr %100, align 8, !dbg !6959, !tbaa !7020
  %102 = and i64 %101, 4294967295, !dbg !6959
  %103 = icmp eq i64 %102, 1, !dbg !6959
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !6959, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %104(ptr nonnull @.str.1923), !dbg !6959
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.shape, i64 3, !dbg !6959
  %106 = load i64, ptr %105, align 8, !dbg !6959, !tbaa !7023
  %107 = and i64 %106, 4294967295, !dbg !6959
  %108 = icmp eq i64 %107, 1, !dbg !6959
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !6959, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %109(ptr nonnull @.str.1924), !dbg !6959
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.strides, null, !dbg !6959
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !6959, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.strides, align 8, !dbg !6959, !tbaa !7025
  %111 = and i64 %110, 4294967295, !dbg !6959
  %112 = icmp eq i64 %111, 2048, !dbg !6959
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.p1.strides, i64 1, !dbg !6959
  %114 = load i64, ptr %113, align 8, !dbg !6959, !tbaa !7035
  %115 = and i64 %114, 4294967295, !dbg !6959
  %116 = icmp eq i64 %115, 1, !dbg !6959
  %117 = and i1 %112, %116, !dbg !6959
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !6959, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6959
  %119 = load i64, ptr %118, align 8, !dbg !6959
  %120 = icmp eq i64 %119, 0, !dbg !6959
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !6959, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %121(ptr nonnull @.str.1925), !dbg !6959
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %122(ptr nonnull @.str.1926), !dbg !6959
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6959
  %124 = load i32, ptr %123, align 4, !dbg !6959
  %125 = icmp eq i32 %124, 2, !dbg !6959
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !6959, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %126(ptr nonnull @.str.1927), !dbg !6959
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6959
  %128 = load i32, ptr %127, align 4, !dbg !6959
  %129 = icmp eq i32 %dev_id, %128, !dbg !6959
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !6959, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %130(ptr nonnull @.str.1928), !dbg !6959
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6959
  %132 = load i32, ptr %131, align 4, !dbg !6959
  %133 = icmp eq i32 %132, 4, !dbg !6959
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !6959, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %134(ptr nonnull @.str.1929), !dbg !6959
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6959
  %136 = load i16, ptr %135, align 2, !dbg !6959
  %137 = icmp eq i16 %136, 1, !dbg !6959
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6959
  %139 = load i8, ptr %138, align 1, !dbg !6959
  %140 = icmp eq i8 %139, 8, !dbg !6959
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6959
  %142 = load i8, ptr %141, align 1, !dbg !6959
  %143 = icmp eq i8 %142, 0, !dbg !6959
  %144 = and i1 %140, %143, !dbg !6959
  %145 = and i1 %137, %144, !dbg !6959
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !6959, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %146(ptr nonnull @.str.1930), !dbg !6959
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape, align 8, !dbg !6959, !tbaa !7037
  %148 = and i64 %147, 4294967295, !dbg !6959
  %149 = icmp eq i64 %148, 1, !dbg !6959
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !6959, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %150(ptr nonnull @.str.1931), !dbg !6959
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape, i64 1, !dbg !6959
  %152 = load i64, ptr %151, align 8, !dbg !6959, !tbaa !7047
  %153 = and i64 %152, 4294967295, !dbg !6959
  %154 = icmp eq i64 %153, 512, !dbg !6959
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !6959, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %155(ptr nonnull @.str.1932), !dbg !6959
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape, i64 2, !dbg !6959
  %157 = load i64, ptr %156, align 8, !dbg !6959, !tbaa !7049
  %158 = and i64 %157, 4294967295, !dbg !6959
  %159 = icmp eq i64 %158, 7, !dbg !6959
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !6959, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %160(ptr nonnull @.str.1933), !dbg !6959
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.shape, i64 3, !dbg !6959
  %162 = load i64, ptr %161, align 8, !dbg !6959, !tbaa !7052
  %163 = and i64 %162, 4294967295, !dbg !6959
  %164 = icmp eq i64 %163, 7, !dbg !6959
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !6959, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %165(ptr nonnull @.str.1934), !dbg !6959
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides, null, !dbg !6959
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !6959, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides, i64 1, !dbg !6959
  %167 = load i64, ptr %166, align 8, !dbg !6959, !tbaa !7054
  %168 = and i64 %167, 4294967295, !dbg !6959
  %169 = icmp eq i64 %168, 49, !dbg !6959
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides, i64 2, !dbg !6959
  %171 = load i64, ptr %170, align 8, !dbg !6959, !tbaa !7064
  %172 = and i64 %171, 4294967295, !dbg !6959
  %173 = icmp eq i64 %172, 7, !dbg !6959
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27.T_cast.strides, i64 3, !dbg !6959
  %175 = load i64, ptr %174, align 8, !dbg !6959, !tbaa !7067
  %176 = and i64 %175, 4294967295, !dbg !6959
  %177 = icmp eq i64 %176, 1, !dbg !6959
  %178 = and i1 %173, %177, !dbg !6959
  %179 = and i1 %169, %178, !dbg !6959
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !6959, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6959
  %181 = load i64, ptr %180, align 8, !dbg !6959
  %182 = icmp eq i64 %181, 0, !dbg !6959
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !6959, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %183(ptr nonnull @.str.1935), !dbg !6959
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %184(ptr nonnull @.str.1936), !dbg !6959
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6959
  %186 = load i32, ptr %185, align 4, !dbg !6959
  %187 = icmp eq i32 %186, 2, !dbg !6959
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !6959, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %188(ptr nonnull @.str.1937), !dbg !6959
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6959
  %190 = load i32, ptr %189, align 4, !dbg !6959
  %191 = icmp eq i32 %dev_id, %190, !dbg !6959
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !6959, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6959, !tbaa !19
  tail call void %192(ptr nonnull @.str.1938), !dbg !6959
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !6959
  store i32 0, ptr %stack_tcode88, align 4, !dbg !6959, !tbaa !7069
  %193 = sext i32 %dev_id to i64, !dbg !6959
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !6959
  store i64 %193, ptr %194, align 8, !dbg !6959
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !6959
  store i32 0, ptr %195, align 4, !dbg !6959, !tbaa !7080
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !6959
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !6959
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !6959, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6959
  %.not91 = icmp eq ptr %199, null, !dbg !6959
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !6959, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !6959, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !6959, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !6959
  %203 = icmp eq i32 %202, 0, !dbg !6959
  br i1 %203, label %call_end, label %common.ret, !dbg !6959, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !6959
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !6959
  %206 = icmp eq i32 %205, 0, !dbg !6959
  br i1 %206, label %call_end79, label %common.ret, !dbg !6959, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !6959
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !6959
  br label %handle_init_end, !dbg !6959

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !6959
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7082 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7084, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7085, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7086, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7087, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7089, metadata !DIExpression()), !dbg !7090
  %0 = alloca ptr, align 8, !dbg !7090
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7090
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7090
  %1 = icmp eq i32 %num_args, 3, !dbg !7090
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7090, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7090

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %2(ptr nonnull @.str.1942), !dbg !7090
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7090, !tbaa !7091
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7090
  %p1.code = load i32, ptr %3, align 4, !dbg !7090, !tbaa !7102
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7090
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7090, !tbaa !7104
  %p0 = load ptr, ptr %args, align 8, !dbg !7090
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7090
  %p1 = load ptr, ptr %5, align 8, !dbg !7090
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7090
  %T_cast = load ptr, ptr %6, align 8, !dbg !7090
  %p080 = load ptr, ptr %p0, align 8, !dbg !7090
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7090
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape = load ptr, ptr %7, align 8, !dbg !7090
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides = load ptr, ptr %8, align 8, !dbg !7090
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7090
  %dev_id = load i32, ptr %9, align 4, !dbg !7090
  %p181 = load ptr, ptr %p1, align 8, !dbg !7090
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7090
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape = load ptr, ptr %10, align 8, !dbg !7090
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides = load ptr, ptr %11, align 8, !dbg !7090
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7090
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7090
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7090
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7090
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7090
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7090

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %14(ptr nonnull @.str.1943), !dbg !7090
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7090

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %15(ptr nonnull @.str.1944), !dbg !7090
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7090

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %16(ptr nonnull @.str.1945), !dbg !7090
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7090
  %18 = load i32, ptr %17, align 4, !dbg !7090
  %19 = icmp eq i32 %18, 4, !dbg !7090
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7090, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %20(ptr nonnull @.str.1946), !dbg !7090
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7090
  %22 = load i16, ptr %21, align 2, !dbg !7090
  %23 = icmp eq i16 %22, 1, !dbg !7090
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7090
  %25 = load i8, ptr %24, align 1, !dbg !7090
  %26 = icmp eq i8 %25, 8, !dbg !7090
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7090
  %28 = load i8, ptr %27, align 1, !dbg !7090
  %29 = icmp eq i8 %28, 0, !dbg !7090
  %30 = and i1 %26, %29, !dbg !7090
  %31 = and i1 %23, %30, !dbg !7090
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7090, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %32(ptr nonnull @.str.1947), !dbg !7090
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape, align 8, !dbg !7090, !tbaa !7107
  %34 = and i64 %33, 4294967295, !dbg !7090
  %35 = icmp eq i64 %34, 1, !dbg !7090
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7090, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %36(ptr nonnull @.str.1948), !dbg !7090
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape, i64 1, !dbg !7090
  %38 = load i64, ptr %37, align 8, !dbg !7090, !tbaa !7117
  %39 = and i64 %38, 4294967295, !dbg !7090
  %40 = icmp eq i64 %39, 512, !dbg !7090
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7090, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %41(ptr nonnull @.str.1949), !dbg !7090
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape, i64 2, !dbg !7090
  %43 = load i64, ptr %42, align 8, !dbg !7090, !tbaa !7119
  %44 = and i64 %43, 4294967295, !dbg !7090
  %45 = icmp eq i64 %44, 7, !dbg !7090
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7090, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %46(ptr nonnull @.str.1950), !dbg !7090
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.shape, i64 3, !dbg !7090
  %48 = load i64, ptr %47, align 8, !dbg !7090, !tbaa !7122
  %49 = and i64 %48, 4294967295, !dbg !7090
  %50 = icmp eq i64 %49, 7, !dbg !7090
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7090, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %51(ptr nonnull @.str.1951), !dbg !7090
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides, null, !dbg !7090
  br i1 %.not, label %if_end, label %if_then, !dbg !7090, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides, i64 1, !dbg !7090
  %53 = load i64, ptr %52, align 8, !dbg !7090, !tbaa !7124
  %54 = and i64 %53, 4294967295, !dbg !7090
  %55 = icmp eq i64 %54, 49, !dbg !7090
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides, i64 2, !dbg !7090
  %57 = load i64, ptr %56, align 8, !dbg !7090, !tbaa !7134
  %58 = and i64 %57, 4294967295, !dbg !7090
  %59 = icmp eq i64 %58, 7, !dbg !7090
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p0.strides, i64 3, !dbg !7090
  %61 = load i64, ptr %60, align 8, !dbg !7090, !tbaa !7137
  %62 = and i64 %61, 4294967295, !dbg !7090
  %63 = icmp eq i64 %62, 1, !dbg !7090
  %64 = and i1 %59, %63, !dbg !7090
  %65 = and i1 %55, %64, !dbg !7090
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7090, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7090
  %67 = load i64, ptr %66, align 8, !dbg !7090
  %68 = icmp eq i64 %67, 0, !dbg !7090
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7090, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %69(ptr nonnull @.str.1952), !dbg !7090
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %70(ptr nonnull @.str.1953), !dbg !7090
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7090
  %72 = load i32, ptr %71, align 4, !dbg !7090
  %73 = icmp eq i32 %72, 2, !dbg !7090
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7090, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %74(ptr nonnull @.str.1954), !dbg !7090
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7090
  %76 = load i32, ptr %75, align 4, !dbg !7090
  %77 = icmp eq i32 %76, 4, !dbg !7090
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7090, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %78(ptr nonnull @.str.1955), !dbg !7090
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7090
  %80 = load i16, ptr %79, align 2, !dbg !7090
  %81 = icmp eq i16 %80, 1, !dbg !7090
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7090
  %83 = load i8, ptr %82, align 1, !dbg !7090
  %84 = icmp eq i8 %83, 8, !dbg !7090
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7090
  %86 = load i8, ptr %85, align 1, !dbg !7090
  %87 = icmp eq i8 %86, 0, !dbg !7090
  %88 = and i1 %84, %87, !dbg !7090
  %89 = and i1 %81, %88, !dbg !7090
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7090, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %90(ptr nonnull @.str.1956), !dbg !7090
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape, align 8, !dbg !7090, !tbaa !7139
  %92 = and i64 %91, 4294967295, !dbg !7090
  %93 = icmp eq i64 %92, 512, !dbg !7090
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7090, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %94(ptr nonnull @.str.1957), !dbg !7090
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape, i64 1, !dbg !7090
  %96 = load i64, ptr %95, align 8, !dbg !7090, !tbaa !7149
  %97 = and i64 %96, 4294967295, !dbg !7090
  %98 = icmp eq i64 %97, 512, !dbg !7090
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7090, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %99(ptr nonnull @.str.1958), !dbg !7090
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape, i64 2, !dbg !7090
  %101 = load i64, ptr %100, align 8, !dbg !7090, !tbaa !7151
  %102 = and i64 %101, 4294967295, !dbg !7090
  %103 = icmp eq i64 %102, 3, !dbg !7090
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7090, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %104(ptr nonnull @.str.1959), !dbg !7090
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.shape, i64 3, !dbg !7090
  %106 = load i64, ptr %105, align 8, !dbg !7090, !tbaa !7154
  %107 = and i64 %106, 4294967295, !dbg !7090
  %108 = icmp eq i64 %107, 3, !dbg !7090
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7090, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %109(ptr nonnull @.str.1960), !dbg !7090
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides, null, !dbg !7090
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7090, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides, align 8, !dbg !7090, !tbaa !7156
  %111 = and i64 %110, 4294967295, !dbg !7090
  %112 = icmp eq i64 %111, 4608, !dbg !7090
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides, i64 1, !dbg !7090
  %114 = load i64, ptr %113, align 8, !dbg !7090, !tbaa !7166
  %115 = and i64 %114, 4294967295, !dbg !7090
  %116 = icmp eq i64 %115, 9, !dbg !7090
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides, i64 2, !dbg !7090
  %118 = load i64, ptr %117, align 8, !dbg !7090, !tbaa !7168
  %119 = and i64 %118, 4294967295, !dbg !7090
  %120 = icmp eq i64 %119, 3, !dbg !7090
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.p1.strides, i64 3, !dbg !7090
  %122 = load i64, ptr %121, align 8, !dbg !7090, !tbaa !7171
  %123 = and i64 %122, 4294967295, !dbg !7090
  %124 = icmp eq i64 %123, 1, !dbg !7090
  %125 = and i1 %120, %124, !dbg !7090
  %126 = and i1 %116, %125, !dbg !7090
  %127 = and i1 %112, %126, !dbg !7090
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !7090, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7090
  %129 = load i64, ptr %128, align 8, !dbg !7090
  %130 = icmp eq i64 %129, 0, !dbg !7090
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !7090, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %131(ptr nonnull @.str.1961), !dbg !7090
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %132(ptr nonnull @.str.1962), !dbg !7090
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7090
  %134 = load i32, ptr %133, align 4, !dbg !7090
  %135 = icmp eq i32 %134, 2, !dbg !7090
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !7090, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %136(ptr nonnull @.str.1963), !dbg !7090
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7090
  %138 = load i32, ptr %137, align 4, !dbg !7090
  %139 = icmp eq i32 %dev_id, %138, !dbg !7090
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !7090, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %140(ptr nonnull @.str.1964), !dbg !7090
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7090
  %142 = load i32, ptr %141, align 4, !dbg !7090
  %143 = icmp eq i32 %142, 4, !dbg !7090
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !7090, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %144(ptr nonnull @.str.1965), !dbg !7090
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7090
  %146 = load i16, ptr %145, align 2, !dbg !7090
  %147 = icmp eq i16 %146, 1, !dbg !7090
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7090
  %149 = load i8, ptr %148, align 1, !dbg !7090
  %150 = icmp eq i8 %149, 8, !dbg !7090
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7090
  %152 = load i8, ptr %151, align 1, !dbg !7090
  %153 = icmp eq i8 %152, 0, !dbg !7090
  %154 = and i1 %150, %153, !dbg !7090
  %155 = and i1 %147, %154, !dbg !7090
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !7090, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %156(ptr nonnull @.str.1966), !dbg !7090
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape, align 8, !dbg !7090, !tbaa !7173
  %158 = and i64 %157, 4294967295, !dbg !7090
  %159 = icmp eq i64 %158, 1, !dbg !7090
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !7090, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %160(ptr nonnull @.str.1967), !dbg !7090
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape, i64 1, !dbg !7090
  %162 = load i64, ptr %161, align 8, !dbg !7090, !tbaa !7183
  %163 = and i64 %162, 4294967295, !dbg !7090
  %164 = icmp eq i64 %163, 512, !dbg !7090
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !7090, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %165(ptr nonnull @.str.1968), !dbg !7090
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape, i64 2, !dbg !7090
  %167 = load i64, ptr %166, align 8, !dbg !7090, !tbaa !7185
  %168 = and i64 %167, 4294967295, !dbg !7090
  %169 = icmp eq i64 %168, 7, !dbg !7090
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !7090, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %170(ptr nonnull @.str.1969), !dbg !7090
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.shape, i64 3, !dbg !7090
  %172 = load i64, ptr %171, align 8, !dbg !7090, !tbaa !7188
  %173 = and i64 %172, 4294967295, !dbg !7090
  %174 = icmp eq i64 %173, 7, !dbg !7090
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !7090, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %175(ptr nonnull @.str.1970), !dbg !7090
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides, null, !dbg !7090
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7090, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides, i64 1, !dbg !7090
  %177 = load i64, ptr %176, align 8, !dbg !7090, !tbaa !7190
  %178 = and i64 %177, 4294967295, !dbg !7090
  %179 = icmp eq i64 %178, 49, !dbg !7090
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides, i64 2, !dbg !7090
  %181 = load i64, ptr %180, align 8, !dbg !7090, !tbaa !7200
  %182 = and i64 %181, 4294967295, !dbg !7090
  %183 = icmp eq i64 %182, 7, !dbg !7090
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28.T_cast.strides, i64 3, !dbg !7090
  %185 = load i64, ptr %184, align 8, !dbg !7090, !tbaa !7203
  %186 = and i64 %185, 4294967295, !dbg !7090
  %187 = icmp eq i64 %186, 1, !dbg !7090
  %188 = and i1 %183, %187, !dbg !7090
  %189 = and i1 %179, %188, !dbg !7090
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !7090, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7090
  %191 = load i64, ptr %190, align 8, !dbg !7090
  %192 = icmp eq i64 %191, 0, !dbg !7090
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !7090, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %193(ptr nonnull @.str.1971), !dbg !7090
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %194(ptr nonnull @.str.1972), !dbg !7090
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7090
  %196 = load i32, ptr %195, align 4, !dbg !7090
  %197 = icmp eq i32 %196, 2, !dbg !7090
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !7090, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %198(ptr nonnull @.str.1973), !dbg !7090
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7090
  %200 = load i32, ptr %199, align 4, !dbg !7090
  %201 = icmp eq i32 %dev_id, %200, !dbg !7090
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !7090, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7090, !tbaa !19
  tail call void %202(ptr nonnull @.str.1974), !dbg !7090
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7090
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7090, !tbaa !7205
  %203 = sext i32 %dev_id to i64, !dbg !7090
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7090
  store i64 %203, ptr %204, align 8, !dbg !7090
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7090
  store i32 0, ptr %205, align 4, !dbg !7090, !tbaa !7216
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7090
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7090
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7090, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7090
  %.not91 = icmp eq ptr %209, null, !dbg !7090
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7090, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7090, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7090, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7090
  %213 = icmp eq i32 %212, 0, !dbg !7090
  br i1 %213, label %call_end, label %common.ret, !dbg !7090, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !7090
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !7090
  %216 = icmp eq i32 %215, 0, !dbg !7090
  br i1 %216, label %call_end79, label %common.ret, !dbg !7090, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !7090
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7090
  br label %handle_init_end, !dbg !7090

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7090
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7218 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7220, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7221, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7222, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7224, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7225, metadata !DIExpression()), !dbg !7226
  %0 = alloca ptr, align 8, !dbg !7226
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7226
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7226
  %1 = icmp eq i32 %num_args, 3, !dbg !7226
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7226, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7226

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %2(ptr nonnull @.str.1978), !dbg !7226
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7226, !tbaa !7227
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7226
  %p1.code = load i32, ptr %3, align 4, !dbg !7226, !tbaa !7238
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7226
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7226, !tbaa !7240
  %p0 = load ptr, ptr %args, align 8, !dbg !7226
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7226
  %p1 = load ptr, ptr %5, align 8, !dbg !7226
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7226
  %T_cast = load ptr, ptr %6, align 8, !dbg !7226
  %p080 = load ptr, ptr %p0, align 8, !dbg !7226
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7226
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape = load ptr, ptr %7, align 8, !dbg !7226
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides = load ptr, ptr %8, align 8, !dbg !7226
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7226
  %dev_id = load i32, ptr %9, align 4, !dbg !7226
  %p181 = load ptr, ptr %p1, align 8, !dbg !7226
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7226
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape = load ptr, ptr %10, align 8, !dbg !7226
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.strides = load ptr, ptr %11, align 8, !dbg !7226
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7226
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7226
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7226
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7226
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7226
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7226

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %14(ptr nonnull @.str.1979), !dbg !7226
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7226

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %15(ptr nonnull @.str.1980), !dbg !7226
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7226

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %16(ptr nonnull @.str.1981), !dbg !7226
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7226
  %18 = load i32, ptr %17, align 4, !dbg !7226
  %19 = icmp eq i32 %18, 4, !dbg !7226
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7226, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %20(ptr nonnull @.str.1982), !dbg !7226
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7226
  %22 = load i16, ptr %21, align 2, !dbg !7226
  %23 = icmp eq i16 %22, 1, !dbg !7226
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7226
  %25 = load i8, ptr %24, align 1, !dbg !7226
  %26 = icmp eq i8 %25, 8, !dbg !7226
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7226
  %28 = load i8, ptr %27, align 1, !dbg !7226
  %29 = icmp eq i8 %28, 0, !dbg !7226
  %30 = and i1 %26, %29, !dbg !7226
  %31 = and i1 %23, %30, !dbg !7226
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7226, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %32(ptr nonnull @.str.1983), !dbg !7226
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape, align 8, !dbg !7226, !tbaa !7243
  %34 = and i64 %33, 4294967295, !dbg !7226
  %35 = icmp eq i64 %34, 1, !dbg !7226
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7226, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %36(ptr nonnull @.str.1984), !dbg !7226
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape, i64 1, !dbg !7226
  %38 = load i64, ptr %37, align 8, !dbg !7226, !tbaa !7253
  %39 = and i64 %38, 4294967295, !dbg !7226
  %40 = icmp eq i64 %39, 512, !dbg !7226
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7226, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %41(ptr nonnull @.str.1985), !dbg !7226
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape, i64 2, !dbg !7226
  %43 = load i64, ptr %42, align 8, !dbg !7226, !tbaa !7255
  %44 = and i64 %43, 4294967295, !dbg !7226
  %45 = icmp eq i64 %44, 7, !dbg !7226
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7226, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %46(ptr nonnull @.str.1986), !dbg !7226
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.shape, i64 3, !dbg !7226
  %48 = load i64, ptr %47, align 8, !dbg !7226, !tbaa !7258
  %49 = and i64 %48, 4294967295, !dbg !7226
  %50 = icmp eq i64 %49, 7, !dbg !7226
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7226, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %51(ptr nonnull @.str.1987), !dbg !7226
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides, null, !dbg !7226
  br i1 %.not, label %if_end, label %if_then, !dbg !7226, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides, i64 1, !dbg !7226
  %53 = load i64, ptr %52, align 8, !dbg !7226, !tbaa !7260
  %54 = and i64 %53, 4294967295, !dbg !7226
  %55 = icmp eq i64 %54, 49, !dbg !7226
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides, i64 2, !dbg !7226
  %57 = load i64, ptr %56, align 8, !dbg !7226, !tbaa !7270
  %58 = and i64 %57, 4294967295, !dbg !7226
  %59 = icmp eq i64 %58, 7, !dbg !7226
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p0.strides, i64 3, !dbg !7226
  %61 = load i64, ptr %60, align 8, !dbg !7226, !tbaa !7273
  %62 = and i64 %61, 4294967295, !dbg !7226
  %63 = icmp eq i64 %62, 1, !dbg !7226
  %64 = and i1 %59, %63, !dbg !7226
  %65 = and i1 %55, %64, !dbg !7226
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7226, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7226
  %67 = load i64, ptr %66, align 8, !dbg !7226
  %68 = icmp eq i64 %67, 0, !dbg !7226
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7226, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %69(ptr nonnull @.str.1988), !dbg !7226
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %70(ptr nonnull @.str.1989), !dbg !7226
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7226
  %72 = load i32, ptr %71, align 4, !dbg !7226
  %73 = icmp eq i32 %72, 2, !dbg !7226
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7226, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %74(ptr nonnull @.str.1990), !dbg !7226
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7226
  %76 = load i32, ptr %75, align 4, !dbg !7226
  %77 = icmp eq i32 %76, 4, !dbg !7226
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7226, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %78(ptr nonnull @.str.1991), !dbg !7226
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7226
  %80 = load i16, ptr %79, align 2, !dbg !7226
  %81 = icmp eq i16 %80, 1, !dbg !7226
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7226
  %83 = load i8, ptr %82, align 1, !dbg !7226
  %84 = icmp eq i8 %83, 8, !dbg !7226
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7226
  %86 = load i8, ptr %85, align 1, !dbg !7226
  %87 = icmp eq i8 %86, 0, !dbg !7226
  %88 = and i1 %84, %87, !dbg !7226
  %89 = and i1 %81, %88, !dbg !7226
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7226, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %90(ptr nonnull @.str.1992), !dbg !7226
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape, align 8, !dbg !7226, !tbaa !7275
  %92 = and i64 %91, 4294967295, !dbg !7226
  %93 = icmp eq i64 %92, 2048, !dbg !7226
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7226, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %94(ptr nonnull @.str.1993), !dbg !7226
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape, i64 1, !dbg !7226
  %96 = load i64, ptr %95, align 8, !dbg !7226, !tbaa !7285
  %97 = and i64 %96, 4294967295, !dbg !7226
  %98 = icmp eq i64 %97, 512, !dbg !7226
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7226, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %99(ptr nonnull @.str.1994), !dbg !7226
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape, i64 2, !dbg !7226
  %101 = load i64, ptr %100, align 8, !dbg !7226, !tbaa !7287
  %102 = and i64 %101, 4294967295, !dbg !7226
  %103 = icmp eq i64 %102, 1, !dbg !7226
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7226, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %104(ptr nonnull @.str.1995), !dbg !7226
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.shape, i64 3, !dbg !7226
  %106 = load i64, ptr %105, align 8, !dbg !7226, !tbaa !7290
  %107 = and i64 %106, 4294967295, !dbg !7226
  %108 = icmp eq i64 %107, 1, !dbg !7226
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7226, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %109(ptr nonnull @.str.1996), !dbg !7226
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.strides, null, !dbg !7226
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7226, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.strides, align 8, !dbg !7226, !tbaa !7292
  %111 = and i64 %110, 4294967295, !dbg !7226
  %112 = icmp eq i64 %111, 512, !dbg !7226
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.p1.strides, i64 1, !dbg !7226
  %114 = load i64, ptr %113, align 8, !dbg !7226, !tbaa !7302
  %115 = and i64 %114, 4294967295, !dbg !7226
  %116 = icmp eq i64 %115, 1, !dbg !7226
  %117 = and i1 %112, %116, !dbg !7226
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !7226, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7226
  %119 = load i64, ptr %118, align 8, !dbg !7226
  %120 = icmp eq i64 %119, 0, !dbg !7226
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !7226, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %121(ptr nonnull @.str.1997), !dbg !7226
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %122(ptr nonnull @.str.1998), !dbg !7226
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7226
  %124 = load i32, ptr %123, align 4, !dbg !7226
  %125 = icmp eq i32 %124, 2, !dbg !7226
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !7226, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %126(ptr nonnull @.str.1999), !dbg !7226
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7226
  %128 = load i32, ptr %127, align 4, !dbg !7226
  %129 = icmp eq i32 %dev_id, %128, !dbg !7226
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !7226, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %130(ptr nonnull @.str.2000), !dbg !7226
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7226
  %132 = load i32, ptr %131, align 4, !dbg !7226
  %133 = icmp eq i32 %132, 4, !dbg !7226
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !7226, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %134(ptr nonnull @.str.2001), !dbg !7226
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7226
  %136 = load i16, ptr %135, align 2, !dbg !7226
  %137 = icmp eq i16 %136, 1, !dbg !7226
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7226
  %139 = load i8, ptr %138, align 1, !dbg !7226
  %140 = icmp eq i8 %139, 8, !dbg !7226
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7226
  %142 = load i8, ptr %141, align 1, !dbg !7226
  %143 = icmp eq i8 %142, 0, !dbg !7226
  %144 = and i1 %140, %143, !dbg !7226
  %145 = and i1 %137, %144, !dbg !7226
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !7226, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %146(ptr nonnull @.str.2002), !dbg !7226
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape, align 8, !dbg !7226, !tbaa !7304
  %148 = and i64 %147, 4294967295, !dbg !7226
  %149 = icmp eq i64 %148, 1, !dbg !7226
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !7226, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %150(ptr nonnull @.str.2003), !dbg !7226
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape, i64 1, !dbg !7226
  %152 = load i64, ptr %151, align 8, !dbg !7226, !tbaa !7314
  %153 = and i64 %152, 4294967295, !dbg !7226
  %154 = icmp eq i64 %153, 2048, !dbg !7226
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !7226, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %155(ptr nonnull @.str.2004), !dbg !7226
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape, i64 2, !dbg !7226
  %157 = load i64, ptr %156, align 8, !dbg !7226, !tbaa !7316
  %158 = and i64 %157, 4294967295, !dbg !7226
  %159 = icmp eq i64 %158, 7, !dbg !7226
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !7226, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %160(ptr nonnull @.str.2005), !dbg !7226
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.shape, i64 3, !dbg !7226
  %162 = load i64, ptr %161, align 8, !dbg !7226, !tbaa !7319
  %163 = and i64 %162, 4294967295, !dbg !7226
  %164 = icmp eq i64 %163, 7, !dbg !7226
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !7226, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %165(ptr nonnull @.str.2006), !dbg !7226
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides, null, !dbg !7226
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7226, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides, i64 1, !dbg !7226
  %167 = load i64, ptr %166, align 8, !dbg !7226, !tbaa !7321
  %168 = and i64 %167, 4294967295, !dbg !7226
  %169 = icmp eq i64 %168, 49, !dbg !7226
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides, i64 2, !dbg !7226
  %171 = load i64, ptr %170, align 8, !dbg !7226, !tbaa !7331
  %172 = and i64 %171, 4294967295, !dbg !7226
  %173 = icmp eq i64 %172, 7, !dbg !7226
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29.T_cast.strides, i64 3, !dbg !7226
  %175 = load i64, ptr %174, align 8, !dbg !7226, !tbaa !7334
  %176 = and i64 %175, 4294967295, !dbg !7226
  %177 = icmp eq i64 %176, 1, !dbg !7226
  %178 = and i1 %173, %177, !dbg !7226
  %179 = and i1 %169, %178, !dbg !7226
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !7226, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7226
  %181 = load i64, ptr %180, align 8, !dbg !7226
  %182 = icmp eq i64 %181, 0, !dbg !7226
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !7226, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %183(ptr nonnull @.str.2007), !dbg !7226
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %184(ptr nonnull @.str.2008), !dbg !7226
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7226
  %186 = load i32, ptr %185, align 4, !dbg !7226
  %187 = icmp eq i32 %186, 2, !dbg !7226
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !7226, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %188(ptr nonnull @.str.2009), !dbg !7226
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7226
  %190 = load i32, ptr %189, align 4, !dbg !7226
  %191 = icmp eq i32 %dev_id, %190, !dbg !7226
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !7226, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7226, !tbaa !19
  tail call void %192(ptr nonnull @.str.2010), !dbg !7226
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7226
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7226, !tbaa !7336
  %193 = sext i32 %dev_id to i64, !dbg !7226
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7226
  store i64 %193, ptr %194, align 8, !dbg !7226
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7226
  store i32 0, ptr %195, align 4, !dbg !7226, !tbaa !7347
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7226
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7226
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7226, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7226
  %.not91 = icmp eq ptr %199, null, !dbg !7226
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7226, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7226, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7226, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7226
  %203 = icmp eq i32 %202, 0, !dbg !7226
  br i1 %203, label %call_end, label %common.ret, !dbg !7226, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !7226
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !7226
  %206 = icmp eq i32 %205, 0, !dbg !7226
  br i1 %206, label %call_end79, label %common.ret, !dbg !7226, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !7226
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7226
  br label %handle_init_end, !dbg !7226

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7226
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7349 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7351, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7352, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7353, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7354, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7355, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7356, metadata !DIExpression()), !dbg !7357
  %0 = alloca ptr, align 8, !dbg !7357
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7357
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7357
  %1 = icmp eq i32 %num_args, 3, !dbg !7357
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7357, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7357

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %2(ptr nonnull @.str.2014), !dbg !7357
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7357, !tbaa !7358
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7357
  %p1.code = load i32, ptr %3, align 4, !dbg !7357, !tbaa !7369
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7357
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7357, !tbaa !7371
  %p0 = load ptr, ptr %args, align 8, !dbg !7357
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7357
  %p1 = load ptr, ptr %5, align 8, !dbg !7357
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7357
  %T_cast = load ptr, ptr %6, align 8, !dbg !7357
  %p080 = load ptr, ptr %p0, align 8, !dbg !7357
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7357
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %7, align 8, !dbg !7357
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %8, align 8, !dbg !7357
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7357
  %dev_id = load i32, ptr %9, align 4, !dbg !7357
  %p181 = load ptr, ptr %p1, align 8, !dbg !7357
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7357
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %10, align 8, !dbg !7357
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %11, align 8, !dbg !7357
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7357
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7357
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7357
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7357
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7357
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7357

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %14(ptr nonnull @.str.2015), !dbg !7357
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7357

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %15(ptr nonnull @.str.2016), !dbg !7357
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7357

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %16(ptr nonnull @.str.2017), !dbg !7357
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7357
  %18 = load i32, ptr %17, align 4, !dbg !7357
  %19 = icmp eq i32 %18, 4, !dbg !7357
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7357, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %20(ptr nonnull @.str.2018), !dbg !7357
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7357
  %22 = load i16, ptr %21, align 2, !dbg !7357
  %23 = icmp eq i16 %22, 1, !dbg !7357
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7357
  %25 = load i8, ptr %24, align 1, !dbg !7357
  %26 = icmp eq i8 %25, 8, !dbg !7357
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7357
  %28 = load i8, ptr %27, align 1, !dbg !7357
  %29 = icmp eq i8 %28, 0, !dbg !7357
  %30 = and i1 %26, %29, !dbg !7357
  %31 = and i1 %23, %30, !dbg !7357
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7357, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %32(ptr nonnull @.str.2019), !dbg !7357
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !7357, !tbaa !7374
  %34 = and i64 %33, 4294967295, !dbg !7357
  %35 = icmp eq i64 %34, 1, !dbg !7357
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7357, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %36(ptr nonnull @.str.2020), !dbg !7357
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !7357
  %38 = load i64, ptr %37, align 8, !dbg !7357, !tbaa !7384
  %39 = and i64 %38, 4294967295, !dbg !7357
  %40 = icmp eq i64 %39, 64, !dbg !7357
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7357, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %41(ptr nonnull @.str.2021), !dbg !7357
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !7357
  %43 = load i64, ptr %42, align 8, !dbg !7357, !tbaa !7386
  %44 = and i64 %43, 4294967295, !dbg !7357
  %45 = icmp eq i64 %44, 56, !dbg !7357
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7357, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %46(ptr nonnull @.str.2022), !dbg !7357
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !7357
  %48 = load i64, ptr %47, align 8, !dbg !7357, !tbaa !7389
  %49 = and i64 %48, 4294967295, !dbg !7357
  %50 = icmp eq i64 %49, 56, !dbg !7357
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7357, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %51(ptr nonnull @.str.2023), !dbg !7357
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides, null, !dbg !7357
  br i1 %.not, label %if_end, label %if_then, !dbg !7357, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !7357
  %53 = load i64, ptr %52, align 8, !dbg !7357, !tbaa !7391
  %54 = and i64 %53, 4294967295, !dbg !7357
  %55 = icmp eq i64 %54, 3136, !dbg !7357
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !7357
  %57 = load i64, ptr %56, align 8, !dbg !7357, !tbaa !7401
  %58 = and i64 %57, 4294967295, !dbg !7357
  %59 = icmp eq i64 %58, 56, !dbg !7357
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !7357
  %61 = load i64, ptr %60, align 8, !dbg !7357, !tbaa !7404
  %62 = and i64 %61, 4294967295, !dbg !7357
  %63 = icmp eq i64 %62, 1, !dbg !7357
  %64 = and i1 %59, %63, !dbg !7357
  %65 = and i1 %55, %64, !dbg !7357
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7357, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7357
  %67 = load i64, ptr %66, align 8, !dbg !7357
  %68 = icmp eq i64 %67, 0, !dbg !7357
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7357, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %69(ptr nonnull @.str.2024), !dbg !7357
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %70(ptr nonnull @.str.2025), !dbg !7357
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7357
  %72 = load i32, ptr %71, align 4, !dbg !7357
  %73 = icmp eq i32 %72, 2, !dbg !7357
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7357, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %74(ptr nonnull @.str.2026), !dbg !7357
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7357
  %76 = load i32, ptr %75, align 4, !dbg !7357
  %77 = icmp eq i32 %76, 4, !dbg !7357
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7357, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %78(ptr nonnull @.str.2027), !dbg !7357
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7357
  %80 = load i16, ptr %79, align 2, !dbg !7357
  %81 = icmp eq i16 %80, 1, !dbg !7357
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7357
  %83 = load i8, ptr %82, align 1, !dbg !7357
  %84 = icmp eq i8 %83, 8, !dbg !7357
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7357
  %86 = load i8, ptr %85, align 1, !dbg !7357
  %87 = icmp eq i8 %86, 0, !dbg !7357
  %88 = and i1 %84, %87, !dbg !7357
  %89 = and i1 %81, %88, !dbg !7357
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7357, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %90(ptr nonnull @.str.2028), !dbg !7357
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !7357, !tbaa !7406
  %92 = and i64 %91, 4294967295, !dbg !7357
  %93 = icmp eq i64 %92, 256, !dbg !7357
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7357, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %94(ptr nonnull @.str.2029), !dbg !7357
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !7357
  %96 = load i64, ptr %95, align 8, !dbg !7357, !tbaa !7416
  %97 = and i64 %96, 4294967295, !dbg !7357
  %98 = icmp eq i64 %97, 64, !dbg !7357
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7357, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %99(ptr nonnull @.str.2030), !dbg !7357
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !7357
  %101 = load i64, ptr %100, align 8, !dbg !7357, !tbaa !7418
  %102 = and i64 %101, 4294967295, !dbg !7357
  %103 = icmp eq i64 %102, 1, !dbg !7357
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7357, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %104(ptr nonnull @.str.2031), !dbg !7357
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !7357
  %106 = load i64, ptr %105, align 8, !dbg !7357, !tbaa !7421
  %107 = and i64 %106, 4294967295, !dbg !7357
  %108 = icmp eq i64 %107, 1, !dbg !7357
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7357, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %109(ptr nonnull @.str.2032), !dbg !7357
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.strides, null, !dbg !7357
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7357, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.strides, align 8, !dbg !7357, !tbaa !7423
  %111 = and i64 %110, 4294967295, !dbg !7357
  %112 = icmp eq i64 %111, 64, !dbg !7357
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !7357
  %114 = load i64, ptr %113, align 8, !dbg !7357, !tbaa !7433
  %115 = and i64 %114, 4294967295, !dbg !7357
  %116 = icmp eq i64 %115, 1, !dbg !7357
  %117 = and i1 %112, %116, !dbg !7357
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !7357, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7357
  %119 = load i64, ptr %118, align 8, !dbg !7357
  %120 = icmp eq i64 %119, 0, !dbg !7357
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !7357, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %121(ptr nonnull @.str.2033), !dbg !7357
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %122(ptr nonnull @.str.2034), !dbg !7357
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7357
  %124 = load i32, ptr %123, align 4, !dbg !7357
  %125 = icmp eq i32 %124, 2, !dbg !7357
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !7357, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %126(ptr nonnull @.str.2035), !dbg !7357
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7357
  %128 = load i32, ptr %127, align 4, !dbg !7357
  %129 = icmp eq i32 %dev_id, %128, !dbg !7357
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !7357, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %130(ptr nonnull @.str.2036), !dbg !7357
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7357
  %132 = load i32, ptr %131, align 4, !dbg !7357
  %133 = icmp eq i32 %132, 4, !dbg !7357
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !7357, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %134(ptr nonnull @.str.2037), !dbg !7357
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7357
  %136 = load i16, ptr %135, align 2, !dbg !7357
  %137 = icmp eq i16 %136, 1, !dbg !7357
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7357
  %139 = load i8, ptr %138, align 1, !dbg !7357
  %140 = icmp eq i8 %139, 8, !dbg !7357
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7357
  %142 = load i8, ptr %141, align 1, !dbg !7357
  %143 = icmp eq i8 %142, 0, !dbg !7357
  %144 = and i1 %140, %143, !dbg !7357
  %145 = and i1 %137, %144, !dbg !7357
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !7357, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %146(ptr nonnull @.str.2038), !dbg !7357
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !7357, !tbaa !7435
  %148 = and i64 %147, 4294967295, !dbg !7357
  %149 = icmp eq i64 %148, 1, !dbg !7357
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !7357, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %150(ptr nonnull @.str.2039), !dbg !7357
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !7357
  %152 = load i64, ptr %151, align 8, !dbg !7357, !tbaa !7445
  %153 = and i64 %152, 4294967295, !dbg !7357
  %154 = icmp eq i64 %153, 256, !dbg !7357
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !7357, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %155(ptr nonnull @.str.2040), !dbg !7357
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !7357
  %157 = load i64, ptr %156, align 8, !dbg !7357, !tbaa !7447
  %158 = and i64 %157, 4294967295, !dbg !7357
  %159 = icmp eq i64 %158, 56, !dbg !7357
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !7357, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %160(ptr nonnull @.str.2041), !dbg !7357
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !7357
  %162 = load i64, ptr %161, align 8, !dbg !7357, !tbaa !7450
  %163 = and i64 %162, 4294967295, !dbg !7357
  %164 = icmp eq i64 %163, 56, !dbg !7357
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !7357, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %165(ptr nonnull @.str.2042), !dbg !7357
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !7357
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7357, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !7357
  %167 = load i64, ptr %166, align 8, !dbg !7357, !tbaa !7452
  %168 = and i64 %167, 4294967295, !dbg !7357
  %169 = icmp eq i64 %168, 3136, !dbg !7357
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !7357
  %171 = load i64, ptr %170, align 8, !dbg !7357, !tbaa !7462
  %172 = and i64 %171, 4294967295, !dbg !7357
  %173 = icmp eq i64 %172, 56, !dbg !7357
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !7357
  %175 = load i64, ptr %174, align 8, !dbg !7357, !tbaa !7465
  %176 = and i64 %175, 4294967295, !dbg !7357
  %177 = icmp eq i64 %176, 1, !dbg !7357
  %178 = and i1 %173, %177, !dbg !7357
  %179 = and i1 %169, %178, !dbg !7357
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !7357, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7357
  %181 = load i64, ptr %180, align 8, !dbg !7357
  %182 = icmp eq i64 %181, 0, !dbg !7357
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !7357, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %183(ptr nonnull @.str.2043), !dbg !7357
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %184(ptr nonnull @.str.2044), !dbg !7357
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7357
  %186 = load i32, ptr %185, align 4, !dbg !7357
  %187 = icmp eq i32 %186, 2, !dbg !7357
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !7357, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %188(ptr nonnull @.str.2045), !dbg !7357
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7357
  %190 = load i32, ptr %189, align 4, !dbg !7357
  %191 = icmp eq i32 %dev_id, %190, !dbg !7357
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !7357, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7357, !tbaa !19
  tail call void %192(ptr nonnull @.str.2046), !dbg !7357
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7357
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7357, !tbaa !7467
  %193 = sext i32 %dev_id to i64, !dbg !7357
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7357
  store i64 %193, ptr %194, align 8, !dbg !7357
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7357
  store i32 0, ptr %195, align 4, !dbg !7357, !tbaa !7478
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7357
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7357
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7357, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7357
  %.not91 = icmp eq ptr %199, null, !dbg !7357
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7357, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7357, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7357, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7357
  %203 = icmp eq i32 %202, 0, !dbg !7357
  br i1 %203, label %call_end, label %common.ret, !dbg !7357, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !7357
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !7357
  %206 = icmp eq i32 %205, 0, !dbg !7357
  br i1 %206, label %call_end79, label %common.ret, !dbg !7357, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !7357
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7357
  br label %handle_init_end, !dbg !7357

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7357
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7480 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7482, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7483, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7484, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7485, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7486, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7487, metadata !DIExpression()), !dbg !7488
  %0 = alloca ptr, align 8, !dbg !7488
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7488
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7488
  %1 = icmp eq i32 %num_args, 3, !dbg !7488
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7488, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7488

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %2(ptr nonnull @.str.2050), !dbg !7488
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7488, !tbaa !7489
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7488
  %p1.code = load i32, ptr %3, align 4, !dbg !7488, !tbaa !7500
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7488
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7488, !tbaa !7502
  %p0 = load ptr, ptr %args, align 8, !dbg !7488
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7488
  %p1 = load ptr, ptr %5, align 8, !dbg !7488
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7488
  %T_cast = load ptr, ptr %6, align 8, !dbg !7488
  %p080 = load ptr, ptr %p0, align 8, !dbg !7488
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7488
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape = load ptr, ptr %7, align 8, !dbg !7488
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides = load ptr, ptr %8, align 8, !dbg !7488
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7488
  %dev_id = load i32, ptr %9, align 4, !dbg !7488
  %p181 = load ptr, ptr %p1, align 8, !dbg !7488
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7488
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape = load ptr, ptr %10, align 8, !dbg !7488
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.strides = load ptr, ptr %11, align 8, !dbg !7488
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7488
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7488
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7488
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7488
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7488
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7488

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %14(ptr nonnull @.str.2051), !dbg !7488
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7488

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %15(ptr nonnull @.str.2052), !dbg !7488
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7488

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %16(ptr nonnull @.str.2053), !dbg !7488
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7488
  %18 = load i32, ptr %17, align 4, !dbg !7488
  %19 = icmp eq i32 %18, 4, !dbg !7488
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7488, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %20(ptr nonnull @.str.2054), !dbg !7488
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7488
  %22 = load i16, ptr %21, align 2, !dbg !7488
  %23 = icmp eq i16 %22, 1, !dbg !7488
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7488
  %25 = load i8, ptr %24, align 1, !dbg !7488
  %26 = icmp eq i8 %25, 8, !dbg !7488
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7488
  %28 = load i8, ptr %27, align 1, !dbg !7488
  %29 = icmp eq i8 %28, 0, !dbg !7488
  %30 = and i1 %26, %29, !dbg !7488
  %31 = and i1 %23, %30, !dbg !7488
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7488, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %32(ptr nonnull @.str.2055), !dbg !7488
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape, align 8, !dbg !7488, !tbaa !7505
  %34 = and i64 %33, 4294967295, !dbg !7488
  %35 = icmp eq i64 %34, 1, !dbg !7488
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7488, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %36(ptr nonnull @.str.2056), !dbg !7488
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape, i64 1, !dbg !7488
  %38 = load i64, ptr %37, align 8, !dbg !7488, !tbaa !7515
  %39 = and i64 %38, 4294967295, !dbg !7488
  %40 = icmp eq i64 %39, 2048, !dbg !7488
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7488, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %41(ptr nonnull @.str.2057), !dbg !7488
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape, i64 2, !dbg !7488
  %43 = load i64, ptr %42, align 8, !dbg !7488, !tbaa !7517
  %44 = and i64 %43, 4294967295, !dbg !7488
  %45 = icmp eq i64 %44, 7, !dbg !7488
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7488, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %46(ptr nonnull @.str.2058), !dbg !7488
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.shape, i64 3, !dbg !7488
  %48 = load i64, ptr %47, align 8, !dbg !7488, !tbaa !7520
  %49 = and i64 %48, 4294967295, !dbg !7488
  %50 = icmp eq i64 %49, 7, !dbg !7488
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7488, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %51(ptr nonnull @.str.2059), !dbg !7488
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides, null, !dbg !7488
  br i1 %.not, label %if_end, label %if_then, !dbg !7488, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides, i64 1, !dbg !7488
  %53 = load i64, ptr %52, align 8, !dbg !7488, !tbaa !7522
  %54 = and i64 %53, 4294967295, !dbg !7488
  %55 = icmp eq i64 %54, 49, !dbg !7488
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides, i64 2, !dbg !7488
  %57 = load i64, ptr %56, align 8, !dbg !7488, !tbaa !7532
  %58 = and i64 %57, 4294967295, !dbg !7488
  %59 = icmp eq i64 %58, 7, !dbg !7488
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p0.strides, i64 3, !dbg !7488
  %61 = load i64, ptr %60, align 8, !dbg !7488, !tbaa !7535
  %62 = and i64 %61, 4294967295, !dbg !7488
  %63 = icmp eq i64 %62, 1, !dbg !7488
  %64 = and i1 %59, %63, !dbg !7488
  %65 = and i1 %55, %64, !dbg !7488
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7488, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7488
  %67 = load i64, ptr %66, align 8, !dbg !7488
  %68 = icmp eq i64 %67, 0, !dbg !7488
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7488, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %69(ptr nonnull @.str.2060), !dbg !7488
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %70(ptr nonnull @.str.2061), !dbg !7488
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7488
  %72 = load i32, ptr %71, align 4, !dbg !7488
  %73 = icmp eq i32 %72, 2, !dbg !7488
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7488, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %74(ptr nonnull @.str.2062), !dbg !7488
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7488
  %76 = load i32, ptr %75, align 4, !dbg !7488
  %77 = icmp eq i32 %76, 4, !dbg !7488
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7488, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %78(ptr nonnull @.str.2063), !dbg !7488
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7488
  %80 = load i16, ptr %79, align 2, !dbg !7488
  %81 = icmp eq i16 %80, 1, !dbg !7488
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7488
  %83 = load i8, ptr %82, align 1, !dbg !7488
  %84 = icmp eq i8 %83, 8, !dbg !7488
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7488
  %86 = load i8, ptr %85, align 1, !dbg !7488
  %87 = icmp eq i8 %86, 0, !dbg !7488
  %88 = and i1 %84, %87, !dbg !7488
  %89 = and i1 %81, %88, !dbg !7488
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7488, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %90(ptr nonnull @.str.2064), !dbg !7488
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape, align 8, !dbg !7488, !tbaa !7537
  %92 = and i64 %91, 4294967295, !dbg !7488
  %93 = icmp eq i64 %92, 512, !dbg !7488
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7488, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %94(ptr nonnull @.str.2065), !dbg !7488
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape, i64 1, !dbg !7488
  %96 = load i64, ptr %95, align 8, !dbg !7488, !tbaa !7547
  %97 = and i64 %96, 4294967295, !dbg !7488
  %98 = icmp eq i64 %97, 2048, !dbg !7488
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7488, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %99(ptr nonnull @.str.2066), !dbg !7488
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape, i64 2, !dbg !7488
  %101 = load i64, ptr %100, align 8, !dbg !7488, !tbaa !7549
  %102 = and i64 %101, 4294967295, !dbg !7488
  %103 = icmp eq i64 %102, 1, !dbg !7488
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7488, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %104(ptr nonnull @.str.2067), !dbg !7488
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.shape, i64 3, !dbg !7488
  %106 = load i64, ptr %105, align 8, !dbg !7488, !tbaa !7552
  %107 = and i64 %106, 4294967295, !dbg !7488
  %108 = icmp eq i64 %107, 1, !dbg !7488
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7488, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %109(ptr nonnull @.str.2068), !dbg !7488
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.strides, null, !dbg !7488
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7488, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.strides, align 8, !dbg !7488, !tbaa !7554
  %111 = and i64 %110, 4294967295, !dbg !7488
  %112 = icmp eq i64 %111, 2048, !dbg !7488
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.p1.strides, i64 1, !dbg !7488
  %114 = load i64, ptr %113, align 8, !dbg !7488, !tbaa !7564
  %115 = and i64 %114, 4294967295, !dbg !7488
  %116 = icmp eq i64 %115, 1, !dbg !7488
  %117 = and i1 %112, %116, !dbg !7488
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !7488, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7488
  %119 = load i64, ptr %118, align 8, !dbg !7488
  %120 = icmp eq i64 %119, 0, !dbg !7488
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !7488, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %121(ptr nonnull @.str.2069), !dbg !7488
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %122(ptr nonnull @.str.2070), !dbg !7488
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7488
  %124 = load i32, ptr %123, align 4, !dbg !7488
  %125 = icmp eq i32 %124, 2, !dbg !7488
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !7488, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %126(ptr nonnull @.str.2071), !dbg !7488
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7488
  %128 = load i32, ptr %127, align 4, !dbg !7488
  %129 = icmp eq i32 %dev_id, %128, !dbg !7488
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !7488, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %130(ptr nonnull @.str.2072), !dbg !7488
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7488
  %132 = load i32, ptr %131, align 4, !dbg !7488
  %133 = icmp eq i32 %132, 4, !dbg !7488
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !7488, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %134(ptr nonnull @.str.2073), !dbg !7488
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7488
  %136 = load i16, ptr %135, align 2, !dbg !7488
  %137 = icmp eq i16 %136, 1, !dbg !7488
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7488
  %139 = load i8, ptr %138, align 1, !dbg !7488
  %140 = icmp eq i8 %139, 8, !dbg !7488
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7488
  %142 = load i8, ptr %141, align 1, !dbg !7488
  %143 = icmp eq i8 %142, 0, !dbg !7488
  %144 = and i1 %140, %143, !dbg !7488
  %145 = and i1 %137, %144, !dbg !7488
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !7488, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %146(ptr nonnull @.str.2074), !dbg !7488
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape, align 8, !dbg !7488, !tbaa !7566
  %148 = and i64 %147, 4294967295, !dbg !7488
  %149 = icmp eq i64 %148, 1, !dbg !7488
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !7488, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %150(ptr nonnull @.str.2075), !dbg !7488
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape, i64 1, !dbg !7488
  %152 = load i64, ptr %151, align 8, !dbg !7488, !tbaa !7576
  %153 = and i64 %152, 4294967295, !dbg !7488
  %154 = icmp eq i64 %153, 512, !dbg !7488
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !7488, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %155(ptr nonnull @.str.2076), !dbg !7488
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape, i64 2, !dbg !7488
  %157 = load i64, ptr %156, align 8, !dbg !7488, !tbaa !7578
  %158 = and i64 %157, 4294967295, !dbg !7488
  %159 = icmp eq i64 %158, 7, !dbg !7488
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !7488, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %160(ptr nonnull @.str.2077), !dbg !7488
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.shape, i64 3, !dbg !7488
  %162 = load i64, ptr %161, align 8, !dbg !7488, !tbaa !7581
  %163 = and i64 %162, 4294967295, !dbg !7488
  %164 = icmp eq i64 %163, 7, !dbg !7488
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !7488, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %165(ptr nonnull @.str.2078), !dbg !7488
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides, null, !dbg !7488
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7488, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides, i64 1, !dbg !7488
  %167 = load i64, ptr %166, align 8, !dbg !7488, !tbaa !7583
  %168 = and i64 %167, 4294967295, !dbg !7488
  %169 = icmp eq i64 %168, 49, !dbg !7488
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides, i64 2, !dbg !7488
  %171 = load i64, ptr %170, align 8, !dbg !7488, !tbaa !7593
  %172 = and i64 %171, 4294967295, !dbg !7488
  %173 = icmp eq i64 %172, 7, !dbg !7488
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30.T_cast.strides, i64 3, !dbg !7488
  %175 = load i64, ptr %174, align 8, !dbg !7488, !tbaa !7596
  %176 = and i64 %175, 4294967295, !dbg !7488
  %177 = icmp eq i64 %176, 1, !dbg !7488
  %178 = and i1 %173, %177, !dbg !7488
  %179 = and i1 %169, %178, !dbg !7488
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !7488, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7488
  %181 = load i64, ptr %180, align 8, !dbg !7488
  %182 = icmp eq i64 %181, 0, !dbg !7488
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !7488, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %183(ptr nonnull @.str.2079), !dbg !7488
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %184(ptr nonnull @.str.2080), !dbg !7488
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7488
  %186 = load i32, ptr %185, align 4, !dbg !7488
  %187 = icmp eq i32 %186, 2, !dbg !7488
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !7488, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %188(ptr nonnull @.str.2081), !dbg !7488
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7488
  %190 = load i32, ptr %189, align 4, !dbg !7488
  %191 = icmp eq i32 %dev_id, %190, !dbg !7488
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !7488, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7488, !tbaa !19
  tail call void %192(ptr nonnull @.str.2082), !dbg !7488
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7488
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7488, !tbaa !7598
  %193 = sext i32 %dev_id to i64, !dbg !7488
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7488
  store i64 %193, ptr %194, align 8, !dbg !7488
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7488
  store i32 0, ptr %195, align 4, !dbg !7488, !tbaa !7609
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7488
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7488
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7488, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7488
  %.not91 = icmp eq ptr %199, null, !dbg !7488
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7488, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7488, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7488, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7488
  %203 = icmp eq i32 %202, 0, !dbg !7488
  br i1 %203, label %call_end, label %common.ret, !dbg !7488, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !7488
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !7488
  %206 = icmp eq i32 %205, 0, !dbg !7488
  br i1 %206, label %call_end79, label %common.ret, !dbg !7488, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !7488
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7488
  br label %handle_init_end, !dbg !7488

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7488
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7611 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7613, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7614, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7615, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7616, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7617, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7618, metadata !DIExpression()), !dbg !7619
  %0 = alloca ptr, align 8, !dbg !7619
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7619
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7619
  %1 = icmp eq i32 %num_args, 3, !dbg !7619
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7619, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7619

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %2(ptr nonnull @.str.2086), !dbg !7619
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7619, !tbaa !7620
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7619
  %p1.code = load i32, ptr %3, align 4, !dbg !7619, !tbaa !7631
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7619
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7619, !tbaa !7633
  %p0 = load ptr, ptr %args, align 8, !dbg !7619
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7619
  %p1 = load ptr, ptr %5, align 8, !dbg !7619
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7619
  %T_cast = load ptr, ptr %6, align 8, !dbg !7619
  %p080 = load ptr, ptr %p0, align 8, !dbg !7619
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7619
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape = load ptr, ptr %7, align 8, !dbg !7619
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides = load ptr, ptr %8, align 8, !dbg !7619
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7619
  %dev_id = load i32, ptr %9, align 4, !dbg !7619
  %p181 = load ptr, ptr %p1, align 8, !dbg !7619
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7619
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape = load ptr, ptr %10, align 8, !dbg !7619
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.strides = load ptr, ptr %11, align 8, !dbg !7619
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7619
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7619
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7619
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7619
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7619
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7619

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %14(ptr nonnull @.str.2087), !dbg !7619
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7619

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %15(ptr nonnull @.str.2088), !dbg !7619
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7619

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %16(ptr nonnull @.str.2089), !dbg !7619
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7619
  %18 = load i32, ptr %17, align 4, !dbg !7619
  %19 = icmp eq i32 %18, 4, !dbg !7619
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7619, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %20(ptr nonnull @.str.2090), !dbg !7619
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7619
  %22 = load i16, ptr %21, align 2, !dbg !7619
  %23 = icmp eq i16 %22, 1, !dbg !7619
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7619
  %25 = load i8, ptr %24, align 1, !dbg !7619
  %26 = icmp eq i8 %25, 8, !dbg !7619
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7619
  %28 = load i8, ptr %27, align 1, !dbg !7619
  %29 = icmp eq i8 %28, 0, !dbg !7619
  %30 = and i1 %26, %29, !dbg !7619
  %31 = and i1 %23, %30, !dbg !7619
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7619, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %32(ptr nonnull @.str.2091), !dbg !7619
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape, align 8, !dbg !7619, !tbaa !7636
  %34 = and i64 %33, 4294967295, !dbg !7619
  %35 = icmp eq i64 %34, 1, !dbg !7619
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7619, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %36(ptr nonnull @.str.2092), !dbg !7619
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape, i64 1, !dbg !7619
  %38 = load i64, ptr %37, align 8, !dbg !7619, !tbaa !7646
  %39 = and i64 %38, 4294967295, !dbg !7619
  %40 = icmp eq i64 %39, 256, !dbg !7619
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7619, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %41(ptr nonnull @.str.2093), !dbg !7619
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape, i64 2, !dbg !7619
  %43 = load i64, ptr %42, align 8, !dbg !7619, !tbaa !7648
  %44 = and i64 %43, 4294967295, !dbg !7619
  %45 = icmp eq i64 %44, 56, !dbg !7619
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7619, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %46(ptr nonnull @.str.2094), !dbg !7619
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.shape, i64 3, !dbg !7619
  %48 = load i64, ptr %47, align 8, !dbg !7619, !tbaa !7651
  %49 = and i64 %48, 4294967295, !dbg !7619
  %50 = icmp eq i64 %49, 56, !dbg !7619
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7619, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %51(ptr nonnull @.str.2095), !dbg !7619
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides, null, !dbg !7619
  br i1 %.not, label %if_end, label %if_then, !dbg !7619, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides, i64 1, !dbg !7619
  %53 = load i64, ptr %52, align 8, !dbg !7619, !tbaa !7653
  %54 = and i64 %53, 4294967295, !dbg !7619
  %55 = icmp eq i64 %54, 3136, !dbg !7619
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides, i64 2, !dbg !7619
  %57 = load i64, ptr %56, align 8, !dbg !7619, !tbaa !7663
  %58 = and i64 %57, 4294967295, !dbg !7619
  %59 = icmp eq i64 %58, 56, !dbg !7619
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p0.strides, i64 3, !dbg !7619
  %61 = load i64, ptr %60, align 8, !dbg !7619, !tbaa !7666
  %62 = and i64 %61, 4294967295, !dbg !7619
  %63 = icmp eq i64 %62, 1, !dbg !7619
  %64 = and i1 %59, %63, !dbg !7619
  %65 = and i1 %55, %64, !dbg !7619
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7619, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7619
  %67 = load i64, ptr %66, align 8, !dbg !7619
  %68 = icmp eq i64 %67, 0, !dbg !7619
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7619, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %69(ptr nonnull @.str.2096), !dbg !7619
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %70(ptr nonnull @.str.2097), !dbg !7619
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7619
  %72 = load i32, ptr %71, align 4, !dbg !7619
  %73 = icmp eq i32 %72, 2, !dbg !7619
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7619, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %74(ptr nonnull @.str.2098), !dbg !7619
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7619
  %76 = load i32, ptr %75, align 4, !dbg !7619
  %77 = icmp eq i32 %76, 4, !dbg !7619
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7619, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %78(ptr nonnull @.str.2099), !dbg !7619
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7619
  %80 = load i16, ptr %79, align 2, !dbg !7619
  %81 = icmp eq i16 %80, 1, !dbg !7619
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7619
  %83 = load i8, ptr %82, align 1, !dbg !7619
  %84 = icmp eq i8 %83, 8, !dbg !7619
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7619
  %86 = load i8, ptr %85, align 1, !dbg !7619
  %87 = icmp eq i8 %86, 0, !dbg !7619
  %88 = and i1 %84, %87, !dbg !7619
  %89 = and i1 %81, %88, !dbg !7619
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7619, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %90(ptr nonnull @.str.2100), !dbg !7619
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape, align 8, !dbg !7619, !tbaa !7668
  %92 = and i64 %91, 4294967295, !dbg !7619
  %93 = icmp eq i64 %92, 64, !dbg !7619
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7619, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %94(ptr nonnull @.str.2101), !dbg !7619
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape, i64 1, !dbg !7619
  %96 = load i64, ptr %95, align 8, !dbg !7619, !tbaa !7678
  %97 = and i64 %96, 4294967295, !dbg !7619
  %98 = icmp eq i64 %97, 256, !dbg !7619
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7619, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %99(ptr nonnull @.str.2102), !dbg !7619
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape, i64 2, !dbg !7619
  %101 = load i64, ptr %100, align 8, !dbg !7619, !tbaa !7680
  %102 = and i64 %101, 4294967295, !dbg !7619
  %103 = icmp eq i64 %102, 1, !dbg !7619
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7619, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %104(ptr nonnull @.str.2103), !dbg !7619
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.shape, i64 3, !dbg !7619
  %106 = load i64, ptr %105, align 8, !dbg !7619, !tbaa !7683
  %107 = and i64 %106, 4294967295, !dbg !7619
  %108 = icmp eq i64 %107, 1, !dbg !7619
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7619, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %109(ptr nonnull @.str.2104), !dbg !7619
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.strides, null, !dbg !7619
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7619, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.strides, align 8, !dbg !7619, !tbaa !7685
  %111 = and i64 %110, 4294967295, !dbg !7619
  %112 = icmp eq i64 %111, 256, !dbg !7619
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.p1.strides, i64 1, !dbg !7619
  %114 = load i64, ptr %113, align 8, !dbg !7619, !tbaa !7695
  %115 = and i64 %114, 4294967295, !dbg !7619
  %116 = icmp eq i64 %115, 1, !dbg !7619
  %117 = and i1 %112, %116, !dbg !7619
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !7619, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7619
  %119 = load i64, ptr %118, align 8, !dbg !7619
  %120 = icmp eq i64 %119, 0, !dbg !7619
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !7619, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %121(ptr nonnull @.str.2105), !dbg !7619
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %122(ptr nonnull @.str.2106), !dbg !7619
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7619
  %124 = load i32, ptr %123, align 4, !dbg !7619
  %125 = icmp eq i32 %124, 2, !dbg !7619
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !7619, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %126(ptr nonnull @.str.2107), !dbg !7619
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7619
  %128 = load i32, ptr %127, align 4, !dbg !7619
  %129 = icmp eq i32 %dev_id, %128, !dbg !7619
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !7619, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %130(ptr nonnull @.str.2108), !dbg !7619
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7619
  %132 = load i32, ptr %131, align 4, !dbg !7619
  %133 = icmp eq i32 %132, 4, !dbg !7619
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !7619, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %134(ptr nonnull @.str.2109), !dbg !7619
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7619
  %136 = load i16, ptr %135, align 2, !dbg !7619
  %137 = icmp eq i16 %136, 1, !dbg !7619
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7619
  %139 = load i8, ptr %138, align 1, !dbg !7619
  %140 = icmp eq i8 %139, 8, !dbg !7619
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7619
  %142 = load i8, ptr %141, align 1, !dbg !7619
  %143 = icmp eq i8 %142, 0, !dbg !7619
  %144 = and i1 %140, %143, !dbg !7619
  %145 = and i1 %137, %144, !dbg !7619
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !7619, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %146(ptr nonnull @.str.2110), !dbg !7619
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape, align 8, !dbg !7619, !tbaa !7697
  %148 = and i64 %147, 4294967295, !dbg !7619
  %149 = icmp eq i64 %148, 1, !dbg !7619
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !7619, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %150(ptr nonnull @.str.2111), !dbg !7619
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape, i64 1, !dbg !7619
  %152 = load i64, ptr %151, align 8, !dbg !7619, !tbaa !7707
  %153 = and i64 %152, 4294967295, !dbg !7619
  %154 = icmp eq i64 %153, 64, !dbg !7619
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !7619, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %155(ptr nonnull @.str.2112), !dbg !7619
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape, i64 2, !dbg !7619
  %157 = load i64, ptr %156, align 8, !dbg !7619, !tbaa !7709
  %158 = and i64 %157, 4294967295, !dbg !7619
  %159 = icmp eq i64 %158, 56, !dbg !7619
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !7619, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %160(ptr nonnull @.str.2113), !dbg !7619
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.shape, i64 3, !dbg !7619
  %162 = load i64, ptr %161, align 8, !dbg !7619, !tbaa !7712
  %163 = and i64 %162, 4294967295, !dbg !7619
  %164 = icmp eq i64 %163, 56, !dbg !7619
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !7619, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %165(ptr nonnull @.str.2114), !dbg !7619
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides, null, !dbg !7619
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7619, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides, i64 1, !dbg !7619
  %167 = load i64, ptr %166, align 8, !dbg !7619, !tbaa !7714
  %168 = and i64 %167, 4294967295, !dbg !7619
  %169 = icmp eq i64 %168, 3136, !dbg !7619
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides, i64 2, !dbg !7619
  %171 = load i64, ptr %170, align 8, !dbg !7619, !tbaa !7724
  %172 = and i64 %171, 4294967295, !dbg !7619
  %173 = icmp eq i64 %172, 56, !dbg !7619
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4.T_cast.strides, i64 3, !dbg !7619
  %175 = load i64, ptr %174, align 8, !dbg !7619, !tbaa !7727
  %176 = and i64 %175, 4294967295, !dbg !7619
  %177 = icmp eq i64 %176, 1, !dbg !7619
  %178 = and i1 %173, %177, !dbg !7619
  %179 = and i1 %169, %178, !dbg !7619
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !7619, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7619
  %181 = load i64, ptr %180, align 8, !dbg !7619
  %182 = icmp eq i64 %181, 0, !dbg !7619
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !7619, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %183(ptr nonnull @.str.2115), !dbg !7619
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %184(ptr nonnull @.str.2116), !dbg !7619
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7619
  %186 = load i32, ptr %185, align 4, !dbg !7619
  %187 = icmp eq i32 %186, 2, !dbg !7619
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !7619, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %188(ptr nonnull @.str.2117), !dbg !7619
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7619
  %190 = load i32, ptr %189, align 4, !dbg !7619
  %191 = icmp eq i32 %dev_id, %190, !dbg !7619
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !7619, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7619, !tbaa !19
  tail call void %192(ptr nonnull @.str.2118), !dbg !7619
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7619
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7619, !tbaa !7729
  %193 = sext i32 %dev_id to i64, !dbg !7619
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7619
  store i64 %193, ptr %194, align 8, !dbg !7619
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7619
  store i32 0, ptr %195, align 4, !dbg !7619, !tbaa !7740
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7619
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7619
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7619, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7619
  %.not91 = icmp eq ptr %199, null, !dbg !7619
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7619, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7619, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7619, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7619
  %203 = icmp eq i32 %202, 0, !dbg !7619
  br i1 %203, label %call_end, label %common.ret, !dbg !7619, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !7619
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !7619
  %206 = icmp eq i32 %205, 0, !dbg !7619
  br i1 %206, label %call_end79, label %common.ret, !dbg !7619, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !7619
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7619
  br label %handle_init_end, !dbg !7619

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7619
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7742 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7744, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7745, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7746, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7747, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7748, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7749, metadata !DIExpression()), !dbg !7750
  %0 = alloca ptr, align 8, !dbg !7750
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7750
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7750
  %1 = icmp eq i32 %num_args, 3, !dbg !7750
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7750, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7750

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %2(ptr nonnull @.str.2122), !dbg !7750
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7750, !tbaa !7751
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7750
  %p1.code = load i32, ptr %3, align 4, !dbg !7750, !tbaa !7762
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7750
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7750, !tbaa !7764
  %p0 = load ptr, ptr %args, align 8, !dbg !7750
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7750
  %p1 = load ptr, ptr %5, align 8, !dbg !7750
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7750
  %T_cast = load ptr, ptr %6, align 8, !dbg !7750
  %p080 = load ptr, ptr %p0, align 8, !dbg !7750
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7750
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape = load ptr, ptr %7, align 8, !dbg !7750
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides = load ptr, ptr %8, align 8, !dbg !7750
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7750
  %dev_id = load i32, ptr %9, align 4, !dbg !7750
  %p181 = load ptr, ptr %p1, align 8, !dbg !7750
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7750
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape = load ptr, ptr %10, align 8, !dbg !7750
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides = load ptr, ptr %11, align 8, !dbg !7750
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7750
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7750
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7750
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7750
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7750
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7750

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %14(ptr nonnull @.str.2123), !dbg !7750
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7750

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %15(ptr nonnull @.str.2124), !dbg !7750
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7750

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %16(ptr nonnull @.str.2125), !dbg !7750
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7750
  %18 = load i32, ptr %17, align 4, !dbg !7750
  %19 = icmp eq i32 %18, 4, !dbg !7750
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7750, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %20(ptr nonnull @.str.2126), !dbg !7750
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7750
  %22 = load i16, ptr %21, align 2, !dbg !7750
  %23 = icmp eq i16 %22, 1, !dbg !7750
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7750
  %25 = load i8, ptr %24, align 1, !dbg !7750
  %26 = icmp eq i8 %25, 8, !dbg !7750
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7750
  %28 = load i8, ptr %27, align 1, !dbg !7750
  %29 = icmp eq i8 %28, 0, !dbg !7750
  %30 = and i1 %26, %29, !dbg !7750
  %31 = and i1 %23, %30, !dbg !7750
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7750, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %32(ptr nonnull @.str.2127), !dbg !7750
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape, align 8, !dbg !7750, !tbaa !7767
  %34 = and i64 %33, 4294967295, !dbg !7750
  %35 = icmp eq i64 %34, 1, !dbg !7750
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7750, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %36(ptr nonnull @.str.2128), !dbg !7750
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape, i64 1, !dbg !7750
  %38 = load i64, ptr %37, align 8, !dbg !7750, !tbaa !7777
  %39 = and i64 %38, 4294967295, !dbg !7750
  %40 = icmp eq i64 %39, 64, !dbg !7750
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7750, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %41(ptr nonnull @.str.2129), !dbg !7750
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape, i64 2, !dbg !7750
  %43 = load i64, ptr %42, align 8, !dbg !7750, !tbaa !7779
  %44 = and i64 %43, 4294967295, !dbg !7750
  %45 = icmp eq i64 %44, 56, !dbg !7750
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7750, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %46(ptr nonnull @.str.2130), !dbg !7750
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.shape, i64 3, !dbg !7750
  %48 = load i64, ptr %47, align 8, !dbg !7750, !tbaa !7782
  %49 = and i64 %48, 4294967295, !dbg !7750
  %50 = icmp eq i64 %49, 56, !dbg !7750
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7750, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %51(ptr nonnull @.str.2131), !dbg !7750
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides, null, !dbg !7750
  br i1 %.not, label %if_end, label %if_then, !dbg !7750, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides, i64 1, !dbg !7750
  %53 = load i64, ptr %52, align 8, !dbg !7750, !tbaa !7784
  %54 = and i64 %53, 4294967295, !dbg !7750
  %55 = icmp eq i64 %54, 3136, !dbg !7750
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides, i64 2, !dbg !7750
  %57 = load i64, ptr %56, align 8, !dbg !7750, !tbaa !7794
  %58 = and i64 %57, 4294967295, !dbg !7750
  %59 = icmp eq i64 %58, 56, !dbg !7750
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p0.strides, i64 3, !dbg !7750
  %61 = load i64, ptr %60, align 8, !dbg !7750, !tbaa !7797
  %62 = and i64 %61, 4294967295, !dbg !7750
  %63 = icmp eq i64 %62, 1, !dbg !7750
  %64 = and i1 %59, %63, !dbg !7750
  %65 = and i1 %55, %64, !dbg !7750
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7750, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7750
  %67 = load i64, ptr %66, align 8, !dbg !7750
  %68 = icmp eq i64 %67, 0, !dbg !7750
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7750, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %69(ptr nonnull @.str.2132), !dbg !7750
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %70(ptr nonnull @.str.2133), !dbg !7750
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7750
  %72 = load i32, ptr %71, align 4, !dbg !7750
  %73 = icmp eq i32 %72, 2, !dbg !7750
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7750, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %74(ptr nonnull @.str.2134), !dbg !7750
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7750
  %76 = load i32, ptr %75, align 4, !dbg !7750
  %77 = icmp eq i32 %76, 4, !dbg !7750
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7750, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %78(ptr nonnull @.str.2135), !dbg !7750
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7750
  %80 = load i16, ptr %79, align 2, !dbg !7750
  %81 = icmp eq i16 %80, 1, !dbg !7750
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7750
  %83 = load i8, ptr %82, align 1, !dbg !7750
  %84 = icmp eq i8 %83, 8, !dbg !7750
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7750
  %86 = load i8, ptr %85, align 1, !dbg !7750
  %87 = icmp eq i8 %86, 0, !dbg !7750
  %88 = and i1 %84, %87, !dbg !7750
  %89 = and i1 %81, %88, !dbg !7750
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7750, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %90(ptr nonnull @.str.2136), !dbg !7750
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape, align 8, !dbg !7750, !tbaa !7799
  %92 = and i64 %91, 4294967295, !dbg !7750
  %93 = icmp eq i64 %92, 64, !dbg !7750
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7750, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %94(ptr nonnull @.str.2137), !dbg !7750
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape, i64 1, !dbg !7750
  %96 = load i64, ptr %95, align 8, !dbg !7750, !tbaa !7809
  %97 = and i64 %96, 4294967295, !dbg !7750
  %98 = icmp eq i64 %97, 64, !dbg !7750
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7750, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %99(ptr nonnull @.str.2138), !dbg !7750
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape, i64 2, !dbg !7750
  %101 = load i64, ptr %100, align 8, !dbg !7750, !tbaa !7811
  %102 = and i64 %101, 4294967295, !dbg !7750
  %103 = icmp eq i64 %102, 3, !dbg !7750
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7750, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %104(ptr nonnull @.str.2139), !dbg !7750
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.shape, i64 3, !dbg !7750
  %106 = load i64, ptr %105, align 8, !dbg !7750, !tbaa !7814
  %107 = and i64 %106, 4294967295, !dbg !7750
  %108 = icmp eq i64 %107, 3, !dbg !7750
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7750, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %109(ptr nonnull @.str.2140), !dbg !7750
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides, null, !dbg !7750
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7750, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides, align 8, !dbg !7750, !tbaa !7816
  %111 = and i64 %110, 4294967295, !dbg !7750
  %112 = icmp eq i64 %111, 576, !dbg !7750
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides, i64 1, !dbg !7750
  %114 = load i64, ptr %113, align 8, !dbg !7750, !tbaa !7826
  %115 = and i64 %114, 4294967295, !dbg !7750
  %116 = icmp eq i64 %115, 9, !dbg !7750
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides, i64 2, !dbg !7750
  %118 = load i64, ptr %117, align 8, !dbg !7750, !tbaa !7828
  %119 = and i64 %118, 4294967295, !dbg !7750
  %120 = icmp eq i64 %119, 3, !dbg !7750
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.p1.strides, i64 3, !dbg !7750
  %122 = load i64, ptr %121, align 8, !dbg !7750, !tbaa !7831
  %123 = and i64 %122, 4294967295, !dbg !7750
  %124 = icmp eq i64 %123, 1, !dbg !7750
  %125 = and i1 %120, %124, !dbg !7750
  %126 = and i1 %116, %125, !dbg !7750
  %127 = and i1 %112, %126, !dbg !7750
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !7750, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7750
  %129 = load i64, ptr %128, align 8, !dbg !7750
  %130 = icmp eq i64 %129, 0, !dbg !7750
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !7750, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %131(ptr nonnull @.str.2141), !dbg !7750
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %132(ptr nonnull @.str.2142), !dbg !7750
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7750
  %134 = load i32, ptr %133, align 4, !dbg !7750
  %135 = icmp eq i32 %134, 2, !dbg !7750
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !7750, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %136(ptr nonnull @.str.2143), !dbg !7750
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7750
  %138 = load i32, ptr %137, align 4, !dbg !7750
  %139 = icmp eq i32 %dev_id, %138, !dbg !7750
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !7750, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %140(ptr nonnull @.str.2144), !dbg !7750
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7750
  %142 = load i32, ptr %141, align 4, !dbg !7750
  %143 = icmp eq i32 %142, 4, !dbg !7750
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !7750, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %144(ptr nonnull @.str.2145), !dbg !7750
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7750
  %146 = load i16, ptr %145, align 2, !dbg !7750
  %147 = icmp eq i16 %146, 1, !dbg !7750
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7750
  %149 = load i8, ptr %148, align 1, !dbg !7750
  %150 = icmp eq i8 %149, 8, !dbg !7750
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7750
  %152 = load i8, ptr %151, align 1, !dbg !7750
  %153 = icmp eq i8 %152, 0, !dbg !7750
  %154 = and i1 %150, %153, !dbg !7750
  %155 = and i1 %147, %154, !dbg !7750
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !7750, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %156(ptr nonnull @.str.2146), !dbg !7750
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape, align 8, !dbg !7750, !tbaa !7833
  %158 = and i64 %157, 4294967295, !dbg !7750
  %159 = icmp eq i64 %158, 1, !dbg !7750
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !7750, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %160(ptr nonnull @.str.2147), !dbg !7750
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape, i64 1, !dbg !7750
  %162 = load i64, ptr %161, align 8, !dbg !7750, !tbaa !7843
  %163 = and i64 %162, 4294967295, !dbg !7750
  %164 = icmp eq i64 %163, 64, !dbg !7750
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !7750, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %165(ptr nonnull @.str.2148), !dbg !7750
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape, i64 2, !dbg !7750
  %167 = load i64, ptr %166, align 8, !dbg !7750, !tbaa !7845
  %168 = and i64 %167, 4294967295, !dbg !7750
  %169 = icmp eq i64 %168, 56, !dbg !7750
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !7750, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %170(ptr nonnull @.str.2149), !dbg !7750
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.shape, i64 3, !dbg !7750
  %172 = load i64, ptr %171, align 8, !dbg !7750, !tbaa !7848
  %173 = and i64 %172, 4294967295, !dbg !7750
  %174 = icmp eq i64 %173, 56, !dbg !7750
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !7750, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %175(ptr nonnull @.str.2150), !dbg !7750
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides, null, !dbg !7750
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7750, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides, i64 1, !dbg !7750
  %177 = load i64, ptr %176, align 8, !dbg !7750, !tbaa !7850
  %178 = and i64 %177, 4294967295, !dbg !7750
  %179 = icmp eq i64 %178, 3136, !dbg !7750
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides, i64 2, !dbg !7750
  %181 = load i64, ptr %180, align 8, !dbg !7750, !tbaa !7860
  %182 = and i64 %181, 4294967295, !dbg !7750
  %183 = icmp eq i64 %182, 56, !dbg !7750
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5.T_cast.strides, i64 3, !dbg !7750
  %185 = load i64, ptr %184, align 8, !dbg !7750, !tbaa !7863
  %186 = and i64 %185, 4294967295, !dbg !7750
  %187 = icmp eq i64 %186, 1, !dbg !7750
  %188 = and i1 %183, %187, !dbg !7750
  %189 = and i1 %179, %188, !dbg !7750
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !7750, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7750
  %191 = load i64, ptr %190, align 8, !dbg !7750
  %192 = icmp eq i64 %191, 0, !dbg !7750
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !7750, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %193(ptr nonnull @.str.2151), !dbg !7750
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %194(ptr nonnull @.str.2152), !dbg !7750
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7750
  %196 = load i32, ptr %195, align 4, !dbg !7750
  %197 = icmp eq i32 %196, 2, !dbg !7750
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !7750, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %198(ptr nonnull @.str.2153), !dbg !7750
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7750
  %200 = load i32, ptr %199, align 4, !dbg !7750
  %201 = icmp eq i32 %dev_id, %200, !dbg !7750
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !7750, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7750, !tbaa !19
  tail call void %202(ptr nonnull @.str.2154), !dbg !7750
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7750
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7750, !tbaa !7865
  %203 = sext i32 %dev_id to i64, !dbg !7750
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7750
  store i64 %203, ptr %204, align 8, !dbg !7750
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7750
  store i32 0, ptr %205, align 4, !dbg !7750, !tbaa !7876
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7750
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7750
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7750, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7750
  %.not91 = icmp eq ptr %209, null, !dbg !7750
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7750, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7750, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7750, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7750
  %213 = icmp eq i32 %212, 0, !dbg !7750
  br i1 %213, label %call_end, label %common.ret, !dbg !7750, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !7750
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !7750
  %216 = icmp eq i32 %215, 0, !dbg !7750
  br i1 %216, label %call_end79, label %common.ret, !dbg !7750, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !7750
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7750
  br label %handle_init_end, !dbg !7750

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7750
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7878 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7880, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7881, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7882, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7883, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7885, metadata !DIExpression()), !dbg !7886
  %0 = alloca ptr, align 8, !dbg !7886
  %stack_value87 = alloca [16 x %0], align 8, !dbg !7886
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !7886
  %1 = icmp eq i32 %num_args, 3, !dbg !7886
  br i1 %1, label %assert_end, label %assert_fail, !dbg !7886, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !7886

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %2(ptr nonnull @.str.2158), !dbg !7886
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7886, !tbaa !7887
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7886
  %p1.code = load i32, ptr %3, align 4, !dbg !7886, !tbaa !7898
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !7886
  %T_cast.code = load i32, ptr %4, align 4, !dbg !7886, !tbaa !7900
  %p0 = load ptr, ptr %args, align 8, !dbg !7886
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7886
  %p1 = load ptr, ptr %5, align 8, !dbg !7886
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !7886
  %T_cast = load ptr, ptr %6, align 8, !dbg !7886
  %p080 = load ptr, ptr %p0, align 8, !dbg !7886
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !7886
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape = load ptr, ptr %7, align 8, !dbg !7886
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides = load ptr, ptr %8, align 8, !dbg !7886
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7886
  %dev_id = load i32, ptr %9, align 4, !dbg !7886
  %p181 = load ptr, ptr %p1, align 8, !dbg !7886
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !7886
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape = load ptr, ptr %10, align 8, !dbg !7886
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.strides = load ptr, ptr %11, align 8, !dbg !7886
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !7886
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !7886
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape = load ptr, ptr %12, align 8, !dbg !7886
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !7886
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides = load ptr, ptr %13, align 8, !dbg !7886
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !7886

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %14(ptr nonnull @.str.2159), !dbg !7886
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !7886

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %15(ptr nonnull @.str.2160), !dbg !7886
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !7886

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %16(ptr nonnull @.str.2161), !dbg !7886
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7886
  %18 = load i32, ptr %17, align 4, !dbg !7886
  %19 = icmp eq i32 %18, 4, !dbg !7886
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !7886, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %20(ptr nonnull @.str.2162), !dbg !7886
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7886
  %22 = load i16, ptr %21, align 2, !dbg !7886
  %23 = icmp eq i16 %22, 1, !dbg !7886
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7886
  %25 = load i8, ptr %24, align 1, !dbg !7886
  %26 = icmp eq i8 %25, 8, !dbg !7886
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7886
  %28 = load i8, ptr %27, align 1, !dbg !7886
  %29 = icmp eq i8 %28, 0, !dbg !7886
  %30 = and i1 %26, %29, !dbg !7886
  %31 = and i1 %23, %30, !dbg !7886
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !7886, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %32(ptr nonnull @.str.2163), !dbg !7886
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape, align 8, !dbg !7886, !tbaa !7903
  %34 = and i64 %33, 4294967295, !dbg !7886
  %35 = icmp eq i64 %34, 1, !dbg !7886
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !7886, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %36(ptr nonnull @.str.2164), !dbg !7886
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape, i64 1, !dbg !7886
  %38 = load i64, ptr %37, align 8, !dbg !7886, !tbaa !7913
  %39 = and i64 %38, 4294967295, !dbg !7886
  %40 = icmp eq i64 %39, 256, !dbg !7886
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !7886, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %41(ptr nonnull @.str.2165), !dbg !7886
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape, i64 2, !dbg !7886
  %43 = load i64, ptr %42, align 8, !dbg !7886, !tbaa !7915
  %44 = and i64 %43, 4294967295, !dbg !7886
  %45 = icmp eq i64 %44, 56, !dbg !7886
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !7886, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %46(ptr nonnull @.str.2166), !dbg !7886
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.shape, i64 3, !dbg !7886
  %48 = load i64, ptr %47, align 8, !dbg !7886, !tbaa !7918
  %49 = and i64 %48, 4294967295, !dbg !7886
  %50 = icmp eq i64 %49, 56, !dbg !7886
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !7886, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %51(ptr nonnull @.str.2167), !dbg !7886
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides, null, !dbg !7886
  br i1 %.not, label %if_end, label %if_then, !dbg !7886, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides, i64 1, !dbg !7886
  %53 = load i64, ptr %52, align 8, !dbg !7886, !tbaa !7920
  %54 = and i64 %53, 4294967295, !dbg !7886
  %55 = icmp eq i64 %54, 3136, !dbg !7886
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides, i64 2, !dbg !7886
  %57 = load i64, ptr %56, align 8, !dbg !7886, !tbaa !7930
  %58 = and i64 %57, 4294967295, !dbg !7886
  %59 = icmp eq i64 %58, 56, !dbg !7886
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p0.strides, i64 3, !dbg !7886
  %61 = load i64, ptr %60, align 8, !dbg !7886, !tbaa !7933
  %62 = and i64 %61, 4294967295, !dbg !7886
  %63 = icmp eq i64 %62, 1, !dbg !7886
  %64 = and i1 %59, %63, !dbg !7886
  %65 = and i1 %55, %64, !dbg !7886
  br i1 %65, label %if_end, label %assert_fail24, !dbg !7886, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7886
  %67 = load i64, ptr %66, align 8, !dbg !7886
  %68 = icmp eq i64 %67, 0, !dbg !7886
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !7886, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %69(ptr nonnull @.str.2168), !dbg !7886
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %70(ptr nonnull @.str.2169), !dbg !7886
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7886
  %72 = load i32, ptr %71, align 4, !dbg !7886
  %73 = icmp eq i32 %72, 2, !dbg !7886
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !7886, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %74(ptr nonnull @.str.2170), !dbg !7886
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !7886
  %76 = load i32, ptr %75, align 4, !dbg !7886
  %77 = icmp eq i32 %76, 4, !dbg !7886
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !7886, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %78(ptr nonnull @.str.2171), !dbg !7886
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !7886
  %80 = load i16, ptr %79, align 2, !dbg !7886
  %81 = icmp eq i16 %80, 1, !dbg !7886
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !7886
  %83 = load i8, ptr %82, align 1, !dbg !7886
  %84 = icmp eq i8 %83, 8, !dbg !7886
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !7886
  %86 = load i8, ptr %85, align 1, !dbg !7886
  %87 = icmp eq i8 %86, 0, !dbg !7886
  %88 = and i1 %84, %87, !dbg !7886
  %89 = and i1 %81, %88, !dbg !7886
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !7886, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %90(ptr nonnull @.str.2172), !dbg !7886
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape, align 8, !dbg !7886, !tbaa !7935
  %92 = and i64 %91, 4294967295, !dbg !7886
  %93 = icmp eq i64 %92, 64, !dbg !7886
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !7886, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %94(ptr nonnull @.str.2173), !dbg !7886
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape, i64 1, !dbg !7886
  %96 = load i64, ptr %95, align 8, !dbg !7886, !tbaa !7945
  %97 = and i64 %96, 4294967295, !dbg !7886
  %98 = icmp eq i64 %97, 256, !dbg !7886
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !7886, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %99(ptr nonnull @.str.2174), !dbg !7886
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape, i64 2, !dbg !7886
  %101 = load i64, ptr %100, align 8, !dbg !7886, !tbaa !7947
  %102 = and i64 %101, 4294967295, !dbg !7886
  %103 = icmp eq i64 %102, 1, !dbg !7886
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !7886, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %104(ptr nonnull @.str.2175), !dbg !7886
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.shape, i64 3, !dbg !7886
  %106 = load i64, ptr %105, align 8, !dbg !7886, !tbaa !7950
  %107 = and i64 %106, 4294967295, !dbg !7886
  %108 = icmp eq i64 %107, 1, !dbg !7886
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !7886, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %109(ptr nonnull @.str.2176), !dbg !7886
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.strides, null, !dbg !7886
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !7886, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.strides, align 8, !dbg !7886, !tbaa !7952
  %111 = and i64 %110, 4294967295, !dbg !7886
  %112 = icmp eq i64 %111, 256, !dbg !7886
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.p1.strides, i64 1, !dbg !7886
  %114 = load i64, ptr %113, align 8, !dbg !7886, !tbaa !7962
  %115 = and i64 %114, 4294967295, !dbg !7886
  %116 = icmp eq i64 %115, 1, !dbg !7886
  %117 = and i1 %112, %116, !dbg !7886
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !7886, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !7886
  %119 = load i64, ptr %118, align 8, !dbg !7886
  %120 = icmp eq i64 %119, 0, !dbg !7886
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !7886, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %121(ptr nonnull @.str.2177), !dbg !7886
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %122(ptr nonnull @.str.2178), !dbg !7886
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !7886
  %124 = load i32, ptr %123, align 4, !dbg !7886
  %125 = icmp eq i32 %124, 2, !dbg !7886
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !7886, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %126(ptr nonnull @.str.2179), !dbg !7886
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !7886
  %128 = load i32, ptr %127, align 4, !dbg !7886
  %129 = icmp eq i32 %dev_id, %128, !dbg !7886
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !7886, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %130(ptr nonnull @.str.2180), !dbg !7886
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !7886
  %132 = load i32, ptr %131, align 4, !dbg !7886
  %133 = icmp eq i32 %132, 4, !dbg !7886
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !7886, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %134(ptr nonnull @.str.2181), !dbg !7886
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !7886
  %136 = load i16, ptr %135, align 2, !dbg !7886
  %137 = icmp eq i16 %136, 1, !dbg !7886
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !7886
  %139 = load i8, ptr %138, align 1, !dbg !7886
  %140 = icmp eq i8 %139, 8, !dbg !7886
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !7886
  %142 = load i8, ptr %141, align 1, !dbg !7886
  %143 = icmp eq i8 %142, 0, !dbg !7886
  %144 = and i1 %140, %143, !dbg !7886
  %145 = and i1 %137, %144, !dbg !7886
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !7886, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %146(ptr nonnull @.str.2182), !dbg !7886
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape, align 8, !dbg !7886, !tbaa !7964
  %148 = and i64 %147, 4294967295, !dbg !7886
  %149 = icmp eq i64 %148, 1, !dbg !7886
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !7886, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %150(ptr nonnull @.str.2183), !dbg !7886
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape, i64 1, !dbg !7886
  %152 = load i64, ptr %151, align 8, !dbg !7886, !tbaa !7974
  %153 = and i64 %152, 4294967295, !dbg !7886
  %154 = icmp eq i64 %153, 64, !dbg !7886
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !7886, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %155(ptr nonnull @.str.2184), !dbg !7886
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape, i64 2, !dbg !7886
  %157 = load i64, ptr %156, align 8, !dbg !7886, !tbaa !7976
  %158 = and i64 %157, 4294967295, !dbg !7886
  %159 = icmp eq i64 %158, 56, !dbg !7886
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !7886, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %160(ptr nonnull @.str.2185), !dbg !7886
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.shape, i64 3, !dbg !7886
  %162 = load i64, ptr %161, align 8, !dbg !7886, !tbaa !7979
  %163 = and i64 %162, 4294967295, !dbg !7886
  %164 = icmp eq i64 %163, 56, !dbg !7886
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !7886, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %165(ptr nonnull @.str.2186), !dbg !7886
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides, null, !dbg !7886
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !7886, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides, i64 1, !dbg !7886
  %167 = load i64, ptr %166, align 8, !dbg !7886, !tbaa !7981
  %168 = and i64 %167, 4294967295, !dbg !7886
  %169 = icmp eq i64 %168, 3136, !dbg !7886
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides, i64 2, !dbg !7886
  %171 = load i64, ptr %170, align 8, !dbg !7886, !tbaa !7991
  %172 = and i64 %171, 4294967295, !dbg !7886
  %173 = icmp eq i64 %172, 56, !dbg !7886
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6.T_cast.strides, i64 3, !dbg !7886
  %175 = load i64, ptr %174, align 8, !dbg !7886, !tbaa !7994
  %176 = and i64 %175, 4294967295, !dbg !7886
  %177 = icmp eq i64 %176, 1, !dbg !7886
  %178 = and i1 %173, %177, !dbg !7886
  %179 = and i1 %169, %178, !dbg !7886
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !7886, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !7886
  %181 = load i64, ptr %180, align 8, !dbg !7886
  %182 = icmp eq i64 %181, 0, !dbg !7886
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !7886, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %183(ptr nonnull @.str.2187), !dbg !7886
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %184(ptr nonnull @.str.2188), !dbg !7886
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !7886
  %186 = load i32, ptr %185, align 4, !dbg !7886
  %187 = icmp eq i32 %186, 2, !dbg !7886
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !7886, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %188(ptr nonnull @.str.2189), !dbg !7886
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !7886
  %190 = load i32, ptr %189, align 4, !dbg !7886
  %191 = icmp eq i32 %dev_id, %190, !dbg !7886
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !7886, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7886, !tbaa !19
  tail call void %192(ptr nonnull @.str.2190), !dbg !7886
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !7886
  store i32 0, ptr %stack_tcode88, align 4, !dbg !7886, !tbaa !7996
  %193 = sext i32 %dev_id to i64, !dbg !7886
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !7886
  store i64 %193, ptr %194, align 8, !dbg !7886
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !7886
  store i32 0, ptr %195, align 4, !dbg !7886, !tbaa !8007
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !7886
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !7886
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !7886, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7886
  %.not91 = icmp eq ptr %199, null, !dbg !7886
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !7886, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !7886, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !7886, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !7886
  %203 = icmp eq i32 %202, 0, !dbg !7886
  br i1 %203, label %call_end, label %common.ret, !dbg !7886, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !7886
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !7886
  %206 = icmp eq i32 %205, 0, !dbg !7886
  br i1 %206, label %call_end79, label %common.ret, !dbg !7886, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !7886
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !7886
  br label %handle_init_end, !dbg !7886

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !7886
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8009 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8011, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8012, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8013, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8014, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8016, metadata !DIExpression()), !dbg !8017
  %0 = alloca ptr, align 8, !dbg !8017
  %stack_value87 = alloca [16 x %0], align 8, !dbg !8017
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !8017
  %1 = icmp eq i32 %num_args, 3, !dbg !8017
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8017, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !8017

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %2(ptr nonnull @.str.2194), !dbg !8017
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8017, !tbaa !8018
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8017
  %p1.code = load i32, ptr %3, align 4, !dbg !8017, !tbaa !8029
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !8017
  %T_cast.code = load i32, ptr %4, align 4, !dbg !8017, !tbaa !8031
  %p0 = load ptr, ptr %args, align 8, !dbg !8017
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8017
  %p1 = load ptr, ptr %5, align 8, !dbg !8017
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !8017
  %T_cast = load ptr, ptr %6, align 8, !dbg !8017
  %p080 = load ptr, ptr %p0, align 8, !dbg !8017
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !8017
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape = load ptr, ptr %7, align 8, !dbg !8017
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides = load ptr, ptr %8, align 8, !dbg !8017
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8017
  %dev_id = load i32, ptr %9, align 4, !dbg !8017
  %p181 = load ptr, ptr %p1, align 8, !dbg !8017
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !8017
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape = load ptr, ptr %10, align 8, !dbg !8017
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.strides = load ptr, ptr %11, align 8, !dbg !8017
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !8017
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !8017
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape = load ptr, ptr %12, align 8, !dbg !8017
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !8017
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides = load ptr, ptr %13, align 8, !dbg !8017
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !8017

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %14(ptr nonnull @.str.2195), !dbg !8017
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !8017

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %15(ptr nonnull @.str.2196), !dbg !8017
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !8017

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %16(ptr nonnull @.str.2197), !dbg !8017
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8017
  %18 = load i32, ptr %17, align 4, !dbg !8017
  %19 = icmp eq i32 %18, 4, !dbg !8017
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !8017, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %20(ptr nonnull @.str.2198), !dbg !8017
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8017
  %22 = load i16, ptr %21, align 2, !dbg !8017
  %23 = icmp eq i16 %22, 1, !dbg !8017
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8017
  %25 = load i8, ptr %24, align 1, !dbg !8017
  %26 = icmp eq i8 %25, 8, !dbg !8017
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8017
  %28 = load i8, ptr %27, align 1, !dbg !8017
  %29 = icmp eq i8 %28, 0, !dbg !8017
  %30 = and i1 %26, %29, !dbg !8017
  %31 = and i1 %23, %30, !dbg !8017
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !8017, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %32(ptr nonnull @.str.2199), !dbg !8017
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape, align 8, !dbg !8017, !tbaa !8034
  %34 = and i64 %33, 4294967295, !dbg !8017
  %35 = icmp eq i64 %34, 1, !dbg !8017
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !8017, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %36(ptr nonnull @.str.2200), !dbg !8017
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape, i64 1, !dbg !8017
  %38 = load i64, ptr %37, align 8, !dbg !8017, !tbaa !8044
  %39 = and i64 %38, 4294967295, !dbg !8017
  %40 = icmp eq i64 %39, 256, !dbg !8017
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !8017, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %41(ptr nonnull @.str.2201), !dbg !8017
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape, i64 2, !dbg !8017
  %43 = load i64, ptr %42, align 8, !dbg !8017, !tbaa !8046
  %44 = and i64 %43, 4294967295, !dbg !8017
  %45 = icmp eq i64 %44, 56, !dbg !8017
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !8017, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %46(ptr nonnull @.str.2202), !dbg !8017
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.shape, i64 3, !dbg !8017
  %48 = load i64, ptr %47, align 8, !dbg !8017, !tbaa !8049
  %49 = and i64 %48, 4294967295, !dbg !8017
  %50 = icmp eq i64 %49, 56, !dbg !8017
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !8017, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %51(ptr nonnull @.str.2203), !dbg !8017
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides, null, !dbg !8017
  br i1 %.not, label %if_end, label %if_then, !dbg !8017, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides, i64 1, !dbg !8017
  %53 = load i64, ptr %52, align 8, !dbg !8017, !tbaa !8051
  %54 = and i64 %53, 4294967295, !dbg !8017
  %55 = icmp eq i64 %54, 3136, !dbg !8017
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides, i64 2, !dbg !8017
  %57 = load i64, ptr %56, align 8, !dbg !8017, !tbaa !8061
  %58 = and i64 %57, 4294967295, !dbg !8017
  %59 = icmp eq i64 %58, 56, !dbg !8017
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p0.strides, i64 3, !dbg !8017
  %61 = load i64, ptr %60, align 8, !dbg !8017, !tbaa !8064
  %62 = and i64 %61, 4294967295, !dbg !8017
  %63 = icmp eq i64 %62, 1, !dbg !8017
  %64 = and i1 %59, %63, !dbg !8017
  %65 = and i1 %55, %64, !dbg !8017
  br i1 %65, label %if_end, label %assert_fail24, !dbg !8017, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8017
  %67 = load i64, ptr %66, align 8, !dbg !8017
  %68 = icmp eq i64 %67, 0, !dbg !8017
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !8017, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %69(ptr nonnull @.str.2204), !dbg !8017
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %70(ptr nonnull @.str.2205), !dbg !8017
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8017
  %72 = load i32, ptr %71, align 4, !dbg !8017
  %73 = icmp eq i32 %72, 2, !dbg !8017
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !8017, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %74(ptr nonnull @.str.2206), !dbg !8017
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !8017
  %76 = load i32, ptr %75, align 4, !dbg !8017
  %77 = icmp eq i32 %76, 4, !dbg !8017
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !8017, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %78(ptr nonnull @.str.2207), !dbg !8017
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !8017
  %80 = load i16, ptr %79, align 2, !dbg !8017
  %81 = icmp eq i16 %80, 1, !dbg !8017
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !8017
  %83 = load i8, ptr %82, align 1, !dbg !8017
  %84 = icmp eq i8 %83, 8, !dbg !8017
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !8017
  %86 = load i8, ptr %85, align 1, !dbg !8017
  %87 = icmp eq i8 %86, 0, !dbg !8017
  %88 = and i1 %84, %87, !dbg !8017
  %89 = and i1 %81, %88, !dbg !8017
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !8017, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %90(ptr nonnull @.str.2208), !dbg !8017
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape, align 8, !dbg !8017, !tbaa !8066
  %92 = and i64 %91, 4294967295, !dbg !8017
  %93 = icmp eq i64 %92, 128, !dbg !8017
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !8017, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %94(ptr nonnull @.str.2209), !dbg !8017
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape, i64 1, !dbg !8017
  %96 = load i64, ptr %95, align 8, !dbg !8017, !tbaa !8076
  %97 = and i64 %96, 4294967295, !dbg !8017
  %98 = icmp eq i64 %97, 256, !dbg !8017
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !8017, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %99(ptr nonnull @.str.2210), !dbg !8017
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape, i64 2, !dbg !8017
  %101 = load i64, ptr %100, align 8, !dbg !8017, !tbaa !8078
  %102 = and i64 %101, 4294967295, !dbg !8017
  %103 = icmp eq i64 %102, 1, !dbg !8017
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !8017, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %104(ptr nonnull @.str.2211), !dbg !8017
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.shape, i64 3, !dbg !8017
  %106 = load i64, ptr %105, align 8, !dbg !8017, !tbaa !8081
  %107 = and i64 %106, 4294967295, !dbg !8017
  %108 = icmp eq i64 %107, 1, !dbg !8017
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !8017, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %109(ptr nonnull @.str.2212), !dbg !8017
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.strides, null, !dbg !8017
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !8017, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.strides, align 8, !dbg !8017, !tbaa !8083
  %111 = and i64 %110, 4294967295, !dbg !8017
  %112 = icmp eq i64 %111, 256, !dbg !8017
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.p1.strides, i64 1, !dbg !8017
  %114 = load i64, ptr %113, align 8, !dbg !8017, !tbaa !8093
  %115 = and i64 %114, 4294967295, !dbg !8017
  %116 = icmp eq i64 %115, 1, !dbg !8017
  %117 = and i1 %112, %116, !dbg !8017
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !8017, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !8017
  %119 = load i64, ptr %118, align 8, !dbg !8017
  %120 = icmp eq i64 %119, 0, !dbg !8017
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !8017, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %121(ptr nonnull @.str.2213), !dbg !8017
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %122(ptr nonnull @.str.2214), !dbg !8017
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !8017
  %124 = load i32, ptr %123, align 4, !dbg !8017
  %125 = icmp eq i32 %124, 2, !dbg !8017
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !8017, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %126(ptr nonnull @.str.2215), !dbg !8017
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !8017
  %128 = load i32, ptr %127, align 4, !dbg !8017
  %129 = icmp eq i32 %dev_id, %128, !dbg !8017
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !8017, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %130(ptr nonnull @.str.2216), !dbg !8017
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !8017
  %132 = load i32, ptr %131, align 4, !dbg !8017
  %133 = icmp eq i32 %132, 4, !dbg !8017
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !8017, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %134(ptr nonnull @.str.2217), !dbg !8017
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !8017
  %136 = load i16, ptr %135, align 2, !dbg !8017
  %137 = icmp eq i16 %136, 1, !dbg !8017
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !8017
  %139 = load i8, ptr %138, align 1, !dbg !8017
  %140 = icmp eq i8 %139, 8, !dbg !8017
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !8017
  %142 = load i8, ptr %141, align 1, !dbg !8017
  %143 = icmp eq i8 %142, 0, !dbg !8017
  %144 = and i1 %140, %143, !dbg !8017
  %145 = and i1 %137, %144, !dbg !8017
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !8017, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %146(ptr nonnull @.str.2218), !dbg !8017
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape, align 8, !dbg !8017, !tbaa !8095
  %148 = and i64 %147, 4294967295, !dbg !8017
  %149 = icmp eq i64 %148, 1, !dbg !8017
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !8017, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %150(ptr nonnull @.str.2219), !dbg !8017
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape, i64 1, !dbg !8017
  %152 = load i64, ptr %151, align 8, !dbg !8017, !tbaa !8105
  %153 = and i64 %152, 4294967295, !dbg !8017
  %154 = icmp eq i64 %153, 128, !dbg !8017
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !8017, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %155(ptr nonnull @.str.2220), !dbg !8017
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape, i64 2, !dbg !8017
  %157 = load i64, ptr %156, align 8, !dbg !8017, !tbaa !8107
  %158 = and i64 %157, 4294967295, !dbg !8017
  %159 = icmp eq i64 %158, 56, !dbg !8017
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !8017, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %160(ptr nonnull @.str.2221), !dbg !8017
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.shape, i64 3, !dbg !8017
  %162 = load i64, ptr %161, align 8, !dbg !8017, !tbaa !8110
  %163 = and i64 %162, 4294967295, !dbg !8017
  %164 = icmp eq i64 %163, 56, !dbg !8017
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !8017, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %165(ptr nonnull @.str.2222), !dbg !8017
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides, null, !dbg !8017
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !8017, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides, i64 1, !dbg !8017
  %167 = load i64, ptr %166, align 8, !dbg !8017, !tbaa !8112
  %168 = and i64 %167, 4294967295, !dbg !8017
  %169 = icmp eq i64 %168, 3136, !dbg !8017
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides, i64 2, !dbg !8017
  %171 = load i64, ptr %170, align 8, !dbg !8017, !tbaa !8122
  %172 = and i64 %171, 4294967295, !dbg !8017
  %173 = icmp eq i64 %172, 56, !dbg !8017
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7.T_cast.strides, i64 3, !dbg !8017
  %175 = load i64, ptr %174, align 8, !dbg !8017, !tbaa !8125
  %176 = and i64 %175, 4294967295, !dbg !8017
  %177 = icmp eq i64 %176, 1, !dbg !8017
  %178 = and i1 %173, %177, !dbg !8017
  %179 = and i1 %169, %178, !dbg !8017
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !8017, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !8017
  %181 = load i64, ptr %180, align 8, !dbg !8017
  %182 = icmp eq i64 %181, 0, !dbg !8017
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !8017, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %183(ptr nonnull @.str.2223), !dbg !8017
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %184(ptr nonnull @.str.2224), !dbg !8017
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !8017
  %186 = load i32, ptr %185, align 4, !dbg !8017
  %187 = icmp eq i32 %186, 2, !dbg !8017
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !8017, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %188(ptr nonnull @.str.2225), !dbg !8017
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !8017
  %190 = load i32, ptr %189, align 4, !dbg !8017
  %191 = icmp eq i32 %dev_id, %190, !dbg !8017
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !8017, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8017, !tbaa !19
  tail call void %192(ptr nonnull @.str.2226), !dbg !8017
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !8017
  store i32 0, ptr %stack_tcode88, align 4, !dbg !8017, !tbaa !8127
  %193 = sext i32 %dev_id to i64, !dbg !8017
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !8017
  store i64 %193, ptr %194, align 8, !dbg !8017
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !8017
  store i32 0, ptr %195, align 4, !dbg !8017, !tbaa !8138
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !8017
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !8017
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8017, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8017
  %.not91 = icmp eq ptr %199, null, !dbg !8017
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !8017, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8017, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8017, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8017
  %203 = icmp eq i32 %202, 0, !dbg !8017
  br i1 %203, label %call_end, label %common.ret, !dbg !8017, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !8017
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !8017
  %206 = icmp eq i32 %205, 0, !dbg !8017
  br i1 %206, label %call_end79, label %common.ret, !dbg !8017, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !8017
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8017
  br label %handle_init_end, !dbg !8017

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !8017
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8140 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8142, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8143, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8144, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8145, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8146, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8147, metadata !DIExpression()), !dbg !8148
  %0 = alloca ptr, align 8, !dbg !8148
  %stack_value87 = alloca [16 x %0], align 8, !dbg !8148
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !8148
  %1 = icmp eq i32 %num_args, 3, !dbg !8148
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8148, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %212, %handle_init ], [ %215, %handle_init_end ], [ %218, %call_end79 ]
  ret i32 %common.ret.op, !dbg !8148

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %2(ptr nonnull @.str.2230), !dbg !8148
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8148, !tbaa !8149
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8148
  %p1.code = load i32, ptr %3, align 4, !dbg !8148, !tbaa !8160
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !8148
  %T_cast.code = load i32, ptr %4, align 4, !dbg !8148, !tbaa !8162
  %p0 = load ptr, ptr %args, align 8, !dbg !8148
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8148
  %p1 = load ptr, ptr %5, align 8, !dbg !8148
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !8148
  %T_cast = load ptr, ptr %6, align 8, !dbg !8148
  %p080 = load ptr, ptr %p0, align 8, !dbg !8148
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !8148
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape = load ptr, ptr %7, align 8, !dbg !8148
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides = load ptr, ptr %8, align 8, !dbg !8148
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8148
  %dev_id = load i32, ptr %9, align 4, !dbg !8148
  %p181 = load ptr, ptr %p1, align 8, !dbg !8148
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !8148
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape = load ptr, ptr %10, align 8, !dbg !8148
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides = load ptr, ptr %11, align 8, !dbg !8148
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !8148
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !8148
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape = load ptr, ptr %12, align 8, !dbg !8148
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !8148
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides = load ptr, ptr %13, align 8, !dbg !8148
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !8148

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %14(ptr nonnull @.str.2231), !dbg !8148
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !8148

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %15(ptr nonnull @.str.2232), !dbg !8148
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !8148

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %16(ptr nonnull @.str.2233), !dbg !8148
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8148
  %18 = load i32, ptr %17, align 4, !dbg !8148
  %19 = icmp eq i32 %18, 4, !dbg !8148
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !8148, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %20(ptr nonnull @.str.2234), !dbg !8148
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8148
  %22 = load i16, ptr %21, align 2, !dbg !8148
  %23 = icmp eq i16 %22, 1, !dbg !8148
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8148
  %25 = load i8, ptr %24, align 1, !dbg !8148
  %26 = icmp eq i8 %25, 8, !dbg !8148
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8148
  %28 = load i8, ptr %27, align 1, !dbg !8148
  %29 = icmp eq i8 %28, 0, !dbg !8148
  %30 = and i1 %26, %29, !dbg !8148
  %31 = and i1 %23, %30, !dbg !8148
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !8148, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %32(ptr nonnull @.str.2235), !dbg !8148
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape, align 8, !dbg !8148, !tbaa !8165
  %34 = and i64 %33, 4294967295, !dbg !8148
  %35 = icmp eq i64 %34, 1, !dbg !8148
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !8148, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %36(ptr nonnull @.str.2236), !dbg !8148
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape, i64 1, !dbg !8148
  %38 = load i64, ptr %37, align 8, !dbg !8148, !tbaa !8175
  %39 = and i64 %38, 4294967295, !dbg !8148
  %40 = icmp eq i64 %39, 128, !dbg !8148
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !8148, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %41(ptr nonnull @.str.2237), !dbg !8148
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape, i64 2, !dbg !8148
  %43 = load i64, ptr %42, align 8, !dbg !8148, !tbaa !8177
  %44 = and i64 %43, 4294967295, !dbg !8148
  %45 = icmp eq i64 %44, 56, !dbg !8148
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !8148, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %46(ptr nonnull @.str.2238), !dbg !8148
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.shape, i64 3, !dbg !8148
  %48 = load i64, ptr %47, align 8, !dbg !8148, !tbaa !8180
  %49 = and i64 %48, 4294967295, !dbg !8148
  %50 = icmp eq i64 %49, 56, !dbg !8148
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !8148, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %51(ptr nonnull @.str.2239), !dbg !8148
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides, null, !dbg !8148
  br i1 %.not, label %if_end, label %if_then, !dbg !8148, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides, i64 1, !dbg !8148
  %53 = load i64, ptr %52, align 8, !dbg !8148, !tbaa !8182
  %54 = and i64 %53, 4294967295, !dbg !8148
  %55 = icmp eq i64 %54, 3136, !dbg !8148
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides, i64 2, !dbg !8148
  %57 = load i64, ptr %56, align 8, !dbg !8148, !tbaa !8192
  %58 = and i64 %57, 4294967295, !dbg !8148
  %59 = icmp eq i64 %58, 56, !dbg !8148
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p0.strides, i64 3, !dbg !8148
  %61 = load i64, ptr %60, align 8, !dbg !8148, !tbaa !8195
  %62 = and i64 %61, 4294967295, !dbg !8148
  %63 = icmp eq i64 %62, 1, !dbg !8148
  %64 = and i1 %59, %63, !dbg !8148
  %65 = and i1 %55, %64, !dbg !8148
  br i1 %65, label %if_end, label %assert_fail24, !dbg !8148, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8148
  %67 = load i64, ptr %66, align 8, !dbg !8148
  %68 = icmp eq i64 %67, 0, !dbg !8148
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !8148, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %69(ptr nonnull @.str.2240), !dbg !8148
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %70(ptr nonnull @.str.2241), !dbg !8148
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8148
  %72 = load i32, ptr %71, align 4, !dbg !8148
  %73 = icmp eq i32 %72, 2, !dbg !8148
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !8148, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %74(ptr nonnull @.str.2242), !dbg !8148
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !8148
  %76 = load i32, ptr %75, align 4, !dbg !8148
  %77 = icmp eq i32 %76, 4, !dbg !8148
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !8148, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %78(ptr nonnull @.str.2243), !dbg !8148
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !8148
  %80 = load i16, ptr %79, align 2, !dbg !8148
  %81 = icmp eq i16 %80, 1, !dbg !8148
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !8148
  %83 = load i8, ptr %82, align 1, !dbg !8148
  %84 = icmp eq i8 %83, 8, !dbg !8148
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !8148
  %86 = load i8, ptr %85, align 1, !dbg !8148
  %87 = icmp eq i8 %86, 0, !dbg !8148
  %88 = and i1 %84, %87, !dbg !8148
  %89 = and i1 %81, %88, !dbg !8148
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !8148, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %90(ptr nonnull @.str.2244), !dbg !8148
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape, align 8, !dbg !8148, !tbaa !8197
  %92 = and i64 %91, 4294967295, !dbg !8148
  %93 = icmp eq i64 %92, 128, !dbg !8148
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !8148, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %94(ptr nonnull @.str.2245), !dbg !8148
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape, i64 1, !dbg !8148
  %96 = load i64, ptr %95, align 8, !dbg !8148, !tbaa !8207
  %97 = and i64 %96, 4294967295, !dbg !8148
  %98 = icmp eq i64 %97, 128, !dbg !8148
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !8148, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %99(ptr nonnull @.str.2246), !dbg !8148
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape, i64 2, !dbg !8148
  %101 = load i64, ptr %100, align 8, !dbg !8148, !tbaa !8209
  %102 = and i64 %101, 4294967295, !dbg !8148
  %103 = icmp eq i64 %102, 3, !dbg !8148
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !8148, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %104(ptr nonnull @.str.2247), !dbg !8148
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.shape, i64 3, !dbg !8148
  %106 = load i64, ptr %105, align 8, !dbg !8148, !tbaa !8212
  %107 = and i64 %106, 4294967295, !dbg !8148
  %108 = icmp eq i64 %107, 3, !dbg !8148
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !8148, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %109(ptr nonnull @.str.2248), !dbg !8148
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides, null, !dbg !8148
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !8148, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides, align 8, !dbg !8148, !tbaa !8214
  %111 = and i64 %110, 4294967295, !dbg !8148
  %112 = icmp eq i64 %111, 1152, !dbg !8148
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides, i64 1, !dbg !8148
  %114 = load i64, ptr %113, align 8, !dbg !8148, !tbaa !8224
  %115 = and i64 %114, 4294967295, !dbg !8148
  %116 = icmp eq i64 %115, 9, !dbg !8148
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides, i64 2, !dbg !8148
  %118 = load i64, ptr %117, align 8, !dbg !8148, !tbaa !8226
  %119 = and i64 %118, 4294967295, !dbg !8148
  %120 = icmp eq i64 %119, 3, !dbg !8148
  %121 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.p1.strides, i64 3, !dbg !8148
  %122 = load i64, ptr %121, align 8, !dbg !8148, !tbaa !8229
  %123 = and i64 %122, 4294967295, !dbg !8148
  %124 = icmp eq i64 %123, 1, !dbg !8148
  %125 = and i1 %120, %124, !dbg !8148
  %126 = and i1 %116, %125, !dbg !8148
  %127 = and i1 %112, %126, !dbg !8148
  br i1 %127, label %if_end45, label %assert_fail46, !dbg !8148, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %128 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !8148
  %129 = load i64, ptr %128, align 8, !dbg !8148
  %130 = icmp eq i64 %129, 0, !dbg !8148
  br i1 %130, label %assert_end49, label %assert_fail48, !dbg !8148, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %131(ptr nonnull @.str.2249), !dbg !8148
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %132(ptr nonnull @.str.2250), !dbg !8148
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %133 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !8148
  %134 = load i32, ptr %133, align 4, !dbg !8148
  %135 = icmp eq i32 %134, 2, !dbg !8148
  br i1 %135, label %assert_end51, label %assert_fail50, !dbg !8148, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %136(ptr nonnull @.str.2251), !dbg !8148
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %137 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !8148
  %138 = load i32, ptr %137, align 4, !dbg !8148
  %139 = icmp eq i32 %dev_id, %138, !dbg !8148
  br i1 %139, label %assert_end53, label %assert_fail52, !dbg !8148, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %140(ptr nonnull @.str.2252), !dbg !8148
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !8148
  %142 = load i32, ptr %141, align 4, !dbg !8148
  %143 = icmp eq i32 %142, 4, !dbg !8148
  br i1 %143, label %assert_end57, label %assert_fail54, !dbg !8148, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %144(ptr nonnull @.str.2253), !dbg !8148
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %145 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !8148
  %146 = load i16, ptr %145, align 2, !dbg !8148
  %147 = icmp eq i16 %146, 1, !dbg !8148
  %148 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !8148
  %149 = load i8, ptr %148, align 1, !dbg !8148
  %150 = icmp eq i8 %149, 8, !dbg !8148
  %151 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !8148
  %152 = load i8, ptr %151, align 1, !dbg !8148
  %153 = icmp eq i8 %152, 0, !dbg !8148
  %154 = and i1 %150, %153, !dbg !8148
  %155 = and i1 %147, %154, !dbg !8148
  br i1 %155, label %assert_end59, label %assert_fail58, !dbg !8148, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %156(ptr nonnull @.str.2254), !dbg !8148
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %157 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape, align 8, !dbg !8148, !tbaa !8231
  %158 = and i64 %157, 4294967295, !dbg !8148
  %159 = icmp eq i64 %158, 1, !dbg !8148
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !8148, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %160(ptr nonnull @.str.2255), !dbg !8148
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape, i64 1, !dbg !8148
  %162 = load i64, ptr %161, align 8, !dbg !8148, !tbaa !8241
  %163 = and i64 %162, 4294967295, !dbg !8148
  %164 = icmp eq i64 %163, 128, !dbg !8148
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !8148, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %165(ptr nonnull @.str.2256), !dbg !8148
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape, i64 2, !dbg !8148
  %167 = load i64, ptr %166, align 8, !dbg !8148, !tbaa !8243
  %168 = and i64 %167, 4294967295, !dbg !8148
  %169 = icmp eq i64 %168, 28, !dbg !8148
  br i1 %169, label %assert_end65, label %assert_fail64, !dbg !8148, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %170(ptr nonnull @.str.2257), !dbg !8148
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.shape, i64 3, !dbg !8148
  %172 = load i64, ptr %171, align 8, !dbg !8148, !tbaa !8246
  %173 = and i64 %172, 4294967295, !dbg !8148
  %174 = icmp eq i64 %173, 28, !dbg !8148
  br i1 %174, label %assert_end67, label %assert_fail66, !dbg !8148, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %175(ptr nonnull @.str.2258), !dbg !8148
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides, null, !dbg !8148
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !8148, !prof !55

if_then68:                                        ; preds = %assert_end67
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides, i64 1, !dbg !8148
  %177 = load i64, ptr %176, align 8, !dbg !8148, !tbaa !8248
  %178 = and i64 %177, 4294967295, !dbg !8148
  %179 = icmp eq i64 %178, 784, !dbg !8148
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides, i64 2, !dbg !8148
  %181 = load i64, ptr %180, align 8, !dbg !8148, !tbaa !8258
  %182 = and i64 %181, 4294967295, !dbg !8148
  %183 = icmp eq i64 %182, 28, !dbg !8148
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8.T_cast.strides, i64 3, !dbg !8148
  %185 = load i64, ptr %184, align 8, !dbg !8148, !tbaa !8261
  %186 = and i64 %185, 4294967295, !dbg !8148
  %187 = icmp eq i64 %186, 1, !dbg !8148
  %188 = and i1 %183, %187, !dbg !8148
  %189 = and i1 %179, %188, !dbg !8148
  br i1 %189, label %if_end69, label %assert_fail70, !dbg !8148, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %190 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !8148
  %191 = load i64, ptr %190, align 8, !dbg !8148
  %192 = icmp eq i64 %191, 0, !dbg !8148
  br i1 %192, label %assert_end73, label %assert_fail72, !dbg !8148, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %193(ptr nonnull @.str.2259), !dbg !8148
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %194(ptr nonnull @.str.2260), !dbg !8148
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %195 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !8148
  %196 = load i32, ptr %195, align 4, !dbg !8148
  %197 = icmp eq i32 %196, 2, !dbg !8148
  br i1 %197, label %assert_end75, label %assert_fail74, !dbg !8148, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %198(ptr nonnull @.str.2261), !dbg !8148
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %199 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !8148
  %200 = load i32, ptr %199, align 4, !dbg !8148
  %201 = icmp eq i32 %dev_id, %200, !dbg !8148
  br i1 %201, label %assert_end77, label %assert_fail76, !dbg !8148, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %202 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8148, !tbaa !19
  tail call void %202(ptr nonnull @.str.2262), !dbg !8148
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !8148
  store i32 0, ptr %stack_tcode88, align 4, !dbg !8148, !tbaa !8263
  %203 = sext i32 %dev_id to i64, !dbg !8148
  %204 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !8148
  store i64 %203, ptr %204, align 8, !dbg !8148
  %205 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !8148
  store i32 0, ptr %205, align 4, !dbg !8148, !tbaa !8274
  %206 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !8148
  %207 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !8148
  %208 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8148, !tbaa !19
  %209 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8148
  %.not91 = icmp eq ptr %209, null, !dbg !8148
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !8148, !prof !55

handle_init:                                      ; preds = %assert_end77
  %210 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8148, !tbaa !19
  %211 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8148, !tbaa !19
  %212 = call i32 %211(ptr %210, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8148
  %213 = icmp eq i32 %212, 0, !dbg !8148
  br i1 %213, label %call_end, label %common.ret, !dbg !8148, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %214 = phi ptr [ %209, %assert_end77 ], [ %217, %call_end ], !dbg !8148
  %215 = call i32 %208(ptr %214, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %206, ptr nonnull %207), !dbg !8148
  %216 = icmp eq i32 %215, 0, !dbg !8148
  br i1 %216, label %call_end79, label %common.ret, !dbg !8148, !prof !18

call_end:                                         ; preds = %handle_init
  %217 = load ptr, ptr %0, align 8, !dbg !8148
  store ptr %217, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8148
  br label %handle_init_end, !dbg !8148

call_end79:                                       ; preds = %handle_init_end
  %218 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !8148
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8276 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8278, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8279, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8280, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8281, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = alloca ptr, align 8, !dbg !8284
  %stack_value87 = alloca [16 x %0], align 8, !dbg !8284
  %stack_tcode88 = alloca [16 x i32], align 4, !dbg !8284
  %1 = icmp eq i32 %num_args, 3, !dbg !8284
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8284, !prof !18

common.ret:                                       ; preds = %call_end79, %handle_init_end, %handle_init, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ %202, %handle_init ], [ %205, %handle_init_end ], [ %208, %call_end79 ]
  ret i32 %common.ret.op, !dbg !8284

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %2(ptr nonnull @.str.2266), !dbg !8284
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8284, !tbaa !8285
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8284
  %p1.code = load i32, ptr %3, align 4, !dbg !8284, !tbaa !8296
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !8284
  %T_cast.code = load i32, ptr %4, align 4, !dbg !8284, !tbaa !8298
  %p0 = load ptr, ptr %args, align 8, !dbg !8284
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8284
  %p1 = load ptr, ptr %5, align 8, !dbg !8284
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !8284
  %T_cast = load ptr, ptr %6, align 8, !dbg !8284
  %p080 = load ptr, ptr %p0, align 8, !dbg !8284
  call void @llvm.assume(i1 true) [ "align"(ptr %p080, i64 64) ], !dbg !8284
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape = load ptr, ptr %7, align 8, !dbg !8284
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides = load ptr, ptr %8, align 8, !dbg !8284
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8284
  %dev_id = load i32, ptr %9, align 4, !dbg !8284
  %p181 = load ptr, ptr %p1, align 8, !dbg !8284
  call void @llvm.assume(i1 true) [ "align"(ptr %p181, i64 64) ], !dbg !8284
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape = load ptr, ptr %10, align 8, !dbg !8284
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.strides = load ptr, ptr %11, align 8, !dbg !8284
  %T_cast82 = load ptr, ptr %T_cast, align 8, !dbg !8284
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast82, i64 64) ], !dbg !8284
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape = load ptr, ptr %12, align 8, !dbg !8284
  %13 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !8284
  %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides = load ptr, ptr %13, align 8, !dbg !8284
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !8284

assert_fail4:                                     ; preds = %assert_end
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %14(ptr nonnull @.str.2267), !dbg !8284
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !8284

assert_fail6:                                     ; preds = %assert_end5
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %15(ptr nonnull @.str.2268), !dbg !8284
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !8284

assert_fail8:                                     ; preds = %assert_end7
  %16 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %16(ptr nonnull @.str.2269), !dbg !8284
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %17 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8284
  %18 = load i32, ptr %17, align 4, !dbg !8284
  %19 = icmp eq i32 %18, 4, !dbg !8284
  br i1 %19, label %assert_end13, label %assert_fail10, !dbg !8284, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %20(ptr nonnull @.str.2270), !dbg !8284
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8284
  %22 = load i16, ptr %21, align 2, !dbg !8284
  %23 = icmp eq i16 %22, 1, !dbg !8284
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8284
  %25 = load i8, ptr %24, align 1, !dbg !8284
  %26 = icmp eq i8 %25, 8, !dbg !8284
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8284
  %28 = load i8, ptr %27, align 1, !dbg !8284
  %29 = icmp eq i8 %28, 0, !dbg !8284
  %30 = and i1 %26, %29, !dbg !8284
  %31 = and i1 %23, %30, !dbg !8284
  br i1 %31, label %assert_end15, label %assert_fail14, !dbg !8284, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %32 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %32(ptr nonnull @.str.2271), !dbg !8284
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %33 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape, align 8, !dbg !8284, !tbaa !8301
  %34 = and i64 %33, 4294967295, !dbg !8284
  %35 = icmp eq i64 %34, 1, !dbg !8284
  br i1 %35, label %assert_end17, label %assert_fail16, !dbg !8284, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %36(ptr nonnull @.str.2272), !dbg !8284
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape, i64 1, !dbg !8284
  %38 = load i64, ptr %37, align 8, !dbg !8284, !tbaa !8311
  %39 = and i64 %38, 4294967295, !dbg !8284
  %40 = icmp eq i64 %39, 128, !dbg !8284
  br i1 %40, label %assert_end19, label %assert_fail18, !dbg !8284, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %41(ptr nonnull @.str.2273), !dbg !8284
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape, i64 2, !dbg !8284
  %43 = load i64, ptr %42, align 8, !dbg !8284, !tbaa !8313
  %44 = and i64 %43, 4294967295, !dbg !8284
  %45 = icmp eq i64 %44, 28, !dbg !8284
  br i1 %45, label %assert_end21, label %assert_fail20, !dbg !8284, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %46(ptr nonnull @.str.2274), !dbg !8284
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.shape, i64 3, !dbg !8284
  %48 = load i64, ptr %47, align 8, !dbg !8284, !tbaa !8316
  %49 = and i64 %48, 4294967295, !dbg !8284
  %50 = icmp eq i64 %49, 28, !dbg !8284
  br i1 %50, label %assert_end23, label %assert_fail22, !dbg !8284, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %51(ptr nonnull @.str.2275), !dbg !8284
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %.not = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides, null, !dbg !8284
  br i1 %.not, label %if_end, label %if_then, !dbg !8284, !prof !55

if_then:                                          ; preds = %assert_end23
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides, i64 1, !dbg !8284
  %53 = load i64, ptr %52, align 8, !dbg !8284, !tbaa !8318
  %54 = and i64 %53, 4294967295, !dbg !8284
  %55 = icmp eq i64 %54, 784, !dbg !8284
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides, i64 2, !dbg !8284
  %57 = load i64, ptr %56, align 8, !dbg !8284, !tbaa !8328
  %58 = and i64 %57, 4294967295, !dbg !8284
  %59 = icmp eq i64 %58, 28, !dbg !8284
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p0.strides, i64 3, !dbg !8284
  %61 = load i64, ptr %60, align 8, !dbg !8284, !tbaa !8331
  %62 = and i64 %61, 4294967295, !dbg !8284
  %63 = icmp eq i64 %62, 1, !dbg !8284
  %64 = and i1 %59, %63, !dbg !8284
  %65 = and i1 %55, %64, !dbg !8284
  br i1 %65, label %if_end, label %assert_fail24, !dbg !8284, !prof !18

if_end:                                           ; preds = %if_then, %assert_end23
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8284
  %67 = load i64, ptr %66, align 8, !dbg !8284
  %68 = icmp eq i64 %67, 0, !dbg !8284
  br i1 %68, label %assert_end27, label %assert_fail26, !dbg !8284, !prof !18

assert_fail24:                                    ; preds = %if_then
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %69(ptr nonnull @.str.2276), !dbg !8284
  br label %common.ret

assert_fail26:                                    ; preds = %if_end
  %70 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %70(ptr nonnull @.str.2277), !dbg !8284
  br label %common.ret

assert_end27:                                     ; preds = %if_end
  %71 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8284
  %72 = load i32, ptr %71, align 4, !dbg !8284
  %73 = icmp eq i32 %72, 2, !dbg !8284
  br i1 %73, label %assert_end29, label %assert_fail28, !dbg !8284, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %74(ptr nonnull @.str.2278), !dbg !8284
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %75 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !8284
  %76 = load i32, ptr %75, align 4, !dbg !8284
  %77 = icmp eq i32 %76, 4, !dbg !8284
  br i1 %77, label %assert_end33, label %assert_fail30, !dbg !8284, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %78(ptr nonnull @.str.2279), !dbg !8284
  br label %common.ret

assert_end33:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !8284
  %80 = load i16, ptr %79, align 2, !dbg !8284
  %81 = icmp eq i16 %80, 1, !dbg !8284
  %82 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !8284
  %83 = load i8, ptr %82, align 1, !dbg !8284
  %84 = icmp eq i8 %83, 8, !dbg !8284
  %85 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !8284
  %86 = load i8, ptr %85, align 1, !dbg !8284
  %87 = icmp eq i8 %86, 0, !dbg !8284
  %88 = and i1 %84, %87, !dbg !8284
  %89 = and i1 %81, %88, !dbg !8284
  br i1 %89, label %assert_end35, label %assert_fail34, !dbg !8284, !prof !18

assert_fail34:                                    ; preds = %assert_end33
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %90(ptr nonnull @.str.2280), !dbg !8284
  br label %common.ret

assert_end35:                                     ; preds = %assert_end33
  %91 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape, align 8, !dbg !8284, !tbaa !8333
  %92 = and i64 %91, 4294967295, !dbg !8284
  %93 = icmp eq i64 %92, 512, !dbg !8284
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !8284, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %94(ptr nonnull @.str.2281), !dbg !8284
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape, i64 1, !dbg !8284
  %96 = load i64, ptr %95, align 8, !dbg !8284, !tbaa !8343
  %97 = and i64 %96, 4294967295, !dbg !8284
  %98 = icmp eq i64 %97, 128, !dbg !8284
  br i1 %98, label %assert_end39, label %assert_fail38, !dbg !8284, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %99(ptr nonnull @.str.2282), !dbg !8284
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape, i64 2, !dbg !8284
  %101 = load i64, ptr %100, align 8, !dbg !8284, !tbaa !8345
  %102 = and i64 %101, 4294967295, !dbg !8284
  %103 = icmp eq i64 %102, 1, !dbg !8284
  br i1 %103, label %assert_end41, label %assert_fail40, !dbg !8284, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %104(ptr nonnull @.str.2283), !dbg !8284
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.shape, i64 3, !dbg !8284
  %106 = load i64, ptr %105, align 8, !dbg !8284, !tbaa !8348
  %107 = and i64 %106, 4294967295, !dbg !8284
  %108 = icmp eq i64 %107, 1, !dbg !8284
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !8284, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %109(ptr nonnull @.str.2284), !dbg !8284
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.strides, null, !dbg !8284
  br i1 %.not89, label %if_end45, label %if_then44, !dbg !8284, !prof !55

if_then44:                                        ; preds = %assert_end43
  %110 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.strides, align 8, !dbg !8284, !tbaa !8350
  %111 = and i64 %110, 4294967295, !dbg !8284
  %112 = icmp eq i64 %111, 128, !dbg !8284
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.p1.strides, i64 1, !dbg !8284
  %114 = load i64, ptr %113, align 8, !dbg !8284, !tbaa !8360
  %115 = and i64 %114, 4294967295, !dbg !8284
  %116 = icmp eq i64 %115, 1, !dbg !8284
  %117 = and i1 %112, %116, !dbg !8284
  br i1 %117, label %if_end45, label %assert_fail46, !dbg !8284, !prof !18

if_end45:                                         ; preds = %if_then44, %assert_end43
  %118 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !8284
  %119 = load i64, ptr %118, align 8, !dbg !8284
  %120 = icmp eq i64 %119, 0, !dbg !8284
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !8284, !prof !18

assert_fail46:                                    ; preds = %if_then44
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %121(ptr nonnull @.str.2285), !dbg !8284
  br label %common.ret

assert_fail48:                                    ; preds = %if_end45
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %122(ptr nonnull @.str.2286), !dbg !8284
  br label %common.ret

assert_end49:                                     ; preds = %if_end45
  %123 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !8284
  %124 = load i32, ptr %123, align 4, !dbg !8284
  %125 = icmp eq i32 %124, 2, !dbg !8284
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !8284, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %126(ptr nonnull @.str.2287), !dbg !8284
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !8284
  %128 = load i32, ptr %127, align 4, !dbg !8284
  %129 = icmp eq i32 %dev_id, %128, !dbg !8284
  br i1 %129, label %assert_end53, label %assert_fail52, !dbg !8284, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %130(ptr nonnull @.str.2288), !dbg !8284
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %131 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !8284
  %132 = load i32, ptr %131, align 4, !dbg !8284
  %133 = icmp eq i32 %132, 4, !dbg !8284
  br i1 %133, label %assert_end57, label %assert_fail54, !dbg !8284, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %134(ptr nonnull @.str.2289), !dbg !8284
  br label %common.ret

assert_end57:                                     ; preds = %assert_end53
  %135 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !8284
  %136 = load i16, ptr %135, align 2, !dbg !8284
  %137 = icmp eq i16 %136, 1, !dbg !8284
  %138 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !8284
  %139 = load i8, ptr %138, align 1, !dbg !8284
  %140 = icmp eq i8 %139, 8, !dbg !8284
  %141 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !8284
  %142 = load i8, ptr %141, align 1, !dbg !8284
  %143 = icmp eq i8 %142, 0, !dbg !8284
  %144 = and i1 %140, %143, !dbg !8284
  %145 = and i1 %137, %144, !dbg !8284
  br i1 %145, label %assert_end59, label %assert_fail58, !dbg !8284, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %146(ptr nonnull @.str.2290), !dbg !8284
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %147 = load i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape, align 8, !dbg !8284, !tbaa !8362
  %148 = and i64 %147, 4294967295, !dbg !8284
  %149 = icmp eq i64 %148, 1, !dbg !8284
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !8284, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %150(ptr nonnull @.str.2291), !dbg !8284
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %151 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape, i64 1, !dbg !8284
  %152 = load i64, ptr %151, align 8, !dbg !8284, !tbaa !8372
  %153 = and i64 %152, 4294967295, !dbg !8284
  %154 = icmp eq i64 %153, 512, !dbg !8284
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !8284, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %155(ptr nonnull @.str.2292), !dbg !8284
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape, i64 2, !dbg !8284
  %157 = load i64, ptr %156, align 8, !dbg !8284, !tbaa !8374
  %158 = and i64 %157, 4294967295, !dbg !8284
  %159 = icmp eq i64 %158, 28, !dbg !8284
  br i1 %159, label %assert_end65, label %assert_fail64, !dbg !8284, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %160(ptr nonnull @.str.2293), !dbg !8284
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %161 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.shape, i64 3, !dbg !8284
  %162 = load i64, ptr %161, align 8, !dbg !8284, !tbaa !8377
  %163 = and i64 %162, 4294967295, !dbg !8284
  %164 = icmp eq i64 %163, 28, !dbg !8284
  br i1 %164, label %assert_end67, label %assert_fail66, !dbg !8284, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %165(ptr nonnull @.str.2294), !dbg !8284
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides, null, !dbg !8284
  br i1 %.not90, label %if_end69, label %if_then68, !dbg !8284, !prof !55

if_then68:                                        ; preds = %assert_end67
  %166 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides, i64 1, !dbg !8284
  %167 = load i64, ptr %166, align 8, !dbg !8284, !tbaa !8379
  %168 = and i64 %167, 4294967295, !dbg !8284
  %169 = icmp eq i64 %168, 784, !dbg !8284
  %170 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides, i64 2, !dbg !8284
  %171 = load i64, ptr %170, align 8, !dbg !8284, !tbaa !8389
  %172 = and i64 %171, 4294967295, !dbg !8284
  %173 = icmp eq i64 %172, 28, !dbg !8284
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9.T_cast.strides, i64 3, !dbg !8284
  %175 = load i64, ptr %174, align 8, !dbg !8284, !tbaa !8392
  %176 = and i64 %175, 4294967295, !dbg !8284
  %177 = icmp eq i64 %176, 1, !dbg !8284
  %178 = and i1 %173, %177, !dbg !8284
  %179 = and i1 %169, %178, !dbg !8284
  br i1 %179, label %if_end69, label %assert_fail70, !dbg !8284, !prof !18

if_end69:                                         ; preds = %if_then68, %assert_end67
  %180 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !8284
  %181 = load i64, ptr %180, align 8, !dbg !8284
  %182 = icmp eq i64 %181, 0, !dbg !8284
  br i1 %182, label %assert_end73, label %assert_fail72, !dbg !8284, !prof !18

assert_fail70:                                    ; preds = %if_then68
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %183(ptr nonnull @.str.2295), !dbg !8284
  br label %common.ret

assert_fail72:                                    ; preds = %if_end69
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %184(ptr nonnull @.str.2296), !dbg !8284
  br label %common.ret

assert_end73:                                     ; preds = %if_end69
  %185 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !8284
  %186 = load i32, ptr %185, align 4, !dbg !8284
  %187 = icmp eq i32 %186, 2, !dbg !8284
  br i1 %187, label %assert_end75, label %assert_fail74, !dbg !8284, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %188(ptr nonnull @.str.2297), !dbg !8284
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %189 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !8284
  %190 = load i32, ptr %189, align 4, !dbg !8284
  %191 = icmp eq i32 %dev_id, %190, !dbg !8284
  br i1 %191, label %assert_end77, label %assert_fail76, !dbg !8284, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %192 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8284, !tbaa !19
  tail call void %192(ptr nonnull @.str.2298), !dbg !8284
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  store i64 2, ptr %stack_value87, align 8, !dbg !8284
  store i32 0, ptr %stack_tcode88, align 4, !dbg !8284, !tbaa !8394
  %193 = sext i32 %dev_id to i64, !dbg !8284
  %194 = getelementptr inbounds i64, ptr %stack_value87, i64 1, !dbg !8284
  store i64 %193, ptr %194, align 8, !dbg !8284
  %195 = getelementptr inbounds i32, ptr %stack_tcode88, i64 1, !dbg !8284
  store i32 0, ptr %195, align 4, !dbg !8284, !tbaa !8405
  %196 = getelementptr inbounds %0, ptr %stack_value87, i64 2, !dbg !8284
  %197 = getelementptr inbounds i32, ptr %stack_tcode88, i64 2, !dbg !8284
  %198 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8284, !tbaa !19
  %199 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8284
  %.not91 = icmp eq ptr %199, null, !dbg !8284
  br i1 %.not91, label %handle_init, label %handle_init_end, !dbg !8284, !prof !55

handle_init:                                      ; preds = %assert_end77
  %200 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8284, !tbaa !19
  %201 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8284, !tbaa !19
  %202 = call i32 %201(ptr %200, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8284
  %203 = icmp eq i32 %202, 0, !dbg !8284
  br i1 %203, label %call_end, label %common.ret, !dbg !8284, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end77
  %204 = phi ptr [ %199, %assert_end77 ], [ %207, %call_end ], !dbg !8284
  %205 = call i32 %198(ptr %204, ptr nonnull %stack_value87, ptr nonnull %stack_tcode88, i32 2, ptr nonnull %196, ptr nonnull %197), !dbg !8284
  %206 = icmp eq i32 %205, 0, !dbg !8284
  br i1 %206, label %call_end79, label %common.ret, !dbg !8284, !prof !18

call_end:                                         ; preds = %handle_init
  %207 = load ptr, ptr %0, align 8, !dbg !8284
  store ptr %207, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8284
  br label %handle_init_end, !dbg !8284

call_end79:                                       ; preds = %handle_init_end
  %208 = call fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_compute_(i32 %dev_id, ptr nonnull %stack_value87, ptr %p080, ptr nonnull %stack_tcode88, ptr %p181, ptr %T_cast82), !dbg !8284
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_dense_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8407 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8409, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8410, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8411, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8412, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8413, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8414, metadata !DIExpression()), !dbg !8415
  %0 = alloca ptr, align 8, !dbg !8415
  %stack_value99 = alloca [8 x %0], align 8, !dbg !8415
  %stack_tcode100 = alloca [8 x i32], align 4, !dbg !8415
  %1 = icmp eq i32 %num_args, 4, !dbg !8415
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8415, !prof !18

common.ret:                                       ; preds = %call_end90, %handle_init_end, %handle_init, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ %199, %handle_init ], [ %202, %handle_init_end ], [ %205, %call_end90 ]
  ret i32 %common.ret.op, !dbg !8415

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %2(ptr nonnull @.str.2302), !dbg !8415
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8415, !tbaa !8416
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8415
  %p1.code = load i32, ptr %3, align 4, !dbg !8415, !tbaa !8427
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !8415
  %p2.code = load i32, ptr %4, align 4, !dbg !8415, !tbaa !8429
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !8415
  %T_add.code = load i32, ptr %5, align 4, !dbg !8415, !tbaa !8432
  %p0 = load ptr, ptr %args, align 8, !dbg !8415
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8415
  %p1 = load ptr, ptr %6, align 8, !dbg !8415
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !8415
  %p2 = load ptr, ptr %7, align 8, !dbg !8415
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !8415
  %T_add = load ptr, ptr %8, align 8, !dbg !8415
  %p092 = load ptr, ptr %p0, align 8, !dbg !8415
  call void @llvm.assume(i1 true) [ "align"(ptr %p092, i64 64) ], !dbg !8415
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p0.shape = load ptr, ptr %9, align 8, !dbg !8415
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p0.strides = load ptr, ptr %10, align 8, !dbg !8415
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8415
  %dev_id = load i32, ptr %11, align 4, !dbg !8415
  %p193 = load ptr, ptr %p1, align 8, !dbg !8415
  call void @llvm.assume(i1 true) [ "align"(ptr %p193, i64 64) ], !dbg !8415
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p1.shape = load ptr, ptr %12, align 8, !dbg !8415
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p1.strides = load ptr, ptr %13, align 8, !dbg !8415
  %p294 = load ptr, ptr %p2, align 8, !dbg !8415
  call void @llvm.assume(i1 true) [ "align"(ptr %p294, i64 64) ], !dbg !8415
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p2.shape = load ptr, ptr %14, align 8, !dbg !8415
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.p2.strides = load ptr, ptr %15, align 8, !dbg !8415
  %T_add91 = load ptr, ptr %T_add, align 8, !dbg !8415
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add91, i64 64) ], !dbg !8415
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.T_add.shape = load ptr, ptr %16, align 8, !dbg !8415
  %17 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !8415
  %tvmgen_default_fused_nn_dense_add.T_add.strides = load ptr, ptr %17, align 8, !dbg !8415
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !8415

assert_fail5:                                     ; preds = %assert_end
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %18(ptr nonnull @.str.2303), !dbg !8415
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !8415

assert_fail7:                                     ; preds = %assert_end6
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %19(ptr nonnull @.str.2304), !dbg !8415
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !8415

assert_fail9:                                     ; preds = %assert_end8
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %20(ptr nonnull @.str.2305), !dbg !8415
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !8415

assert_fail11:                                    ; preds = %assert_end10
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %21(ptr nonnull @.str.2306), !dbg !8415
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8415
  %23 = load i32, ptr %22, align 4, !dbg !8415
  %24 = icmp eq i32 %23, 2, !dbg !8415
  br i1 %24, label %assert_end16, label %assert_fail13, !dbg !8415, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %25(ptr nonnull @.str.2307), !dbg !8415
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8415
  %27 = load i16, ptr %26, align 2, !dbg !8415
  %28 = icmp eq i16 %27, 1, !dbg !8415
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8415
  %30 = load i8, ptr %29, align 1, !dbg !8415
  %31 = icmp eq i8 %30, 32, !dbg !8415
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8415
  %33 = load i8, ptr %32, align 1, !dbg !8415
  %34 = icmp eq i8 %33, 2, !dbg !8415
  %35 = and i1 %31, %34, !dbg !8415
  %36 = and i1 %28, %35, !dbg !8415
  br i1 %36, label %assert_end18, label %assert_fail17, !dbg !8415, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %37(ptr nonnull @.str.2308), !dbg !8415
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %38 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p0.shape, align 8, !dbg !8415, !tbaa !8434
  %39 = and i64 %38, 4294967295, !dbg !8415
  %40 = icmp eq i64 %39, 1, !dbg !8415
  br i1 %40, label %assert_end20, label %assert_fail19, !dbg !8415, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %41(ptr nonnull @.str.2309), !dbg !8415
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p0.shape, i64 1, !dbg !8415
  %43 = load i64, ptr %42, align 8, !dbg !8415, !tbaa !8444
  %44 = and i64 %43, 4294967295, !dbg !8415
  %45 = icmp eq i64 %44, 2048, !dbg !8415
  br i1 %45, label %assert_end22, label %assert_fail21, !dbg !8415, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %46(ptr nonnull @.str.2310), !dbg !8415
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p0.strides, null, !dbg !8415
  br i1 %.not, label %if_end, label %if_then, !dbg !8415, !prof !55

if_then:                                          ; preds = %assert_end22
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p0.strides, i64 1, !dbg !8415
  %48 = load i64, ptr %47, align 8, !dbg !8415, !tbaa !8446
  %49 = and i64 %48, 4294967295, !dbg !8415
  %50 = icmp eq i64 %49, 1, !dbg !8415
  br i1 %50, label %if_end, label %assert_fail23, !dbg !8415, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %51 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8415
  %52 = load i64, ptr %51, align 8, !dbg !8415
  %53 = icmp eq i64 %52, 0, !dbg !8415
  br i1 %53, label %assert_end26, label %assert_fail25, !dbg !8415, !prof !18

assert_fail23:                                    ; preds = %if_then
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %54(ptr nonnull @.str.2311), !dbg !8415
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %55(ptr nonnull @.str.2312), !dbg !8415
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %56 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8415
  %57 = load i32, ptr %56, align 4, !dbg !8415
  %58 = icmp eq i32 %57, 2, !dbg !8415
  br i1 %58, label %assert_end28, label %assert_fail27, !dbg !8415, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %59 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %59(ptr nonnull @.str.2313), !dbg !8415
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %60 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !8415
  %61 = load i32, ptr %60, align 4, !dbg !8415
  %62 = icmp eq i32 %61, 2, !dbg !8415
  br i1 %62, label %assert_end32, label %assert_fail29, !dbg !8415, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %63(ptr nonnull @.str.2314), !dbg !8415
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %64 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !8415
  %65 = load i16, ptr %64, align 2, !dbg !8415
  %66 = icmp eq i16 %65, 1, !dbg !8415
  %67 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !8415
  %68 = load i8, ptr %67, align 1, !dbg !8415
  %69 = icmp eq i8 %68, 32, !dbg !8415
  %70 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !8415
  %71 = load i8, ptr %70, align 1, !dbg !8415
  %72 = icmp eq i8 %71, 2, !dbg !8415
  %73 = and i1 %69, %72, !dbg !8415
  %74 = and i1 %66, %73, !dbg !8415
  br i1 %74, label %assert_end34, label %assert_fail33, !dbg !8415, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %75(ptr nonnull @.str.2315), !dbg !8415
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %76 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p1.shape, align 8, !dbg !8415, !tbaa !8456
  %77 = and i64 %76, 4294967295, !dbg !8415
  %78 = icmp eq i64 %77, 1000, !dbg !8415
  br i1 %78, label %assert_end36, label %assert_fail35, !dbg !8415, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %79(ptr nonnull @.str.2316), !dbg !8415
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %80 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p1.shape, i64 1, !dbg !8415
  %81 = load i64, ptr %80, align 8, !dbg !8415, !tbaa !8466
  %82 = and i64 %81, 4294967295, !dbg !8415
  %83 = icmp eq i64 %82, 2048, !dbg !8415
  br i1 %83, label %assert_end38, label %assert_fail37, !dbg !8415, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %84(ptr nonnull @.str.2317), !dbg !8415
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %.not101 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p1.strides, null, !dbg !8415
  br i1 %.not101, label %if_end40, label %if_then39, !dbg !8415, !prof !55

if_then39:                                        ; preds = %assert_end38
  %85 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p1.strides, align 8, !dbg !8415, !tbaa !8468
  %86 = and i64 %85, 4294967295, !dbg !8415
  %87 = icmp eq i64 %86, 2048, !dbg !8415
  %88 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p1.strides, i64 1, !dbg !8415
  %89 = load i64, ptr %88, align 8, !dbg !8415, !tbaa !8478
  %90 = and i64 %89, 4294967295, !dbg !8415
  %91 = icmp eq i64 %90, 1, !dbg !8415
  %92 = and i1 %87, %91, !dbg !8415
  br i1 %92, label %if_end40, label %assert_fail41, !dbg !8415, !prof !18

if_end40:                                         ; preds = %if_then39, %assert_end38
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !8415
  %94 = load i64, ptr %93, align 8, !dbg !8415
  %95 = icmp eq i64 %94, 0, !dbg !8415
  br i1 %95, label %assert_end44, label %assert_fail43, !dbg !8415, !prof !18

assert_fail41:                                    ; preds = %if_then39
  %96 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %96(ptr nonnull @.str.2318), !dbg !8415
  br label %common.ret

assert_fail43:                                    ; preds = %if_end40
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %97(ptr nonnull @.str.2319), !dbg !8415
  br label %common.ret

assert_end44:                                     ; preds = %if_end40
  %98 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !8415
  %99 = load i32, ptr %98, align 4, !dbg !8415
  %100 = icmp eq i32 %99, 2, !dbg !8415
  br i1 %100, label %assert_end46, label %assert_fail45, !dbg !8415, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %101(ptr nonnull @.str.2320), !dbg !8415
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !8415
  %103 = load i32, ptr %102, align 4, !dbg !8415
  %104 = icmp eq i32 %dev_id, %103, !dbg !8415
  br i1 %104, label %assert_end48, label %assert_fail47, !dbg !8415, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %105(ptr nonnull @.str.2321), !dbg !8415
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %106 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !8415
  %107 = load i32, ptr %106, align 4, !dbg !8415
  %108 = icmp eq i32 %107, 2, !dbg !8415
  br i1 %108, label %assert_end52, label %assert_fail49, !dbg !8415, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %109(ptr nonnull @.str.2322), !dbg !8415
  br label %common.ret

assert_end52:                                     ; preds = %assert_end48
  %110 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !8415
  %111 = load i16, ptr %110, align 2, !dbg !8415
  %112 = icmp eq i16 %111, 1, !dbg !8415
  %113 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !8415
  %114 = load i8, ptr %113, align 1, !dbg !8415
  %115 = icmp eq i8 %114, 32, !dbg !8415
  %116 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !8415
  %117 = load i8, ptr %116, align 1, !dbg !8415
  %118 = icmp eq i8 %117, 2, !dbg !8415
  %119 = and i1 %115, %118, !dbg !8415
  %120 = and i1 %112, %119, !dbg !8415
  br i1 %120, label %assert_end54, label %assert_fail53, !dbg !8415, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %121(ptr nonnull @.str.2323), !dbg !8415
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %122 = load i64, ptr %tvmgen_default_fused_nn_dense_add.p2.shape, align 8, !dbg !8415, !tbaa !8480
  %123 = and i64 %122, 4294967295, !dbg !8415
  %124 = icmp eq i64 %123, 1, !dbg !8415
  br i1 %124, label %assert_end56, label %assert_fail55, !dbg !8415, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %125 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %125(ptr nonnull @.str.2324), !dbg !8415
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %126 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p2.shape, i64 1, !dbg !8415
  %127 = load i64, ptr %126, align 8, !dbg !8415, !tbaa !8490
  %128 = and i64 %127, 4294967295, !dbg !8415
  %129 = icmp eq i64 %128, 1000, !dbg !8415
  br i1 %129, label %assert_end58, label %assert_fail57, !dbg !8415, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %130(ptr nonnull @.str.2325), !dbg !8415
  br label %common.ret

assert_end58:                                     ; preds = %assert_end56
  %.not102 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.p2.strides, null, !dbg !8415
  br i1 %.not102, label %if_end60, label %if_then59, !dbg !8415, !prof !55

if_then59:                                        ; preds = %assert_end58
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.p2.strides, i64 1, !dbg !8415
  %132 = load i64, ptr %131, align 8, !dbg !8415, !tbaa !8492
  %133 = and i64 %132, 4294967295, !dbg !8415
  %134 = icmp eq i64 %133, 1, !dbg !8415
  br i1 %134, label %if_end60, label %assert_fail61, !dbg !8415, !prof !18

if_end60:                                         ; preds = %if_then59, %assert_end58
  %135 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !8415
  %136 = load i64, ptr %135, align 8, !dbg !8415
  %137 = icmp eq i64 %136, 0, !dbg !8415
  br i1 %137, label %assert_end64, label %assert_fail63, !dbg !8415, !prof !18

assert_fail61:                                    ; preds = %if_then59
  %138 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %138(ptr nonnull @.str.2326), !dbg !8415
  br label %common.ret

assert_fail63:                                    ; preds = %if_end60
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %139(ptr nonnull @.str.2327), !dbg !8415
  br label %common.ret

assert_end64:                                     ; preds = %if_end60
  %140 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !8415
  %141 = load i32, ptr %140, align 4, !dbg !8415
  %142 = icmp eq i32 %141, 2, !dbg !8415
  br i1 %142, label %assert_end66, label %assert_fail65, !dbg !8415, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %143 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %143(ptr nonnull @.str.2328), !dbg !8415
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %144 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !8415
  %145 = load i32, ptr %144, align 4, !dbg !8415
  %146 = icmp eq i32 %dev_id, %145, !dbg !8415
  br i1 %146, label %assert_end68, label %assert_fail67, !dbg !8415, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %147(ptr nonnull @.str.2329), !dbg !8415
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %148 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !8415
  %149 = load i32, ptr %148, align 4, !dbg !8415
  %150 = icmp eq i32 %149, 2, !dbg !8415
  br i1 %150, label %assert_end72, label %assert_fail69, !dbg !8415, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %151(ptr nonnull @.str.2330), !dbg !8415
  br label %common.ret

assert_end72:                                     ; preds = %assert_end68
  %152 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !8415
  %153 = load i16, ptr %152, align 2, !dbg !8415
  %154 = icmp eq i16 %153, 1, !dbg !8415
  %155 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !8415
  %156 = load i8, ptr %155, align 1, !dbg !8415
  %157 = icmp eq i8 %156, 32, !dbg !8415
  %158 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !8415
  %159 = load i8, ptr %158, align 1, !dbg !8415
  %160 = icmp eq i8 %159, 2, !dbg !8415
  %161 = and i1 %157, %160, !dbg !8415
  %162 = and i1 %154, %161, !dbg !8415
  br i1 %162, label %assert_end74, label %assert_fail73, !dbg !8415, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %163 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %163(ptr nonnull @.str.2331), !dbg !8415
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %164 = load i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.shape, align 8, !dbg !8415, !tbaa !8502
  %165 = and i64 %164, 4294967295, !dbg !8415
  %166 = icmp eq i64 %165, 1, !dbg !8415
  br i1 %166, label %assert_end76, label %assert_fail75, !dbg !8415, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %167(ptr nonnull @.str.2332), !dbg !8415
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %168 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.shape, i64 1, !dbg !8415
  %169 = load i64, ptr %168, align 8, !dbg !8415, !tbaa !8512
  %170 = and i64 %169, 4294967295, !dbg !8415
  %171 = icmp eq i64 %170, 1000, !dbg !8415
  br i1 %171, label %assert_end78, label %assert_fail77, !dbg !8415, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %172(ptr nonnull @.str.2333), !dbg !8415
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not103 = icmp eq ptr %tvmgen_default_fused_nn_dense_add.T_add.strides, null, !dbg !8415
  br i1 %.not103, label %if_end80, label %if_then79, !dbg !8415, !prof !55

if_then79:                                        ; preds = %assert_end78
  %173 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_dense_add.T_add.strides, i64 1, !dbg !8415
  %174 = load i64, ptr %173, align 8, !dbg !8415, !tbaa !8514
  %175 = and i64 %174, 4294967295, !dbg !8415
  %176 = icmp eq i64 %175, 1, !dbg !8415
  br i1 %176, label %if_end80, label %assert_fail81, !dbg !8415, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %177 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !8415
  %178 = load i64, ptr %177, align 8, !dbg !8415
  %179 = icmp eq i64 %178, 0, !dbg !8415
  br i1 %179, label %assert_end84, label %assert_fail83, !dbg !8415, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %180(ptr nonnull @.str.2334), !dbg !8415
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %181(ptr nonnull @.str.2335), !dbg !8415
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %182 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !8415
  %183 = load i32, ptr %182, align 4, !dbg !8415
  %184 = icmp eq i32 %183, 2, !dbg !8415
  br i1 %184, label %assert_end86, label %assert_fail85, !dbg !8415, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %185(ptr nonnull @.str.2336), !dbg !8415
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %186 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !8415
  %187 = load i32, ptr %186, align 4, !dbg !8415
  %188 = icmp eq i32 %dev_id, %187, !dbg !8415
  br i1 %188, label %assert_end88, label %assert_fail87, !dbg !8415, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8415, !tbaa !19
  tail call void %189(ptr nonnull @.str.2337), !dbg !8415
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  store i64 2, ptr %stack_value99, align 8, !dbg !8415
  store i32 0, ptr %stack_tcode100, align 4, !dbg !8415, !tbaa !8524
  %190 = sext i32 %dev_id to i64, !dbg !8415
  %191 = getelementptr inbounds i64, ptr %stack_value99, i64 1, !dbg !8415
  store i64 %190, ptr %191, align 8, !dbg !8415
  %192 = getelementptr inbounds i32, ptr %stack_tcode100, i64 1, !dbg !8415
  store i32 0, ptr %192, align 4, !dbg !8415, !tbaa !8535
  %193 = getelementptr inbounds %0, ptr %stack_value99, i64 2, !dbg !8415
  %194 = getelementptr inbounds i32, ptr %stack_tcode100, i64 2, !dbg !8415
  %195 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8415, !tbaa !19
  %196 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8415
  %.not104 = icmp eq ptr %196, null, !dbg !8415
  br i1 %.not104, label %handle_init, label %handle_init_end, !dbg !8415, !prof !55

handle_init:                                      ; preds = %assert_end88
  %197 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8415, !tbaa !19
  %198 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8415, !tbaa !19
  %199 = call i32 %198(ptr %197, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8415
  %200 = icmp eq i32 %199, 0, !dbg !8415
  br i1 %200, label %call_end, label %common.ret, !dbg !8415, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end88
  %201 = phi ptr [ %196, %assert_end88 ], [ %204, %call_end ], !dbg !8415
  %202 = call i32 %195(ptr %201, ptr nonnull %stack_value99, ptr nonnull %stack_tcode100, i32 2, ptr nonnull %193, ptr nonnull %194), !dbg !8415
  %203 = icmp eq i32 %202, 0, !dbg !8415
  br i1 %203, label %call_end90, label %common.ret, !dbg !8415, !prof !18

call_end:                                         ; preds = %handle_init
  %204 = load ptr, ptr %0, align 8, !dbg !8415
  store ptr %204, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8415
  br label %handle_init_end, !dbg !8415

call_end90:                                       ; preds = %handle_init_end
  %205 = call fastcc i32 @tvmgen_default_fused_nn_dense_add_compute_(ptr nonnull %stack_value99, ptr %T_add91, ptr nonnull %stack_tcode100, ptr %p092, ptr %p193, ptr %p294), !dbg !8415
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_max_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8537 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8539, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8540, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8541, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8542, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8543, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8544, metadata !DIExpression()), !dbg !8545
  %0 = alloca ptr, align 8, !dbg !8545
  %stack_value59 = alloca [5 x %0], align 8, !dbg !8545
  %stack_tcode60 = alloca [5 x i32], align 4, !dbg !8545
  %1 = icmp eq i32 %num_args, 2, !dbg !8545
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8545, !prof !18

common.ret:                                       ; preds = %call_end52, %handle_init_end, %handle_init, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ %141, %handle_init ], [ %144, %handle_init_end ], [ %147, %call_end52 ]
  ret i32 %common.ret.op, !dbg !8545

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %2(ptr nonnull @.str.2339), !dbg !8545
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8545, !tbaa !8546
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8545
  %pool_max.code = load i32, ptr %3, align 4, !dbg !8545, !tbaa !8557
  %p0 = load ptr, ptr %args, align 8, !dbg !8545
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8545
  %pool_max = load ptr, ptr %4, align 8, !dbg !8545
  %p053 = load ptr, ptr %p0, align 8, !dbg !8545
  call void @llvm.assume(i1 true) [ "align"(ptr %p053, i64 64) ], !dbg !8545
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8545
  %tvmgen_default_fused_nn_max_pool2d.p0.shape = load ptr, ptr %5, align 8, !dbg !8545
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8545
  %tvmgen_default_fused_nn_max_pool2d.p0.strides = load ptr, ptr %6, align 8, !dbg !8545
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8545
  %dev_id = load i32, ptr %7, align 4, !dbg !8545
  %pool_max54 = load ptr, ptr %pool_max, align 8, !dbg !8545
  call void @llvm.assume(i1 true) [ "align"(ptr %pool_max54, i64 64) ], !dbg !8545
  %8 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 4, !dbg !8545
  %tvmgen_default_fused_nn_max_pool2d.pool_max.shape = load ptr, ptr %8, align 8, !dbg !8545
  %9 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 5, !dbg !8545
  %tvmgen_default_fused_nn_max_pool2d.pool_max.strides = load ptr, ptr %9, align 8, !dbg !8545
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !8545

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %10(ptr nonnull @.str.2340), !dbg !8545
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %pool_max.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !8545

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %11(ptr nonnull @.str.2341), !dbg !8545
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8545
  %13 = load i32, ptr %12, align 4, !dbg !8545
  %14 = icmp eq i32 %13, 4, !dbg !8545
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !8545, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %15(ptr nonnull @.str.2342), !dbg !8545
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8545
  %17 = load i16, ptr %16, align 2, !dbg !8545
  %18 = icmp eq i16 %17, 1, !dbg !8545
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8545
  %20 = load i8, ptr %19, align 1, !dbg !8545
  %21 = icmp eq i8 %20, 32, !dbg !8545
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8545
  %23 = load i8, ptr %22, align 1, !dbg !8545
  %24 = icmp eq i8 %23, 2, !dbg !8545
  %25 = and i1 %21, %24, !dbg !8545
  %26 = and i1 %18, %25, !dbg !8545
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !8545, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %27(ptr nonnull @.str.2343), !dbg !8545
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, align 8, !dbg !8545, !tbaa !8559
  %29 = and i64 %28, 4294967295, !dbg !8545
  %30 = icmp eq i64 %29, 1, !dbg !8545
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !8545, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %31(ptr nonnull @.str.2344), !dbg !8545
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 1, !dbg !8545
  %33 = load i64, ptr %32, align 8, !dbg !8545, !tbaa !8569
  %34 = and i64 %33, 4294967295, !dbg !8545
  %35 = icmp eq i64 %34, 64, !dbg !8545
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !8545, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %36(ptr nonnull @.str.2345), !dbg !8545
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 2, !dbg !8545
  %38 = load i64, ptr %37, align 8, !dbg !8545, !tbaa !8571
  %39 = and i64 %38, 4294967295, !dbg !8545
  %40 = icmp eq i64 %39, 112, !dbg !8545
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !8545, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %41(ptr nonnull @.str.2346), !dbg !8545
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 3, !dbg !8545
  %43 = load i64, ptr %42, align 8, !dbg !8545, !tbaa !8574
  %44 = and i64 %43, 4294967295, !dbg !8545
  %45 = icmp eq i64 %44, 112, !dbg !8545
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !8545, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %46(ptr nonnull @.str.2347), !dbg !8545
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, null, !dbg !8545
  br i1 %.not, label %if_end, label %if_then, !dbg !8545, !prof !55

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 1, !dbg !8545
  %48 = load i64, ptr %47, align 8, !dbg !8545, !tbaa !8576
  %49 = and i64 %48, 4294967295, !dbg !8545
  %50 = icmp eq i64 %49, 12544, !dbg !8545
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 2, !dbg !8545
  %52 = load i64, ptr %51, align 8, !dbg !8545, !tbaa !8586
  %53 = and i64 %52, 4294967295, !dbg !8545
  %54 = icmp eq i64 %53, 112, !dbg !8545
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 3, !dbg !8545
  %56 = load i64, ptr %55, align 8, !dbg !8545, !tbaa !8589
  %57 = and i64 %56, 4294967295, !dbg !8545
  %58 = icmp eq i64 %57, 1, !dbg !8545
  %59 = and i1 %54, %58, !dbg !8545
  %60 = and i1 %50, %59, !dbg !8545
  br i1 %60, label %if_end, label %assert_fail21, !dbg !8545, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %61 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8545
  %62 = load i64, ptr %61, align 8, !dbg !8545
  %63 = icmp eq i64 %62, 0, !dbg !8545
  br i1 %63, label %assert_end24, label %assert_fail23, !dbg !8545, !prof !18

assert_fail21:                                    ; preds = %if_then
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %64(ptr nonnull @.str.2348), !dbg !8545
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %65(ptr nonnull @.str.2349), !dbg !8545
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %66 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8545
  %67 = load i32, ptr %66, align 4, !dbg !8545
  %68 = icmp eq i32 %67, 2, !dbg !8545
  br i1 %68, label %assert_end26, label %assert_fail25, !dbg !8545, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %69 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %69(ptr nonnull @.str.2350), !dbg !8545
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %70 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 2, !dbg !8545
  %71 = load i32, ptr %70, align 4, !dbg !8545
  %72 = icmp eq i32 %71, 4, !dbg !8545
  br i1 %72, label %assert_end30, label %assert_fail27, !dbg !8545, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %73(ptr nonnull @.str.2351), !dbg !8545
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %74 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 2, !dbg !8545
  %75 = load i16, ptr %74, align 2, !dbg !8545
  %76 = icmp eq i16 %75, 1, !dbg !8545
  %77 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 1, !dbg !8545
  %78 = load i8, ptr %77, align 1, !dbg !8545
  %79 = icmp eq i8 %78, 32, !dbg !8545
  %80 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 0, !dbg !8545
  %81 = load i8, ptr %80, align 1, !dbg !8545
  %82 = icmp eq i8 %81, 2, !dbg !8545
  %83 = and i1 %79, %82, !dbg !8545
  %84 = and i1 %76, %83, !dbg !8545
  br i1 %84, label %assert_end32, label %assert_fail31, !dbg !8545, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %85(ptr nonnull @.str.2352), !dbg !8545
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %86 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, align 8, !dbg !8545, !tbaa !8591
  %87 = and i64 %86, 4294967295, !dbg !8545
  %88 = icmp eq i64 %87, 1, !dbg !8545
  br i1 %88, label %assert_end34, label %assert_fail33, !dbg !8545, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %89(ptr nonnull @.str.2353), !dbg !8545
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %90 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 1, !dbg !8545
  %91 = load i64, ptr %90, align 8, !dbg !8545, !tbaa !8601
  %92 = and i64 %91, 4294967295, !dbg !8545
  %93 = icmp eq i64 %92, 64, !dbg !8545
  br i1 %93, label %assert_end36, label %assert_fail35, !dbg !8545, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %94(ptr nonnull @.str.2354), !dbg !8545
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %95 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 2, !dbg !8545
  %96 = load i64, ptr %95, align 8, !dbg !8545, !tbaa !8603
  %97 = and i64 %96, 4294967295, !dbg !8545
  %98 = icmp eq i64 %97, 56, !dbg !8545
  br i1 %98, label %assert_end38, label %assert_fail37, !dbg !8545, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %99(ptr nonnull @.str.2355), !dbg !8545
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %100 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 3, !dbg !8545
  %101 = load i64, ptr %100, align 8, !dbg !8545, !tbaa !8606
  %102 = and i64 %101, 4294967295, !dbg !8545
  %103 = icmp eq i64 %102, 56, !dbg !8545
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !8545, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %104(ptr nonnull @.str.2356), !dbg !8545
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not61 = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, null, !dbg !8545
  br i1 %.not61, label %if_end42, label %if_then41, !dbg !8545, !prof !55

if_then41:                                        ; preds = %assert_end40
  %105 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 1, !dbg !8545
  %106 = load i64, ptr %105, align 8, !dbg !8545, !tbaa !8608
  %107 = and i64 %106, 4294967295, !dbg !8545
  %108 = icmp eq i64 %107, 3136, !dbg !8545
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 2, !dbg !8545
  %110 = load i64, ptr %109, align 8, !dbg !8545, !tbaa !8618
  %111 = and i64 %110, 4294967295, !dbg !8545
  %112 = icmp eq i64 %111, 56, !dbg !8545
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 3, !dbg !8545
  %114 = load i64, ptr %113, align 8, !dbg !8545, !tbaa !8621
  %115 = and i64 %114, 4294967295, !dbg !8545
  %116 = icmp eq i64 %115, 1, !dbg !8545
  %117 = and i1 %112, %116, !dbg !8545
  %118 = and i1 %108, %117, !dbg !8545
  br i1 %118, label %if_end42, label %assert_fail43, !dbg !8545, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %119 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 6, !dbg !8545
  %120 = load i64, ptr %119, align 8, !dbg !8545
  %121 = icmp eq i64 %120, 0, !dbg !8545
  br i1 %121, label %assert_end46, label %assert_fail45, !dbg !8545, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %122 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %122(ptr nonnull @.str.2357), !dbg !8545
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %123(ptr nonnull @.str.2358), !dbg !8545
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %124 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 0, !dbg !8545
  %125 = load i32, ptr %124, align 4, !dbg !8545
  %126 = icmp eq i32 %125, 2, !dbg !8545
  br i1 %126, label %assert_end48, label %assert_fail47, !dbg !8545, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %127(ptr nonnull @.str.2359), !dbg !8545
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %128 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 1, !dbg !8545
  %129 = load i32, ptr %128, align 4, !dbg !8545
  %130 = icmp eq i32 %dev_id, %129, !dbg !8545
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !8545, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8545, !tbaa !19
  tail call void %131(ptr nonnull @.str.2360), !dbg !8545
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  store i64 2, ptr %stack_value59, align 8, !dbg !8545
  store i32 0, ptr %stack_tcode60, align 4, !dbg !8545, !tbaa !8623
  %132 = sext i32 %dev_id to i64, !dbg !8545
  %133 = getelementptr inbounds i64, ptr %stack_value59, i64 1, !dbg !8545
  store i64 %132, ptr %133, align 8, !dbg !8545
  %134 = getelementptr inbounds i32, ptr %stack_tcode60, i64 1, !dbg !8545
  store i32 0, ptr %134, align 4, !dbg !8545, !tbaa !8634
  %135 = getelementptr inbounds %0, ptr %stack_value59, i64 2, !dbg !8545
  %136 = getelementptr inbounds i32, ptr %stack_tcode60, i64 2, !dbg !8545
  %137 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8545, !tbaa !19
  %138 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8545
  %.not62 = icmp eq ptr %138, null, !dbg !8545
  br i1 %.not62, label %handle_init, label %handle_init_end, !dbg !8545, !prof !55

handle_init:                                      ; preds = %assert_end50
  %139 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8545, !tbaa !19
  %140 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8545, !tbaa !19
  %141 = call i32 %140(ptr %139, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8545
  %142 = icmp eq i32 %141, 0, !dbg !8545
  br i1 %142, label %call_end, label %common.ret, !dbg !8545, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end50
  %143 = phi ptr [ %138, %assert_end50 ], [ %146, %call_end ], !dbg !8545
  %144 = call i32 %137(ptr %143, ptr nonnull %stack_value59, ptr nonnull %stack_tcode60, i32 2, ptr nonnull %135, ptr nonnull %136), !dbg !8545
  %145 = icmp eq i32 %144, 0, !dbg !8545
  br i1 %145, label %call_end52, label %common.ret, !dbg !8545, !prof !18

call_end:                                         ; preds = %handle_init
  %146 = load ptr, ptr %0, align 8, !dbg !8545
  store ptr %146, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8545
  br label %handle_init_end, !dbg !8545

call_end52:                                       ; preds = %handle_init_end
  %147 = call fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr nonnull %stack_value59, ptr %p053, ptr nonnull %stack_tcode60, ptr %pool_max54), !dbg !8545
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_reshape_squeeze(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !8636 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !8638, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !8639, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !8640, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !8643, metadata !DIExpression()), !dbg !8644
  %0 = alloca ptr, align 8, !dbg !8644
  %stack_value55 = alloca [5 x %0], align 8, !dbg !8644
  %stack_tcode56 = alloca [5 x i32], align 4, !dbg !8644
  %1 = icmp eq i32 %num_args, 2, !dbg !8644
  br i1 %1, label %assert_end, label %assert_fail, !dbg !8644, !prof !18

common.ret:                                       ; preds = %call_end48, %handle_init_end, %handle_init, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ %111, %handle_init ], [ %114, %handle_init_end ], [ %117, %call_end48 ]
  ret i32 %common.ret.op, !dbg !8644

assert_fail:                                      ; preds = %entry
  %2 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %2(ptr nonnull @.str.2362), !dbg !8644
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !8644, !tbaa !8645
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !8644
  %T_squeeze.code = load i32, ptr %3, align 4, !dbg !8644, !tbaa !8656
  %p0 = load ptr, ptr %args, align 8, !dbg !8644
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !8644
  %T_squeeze = load ptr, ptr %4, align 8, !dbg !8644
  %p050 = load ptr, ptr %p0, align 8, !dbg !8644
  call void @llvm.assume(i1 true) [ "align"(ptr %p050, i64 64) ], !dbg !8644
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !8644
  %tvmgen_default_fused_reshape_squeeze.p0.shape = load ptr, ptr %5, align 8, !dbg !8644
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !8644
  %tvmgen_default_fused_reshape_squeeze.p0.strides = load ptr, ptr %6, align 8, !dbg !8644
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !8644
  %dev_id = load i32, ptr %7, align 4, !dbg !8644
  %T_squeeze49 = load ptr, ptr %T_squeeze, align 8, !dbg !8644
  call void @llvm.assume(i1 true) [ "align"(ptr %T_squeeze49, i64 64) ], !dbg !8644
  %8 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 4, !dbg !8644
  %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape = load ptr, ptr %8, align 8, !dbg !8644
  %9 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 5, !dbg !8644
  %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides = load ptr, ptr %9, align 8, !dbg !8644
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !8644

assert_fail3:                                     ; preds = %assert_end
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %10(ptr nonnull @.str.2363), !dbg !8644
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_squeeze.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !8644

assert_fail5:                                     ; preds = %assert_end4
  %11 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %11(ptr nonnull @.str.2364), !dbg !8644
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !8644
  %13 = load i32, ptr %12, align 4, !dbg !8644
  %14 = icmp eq i32 %13, 4, !dbg !8644
  br i1 %14, label %assert_end10, label %assert_fail7, !dbg !8644, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %15(ptr nonnull @.str.2365), !dbg !8644
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !8644
  %17 = load i16, ptr %16, align 2, !dbg !8644
  %18 = icmp eq i16 %17, 1, !dbg !8644
  %19 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !8644
  %20 = load i8, ptr %19, align 1, !dbg !8644
  %21 = icmp eq i8 %20, 32, !dbg !8644
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !8644
  %23 = load i8, ptr %22, align 1, !dbg !8644
  %24 = icmp eq i8 %23, 2, !dbg !8644
  %25 = and i1 %21, %24, !dbg !8644
  %26 = and i1 %18, %25, !dbg !8644
  br i1 %26, label %assert_end12, label %assert_fail11, !dbg !8644, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %27(ptr nonnull @.str.2366), !dbg !8644
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %28 = load i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, align 8, !dbg !8644, !tbaa !8658
  %29 = and i64 %28, 4294967295, !dbg !8644
  %30 = icmp eq i64 %29, 1, !dbg !8644
  br i1 %30, label %assert_end14, label %assert_fail13, !dbg !8644, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %31(ptr nonnull @.str.2367), !dbg !8644
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %32 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 1, !dbg !8644
  %33 = load i64, ptr %32, align 8, !dbg !8644, !tbaa !8668
  %34 = and i64 %33, 4294967295, !dbg !8644
  %35 = icmp eq i64 %34, 2048, !dbg !8644
  br i1 %35, label %assert_end16, label %assert_fail15, !dbg !8644, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %36(ptr nonnull @.str.2368), !dbg !8644
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %37 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 2, !dbg !8644
  %38 = load i64, ptr %37, align 8, !dbg !8644, !tbaa !8670
  %39 = and i64 %38, 4294967295, !dbg !8644
  %40 = icmp eq i64 %39, 1, !dbg !8644
  br i1 %40, label %assert_end18, label %assert_fail17, !dbg !8644, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %41(ptr nonnull @.str.2369), !dbg !8644
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.shape, i64 3, !dbg !8644
  %43 = load i64, ptr %42, align 8, !dbg !8644, !tbaa !8673
  %44 = and i64 %43, 4294967295, !dbg !8644
  %45 = icmp eq i64 %44, 1, !dbg !8644
  br i1 %45, label %assert_end20, label %assert_fail19, !dbg !8644, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %46(ptr nonnull @.str.2370), !dbg !8644
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_reshape_squeeze.p0.strides, null, !dbg !8644
  br i1 %.not, label %if_end, label %if_then, !dbg !8644, !prof !55

if_then:                                          ; preds = %assert_end20
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.p0.strides, i64 1, !dbg !8644
  %48 = load i64, ptr %47, align 8, !dbg !8644, !tbaa !8675
  %49 = and i64 %48, 4294967295, !dbg !8644
  %50 = icmp eq i64 %49, 1, !dbg !8644
  br i1 %50, label %if_end, label %assert_fail21, !dbg !8644, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %51 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !8644
  %52 = load i64, ptr %51, align 8, !dbg !8644
  %53 = icmp eq i64 %52, 0, !dbg !8644
  br i1 %53, label %assert_end24, label %assert_fail23, !dbg !8644, !prof !18

assert_fail21:                                    ; preds = %if_then
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %54(ptr nonnull @.str.2371), !dbg !8644
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %55(ptr nonnull @.str.2372), !dbg !8644
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %56 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !8644
  %57 = load i32, ptr %56, align 4, !dbg !8644
  %58 = icmp eq i32 %57, 2, !dbg !8644
  br i1 %58, label %assert_end26, label %assert_fail25, !dbg !8644, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %59 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %59(ptr nonnull @.str.2373), !dbg !8644
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %60 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 2, !dbg !8644
  %61 = load i32, ptr %60, align 4, !dbg !8644
  %62 = icmp eq i32 %61, 2, !dbg !8644
  br i1 %62, label %assert_end30, label %assert_fail27, !dbg !8644, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %63(ptr nonnull @.str.2374), !dbg !8644
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %64 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 2, !dbg !8644
  %65 = load i16, ptr %64, align 2, !dbg !8644
  %66 = icmp eq i16 %65, 1, !dbg !8644
  %67 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 1, !dbg !8644
  %68 = load i8, ptr %67, align 1, !dbg !8644
  %69 = icmp eq i8 %68, 32, !dbg !8644
  %70 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 0, !dbg !8644
  %71 = load i8, ptr %70, align 1, !dbg !8644
  %72 = icmp eq i8 %71, 2, !dbg !8644
  %73 = and i1 %69, %72, !dbg !8644
  %74 = and i1 %66, %73, !dbg !8644
  br i1 %74, label %assert_end32, label %assert_fail31, !dbg !8644, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %75 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %75(ptr nonnull @.str.2375), !dbg !8644
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %76 = load i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape, align 8, !dbg !8644, !tbaa !8685
  %77 = and i64 %76, 4294967295, !dbg !8644
  %78 = icmp eq i64 %77, 1, !dbg !8644
  br i1 %78, label %assert_end34, label %assert_fail33, !dbg !8644, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %79(ptr nonnull @.str.2376), !dbg !8644
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %80 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.shape, i64 1, !dbg !8644
  %81 = load i64, ptr %80, align 8, !dbg !8644, !tbaa !8695
  %82 = and i64 %81, 4294967295, !dbg !8644
  %83 = icmp eq i64 %82, 2048, !dbg !8644
  br i1 %83, label %assert_end36, label %assert_fail35, !dbg !8644, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %84(ptr nonnull @.str.2377), !dbg !8644
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %.not57 = icmp eq ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides, null, !dbg !8644
  br i1 %.not57, label %if_end38, label %if_then37, !dbg !8644, !prof !55

if_then37:                                        ; preds = %assert_end36
  %85 = getelementptr inbounds i64, ptr %tvmgen_default_fused_reshape_squeeze.T_squeeze.strides, i64 1, !dbg !8644
  %86 = load i64, ptr %85, align 8, !dbg !8644, !tbaa !8697
  %87 = and i64 %86, 4294967295, !dbg !8644
  %88 = icmp eq i64 %87, 1, !dbg !8644
  br i1 %88, label %if_end38, label %assert_fail39, !dbg !8644, !prof !18

if_end38:                                         ; preds = %if_then37, %assert_end36
  %89 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 6, !dbg !8644
  %90 = load i64, ptr %89, align 8, !dbg !8644
  %91 = icmp eq i64 %90, 0, !dbg !8644
  br i1 %91, label %assert_end42, label %assert_fail41, !dbg !8644, !prof !18

assert_fail39:                                    ; preds = %if_then37
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %92(ptr nonnull @.str.2378), !dbg !8644
  br label %common.ret

assert_fail41:                                    ; preds = %if_end38
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %93(ptr nonnull @.str.2379), !dbg !8644
  br label %common.ret

assert_end42:                                     ; preds = %if_end38
  %94 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 0, !dbg !8644
  %95 = load i32, ptr %94, align 4, !dbg !8644
  %96 = icmp eq i32 %95, 2, !dbg !8644
  br i1 %96, label %assert_end44, label %assert_fail43, !dbg !8644, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %97(ptr nonnull @.str.2380), !dbg !8644
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %98 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 1, !dbg !8644
  %99 = load i32, ptr %98, align 4, !dbg !8644
  %100 = icmp eq i32 %dev_id, %99, !dbg !8644
  br i1 %100, label %assert_end46, label %assert_fail45, !dbg !8644, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !8644, !tbaa !19
  tail call void %101(ptr nonnull @.str.2381), !dbg !8644
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  store i64 2, ptr %stack_value55, align 8, !dbg !8644
  store i32 0, ptr %stack_tcode56, align 4, !dbg !8644, !tbaa !8707
  %102 = sext i32 %dev_id to i64, !dbg !8644
  %103 = getelementptr inbounds i64, ptr %stack_value55, i64 1, !dbg !8644
  store i64 %102, ptr %103, align 8, !dbg !8644
  %104 = getelementptr inbounds i32, ptr %stack_tcode56, i64 1, !dbg !8644
  store i32 0, ptr %104, align 4, !dbg !8644, !tbaa !8718
  %105 = getelementptr inbounds %0, ptr %stack_value55, i64 2, !dbg !8644
  %106 = getelementptr inbounds i32, ptr %stack_tcode56, i64 2, !dbg !8644
  %107 = load ptr, ptr @__TVMFuncCall, align 8, !dbg !8644, !tbaa !19
  %108 = load ptr, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8644
  %.not58 = icmp eq ptr %108, null, !dbg !8644
  br i1 %.not58, label %handle_init, label %handle_init_end, !dbg !8644, !prof !55

handle_init:                                      ; preds = %assert_end46
  %109 = load ptr, ptr @__tvm_module_ctx, align 8, !dbg !8644, !tbaa !19
  %110 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !dbg !8644, !tbaa !19
  %111 = call i32 %110(ptr %109, ptr nonnull @.str.33, ptr nonnull %0), !dbg !8644
  %112 = icmp eq i32 %111, 0, !dbg !8644
  br i1 %112, label %call_end, label %common.ret, !dbg !8644, !prof !18

handle_init_end:                                  ; preds = %call_end, %assert_end46
  %113 = phi ptr [ %108, %assert_end46 ], [ %116, %call_end ], !dbg !8644
  %114 = call i32 %107(ptr %113, ptr nonnull %stack_value55, ptr nonnull %stack_tcode56, i32 2, ptr nonnull %105, ptr nonnull %106), !dbg !8644
  %115 = icmp eq i32 %114, 0, !dbg !8644
  br i1 %115, label %call_end48, label %common.ret, !dbg !8644, !prof !18

call_end:                                         ; preds = %handle_init
  %116 = load ptr, ptr %0, align 8, !dbg !8644
  store ptr %116, ptr @.tvm_func.__tvm_set_device, align 8, !dbg !8644
  br label %handle_init_end, !dbg !8644

call_end48:                                       ; preds = %handle_init_end
  %117 = call fastcc i32 @tvmgen_default_fused_reshape_squeeze_compute_(ptr nonnull %stack_value55, ptr %T_squeeze49, ptr nonnull %stack_tcode56, ptr %p050), !dbg !8644
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %6 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 256, ptr %8, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !8720
  %9 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1024, ptr %9, align 8
  %10 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %10, align 4, !tbaa !8721
  %11 = getelementptr inbounds %0, ptr %0, i64 5
  %12 = getelementptr inbounds i32, ptr %2, i64 5
  %13 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %14 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_kernel, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %15 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %16 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %17 = call i32 %16(ptr %15, ptr nonnull @.str.34, ptr nonnull %5)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %19 = phi ptr [ %14, %entry ], [ %21, %call_end ]
  %20 = call i32 %13(ptr %19, ptr nonnull %0, ptr nonnull %2, i32 5, ptr nonnull %11, ptr nonnull %12)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %17, %handle_init ], [ %20, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %21 = load ptr, ptr %5, align 8
  store ptr %21, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %6 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 256, ptr %8, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !8725
  %9 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1024, ptr %9, align 8
  %10 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %10, align 4, !tbaa !8726
  %11 = getelementptr inbounds %0, ptr %0, i64 5
  %12 = getelementptr inbounds i32, ptr %2, i64 5
  %13 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %14 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_kernel, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %15 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %16 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %17 = call i32 %16(ptr %15, ptr nonnull @.str.68, ptr nonnull %5)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %19 = phi ptr [ %14, %entry ], [ %21, %call_end ]
  %20 = call i32 %13(ptr %19, ptr nonnull %0, ptr nonnull %2, i32 5, ptr nonnull %11, ptr nonnull %12)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %17, %handle_init ], [ %20, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %21 = load ptr, ptr %5, align 8
  store ptr %21, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %6 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 196, ptr %8, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !8730
  %9 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1024, ptr %9, align 8
  %10 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %10, align 4, !tbaa !8731
  %11 = getelementptr inbounds %0, ptr %0, i64 5
  %12 = getelementptr inbounds i32, ptr %2, i64 5
  %13 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %14 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_kernel, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %15 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %16 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %17 = call i32 %16(ptr %15, ptr nonnull @.str.102, ptr nonnull %5)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %19 = phi ptr [ %14, %entry ], [ %21, %call_end ]
  %20 = call i32 %13(ptr %19, ptr nonnull %0, ptr nonnull %2, i32 5, ptr nonnull %11, ptr nonnull %12)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %17, %handle_init ], [ %20, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %21 = load ptr, ptr %5, align 8
  store ptr %21, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %6 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 98, ptr %8, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !8735
  %9 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1024, ptr %9, align 8
  %10 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %10, align 4, !tbaa !8736
  %11 = getelementptr inbounds %0, ptr %0, i64 5
  %12 = getelementptr inbounds i32, ptr %2, i64 5
  %13 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %14 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_kernel, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %15 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %16 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %17 = call i32 %16(ptr %15, ptr nonnull @.str.136, ptr nonnull %5)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %19 = phi ptr [ %14, %entry ], [ %21, %call_end ]
  %20 = call i32 %13(ptr %19, ptr nonnull %0, ptr nonnull %2, i32 5, ptr nonnull %11, ptr nonnull %12)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %17, %handle_init ], [ %20, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %21 = load ptr, ptr %5, align 8
  store ptr %21, ptr @.tvm_func.tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 98, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !8740
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.159, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8741
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8742
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8746
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.204, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8748
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8749
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8753
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.249, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8755
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 25, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8756
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8760
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.294, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_10_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8762
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8763
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8767
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.339, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8769
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8770
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8774
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.384, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8776
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 98, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8777
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8781
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.429, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8783
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8784
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8788
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.474, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8790
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 49, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8791
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8795
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.519, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8797
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 49, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8798
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8802
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.564, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_7_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8804
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 98, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8805
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8809
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.609, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_8_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8811
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 25, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8812
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8816
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.654, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_9_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8818
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8819
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8823
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.699, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8825
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8826
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8830
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.744, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8832
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8833
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8837
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.789, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8839
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8840
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8844
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.834, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8846
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8847
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8851
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.879, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_4_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8853
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 196, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8854
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8858
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.924, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_5_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8860
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 98, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8861
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8865
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.969, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_6_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8867
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 98, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8868
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8872
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.1014, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_7_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8874
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 98, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8875
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8879
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.1059, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_multiply_add_nn_relu_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !8881
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 256, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !8882
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1024, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !8886
  %14 = getelementptr inbounds %0, ptr %0, i64 6
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_multiply_add_nn_relu_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.1104, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %22 = phi ptr [ %17, %entry ], [ %24, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %0, ptr nonnull %2, i32 6, ptr nonnull %14, ptr nonnull %15)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %20, %handle_init ], [ %23, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %24 = load ptr, ptr %6, align 8
  store ptr %24, ptr @.tvm_func.tvmgen_default_fused_multiply_add_nn_relu_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_multiply_round_clip_cast_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 196, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !8888
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_multiply_round_clip_cast_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.1127, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_multiply_round_clip_cast_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %0, ptr noalias %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %adaptive_pool_sum = tail call ptr %7(i32 2, i32 %0, i64 8192, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_sum, i64 64) ]
  %8 = icmp eq ptr %adaptive_pool_sum, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end8, %handle_init_end4, %handle_init3, %handle_init_end, %handle_init, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %20, %handle_init ], [ %23, %handle_init_end ], [ %30, %handle_init3 ], [ %33, %handle_init_end4 ], [ %., %call_end8 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %adaptive_pool_sum, ptr %1, align 8
  %9 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 64, ptr %10, align 8
  %11 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 32, ptr %11, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !8889
  %12 = getelementptr inbounds i64, ptr %1, i64 4
  store i64 32, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %13, align 4, !tbaa !8890
  %14 = getelementptr inbounds %0, ptr %1, i64 5
  %15 = getelementptr inbounds i32, ptr %2, i64 5
  %16 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %17 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end
  %18 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %19 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %20 = call i32 %19(ptr %18, ptr nonnull @.str.1150, ptr nonnull %6)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end
  %22 = phi ptr [ %17, %if_end ], [ %25, %call_end ]
  %23 = call i32 %16(ptr %22, ptr nonnull %1, ptr nonnull %2, i32 5, ptr nonnull %14, ptr nonnull %15)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %call_end2, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %25 = load ptr, ptr %6, align 8
  store ptr %25, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel, align 8
  br label %handle_init_end

call_end2:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %adaptive_pool_sum, ptr %9, align 8
  store i64 2, ptr %10, align 8
  store i64 1024, ptr %11, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !8889
  %26 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %27 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1, align 8
  %.not17 = icmp eq ptr %27, null
  br i1 %.not17, label %handle_init3, label %handle_init_end4, !prof !55

handle_init3:                                     ; preds = %call_end2
  %28 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %29 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %30 = call i32 %29(ptr %28, ptr nonnull @.str.1151, ptr nonnull %5)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %call_end6, label %common.ret, !prof !18

handle_init_end4:                                 ; preds = %call_end6, %call_end2
  %32 = phi ptr [ %27, %call_end2 ], [ %35, %call_end6 ]
  %33 = call i32 %26(ptr %32, ptr nonnull %1, ptr nonnull %2, i32 4, ptr nonnull %12, ptr nonnull %13)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %call_end8, label %common.ret, !prof !18

call_end6:                                        ; preds = %handle_init3
  %35 = load ptr, ptr %5, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_adaptive_avg_pool2d_kernel_1, align 8
  br label %handle_init_end4

call_end8:                                        ; preds = %handle_init_end4
  %36 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %37 = call i32 %36(i32 2, i32 %0, ptr nonnull %adaptive_pool_sum)
  %.not18 = icmp ne i32 %37, 0
  %. = sext i1 %.not18 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %6 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1, ptr %8, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %2, align 4, !tbaa !8894
  %9 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 112, ptr %9, align 8
  %10 = getelementptr inbounds i32, ptr %2, i64 4
  %11 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1, ptr %11, align 8
  %12 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 8, ptr %12, align 8
  %13 = getelementptr inbounds i64, ptr %0, i64 7
  store i64 1, ptr %13, align 8
  store <4 x i32> zeroinitializer, ptr %10, align 4, !tbaa !8895
  %14 = getelementptr inbounds i64, ptr %0, i64 8
  store i64 16, ptr %14, align 8
  %15 = getelementptr inbounds i32, ptr %2, i64 8
  %16 = getelementptr inbounds i64, ptr %0, i64 9
  store i64 8, ptr %16, align 8
  %17 = getelementptr inbounds i64, ptr %0, i64 10
  store i64 1, ptr %17, align 8
  %18 = getelementptr inbounds i64, ptr %0, i64 11
  store i64 16, ptr %18, align 8
  store <4 x i32> zeroinitializer, ptr %15, align 4, !tbaa !8897
  %19 = getelementptr inbounds i64, ptr %0, i64 12
  store i64 8, ptr %19, align 8
  %20 = getelementptr inbounds i32, ptr %2, i64 12
  store i32 0, ptr %20, align 4, !tbaa !8900
  %21 = getelementptr inbounds i64, ptr %0, i64 13
  store i64 1, ptr %21, align 8
  %22 = getelementptr inbounds i32, ptr %2, i64 13
  store i32 0, ptr %22, align 4, !tbaa !8904
  %23 = getelementptr inbounds i64, ptr %0, i64 14
  store i64 16, ptr %23, align 8
  %24 = getelementptr inbounds i32, ptr %2, i64 14
  store i32 0, ptr %24, align 4, !tbaa !8906
  %25 = getelementptr inbounds %0, ptr %0, i64 15
  %26 = getelementptr inbounds i32, ptr %2, i64 15
  %27 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %28 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_kernel, align 8
  %.not = icmp eq ptr %28, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %29 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %30 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %31 = call i32 %30(ptr %29, ptr nonnull @.str.1185, ptr nonnull %5)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %33 = phi ptr [ %28, %entry ], [ %35, %call_end ]
  %34 = call i32 %27(ptr %33, ptr nonnull %0, ptr nonnull %2, i32 15, ptr nonnull %25, ptr nonnull %26)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %31, %handle_init ], [ %34, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %35 = load ptr, ptr %5, align 8
  store ptr %35, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 4096, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8909
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1219, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 4, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8909
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1220, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8909
  store i64 64, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8910
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8912
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8915
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8919
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8921
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1221, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 36864, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8924
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1255, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 36, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8924
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1256, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8924
  store i64 64, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8925
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8927
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8930
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8934
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8936
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1257, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_1_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 774400, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 131072, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8939
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1291, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 128, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8939
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1292, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8939
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8940
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8942
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8945
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8949
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8951
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1293, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_10_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 401408, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 65536, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8954
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1327, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 64, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8954
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1328, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8954
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8955
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8957
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8960
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8964
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8966
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1329, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_11_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 147456, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8969
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1363, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 144, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8969
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1364, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8969
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8970
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8972
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8975
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8979
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8981
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1365, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_12_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 401408, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 65536, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8984
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1399, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 64, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8984
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1400, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8984
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !8985
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !8987
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !8990
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !8994
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !8996
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1401, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_13_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 147456, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8999
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1435, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 144, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !8999
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1436, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !8999
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9000
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9002
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9005
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9009
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9011
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1437, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_14_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 401408, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 131072, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9014
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1471, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 128, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9014
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1472, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9014
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9015
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9017
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9020
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9024
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9026
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1473, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_15_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 589824, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9029
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1507, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9029
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1508, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9029
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9030
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9032
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9035
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9039
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9041
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1509, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_16_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 50176, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 262144, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 49, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9044
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1543, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9044
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1544, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9044
  store i64 1024, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9045
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9047
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9050
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9054
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9056
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1545, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_17_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 373248, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 524288, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9059
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1579, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9059
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1580, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9059
  store i64 1024, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9060
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9062
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9065
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9069
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9071
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1581, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_18_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 262144, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9074
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1615, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9074
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1616, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9074
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9075
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9077
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9080
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9084
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9086
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1617, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_19_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 16384, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9089
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1651, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 16, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9089
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1652, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9089
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9090
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9092
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9095
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9099
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9101
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1653, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_2_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 50176, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 589824, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 49, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9104
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1687, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9104
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1688, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9104
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9105
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9107
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9110
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9114
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9116
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1689, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_20_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 50176, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 589824, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 49, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9119
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1723, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9119
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1724, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9119
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9120
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9122
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9125
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9129
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9131
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1725, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_21_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 262144, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9134
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1759, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9134
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1760, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9134
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9135
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9137
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9140
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9144
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9146
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1761, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_22_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 524288, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9149
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1795, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9149
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1796, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9149
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 196, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9150
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9152
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9155
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9159
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9161
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1797, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_23_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 2359296, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9164
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1831, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9164
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1832, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9164
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9165
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9167
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9170
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9174
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9176
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1833, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_24_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 25088, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 1048576, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 25, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9179
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1867, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9179
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1868, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9179
  store i64 2048, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9180
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9182
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9185
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9189
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9191
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1869, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_25_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 173056, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 2097152, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 169, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9194
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1903, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9194
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1904, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9194
  store i64 2048, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9195
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9197
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9200
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9204
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9206
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1905, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_26_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 1048576, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9209
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1939, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9209
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1940, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9209
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9210
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9212
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9215
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9219
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9221
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1941, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_27_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 25088, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 2359296, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 25, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9224
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.1975, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9224
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.1976, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9224
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9225
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9227
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9230
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9234
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9236
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.1977, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_28_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 25088, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 1048576, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 25, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9239
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2011, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9239
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2012, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9239
  store i64 2048, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9240
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9242
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9245
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9249
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9251
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2013, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_29_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 16384, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9254
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2047, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 16, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9254
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2048, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9254
  store i64 256, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9255
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9257
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9260
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9264
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9266
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2049, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_3_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 1048576, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9269
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2083, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 256, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9269
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2084, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9269
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 49, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9270
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9272
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9275
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9279
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9281
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2085, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_30_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 802816, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 16384, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9284
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2119, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 16, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9284
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2120, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9284
  store i64 64, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9285
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9287
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9290
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9294
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9296
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2121, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_4_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 200704, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 36864, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 196, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9299
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2155, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 36, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9299
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2156, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9299
  store i64 64, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9300
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9302
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9305
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9309
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9311
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2157, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_5_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 802816, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 16384, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9314
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2191, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 16, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9314
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2192, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9314
  store i64 64, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9315
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9317
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9320
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9324
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9326
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2193, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_6_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 802816, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 32768, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9329
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2227, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 32, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9329
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2228, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9329
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 3136, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9330
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9332
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9335
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9339
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9341
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2229, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_7_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 401408, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 147456, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 256, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9344
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2263, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 144, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9344
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2264, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9344
  store i64 128, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9345
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9347
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9350
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9354
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9356
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2265, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_8_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_compute_(i32 %0, ptr noalias %1, ptr noalias align 64 %2, ptr noalias %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_data = tail call ptr %9(i32 2, i32 %0, i64 100352, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_data, i64 64) ]
  %10 = icmp eq ptr %packed_data, null
  br i1 %10, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %if_end19, %call_end17, %handle_init_end13, %handle_init12, %handle_init_end7, %handle_init6, %handle_init_end, %handle_init, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ -1, %if_end ], [ %22, %handle_init ], [ %25, %handle_init_end ], [ %32, %handle_init6 ], [ %35, %handle_init_end7 ], [ %58, %handle_init12 ], [ %61, %handle_init_end13 ], [ -1, %call_end17 ], [ %., %if_end19 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  %11 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %packed_kernel = tail call ptr %11(i32 2, i32 %0, i64 65536, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %packed_kernel, i64 64) ]
  %12 = icmp eq ptr %packed_kernel, null
  br i1 %12, label %common.ret, label %if_end2, !prof !18

if_end2:                                          ; preds = %if_end
  store ptr %2, ptr %1, align 8
  %13 = getelementptr inbounds %0, ptr %1, i64 1
  store ptr %packed_data, ptr %13, align 8
  %14 = getelementptr inbounds i64, ptr %1, i64 2
  store i64 98, ptr %14, align 8
  %15 = getelementptr inbounds i64, ptr %1, i64 3
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9359
  %16 = getelementptr inbounds %0, ptr %1, i64 4
  %17 = getelementptr inbounds i32, ptr %3, i64 4
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %if_end2
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2299, ptr nonnull %8)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %if_end2
  %24 = phi ptr [ %19, %if_end2 ], [ %27, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %call_end5, label %common.ret, !prof !18

call_end:                                         ; preds = %handle_init
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel, align 8
  br label %handle_init_end

call_end5:                                        ; preds = %handle_init_end
  store ptr %4, ptr %1, align 8
  store ptr %packed_kernel, ptr %13, align 8
  store i64 64, ptr %14, align 8
  store i64 1024, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %3, align 4, !tbaa !9359
  %28 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %29 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_1, align 8
  %.not32 = icmp eq ptr %29, null
  br i1 %.not32, label %handle_init6, label %handle_init_end7, !prof !55

handle_init6:                                     ; preds = %call_end5
  %30 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %31 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %32 = call i32 %31(ptr %30, ptr nonnull @.str.2300, ptr nonnull %7)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %call_end9, label %common.ret, !prof !18

handle_init_end7:                                 ; preds = %call_end9, %call_end5
  %34 = phi ptr [ %29, %call_end5 ], [ %37, %call_end9 ]
  %35 = call i32 %28(ptr %34, ptr nonnull %1, ptr nonnull %3, i32 4, ptr nonnull %16, ptr nonnull %17)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %call_end11, label %common.ret, !prof !18

call_end9:                                        ; preds = %handle_init6
  %37 = load ptr, ptr %7, align 8
  store ptr %37, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_1, align 8
  br label %handle_init_end7

call_end11:                                       ; preds = %handle_init_end7
  store ptr %5, ptr %1, align 8
  store ptr %packed_data, ptr %13, align 8
  store ptr %packed_kernel, ptr %14, align 8
  store i64 1, ptr %15, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 0>, ptr %3, align 4, !tbaa !9359
  store i64 512, ptr %16, align 8
  %38 = getelementptr inbounds i64, ptr %1, i64 5
  store i64 784, ptr %38, align 8
  %39 = getelementptr inbounds i64, ptr %1, i64 6
  store i64 1, ptr %39, align 8
  %40 = getelementptr inbounds i64, ptr %1, i64 7
  store i64 1, ptr %40, align 8
  store <4 x i32> zeroinitializer, ptr %17, align 4, !tbaa !9360
  %41 = getelementptr inbounds i64, ptr %1, i64 8
  store i64 1, ptr %41, align 8
  %42 = getelementptr inbounds i32, ptr %3, i64 8
  %43 = getelementptr inbounds i64, ptr %1, i64 9
  store i64 1, ptr %43, align 8
  %44 = getelementptr inbounds i64, ptr %1, i64 10
  store i64 1, ptr %44, align 8
  %45 = getelementptr inbounds i64, ptr %1, i64 11
  store i64 1, ptr %45, align 8
  store <4 x i32> zeroinitializer, ptr %42, align 4, !tbaa !9362
  %46 = getelementptr inbounds i64, ptr %1, i64 12
  store i64 1, ptr %46, align 8
  %47 = getelementptr inbounds i32, ptr %3, i64 12
  store i32 0, ptr %47, align 4, !tbaa !9365
  %48 = getelementptr inbounds i64, ptr %1, i64 13
  store i64 1, ptr %48, align 8
  %49 = getelementptr inbounds i32, ptr %3, i64 13
  store i32 0, ptr %49, align 4, !tbaa !9369
  %50 = getelementptr inbounds i64, ptr %1, i64 14
  store i64 1, ptr %50, align 8
  %51 = getelementptr inbounds i32, ptr %3, i64 14
  store i32 0, ptr %51, align 4, !tbaa !9371
  %52 = getelementptr inbounds %0, ptr %1, i64 15
  %53 = getelementptr inbounds i32, ptr %3, i64 15
  %54 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %55 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_2, align 8
  %.not33 = icmp eq ptr %55, null
  br i1 %.not33, label %handle_init12, label %handle_init_end13, !prof !55

handle_init12:                                    ; preds = %call_end11
  %56 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %57 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %58 = call i32 %57(ptr %56, ptr nonnull @.str.2301, ptr nonnull %6)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %call_end15, label %common.ret, !prof !18

handle_init_end13:                                ; preds = %call_end15, %call_end11
  %60 = phi ptr [ %55, %call_end11 ], [ %63, %call_end15 ]
  %61 = call i32 %54(ptr %60, ptr nonnull %1, ptr nonnull %3, i32 15, ptr nonnull %52, ptr nonnull %53)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %call_end17, label %common.ret, !prof !18

call_end15:                                       ; preds = %handle_init12
  %63 = load ptr, ptr %6, align 8
  store ptr %63, ptr @.tvm_func.tvmgen_default_fused_nn_conv2d_add_right_shift_clip_cast_9_kernel_2, align 8
  br label %handle_init_end13

call_end17:                                       ; preds = %handle_init_end13
  %64 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %65 = call i32 %64(i32 2, i32 %0, ptr nonnull %packed_kernel)
  %.not34 = icmp eq i32 %65, 0
  br i1 %.not34, label %if_end19, label %common.ret, !prof !55

if_end19:                                         ; preds = %call_end17
  %66 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %67 = call i32 %66(i32 2, i32 %0, ptr nonnull %packed_data)
  %.not35 = icmp ne i32 %67, 0
  %. = sext i1 %.not35 to i32
  br label %common.ret
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_dense_add_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %7 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds %0, ptr %0, i64 2
  store ptr %4, ptr %8, align 8
  %9 = getelementptr inbounds %0, ptr %0, i64 3
  store ptr %5, ptr %9, align 8
  store <4 x i32> <i32 3, i32 3, i32 3, i32 3>, ptr %2, align 4, !tbaa !9374
  %10 = getelementptr inbounds i64, ptr %0, i64 4
  store i64 1, ptr %10, align 8
  %11 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 0, ptr %11, align 4, !tbaa !9375
  %12 = getelementptr inbounds i64, ptr %0, i64 5
  store i64 1000, ptr %12, align 8
  %13 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 0, ptr %13, align 4, !tbaa !9379
  %14 = getelementptr inbounds i64, ptr %0, i64 6
  store i64 64, ptr %14, align 8
  %15 = getelementptr inbounds i32, ptr %2, i64 6
  store i32 0, ptr %15, align 4, !tbaa !9381
  %16 = getelementptr inbounds %0, ptr %0, i64 7
  %17 = getelementptr inbounds i32, ptr %2, i64 7
  %18 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %19 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_dense_add_kernel, align 8
  %.not = icmp eq ptr %19, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %20 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %21 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %22 = call i32 %21(ptr %20, ptr nonnull @.str.2338, ptr nonnull %6)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %24 = phi ptr [ %19, %entry ], [ %26, %call_end ]
  %25 = call i32 %18(ptr %24, ptr nonnull %0, ptr nonnull %2, i32 7, ptr nonnull %16, ptr nonnull %17)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %22, %handle_init ], [ %25, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %26 = load ptr, ptr %6, align 8
  store ptr %26, ptr @.tvm_func.tvmgen_default_fused_nn_dense_add_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 196, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !9384
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.2361, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_nn_max_pool2d_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_reshape_squeeze_compute_(ptr noalias %0, ptr noalias align 64 %1, ptr noalias %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca ptr, align 8
  store ptr %1, ptr %0, align 8
  %5 = getelementptr inbounds %0, ptr %0, i64 1
  store ptr %3, ptr %5, align 8
  %6 = getelementptr inbounds i64, ptr %0, i64 2
  store i64 2, ptr %6, align 8
  %7 = getelementptr inbounds i64, ptr %0, i64 3
  store i64 1024, ptr %7, align 8
  store <4 x i32> <i32 3, i32 3, i32 0, i32 0>, ptr %2, align 4, !tbaa !9385
  %8 = getelementptr inbounds %0, ptr %0, i64 4
  %9 = getelementptr inbounds i32, ptr %2, i64 4
  %10 = load ptr, ptr @__TVMFuncCall, align 8, !tbaa !19
  %11 = load ptr, ptr @.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel, align 8
  %.not = icmp eq ptr %11, null
  br i1 %.not, label %handle_init, label %handle_init_end, !prof !55

handle_init:                                      ; preds = %entry
  %12 = load ptr, ptr @__tvm_module_ctx, align 8, !tbaa !19
  %13 = load ptr, ptr @__TVMBackendGetFuncFromEnv, align 8, !tbaa !19
  %14 = call i32 %13(ptr %12, ptr nonnull @.str.2382, ptr nonnull %4)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %call_end, label %common.ret, !prof !18

handle_init_end:                                  ; preds = %call_end, %entry
  %16 = phi ptr [ %11, %entry ], [ %18, %call_end ]
  %17 = call i32 %10(ptr %16, ptr nonnull %0, ptr nonnull %2, i32 4, ptr nonnull %8, ptr nonnull %9)
  br label %common.ret

common.ret:                                       ; preds = %handle_init_end, %handle_init
  %common.ret.op = phi i32 [ %14, %handle_init ], [ %17, %handle_init_end ]
  ret i32 %common.ret.op

call_end:                                         ; preds = %handle_init
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr @.tvm_func.tvmgen_default_fused_reshape_squeeze_kernel, align 8
  br label %handle_init_end
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local half @__truncsfhf2(float %a0) local_unnamed_addr #3 {
b0:
  %v0 = bitcast float %a0 to i32
  %v1 = and i32 %v0, 2147483647
  %v2 = add nsw i32 %v1, -947912704
  %v3 = add nsw i32 %v1, -1199570944
  %v4 = icmp ult i32 %v2, %v3
  br i1 %v4, label %b1, label %b5

b1:                                               ; preds = %b0
  %v5 = lshr i32 %v0, 13
  %v6 = and i32 %v5, 65535
  %v7 = add nuw nsw i32 %v6, -114688
  %v8 = and i32 %v0, 8191
  %v9 = icmp ugt i32 %v8, 4096
  br i1 %v9, label %b2, label %b3

b2:                                               ; preds = %b1
  %v10 = add nuw nsw i32 %v6, -114687
  br label %b13

b3:                                               ; preds = %b1
  %v11 = icmp eq i32 %v8, 4096
  br i1 %v11, label %b4, label %b13

b4:                                               ; preds = %b3
  %v12 = and i32 %v7, 65535
  %v13 = and i32 %v5, 1
  %v14 = add nuw nsw i32 %v12, %v13
  br label %b13

b5:                                               ; preds = %b0
  %v15 = icmp ugt i32 %v1, 2139095040
  br i1 %v15, label %b6, label %b7

b6:                                               ; preds = %b5
  %v16 = lshr i32 %v0, 13
  %v17 = and i32 %v16, 511
  %v18 = or i32 %v17, 32256
  br label %b13

b7:                                               ; preds = %b5
  %v19 = icmp ugt i32 %v1, 1199570943
  br i1 %v19, label %b13, label %b8

b8:                                               ; preds = %b7
  %v20 = icmp ult i32 %v1, 754974720
  br i1 %v20, label %b13, label %b9

b9:                                               ; preds = %b8
  %v21 = lshr i32 %v1, 23
  %v22 = sub nsw i32 113, %v21
  %v23 = and i32 %v0, 8388607
  %v24 = or i32 %v23, 8388608
  %v25 = add nsw i32 %v21, -81
  %v26 = shl i32 %v24, %v25
  %v27 = icmp ne i32 %v26, 0
  %v28 = lshr i32 %v24, %v22
  %v29 = zext i1 %v27 to i32
  %v30 = lshr i32 %v28, 13
  %v31 = and i32 %v28, 8191
  %v32 = or i32 %v31, %v29
  %v33 = icmp ugt i32 %v32, 4096
  br i1 %v33, label %b10, label %b11

b10:                                              ; preds = %b9
  %v34 = add nuw nsw i32 %v30, 1
  br label %b13

b11:                                              ; preds = %b9
  %v35 = icmp eq i32 %v32, 4096
  br i1 %v35, label %b12, label %b13

b12:                                              ; preds = %b11
  %v36 = and i32 %v30, 1
  %v37 = add nuw nsw i32 %v36, %v30
  br label %b13

b13:                                              ; preds = %b12, %b11, %b10, %b8, %b7, %b6, %b4, %b3, %b2
  %v38 = phi i32 [ %v18, %b6 ], [ %v10, %b2 ], [ %v14, %b4 ], [ %v7, %b3 ], [ 31744, %b7 ], [ 0, %b8 ], [ %v34, %b10 ], [ %v37, %b12 ], [ %v30, %b11 ]
  %v39 = lshr i32 %v0, 16
  %v40 = and i32 %v39, 32768
  %v41 = or i32 %v38, %v40
  %vlast = trunc i32 %v41 to i16
  %vres = bitcast i16 %vlast to half
  ret half %vres
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local float @__extendhfsf2(half %a0) local_unnamed_addr #3 {
b0:
  %vinp = bitcast half %a0 to i16
  %v1 = and i16 %vinp, 32767
  %v2 = zext i16 %v1 to i32
  %v3 = add nsw i16 %v1, -1024
  %v4 = icmp ult i16 %v3, 30720
  br i1 %v4, label %b1, label %b2

b1:                                               ; preds = %b0
  %v5 = shl nuw nsw i32 %v2, 13
  %v6 = add nuw nsw i32 %v5, 939524096
  br label %b6

b2:                                               ; preds = %b0
  %v7 = icmp ugt i16 %v1, 31743
  br i1 %v7, label %b3, label %b4

b3:                                               ; preds = %b2
  %v8 = shl nuw nsw i32 %v2, 13
  %v9 = or i32 %v8, 2139095040
  br label %b6

b4:                                               ; preds = %b2
  %v10 = icmp eq i16 %v1, 0
  br i1 %v10, label %b6, label %b5

b5:                                               ; preds = %b4
  %v11 = icmp ult i16 %v1, 256
  %v12 = lshr i32 %v2, 8
  %v13 = select i1 %v11, i32 %v2, i32 %v12
  %v14 = select i1 %v11, i32 32, i32 24
  %v15 = icmp ult i32 %v13, 16
  %v16 = lshr i32 %v13, 4
  %v17 = add nsw i32 %v14, -4
  %v18 = select i1 %v15, i32 %v13, i32 %v16
  %v19 = select i1 %v15, i32 %v14, i32 %v17
  %v20 = icmp ult i32 %v18, 4
  %v21 = lshr i32 %v18, 2
  %v22 = add nsw i32 %v19, -2
  %v23 = select i1 %v20, i32 %v18, i32 %v21
  %v24 = select i1 %v20, i32 %v19, i32 %v22
  %v25 = icmp ult i32 %v23, 2
  %v26 = sub nsw i32 0, %v23
  %v27 = select i1 %v25, i32 %v26, i32 -2
  %v28 = add nsw i32 %v27, %v24
  %v29 = add nsw i32 %v28, -8
  %v30 = shl i32 %v2, %v29
  %v31 = xor i32 %v30, 8388608
  %v32 = shl i32 %v28, 23
  %v33 = sub i32 1124073472, %v32
  %v34 = or i32 %v31, %v33
  br label %b6

b6:                                               ; preds = %b5, %b4, %b3, %b1
  %v35 = phi i32 [ %v6, %b1 ], [ %v9, %b3 ], [ %v34, %b5 ], [ 0, %b4 ]
  %v36 = and i16 %vinp, -32768
  %v37 = zext i16 %v36 to i32
  %v38 = shl nuw i32 %v37, 16
  %v39 = or i32 %v35, %v38
  %v40 = bitcast i32 %v39 to float
  ret float %v40
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

attributes #0 = { "target-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #2 = { noinline "target-cpu"="generic" }
attributes #3 = { nofree nosync nounwind memory(none) "target-cpu"="generic" "target-features" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "TVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "main.tir", directory: ".")
!2 = !{i32 2, !"tvm_target", !"llvm -mtriple=x86_64-pc-windows-msvc"}
!3 = !{i32 4, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !8, !9, !7, !8, !9, !8}
!7 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7)
!10 = !{!11, !12, !13, !14, !15, !16}
!11 = !DILocalVariable(name: "arg1", arg: 1, scope: !4, file: !1, type: !8)
!12 = !DILocalVariable(name: "arg2", arg: 2, scope: !4, file: !1, type: !9)
!13 = !DILocalVariable(name: "arg3", arg: 3, scope: !4, file: !1, type: !7)
!14 = !DILocalVariable(name: "arg4", arg: 4, scope: !4, file: !1, type: !8)
!15 = !DILocalVariable(name: "arg5", arg: 5, scope: !4, file: !1, type: !9)
!16 = !DILocalVariable(name: "arg6", arg: 6, scope: !4, file: !1, type: !8)
!17 = !DILocation(line: 0, scope: !4)
!18 = !{!"branch_weights", i32 1048576, i32 1}
!19 = !{!20, !20, i64 0}
!20 = !{!"ctx_ptr", !21, i64 0}
!21 = !{!"tvm-tbaa"}
!22 = !{!23, !23, i64 0}
!23 = !{!"0000017C1AB03EB0.w4.b0", !24, i64 0}
!24 = !{!"0000017C1AB03EB0.w8.b0", !25, i64 0}
!25 = !{!"0000017C1AB03EB0.w16.b0", !26, i64 0}
!26 = !{!"0000017C1AB03EB0.w32.b0", !27, i64 0}
!27 = !{!"0000017C1AB03EB0.w64.b0", !28, i64 0}
!28 = !{!"0000017C1AB03EB0.w128.b0", !29, i64 0}
!29 = !{!"0000017C1AB03EB0.w256.b0", !30, i64 0}
!30 = !{!"0000017C1AB03EB0.w512.b0", !31, i64 0}
!31 = !{!"0000017C1AB03EB0.w1024.b0", !32, i64 0}
!32 = !{!"0000017C1AB03EB0", !21, i64 0}
!33 = !{!34, !34, i64 0}
!34 = !{!"0000017C1AB03EB0.w4.b4", !24, i64 0}
!35 = !{!36, !36, i64 0}
!36 = !{!"0000017C1AB03EB0.w4.b8", !37, i64 0}
!37 = !{!"0000017C1AB03EB0.w8.b8", !25, i64 0}
!38 = !{!39, !39, i64 0}
!39 = !{!"0000017C1AB0D830.w8.b0", !40, i64 0}
!40 = !{!"0000017C1AB0D830.w16.b0", !41, i64 0}
!41 = !{!"0000017C1AB0D830.w32.b0", !42, i64 0}
!42 = !{!"0000017C1AB0D830.w64.b0", !43, i64 0}
!43 = !{!"0000017C1AB0D830.w128.b0", !44, i64 0}
!44 = !{!"0000017C1AB0D830.w256.b0", !45, i64 0}
!45 = !{!"0000017C1AB0D830.w512.b0", !46, i64 0}
!46 = !{!"0000017C1AB0D830.w1024.b0", !47, i64 0}
!47 = !{!"0000017C1AB0D830", !21, i64 0}
!48 = !{!49, !49, i64 0}
!49 = !{!"0000017C1AB0D830.w8.b8", !40, i64 0}
!50 = !{!51, !51, i64 0}
!51 = !{!"0000017C1AB0D830.w8.b16", !52, i64 0}
!52 = !{!"0000017C1AB0D830.w16.b16", !41, i64 0}
!53 = !{!54, !54, i64 0}
!54 = !{!"0000017C1AB0D830.w8.b24", !52, i64 0}
!55 = !{!"branch_weights", i32 1, i32 1048576}
!56 = !{!57, !57, i64 0}
!57 = !{!"0000017C1AB0E430.w8.b8", !58, i64 0}
!58 = !{!"0000017C1AB0E430.w16.b0", !59, i64 0}
!59 = !{!"0000017C1AB0E430.w32.b0", !60, i64 0}
!60 = !{!"0000017C1AB0E430.w64.b0", !61, i64 0}
!61 = !{!"0000017C1AB0E430.w128.b0", !62, i64 0}
!62 = !{!"0000017C1AB0E430.w256.b0", !63, i64 0}
!63 = !{!"0000017C1AB0E430.w512.b0", !64, i64 0}
!64 = !{!"0000017C1AB0E430.w1024.b0", !65, i64 0}
!65 = !{!"0000017C1AB0E430", !21, i64 0}
!66 = !{!67, !67, i64 0}
!67 = !{!"0000017C1AB0E430.w8.b16", !68, i64 0}
!68 = !{!"0000017C1AB0E430.w16.b16", !59, i64 0}
!69 = !{!70, !70, i64 0}
!70 = !{!"0000017C1AB0E430.w8.b24", !68, i64 0}
!71 = !{!72, !72, i64 0}
!72 = !{!"0000017C1AAF0F30.w8.b0", !73, i64 0}
!73 = !{!"0000017C1AAF0F30.w16.b0", !74, i64 0}
!74 = !{!"0000017C1AAF0F30.w32.b0", !75, i64 0}
!75 = !{!"0000017C1AAF0F30.w64.b0", !76, i64 0}
!76 = !{!"0000017C1AAF0F30.w128.b0", !77, i64 0}
!77 = !{!"0000017C1AAF0F30.w256.b0", !78, i64 0}
!78 = !{!"0000017C1AAF0F30.w512.b0", !79, i64 0}
!79 = !{!"0000017C1AAF0F30.w1024.b0", !80, i64 0}
!80 = !{!"0000017C1AAF0F30", !21, i64 0}
!81 = !{!82, !82, i64 0}
!82 = !{!"0000017C1AAF0F30.w8.b8", !73, i64 0}
!83 = !{!84, !84, i64 0}
!84 = !{!"0000017C1AAF0F30.w8.b16", !85, i64 0}
!85 = !{!"0000017C1AAF0F30.w16.b16", !74, i64 0}
!86 = !{!87, !87, i64 0}
!87 = !{!"0000017C1AAF0F30.w8.b24", !85, i64 0}
!88 = !{!89, !89, i64 0}
!89 = !{!"0000017C1AAF0B30.w8.b8", !90, i64 0}
!90 = !{!"0000017C1AAF0B30.w16.b0", !91, i64 0}
!91 = !{!"0000017C1AAF0B30.w32.b0", !92, i64 0}
!92 = !{!"0000017C1AAF0B30.w64.b0", !93, i64 0}
!93 = !{!"0000017C1AAF0B30.w128.b0", !94, i64 0}
!94 = !{!"0000017C1AAF0B30.w256.b0", !95, i64 0}
!95 = !{!"0000017C1AAF0B30.w512.b0", !96, i64 0}
!96 = !{!"0000017C1AAF0B30.w1024.b0", !97, i64 0}
!97 = !{!"0000017C1AAF0B30", !21, i64 0}
!98 = !{!99, !99, i64 0}
!99 = !{!"0000017C1AAF0B30.w8.b16", !100, i64 0}
!100 = !{!"0000017C1AAF0B30.w16.b16", !91, i64 0}
!101 = !{!102, !102, i64 0}
!102 = !{!"0000017C1AAF0B30.w8.b24", !100, i64 0}
!103 = !{!104, !104, i64 0}
!104 = !{!"0000017C1AAF15B0.w8.b0", !105, i64 0}
!105 = !{!"0000017C1AAF15B0.w16.b0", !106, i64 0}
!106 = !{!"0000017C1AAF15B0.w32.b0", !107, i64 0}
!107 = !{!"0000017C1AAF15B0.w64.b0", !108, i64 0}
!108 = !{!"0000017C1AAF15B0.w128.b0", !109, i64 0}
!109 = !{!"0000017C1AAF15B0.w256.b0", !110, i64 0}
!110 = !{!"0000017C1AAF15B0.w512.b0", !111, i64 0}
!111 = !{!"0000017C1AAF15B0.w1024.b0", !112, i64 0}
!112 = !{!"0000017C1AAF15B0", !21, i64 0}
!113 = !{!114, !114, i64 0}
!114 = !{!"0000017C1AAF15B0.w8.b8", !105, i64 0}
!115 = !{!116, !116, i64 0}
!116 = !{!"0000017C1AAF15B0.w8.b16", !117, i64 0}
!117 = !{!"0000017C1AAF15B0.w16.b16", !106, i64 0}
!118 = !{!119, !119, i64 0}
!119 = !{!"0000017C1AAF15B0.w8.b24", !117, i64 0}
!120 = !{!121, !121, i64 0}
!121 = !{!"0000017C1AAF1EF0.w8.b8", !122, i64 0}
!122 = !{!"0000017C1AAF1EF0.w16.b0", !123, i64 0}
!123 = !{!"0000017C1AAF1EF0.w32.b0", !124, i64 0}
!124 = !{!"0000017C1AAF1EF0.w64.b0", !125, i64 0}
!125 = !{!"0000017C1AAF1EF0.w128.b0", !126, i64 0}
!126 = !{!"0000017C1AAF1EF0.w256.b0", !127, i64 0}
!127 = !{!"0000017C1AAF1EF0.w512.b0", !128, i64 0}
!128 = !{!"0000017C1AAF1EF0.w1024.b0", !129, i64 0}
!129 = !{!"0000017C1AAF1EF0", !21, i64 0}
!130 = !{!131, !131, i64 0}
!131 = !{!"0000017C1AAF1EF0.w8.b16", !132, i64 0}
!132 = !{!"0000017C1AAF1EF0.w16.b16", !123, i64 0}
!133 = !{!134, !134, i64 0}
!134 = !{!"0000017C1AAF1EF0.w8.b24", !132, i64 0}
!135 = !{!136, !136, i64 0}
!136 = !{!"0000017C2E567760.w4.b0", !137, i64 0}
!137 = !{!"0000017C2E567760.w8.b0", !138, i64 0}
!138 = !{!"0000017C2E567760.w16.b0", !139, i64 0}
!139 = !{!"0000017C2E567760.w32.b0", !140, i64 0}
!140 = !{!"0000017C2E567760.w64.b0", !141, i64 0}
!141 = !{!"0000017C2E567760.w128.b0", !142, i64 0}
!142 = !{!"0000017C2E567760.w256.b0", !143, i64 0}
!143 = !{!"0000017C2E567760.w512.b0", !144, i64 0}
!144 = !{!"0000017C2E567760.w1024.b0", !145, i64 0}
!145 = !{!"0000017C2E567760", !21, i64 0}
!146 = !{!147, !147, i64 0}
!147 = !{!"0000017C2E567760.w4.b4", !137, i64 0}
!148 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !149)
!149 = !{!150, !151, !152, !153, !154, !155}
!150 = !DILocalVariable(name: "arg1", arg: 1, scope: !148, file: !1, type: !8)
!151 = !DILocalVariable(name: "arg2", arg: 2, scope: !148, file: !1, type: !9)
!152 = !DILocalVariable(name: "arg3", arg: 3, scope: !148, file: !1, type: !7)
!153 = !DILocalVariable(name: "arg4", arg: 4, scope: !148, file: !1, type: !8)
!154 = !DILocalVariable(name: "arg5", arg: 5, scope: !148, file: !1, type: !9)
!155 = !DILocalVariable(name: "arg6", arg: 6, scope: !148, file: !1, type: !8)
!156 = !DILocation(line: 0, scope: !148)
!157 = !{!158, !158, i64 0}
!158 = !{!"0000017C2E2F97B0.w4.b0", !159, i64 0}
!159 = !{!"0000017C2E2F97B0.w8.b0", !160, i64 0}
!160 = !{!"0000017C2E2F97B0.w16.b0", !161, i64 0}
!161 = !{!"0000017C2E2F97B0.w32.b0", !162, i64 0}
!162 = !{!"0000017C2E2F97B0.w64.b0", !163, i64 0}
!163 = !{!"0000017C2E2F97B0.w128.b0", !164, i64 0}
!164 = !{!"0000017C2E2F97B0.w256.b0", !165, i64 0}
!165 = !{!"0000017C2E2F97B0.w512.b0", !166, i64 0}
!166 = !{!"0000017C2E2F97B0.w1024.b0", !167, i64 0}
!167 = !{!"0000017C2E2F97B0", !21, i64 0}
!168 = !{!169, !169, i64 0}
!169 = !{!"0000017C2E2F97B0.w4.b4", !159, i64 0}
!170 = !{!171, !171, i64 0}
!171 = !{!"0000017C2E2F97B0.w4.b8", !172, i64 0}
!172 = !{!"0000017C2E2F97B0.w8.b8", !160, i64 0}
!173 = !{!174, !174, i64 0}
!174 = !{!"0000017C2E2FF4B0.w8.b0", !175, i64 0}
!175 = !{!"0000017C2E2FF4B0.w16.b0", !176, i64 0}
!176 = !{!"0000017C2E2FF4B0.w32.b0", !177, i64 0}
!177 = !{!"0000017C2E2FF4B0.w64.b0", !178, i64 0}
!178 = !{!"0000017C2E2FF4B0.w128.b0", !179, i64 0}
!179 = !{!"0000017C2E2FF4B0.w256.b0", !180, i64 0}
!180 = !{!"0000017C2E2FF4B0.w512.b0", !181, i64 0}
!181 = !{!"0000017C2E2FF4B0.w1024.b0", !182, i64 0}
!182 = !{!"0000017C2E2FF4B0", !21, i64 0}
!183 = !{!184, !184, i64 0}
!184 = !{!"0000017C2E2FF4B0.w8.b8", !175, i64 0}
!185 = !{!186, !186, i64 0}
!186 = !{!"0000017C2E2FF4B0.w8.b16", !187, i64 0}
!187 = !{!"0000017C2E2FF4B0.w16.b16", !176, i64 0}
!188 = !{!189, !189, i64 0}
!189 = !{!"0000017C2E2FF4B0.w8.b24", !187, i64 0}
!190 = !{!191, !191, i64 0}
!191 = !{!"0000017C2E2FFAB0.w8.b8", !192, i64 0}
!192 = !{!"0000017C2E2FFAB0.w16.b0", !193, i64 0}
!193 = !{!"0000017C2E2FFAB0.w32.b0", !194, i64 0}
!194 = !{!"0000017C2E2FFAB0.w64.b0", !195, i64 0}
!195 = !{!"0000017C2E2FFAB0.w128.b0", !196, i64 0}
!196 = !{!"0000017C2E2FFAB0.w256.b0", !197, i64 0}
!197 = !{!"0000017C2E2FFAB0.w512.b0", !198, i64 0}
!198 = !{!"0000017C2E2FFAB0.w1024.b0", !199, i64 0}
!199 = !{!"0000017C2E2FFAB0", !21, i64 0}
!200 = !{!201, !201, i64 0}
!201 = !{!"0000017C2E2FFAB0.w8.b16", !202, i64 0}
!202 = !{!"0000017C2E2FFAB0.w16.b16", !193, i64 0}
!203 = !{!204, !204, i64 0}
!204 = !{!"0000017C2E2FFAB0.w8.b24", !202, i64 0}
!205 = !{!206, !206, i64 0}
!206 = !{!"0000017C2E300170.w8.b0", !207, i64 0}
!207 = !{!"0000017C2E300170.w16.b0", !208, i64 0}
!208 = !{!"0000017C2E300170.w32.b0", !209, i64 0}
!209 = !{!"0000017C2E300170.w64.b0", !210, i64 0}
!210 = !{!"0000017C2E300170.w128.b0", !211, i64 0}
!211 = !{!"0000017C2E300170.w256.b0", !212, i64 0}
!212 = !{!"0000017C2E300170.w512.b0", !213, i64 0}
!213 = !{!"0000017C2E300170.w1024.b0", !214, i64 0}
!214 = !{!"0000017C2E300170", !21, i64 0}
!215 = !{!216, !216, i64 0}
!216 = !{!"0000017C2E300170.w8.b8", !207, i64 0}
!217 = !{!218, !218, i64 0}
!218 = !{!"0000017C2E300170.w8.b16", !219, i64 0}
!219 = !{!"0000017C2E300170.w16.b16", !208, i64 0}
!220 = !{!221, !221, i64 0}
!221 = !{!"0000017C2E300170.w8.b24", !219, i64 0}
!222 = !{!223, !223, i64 0}
!223 = !{!"0000017C2E3001F0.w8.b8", !224, i64 0}
!224 = !{!"0000017C2E3001F0.w16.b0", !225, i64 0}
!225 = !{!"0000017C2E3001F0.w32.b0", !226, i64 0}
!226 = !{!"0000017C2E3001F0.w64.b0", !227, i64 0}
!227 = !{!"0000017C2E3001F0.w128.b0", !228, i64 0}
!228 = !{!"0000017C2E3001F0.w256.b0", !229, i64 0}
!229 = !{!"0000017C2E3001F0.w512.b0", !230, i64 0}
!230 = !{!"0000017C2E3001F0.w1024.b0", !231, i64 0}
!231 = !{!"0000017C2E3001F0", !21, i64 0}
!232 = !{!233, !233, i64 0}
!233 = !{!"0000017C2E3001F0.w8.b16", !234, i64 0}
!234 = !{!"0000017C2E3001F0.w16.b16", !225, i64 0}
!235 = !{!236, !236, i64 0}
!236 = !{!"0000017C2E3001F0.w8.b24", !234, i64 0}
!237 = !{!238, !238, i64 0}
!238 = !{!"0000017C2E3015F0.w8.b0", !239, i64 0}
!239 = !{!"0000017C2E3015F0.w16.b0", !240, i64 0}
!240 = !{!"0000017C2E3015F0.w32.b0", !241, i64 0}
!241 = !{!"0000017C2E3015F0.w64.b0", !242, i64 0}
!242 = !{!"0000017C2E3015F0.w128.b0", !243, i64 0}
!243 = !{!"0000017C2E3015F0.w256.b0", !244, i64 0}
!244 = !{!"0000017C2E3015F0.w512.b0", !245, i64 0}
!245 = !{!"0000017C2E3015F0.w1024.b0", !246, i64 0}
!246 = !{!"0000017C2E3015F0", !21, i64 0}
!247 = !{!248, !248, i64 0}
!248 = !{!"0000017C2E3015F0.w8.b8", !239, i64 0}
!249 = !{!250, !250, i64 0}
!250 = !{!"0000017C2E3015F0.w8.b16", !251, i64 0}
!251 = !{!"0000017C2E3015F0.w16.b16", !240, i64 0}
!252 = !{!253, !253, i64 0}
!253 = !{!"0000017C2E3015F0.w8.b24", !251, i64 0}
!254 = !{!255, !255, i64 0}
!255 = !{!"0000017C2E3020B0.w8.b8", !256, i64 0}
!256 = !{!"0000017C2E3020B0.w16.b0", !257, i64 0}
!257 = !{!"0000017C2E3020B0.w32.b0", !258, i64 0}
!258 = !{!"0000017C2E3020B0.w64.b0", !259, i64 0}
!259 = !{!"0000017C2E3020B0.w128.b0", !260, i64 0}
!260 = !{!"0000017C2E3020B0.w256.b0", !261, i64 0}
!261 = !{!"0000017C2E3020B0.w512.b0", !262, i64 0}
!262 = !{!"0000017C2E3020B0.w1024.b0", !263, i64 0}
!263 = !{!"0000017C2E3020B0", !21, i64 0}
!264 = !{!265, !265, i64 0}
!265 = !{!"0000017C2E3020B0.w8.b16", !266, i64 0}
!266 = !{!"0000017C2E3020B0.w16.b16", !257, i64 0}
!267 = !{!268, !268, i64 0}
!268 = !{!"0000017C2E3020B0.w8.b24", !266, i64 0}
!269 = !{!270, !270, i64 0}
!270 = !{!"0000017C2E4953F0.w4.b0", !271, i64 0}
!271 = !{!"0000017C2E4953F0.w8.b0", !272, i64 0}
!272 = !{!"0000017C2E4953F0.w16.b0", !273, i64 0}
!273 = !{!"0000017C2E4953F0.w32.b0", !274, i64 0}
!274 = !{!"0000017C2E4953F0.w64.b0", !275, i64 0}
!275 = !{!"0000017C2E4953F0.w128.b0", !276, i64 0}
!276 = !{!"0000017C2E4953F0.w256.b0", !277, i64 0}
!277 = !{!"0000017C2E4953F0.w512.b0", !278, i64 0}
!278 = !{!"0000017C2E4953F0.w1024.b0", !279, i64 0}
!279 = !{!"0000017C2E4953F0", !21, i64 0}
!280 = !{!281, !281, i64 0}
!281 = !{!"0000017C2E4953F0.w4.b4", !271, i64 0}
!282 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !283)
!283 = !{!284, !285, !286, !287, !288, !289}
!284 = !DILocalVariable(name: "arg1", arg: 1, scope: !282, file: !1, type: !8)
!285 = !DILocalVariable(name: "arg2", arg: 2, scope: !282, file: !1, type: !9)
!286 = !DILocalVariable(name: "arg3", arg: 3, scope: !282, file: !1, type: !7)
!287 = !DILocalVariable(name: "arg4", arg: 4, scope: !282, file: !1, type: !8)
!288 = !DILocalVariable(name: "arg5", arg: 5, scope: !282, file: !1, type: !9)
!289 = !DILocalVariable(name: "arg6", arg: 6, scope: !282, file: !1, type: !8)
!290 = !DILocation(line: 0, scope: !282)
!291 = !{!292, !292, i64 0}
!292 = !{!"0000017C2E3BDBF0.w4.b0", !293, i64 0}
!293 = !{!"0000017C2E3BDBF0.w8.b0", !294, i64 0}
!294 = !{!"0000017C2E3BDBF0.w16.b0", !295, i64 0}
!295 = !{!"0000017C2E3BDBF0.w32.b0", !296, i64 0}
!296 = !{!"0000017C2E3BDBF0.w64.b0", !297, i64 0}
!297 = !{!"0000017C2E3BDBF0.w128.b0", !298, i64 0}
!298 = !{!"0000017C2E3BDBF0.w256.b0", !299, i64 0}
!299 = !{!"0000017C2E3BDBF0.w512.b0", !300, i64 0}
!300 = !{!"0000017C2E3BDBF0.w1024.b0", !301, i64 0}
!301 = !{!"0000017C2E3BDBF0", !21, i64 0}
!302 = !{!303, !303, i64 0}
!303 = !{!"0000017C2E3BDBF0.w4.b4", !293, i64 0}
!304 = !{!305, !305, i64 0}
!305 = !{!"0000017C2E3BDBF0.w4.b8", !306, i64 0}
!306 = !{!"0000017C2E3BDBF0.w8.b8", !294, i64 0}
!307 = !{!308, !308, i64 0}
!308 = !{!"0000017C2E3C50F0.w8.b0", !309, i64 0}
!309 = !{!"0000017C2E3C50F0.w16.b0", !310, i64 0}
!310 = !{!"0000017C2E3C50F0.w32.b0", !311, i64 0}
!311 = !{!"0000017C2E3C50F0.w64.b0", !312, i64 0}
!312 = !{!"0000017C2E3C50F0.w128.b0", !313, i64 0}
!313 = !{!"0000017C2E3C50F0.w256.b0", !314, i64 0}
!314 = !{!"0000017C2E3C50F0.w512.b0", !315, i64 0}
!315 = !{!"0000017C2E3C50F0.w1024.b0", !316, i64 0}
!316 = !{!"0000017C2E3C50F0", !21, i64 0}
!317 = !{!318, !318, i64 0}
!318 = !{!"0000017C2E3C50F0.w8.b8", !309, i64 0}
!319 = !{!320, !320, i64 0}
!320 = !{!"0000017C2E3C50F0.w8.b16", !321, i64 0}
!321 = !{!"0000017C2E3C50F0.w16.b16", !310, i64 0}
!322 = !{!323, !323, i64 0}
!323 = !{!"0000017C2E3C50F0.w8.b24", !321, i64 0}
!324 = !{!325, !325, i64 0}
!325 = !{!"0000017C2E3C4CB0.w8.b8", !326, i64 0}
!326 = !{!"0000017C2E3C4CB0.w16.b0", !327, i64 0}
!327 = !{!"0000017C2E3C4CB0.w32.b0", !328, i64 0}
!328 = !{!"0000017C2E3C4CB0.w64.b0", !329, i64 0}
!329 = !{!"0000017C2E3C4CB0.w128.b0", !330, i64 0}
!330 = !{!"0000017C2E3C4CB0.w256.b0", !331, i64 0}
!331 = !{!"0000017C2E3C4CB0.w512.b0", !332, i64 0}
!332 = !{!"0000017C2E3C4CB0.w1024.b0", !333, i64 0}
!333 = !{!"0000017C2E3C4CB0", !21, i64 0}
!334 = !{!335, !335, i64 0}
!335 = !{!"0000017C2E3C4CB0.w8.b16", !336, i64 0}
!336 = !{!"0000017C2E3C4CB0.w16.b16", !327, i64 0}
!337 = !{!338, !338, i64 0}
!338 = !{!"0000017C2E3C4CB0.w8.b24", !336, i64 0}
!339 = !{!340, !340, i64 0}
!340 = !{!"0000017C2E3C4970.w8.b0", !341, i64 0}
!341 = !{!"0000017C2E3C4970.w16.b0", !342, i64 0}
!342 = !{!"0000017C2E3C4970.w32.b0", !343, i64 0}
!343 = !{!"0000017C2E3C4970.w64.b0", !344, i64 0}
!344 = !{!"0000017C2E3C4970.w128.b0", !345, i64 0}
!345 = !{!"0000017C2E3C4970.w256.b0", !346, i64 0}
!346 = !{!"0000017C2E3C4970.w512.b0", !347, i64 0}
!347 = !{!"0000017C2E3C4970.w1024.b0", !348, i64 0}
!348 = !{!"0000017C2E3C4970", !21, i64 0}
!349 = !{!350, !350, i64 0}
!350 = !{!"0000017C2E3C4970.w8.b8", !341, i64 0}
!351 = !{!352, !352, i64 0}
!352 = !{!"0000017C2E3C4970.w8.b16", !353, i64 0}
!353 = !{!"0000017C2E3C4970.w16.b16", !342, i64 0}
!354 = !{!355, !355, i64 0}
!355 = !{!"0000017C2E3C4970.w8.b24", !353, i64 0}
!356 = !{!357, !357, i64 0}
!357 = !{!"0000017C2E3C54B0.w8.b8", !358, i64 0}
!358 = !{!"0000017C2E3C54B0.w16.b0", !359, i64 0}
!359 = !{!"0000017C2E3C54B0.w32.b0", !360, i64 0}
!360 = !{!"0000017C2E3C54B0.w64.b0", !361, i64 0}
!361 = !{!"0000017C2E3C54B0.w128.b0", !362, i64 0}
!362 = !{!"0000017C2E3C54B0.w256.b0", !363, i64 0}
!363 = !{!"0000017C2E3C54B0.w512.b0", !364, i64 0}
!364 = !{!"0000017C2E3C54B0.w1024.b0", !365, i64 0}
!365 = !{!"0000017C2E3C54B0", !21, i64 0}
!366 = !{!367, !367, i64 0}
!367 = !{!"0000017C2E3C54B0.w8.b16", !368, i64 0}
!368 = !{!"0000017C2E3C54B0.w16.b16", !359, i64 0}
!369 = !{!370, !370, i64 0}
!370 = !{!"0000017C2E3C54B0.w8.b24", !368, i64 0}
!371 = !{!372, !372, i64 0}
!372 = !{!"0000017C2E3C59F0.w8.b0", !373, i64 0}
!373 = !{!"0000017C2E3C59F0.w16.b0", !374, i64 0}
!374 = !{!"0000017C2E3C59F0.w32.b0", !375, i64 0}
!375 = !{!"0000017C2E3C59F0.w64.b0", !376, i64 0}
!376 = !{!"0000017C2E3C59F0.w128.b0", !377, i64 0}
!377 = !{!"0000017C2E3C59F0.w256.b0", !378, i64 0}
!378 = !{!"0000017C2E3C59F0.w512.b0", !379, i64 0}
!379 = !{!"0000017C2E3C59F0.w1024.b0", !380, i64 0}
!380 = !{!"0000017C2E3C59F0", !21, i64 0}
!381 = !{!382, !382, i64 0}
!382 = !{!"0000017C2E3C59F0.w8.b8", !373, i64 0}
!383 = !{!384, !384, i64 0}
!384 = !{!"0000017C2E3C59F0.w8.b16", !385, i64 0}
!385 = !{!"0000017C2E3C59F0.w16.b16", !374, i64 0}
!386 = !{!387, !387, i64 0}
!387 = !{!"0000017C2E3C59F0.w8.b24", !385, i64 0}
!388 = !{!389, !389, i64 0}
!389 = !{!"0000017C2E3C61B0.w8.b8", !390, i64 0}
!390 = !{!"0000017C2E3C61B0.w16.b0", !391, i64 0}
!391 = !{!"0000017C2E3C61B0.w32.b0", !392, i64 0}
!392 = !{!"0000017C2E3C61B0.w64.b0", !393, i64 0}
!393 = !{!"0000017C2E3C61B0.w128.b0", !394, i64 0}
!394 = !{!"0000017C2E3C61B0.w256.b0", !395, i64 0}
!395 = !{!"0000017C2E3C61B0.w512.b0", !396, i64 0}
!396 = !{!"0000017C2E3C61B0.w1024.b0", !397, i64 0}
!397 = !{!"0000017C2E3C61B0", !21, i64 0}
!398 = !{!399, !399, i64 0}
!399 = !{!"0000017C2E3C61B0.w8.b16", !400, i64 0}
!400 = !{!"0000017C2E3C61B0.w16.b16", !391, i64 0}
!401 = !{!402, !402, i64 0}
!402 = !{!"0000017C2E3C61B0.w8.b24", !400, i64 0}
!403 = !{!404, !404, i64 0}
!404 = !{!"0000017C2E3C0BB0.w4.b0", !405, i64 0}
!405 = !{!"0000017C2E3C0BB0.w8.b0", !406, i64 0}
!406 = !{!"0000017C2E3C0BB0.w16.b0", !407, i64 0}
!407 = !{!"0000017C2E3C0BB0.w32.b0", !408, i64 0}
!408 = !{!"0000017C2E3C0BB0.w64.b0", !409, i64 0}
!409 = !{!"0000017C2E3C0BB0.w128.b0", !410, i64 0}
!410 = !{!"0000017C2E3C0BB0.w256.b0", !411, i64 0}
!411 = !{!"0000017C2E3C0BB0.w512.b0", !412, i64 0}
!412 = !{!"0000017C2E3C0BB0.w1024.b0", !413, i64 0}
!413 = !{!"0000017C2E3C0BB0", !21, i64 0}
!414 = !{!415, !415, i64 0}
!415 = !{!"0000017C2E3C0BB0.w4.b4", !405, i64 0}
!416 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !417)
!417 = !{!418, !419, !420, !421, !422, !423}
!418 = !DILocalVariable(name: "arg1", arg: 1, scope: !416, file: !1, type: !8)
!419 = !DILocalVariable(name: "arg2", arg: 2, scope: !416, file: !1, type: !9)
!420 = !DILocalVariable(name: "arg3", arg: 3, scope: !416, file: !1, type: !7)
!421 = !DILocalVariable(name: "arg4", arg: 4, scope: !416, file: !1, type: !8)
!422 = !DILocalVariable(name: "arg5", arg: 5, scope: !416, file: !1, type: !9)
!423 = !DILocalVariable(name: "arg6", arg: 6, scope: !416, file: !1, type: !8)
!424 = !DILocation(line: 0, scope: !416)
!425 = !{!426, !426, i64 0}
!426 = !{!"0000017C2E499BF0.w4.b0", !427, i64 0}
!427 = !{!"0000017C2E499BF0.w8.b0", !428, i64 0}
!428 = !{!"0000017C2E499BF0.w16.b0", !429, i64 0}
!429 = !{!"0000017C2E499BF0.w32.b0", !430, i64 0}
!430 = !{!"0000017C2E499BF0.w64.b0", !431, i64 0}
!431 = !{!"0000017C2E499BF0.w128.b0", !432, i64 0}
!432 = !{!"0000017C2E499BF0.w256.b0", !433, i64 0}
!433 = !{!"0000017C2E499BF0.w512.b0", !434, i64 0}
!434 = !{!"0000017C2E499BF0.w1024.b0", !435, i64 0}
!435 = !{!"0000017C2E499BF0", !21, i64 0}
!436 = !{!437, !437, i64 0}
!437 = !{!"0000017C2E499BF0.w4.b4", !427, i64 0}
!438 = !{!439, !439, i64 0}
!439 = !{!"0000017C2E499BF0.w4.b8", !440, i64 0}
!440 = !{!"0000017C2E499BF0.w8.b8", !428, i64 0}
!441 = !{!442, !442, i64 0}
!442 = !{!"0000017C2E49EF30.w8.b0", !443, i64 0}
!443 = !{!"0000017C2E49EF30.w16.b0", !444, i64 0}
!444 = !{!"0000017C2E49EF30.w32.b0", !445, i64 0}
!445 = !{!"0000017C2E49EF30.w64.b0", !446, i64 0}
!446 = !{!"0000017C2E49EF30.w128.b0", !447, i64 0}
!447 = !{!"0000017C2E49EF30.w256.b0", !448, i64 0}
!448 = !{!"0000017C2E49EF30.w512.b0", !449, i64 0}
!449 = !{!"0000017C2E49EF30.w1024.b0", !450, i64 0}
!450 = !{!"0000017C2E49EF30", !21, i64 0}
!451 = !{!452, !452, i64 0}
!452 = !{!"0000017C2E49EF30.w8.b8", !443, i64 0}
!453 = !{!454, !454, i64 0}
!454 = !{!"0000017C2E49EF30.w8.b16", !455, i64 0}
!455 = !{!"0000017C2E49EF30.w16.b16", !444, i64 0}
!456 = !{!457, !457, i64 0}
!457 = !{!"0000017C2E49EF30.w8.b24", !455, i64 0}
!458 = !{!459, !459, i64 0}
!459 = !{!"0000017C2E49F1F0.w8.b8", !460, i64 0}
!460 = !{!"0000017C2E49F1F0.w16.b0", !461, i64 0}
!461 = !{!"0000017C2E49F1F0.w32.b0", !462, i64 0}
!462 = !{!"0000017C2E49F1F0.w64.b0", !463, i64 0}
!463 = !{!"0000017C2E49F1F0.w128.b0", !464, i64 0}
!464 = !{!"0000017C2E49F1F0.w256.b0", !465, i64 0}
!465 = !{!"0000017C2E49F1F0.w512.b0", !466, i64 0}
!466 = !{!"0000017C2E49F1F0.w1024.b0", !467, i64 0}
!467 = !{!"0000017C2E49F1F0", !21, i64 0}
!468 = !{!469, !469, i64 0}
!469 = !{!"0000017C2E49F1F0.w8.b16", !470, i64 0}
!470 = !{!"0000017C2E49F1F0.w16.b16", !461, i64 0}
!471 = !{!472, !472, i64 0}
!472 = !{!"0000017C2E49F1F0.w8.b24", !470, i64 0}
!473 = !{!474, !474, i64 0}
!474 = !{!"0000017C2E4A1CF0.w8.b0", !475, i64 0}
!475 = !{!"0000017C2E4A1CF0.w16.b0", !476, i64 0}
!476 = !{!"0000017C2E4A1CF0.w32.b0", !477, i64 0}
!477 = !{!"0000017C2E4A1CF0.w64.b0", !478, i64 0}
!478 = !{!"0000017C2E4A1CF0.w128.b0", !479, i64 0}
!479 = !{!"0000017C2E4A1CF0.w256.b0", !480, i64 0}
!480 = !{!"0000017C2E4A1CF0.w512.b0", !481, i64 0}
!481 = !{!"0000017C2E4A1CF0.w1024.b0", !482, i64 0}
!482 = !{!"0000017C2E4A1CF0", !21, i64 0}
!483 = !{!484, !484, i64 0}
!484 = !{!"0000017C2E4A1CF0.w8.b8", !475, i64 0}
!485 = !{!486, !486, i64 0}
!486 = !{!"0000017C2E4A1CF0.w8.b16", !487, i64 0}
!487 = !{!"0000017C2E4A1CF0.w16.b16", !476, i64 0}
!488 = !{!489, !489, i64 0}
!489 = !{!"0000017C2E4A1CF0.w8.b24", !487, i64 0}
!490 = !{!491, !491, i64 0}
!491 = !{!"0000017C2E4A20B0.w8.b8", !492, i64 0}
!492 = !{!"0000017C2E4A20B0.w16.b0", !493, i64 0}
!493 = !{!"0000017C2E4A20B0.w32.b0", !494, i64 0}
!494 = !{!"0000017C2E4A20B0.w64.b0", !495, i64 0}
!495 = !{!"0000017C2E4A20B0.w128.b0", !496, i64 0}
!496 = !{!"0000017C2E4A20B0.w256.b0", !497, i64 0}
!497 = !{!"0000017C2E4A20B0.w512.b0", !498, i64 0}
!498 = !{!"0000017C2E4A20B0.w1024.b0", !499, i64 0}
!499 = !{!"0000017C2E4A20B0", !21, i64 0}
!500 = !{!501, !501, i64 0}
!501 = !{!"0000017C2E4A20B0.w8.b16", !502, i64 0}
!502 = !{!"0000017C2E4A20B0.w16.b16", !493, i64 0}
!503 = !{!504, !504, i64 0}
!504 = !{!"0000017C2E4A20B0.w8.b24", !502, i64 0}
!505 = !{!506, !506, i64 0}
!506 = !{!"0000017C2E4A2830.w8.b0", !507, i64 0}
!507 = !{!"0000017C2E4A2830.w16.b0", !508, i64 0}
!508 = !{!"0000017C2E4A2830.w32.b0", !509, i64 0}
!509 = !{!"0000017C2E4A2830.w64.b0", !510, i64 0}
!510 = !{!"0000017C2E4A2830.w128.b0", !511, i64 0}
!511 = !{!"0000017C2E4A2830.w256.b0", !512, i64 0}
!512 = !{!"0000017C2E4A2830.w512.b0", !513, i64 0}
!513 = !{!"0000017C2E4A2830.w1024.b0", !514, i64 0}
!514 = !{!"0000017C2E4A2830", !21, i64 0}
!515 = !{!516, !516, i64 0}
!516 = !{!"0000017C2E4A2830.w8.b8", !507, i64 0}
!517 = !{!518, !518, i64 0}
!518 = !{!"0000017C2E4A2830.w8.b16", !519, i64 0}
!519 = !{!"0000017C2E4A2830.w16.b16", !508, i64 0}
!520 = !{!521, !521, i64 0}
!521 = !{!"0000017C2E4A2830.w8.b24", !519, i64 0}
!522 = !{!523, !523, i64 0}
!523 = !{!"0000017C2E4A2B30.w8.b8", !524, i64 0}
!524 = !{!"0000017C2E4A2B30.w16.b0", !525, i64 0}
!525 = !{!"0000017C2E4A2B30.w32.b0", !526, i64 0}
!526 = !{!"0000017C2E4A2B30.w64.b0", !527, i64 0}
!527 = !{!"0000017C2E4A2B30.w128.b0", !528, i64 0}
!528 = !{!"0000017C2E4A2B30.w256.b0", !529, i64 0}
!529 = !{!"0000017C2E4A2B30.w512.b0", !530, i64 0}
!530 = !{!"0000017C2E4A2B30.w1024.b0", !531, i64 0}
!531 = !{!"0000017C2E4A2B30", !21, i64 0}
!532 = !{!533, !533, i64 0}
!533 = !{!"0000017C2E4A2B30.w8.b16", !534, i64 0}
!534 = !{!"0000017C2E4A2B30.w16.b16", !525, i64 0}
!535 = !{!536, !536, i64 0}
!536 = !{!"0000017C2E4A2B30.w8.b24", !534, i64 0}
!537 = !{!538, !538, i64 0}
!538 = !{!"0000017C2E601CB0.w4.b0", !539, i64 0}
!539 = !{!"0000017C2E601CB0.w8.b0", !540, i64 0}
!540 = !{!"0000017C2E601CB0.w16.b0", !541, i64 0}
!541 = !{!"0000017C2E601CB0.w32.b0", !542, i64 0}
!542 = !{!"0000017C2E601CB0.w64.b0", !543, i64 0}
!543 = !{!"0000017C2E601CB0.w128.b0", !544, i64 0}
!544 = !{!"0000017C2E601CB0.w256.b0", !545, i64 0}
!545 = !{!"0000017C2E601CB0.w512.b0", !546, i64 0}
!546 = !{!"0000017C2E601CB0.w1024.b0", !547, i64 0}
!547 = !{!"0000017C2E601CB0", !21, i64 0}
!548 = !{!549, !549, i64 0}
!549 = !{!"0000017C2E601CB0.w4.b4", !539, i64 0}
!550 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !551)
!551 = !{!552, !553, !554, !555, !556, !557}
!552 = !DILocalVariable(name: "arg1", arg: 1, scope: !550, file: !1, type: !8)
!553 = !DILocalVariable(name: "arg2", arg: 2, scope: !550, file: !1, type: !9)
!554 = !DILocalVariable(name: "arg3", arg: 3, scope: !550, file: !1, type: !7)
!555 = !DILocalVariable(name: "arg4", arg: 4, scope: !550, file: !1, type: !8)
!556 = !DILocalVariable(name: "arg5", arg: 5, scope: !550, file: !1, type: !9)
!557 = !DILocalVariable(name: "arg6", arg: 6, scope: !550, file: !1, type: !8)
!558 = !DILocation(line: 0, scope: !550)
!559 = !{!560, !560, i64 0}
!560 = !{!"0000017C2E41CE60.w4.b0", !561, i64 0}
!561 = !{!"0000017C2E41CE60.w8.b0", !562, i64 0}
!562 = !{!"0000017C2E41CE60.w16.b0", !563, i64 0}
!563 = !{!"0000017C2E41CE60.w32.b0", !564, i64 0}
!564 = !{!"0000017C2E41CE60.w64.b0", !565, i64 0}
!565 = !{!"0000017C2E41CE60.w128.b0", !566, i64 0}
!566 = !{!"0000017C2E41CE60.w256.b0", !567, i64 0}
!567 = !{!"0000017C2E41CE60.w512.b0", !568, i64 0}
!568 = !{!"0000017C2E41CE60.w1024.b0", !569, i64 0}
!569 = !{!"0000017C2E41CE60", !21, i64 0}
!570 = !{!571, !571, i64 0}
!571 = !{!"0000017C2E41CE60.w4.b4", !561, i64 0}
!572 = !{!573, !573, i64 0}
!573 = !{!"0000017C2E4203E0.w8.b0", !574, i64 0}
!574 = !{!"0000017C2E4203E0.w16.b0", !575, i64 0}
!575 = !{!"0000017C2E4203E0.w32.b0", !576, i64 0}
!576 = !{!"0000017C2E4203E0.w64.b0", !577, i64 0}
!577 = !{!"0000017C2E4203E0.w128.b0", !578, i64 0}
!578 = !{!"0000017C2E4203E0.w256.b0", !579, i64 0}
!579 = !{!"0000017C2E4203E0.w512.b0", !580, i64 0}
!580 = !{!"0000017C2E4203E0.w1024.b0", !581, i64 0}
!581 = !{!"0000017C2E4203E0", !21, i64 0}
!582 = !{!583, !583, i64 0}
!583 = !{!"0000017C2E4203E0.w8.b8", !574, i64 0}
!584 = !{!585, !585, i64 0}
!585 = !{!"0000017C2E4203E0.w8.b16", !586, i64 0}
!586 = !{!"0000017C2E4203E0.w16.b16", !575, i64 0}
!587 = !{!588, !588, i64 0}
!588 = !{!"0000017C2E4203E0.w8.b24", !586, i64 0}
!589 = !{!590, !590, i64 0}
!590 = !{!"0000017C2E4210E0.w8.b8", !591, i64 0}
!591 = !{!"0000017C2E4210E0.w16.b0", !592, i64 0}
!592 = !{!"0000017C2E4210E0.w32.b0", !593, i64 0}
!593 = !{!"0000017C2E4210E0.w64.b0", !594, i64 0}
!594 = !{!"0000017C2E4210E0.w128.b0", !595, i64 0}
!595 = !{!"0000017C2E4210E0.w256.b0", !596, i64 0}
!596 = !{!"0000017C2E4210E0.w512.b0", !597, i64 0}
!597 = !{!"0000017C2E4210E0.w1024.b0", !598, i64 0}
!598 = !{!"0000017C2E4210E0", !21, i64 0}
!599 = !{!600, !600, i64 0}
!600 = !{!"0000017C2E4210E0.w8.b16", !601, i64 0}
!601 = !{!"0000017C2E4210E0.w16.b16", !592, i64 0}
!602 = !{!603, !603, i64 0}
!603 = !{!"0000017C2E4210E0.w8.b24", !601, i64 0}
!604 = !{!605, !605, i64 0}
!605 = !{!"0000017C2E423AA0.w8.b0", !606, i64 0}
!606 = !{!"0000017C2E423AA0.w16.b0", !607, i64 0}
!607 = !{!"0000017C2E423AA0.w32.b0", !608, i64 0}
!608 = !{!"0000017C2E423AA0.w64.b0", !609, i64 0}
!609 = !{!"0000017C2E423AA0.w128.b0", !610, i64 0}
!610 = !{!"0000017C2E423AA0.w256.b0", !611, i64 0}
!611 = !{!"0000017C2E423AA0.w512.b0", !612, i64 0}
!612 = !{!"0000017C2E423AA0.w1024.b0", !613, i64 0}
!613 = !{!"0000017C2E423AA0", !21, i64 0}
!614 = !{!615, !615, i64 0}
!615 = !{!"0000017C2E423AA0.w8.b8", !606, i64 0}
!616 = !{!617, !617, i64 0}
!617 = !{!"0000017C2E423AA0.w8.b16", !618, i64 0}
!618 = !{!"0000017C2E423AA0.w16.b16", !607, i64 0}
!619 = !{!620, !620, i64 0}
!620 = !{!"0000017C2E423AA0.w8.b24", !618, i64 0}
!621 = !{!622, !622, i64 0}
!622 = !{!"0000017C2E423160.w8.b8", !623, i64 0}
!623 = !{!"0000017C2E423160.w16.b0", !624, i64 0}
!624 = !{!"0000017C2E423160.w32.b0", !625, i64 0}
!625 = !{!"0000017C2E423160.w64.b0", !626, i64 0}
!626 = !{!"0000017C2E423160.w128.b0", !627, i64 0}
!627 = !{!"0000017C2E423160.w256.b0", !628, i64 0}
!628 = !{!"0000017C2E423160.w512.b0", !629, i64 0}
!629 = !{!"0000017C2E423160.w1024.b0", !630, i64 0}
!630 = !{!"0000017C2E423160", !21, i64 0}
!631 = !{!632, !632, i64 0}
!632 = !{!"0000017C2E423160.w8.b16", !633, i64 0}
!633 = !{!"0000017C2E423160.w16.b16", !624, i64 0}
!634 = !{!635, !635, i64 0}
!635 = !{!"0000017C2E423160.w8.b24", !633, i64 0}
!636 = !{!637, !637, i64 0}
!637 = !{!"0000017C2E302A30.w4.b0", !638, i64 0}
!638 = !{!"0000017C2E302A30.w8.b0", !639, i64 0}
!639 = !{!"0000017C2E302A30.w16.b0", !640, i64 0}
!640 = !{!"0000017C2E302A30.w32.b0", !641, i64 0}
!641 = !{!"0000017C2E302A30.w64.b0", !642, i64 0}
!642 = !{!"0000017C2E302A30.w128.b0", !643, i64 0}
!643 = !{!"0000017C2E302A30.w256.b0", !644, i64 0}
!644 = !{!"0000017C2E302A30.w512.b0", !645, i64 0}
!645 = !{!"0000017C2E302A30.w1024.b0", !646, i64 0}
!646 = !{!"0000017C2E302A30", !21, i64 0}
!647 = !{!648, !648, i64 0}
!648 = !{!"0000017C2E302A30.w4.b4", !638, i64 0}
!649 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !650)
!650 = !{!651, !652, !653, !654, !655, !656}
!651 = !DILocalVariable(name: "arg1", arg: 1, scope: !649, file: !1, type: !8)
!652 = !DILocalVariable(name: "arg2", arg: 2, scope: !649, file: !1, type: !9)
!653 = !DILocalVariable(name: "arg3", arg: 3, scope: !649, file: !1, type: !7)
!654 = !DILocalVariable(name: "arg4", arg: 4, scope: !649, file: !1, type: !8)
!655 = !DILocalVariable(name: "arg5", arg: 5, scope: !649, file: !1, type: !9)
!656 = !DILocalVariable(name: "arg6", arg: 6, scope: !649, file: !1, type: !8)
!657 = !DILocation(line: 0, scope: !649)
!658 = !{!659, !659, i64 0}
!659 = !{!"0000017C22C006E0.w4.b0", !660, i64 0}
!660 = !{!"0000017C22C006E0.w8.b0", !661, i64 0}
!661 = !{!"0000017C22C006E0.w16.b0", !662, i64 0}
!662 = !{!"0000017C22C006E0.w32.b0", !663, i64 0}
!663 = !{!"0000017C22C006E0.w64.b0", !664, i64 0}
!664 = !{!"0000017C22C006E0.w128.b0", !665, i64 0}
!665 = !{!"0000017C22C006E0.w256.b0", !666, i64 0}
!666 = !{!"0000017C22C006E0.w512.b0", !667, i64 0}
!667 = !{!"0000017C22C006E0.w1024.b0", !668, i64 0}
!668 = !{!"0000017C22C006E0", !21, i64 0}
!669 = !{!670, !670, i64 0}
!670 = !{!"0000017C22C006E0.w4.b4", !660, i64 0}
!671 = !{!672, !672, i64 0}
!672 = !{!"0000017C22C006E0.w4.b8", !673, i64 0}
!673 = !{!"0000017C22C006E0.w8.b8", !661, i64 0}
!674 = !{!675, !675, i64 0}
!675 = !{!"0000017C22C006E0.w4.b12", !673, i64 0}
!676 = !{!677, !677, i64 0}
!677 = !{!"0000017C22C053A0.w8.b0", !678, i64 0}
!678 = !{!"0000017C22C053A0.w16.b0", !679, i64 0}
!679 = !{!"0000017C22C053A0.w32.b0", !680, i64 0}
!680 = !{!"0000017C22C053A0.w64.b0", !681, i64 0}
!681 = !{!"0000017C22C053A0.w128.b0", !682, i64 0}
!682 = !{!"0000017C22C053A0.w256.b0", !683, i64 0}
!683 = !{!"0000017C22C053A0.w512.b0", !684, i64 0}
!684 = !{!"0000017C22C053A0.w1024.b0", !685, i64 0}
!685 = !{!"0000017C22C053A0", !21, i64 0}
!686 = !{!687, !687, i64 0}
!687 = !{!"0000017C22C053A0.w8.b8", !678, i64 0}
!688 = !{!689, !689, i64 0}
!689 = !{!"0000017C22C053A0.w8.b16", !690, i64 0}
!690 = !{!"0000017C22C053A0.w16.b16", !679, i64 0}
!691 = !{!692, !692, i64 0}
!692 = !{!"0000017C22C053A0.w8.b24", !690, i64 0}
!693 = !{!694, !694, i64 0}
!694 = !{!"0000017C22C07620.w8.b8", !695, i64 0}
!695 = !{!"0000017C22C07620.w16.b0", !696, i64 0}
!696 = !{!"0000017C22C07620.w32.b0", !697, i64 0}
!697 = !{!"0000017C22C07620.w64.b0", !698, i64 0}
!698 = !{!"0000017C22C07620.w128.b0", !699, i64 0}
!699 = !{!"0000017C22C07620.w256.b0", !700, i64 0}
!700 = !{!"0000017C22C07620.w512.b0", !701, i64 0}
!701 = !{!"0000017C22C07620.w1024.b0", !702, i64 0}
!702 = !{!"0000017C22C07620", !21, i64 0}
!703 = !{!704, !704, i64 0}
!704 = !{!"0000017C22C07620.w8.b16", !705, i64 0}
!705 = !{!"0000017C22C07620.w16.b16", !696, i64 0}
!706 = !{!707, !707, i64 0}
!707 = !{!"0000017C22C07620.w8.b24", !705, i64 0}
!708 = !{!709, !709, i64 0}
!709 = !{!"0000017C22C07660.w8.b0", !710, i64 0}
!710 = !{!"0000017C22C07660.w16.b0", !711, i64 0}
!711 = !{!"0000017C22C07660.w32.b0", !712, i64 0}
!712 = !{!"0000017C22C07660.w64.b0", !713, i64 0}
!713 = !{!"0000017C22C07660.w128.b0", !714, i64 0}
!714 = !{!"0000017C22C07660.w256.b0", !715, i64 0}
!715 = !{!"0000017C22C07660.w512.b0", !716, i64 0}
!716 = !{!"0000017C22C07660.w1024.b0", !717, i64 0}
!717 = !{!"0000017C22C07660", !21, i64 0}
!718 = !{!719, !719, i64 0}
!719 = !{!"0000017C22C07660.w8.b8", !710, i64 0}
!720 = !{!721, !721, i64 0}
!721 = !{!"0000017C22C07660.w8.b16", !722, i64 0}
!722 = !{!"0000017C22C07660.w16.b16", !711, i64 0}
!723 = !{!724, !724, i64 0}
!724 = !{!"0000017C22C07660.w8.b24", !722, i64 0}
!725 = !{!726, !726, i64 0}
!726 = !{!"0000017C22C07F60.w8.b8", !727, i64 0}
!727 = !{!"0000017C22C07F60.w16.b0", !728, i64 0}
!728 = !{!"0000017C22C07F60.w32.b0", !729, i64 0}
!729 = !{!"0000017C22C07F60.w64.b0", !730, i64 0}
!730 = !{!"0000017C22C07F60.w128.b0", !731, i64 0}
!731 = !{!"0000017C22C07F60.w256.b0", !732, i64 0}
!732 = !{!"0000017C22C07F60.w512.b0", !733, i64 0}
!733 = !{!"0000017C22C07F60.w1024.b0", !734, i64 0}
!734 = !{!"0000017C22C07F60", !21, i64 0}
!735 = !{!736, !736, i64 0}
!736 = !{!"0000017C22C08FE0.w8.b0", !737, i64 0}
!737 = !{!"0000017C22C08FE0.w16.b0", !738, i64 0}
!738 = !{!"0000017C22C08FE0.w32.b0", !739, i64 0}
!739 = !{!"0000017C22C08FE0.w64.b0", !740, i64 0}
!740 = !{!"0000017C22C08FE0.w128.b0", !741, i64 0}
!741 = !{!"0000017C22C08FE0.w256.b0", !742, i64 0}
!742 = !{!"0000017C22C08FE0.w512.b0", !743, i64 0}
!743 = !{!"0000017C22C08FE0.w1024.b0", !744, i64 0}
!744 = !{!"0000017C22C08FE0", !21, i64 0}
!745 = !{!746, !746, i64 0}
!746 = !{!"0000017C22C08FE0.w8.b8", !737, i64 0}
!747 = !{!748, !748, i64 0}
!748 = !{!"0000017C22C08FE0.w8.b16", !749, i64 0}
!749 = !{!"0000017C22C08FE0.w16.b16", !738, i64 0}
!750 = !{!751, !751, i64 0}
!751 = !{!"0000017C22C08FE0.w8.b24", !749, i64 0}
!752 = !{!753, !753, i64 0}
!753 = !{!"0000017C22C08460.w8.b8", !754, i64 0}
!754 = !{!"0000017C22C08460.w16.b0", !755, i64 0}
!755 = !{!"0000017C22C08460.w32.b0", !756, i64 0}
!756 = !{!"0000017C22C08460.w64.b0", !757, i64 0}
!757 = !{!"0000017C22C08460.w128.b0", !758, i64 0}
!758 = !{!"0000017C22C08460.w256.b0", !759, i64 0}
!759 = !{!"0000017C22C08460.w512.b0", !760, i64 0}
!760 = !{!"0000017C22C08460.w1024.b0", !761, i64 0}
!761 = !{!"0000017C22C08460", !21, i64 0}
!762 = !{!763, !763, i64 0}
!763 = !{!"0000017C22C09D60.w8.b0", !764, i64 0}
!764 = !{!"0000017C22C09D60.w16.b0", !765, i64 0}
!765 = !{!"0000017C22C09D60.w32.b0", !766, i64 0}
!766 = !{!"0000017C22C09D60.w64.b0", !767, i64 0}
!767 = !{!"0000017C22C09D60.w128.b0", !768, i64 0}
!768 = !{!"0000017C22C09D60.w256.b0", !769, i64 0}
!769 = !{!"0000017C22C09D60.w512.b0", !770, i64 0}
!770 = !{!"0000017C22C09D60.w1024.b0", !771, i64 0}
!771 = !{!"0000017C22C09D60", !21, i64 0}
!772 = !{!773, !773, i64 0}
!773 = !{!"0000017C22C09D60.w8.b8", !764, i64 0}
!774 = !{!775, !775, i64 0}
!775 = !{!"0000017C22C09D60.w8.b16", !776, i64 0}
!776 = !{!"0000017C22C09D60.w16.b16", !765, i64 0}
!777 = !{!778, !778, i64 0}
!778 = !{!"0000017C22C09D60.w8.b24", !776, i64 0}
!779 = !{!780, !780, i64 0}
!780 = !{!"0000017C22C09160.w8.b8", !781, i64 0}
!781 = !{!"0000017C22C09160.w16.b0", !782, i64 0}
!782 = !{!"0000017C22C09160.w32.b0", !783, i64 0}
!783 = !{!"0000017C22C09160.w64.b0", !784, i64 0}
!784 = !{!"0000017C22C09160.w128.b0", !785, i64 0}
!785 = !{!"0000017C22C09160.w256.b0", !786, i64 0}
!786 = !{!"0000017C22C09160.w512.b0", !787, i64 0}
!787 = !{!"0000017C22C09160.w1024.b0", !788, i64 0}
!788 = !{!"0000017C22C09160", !21, i64 0}
!789 = !{!790, !790, i64 0}
!790 = !{!"0000017C22C09160.w8.b16", !791, i64 0}
!791 = !{!"0000017C22C09160.w16.b16", !782, i64 0}
!792 = !{!793, !793, i64 0}
!793 = !{!"0000017C22C09160.w8.b24", !791, i64 0}
!794 = !{!795, !795, i64 0}
!795 = !{!"0000017C2E55A360.w4.b0", !796, i64 0}
!796 = !{!"0000017C2E55A360.w8.b0", !797, i64 0}
!797 = !{!"0000017C2E55A360.w16.b0", !798, i64 0}
!798 = !{!"0000017C2E55A360.w32.b0", !799, i64 0}
!799 = !{!"0000017C2E55A360.w64.b0", !800, i64 0}
!800 = !{!"0000017C2E55A360.w128.b0", !801, i64 0}
!801 = !{!"0000017C2E55A360.w256.b0", !802, i64 0}
!802 = !{!"0000017C2E55A360.w512.b0", !803, i64 0}
!803 = !{!"0000017C2E55A360.w1024.b0", !804, i64 0}
!804 = !{!"0000017C2E55A360", !21, i64 0}
!805 = !{!806, !806, i64 0}
!806 = !{!"0000017C2E55A360.w4.b4", !796, i64 0}
!807 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !808)
!808 = !{!809, !810, !811, !812, !813, !814}
!809 = !DILocalVariable(name: "arg1", arg: 1, scope: !807, file: !1, type: !8)
!810 = !DILocalVariable(name: "arg2", arg: 2, scope: !807, file: !1, type: !9)
!811 = !DILocalVariable(name: "arg3", arg: 3, scope: !807, file: !1, type: !7)
!812 = !DILocalVariable(name: "arg4", arg: 4, scope: !807, file: !1, type: !8)
!813 = !DILocalVariable(name: "arg5", arg: 5, scope: !807, file: !1, type: !9)
!814 = !DILocalVariable(name: "arg6", arg: 6, scope: !807, file: !1, type: !8)
!815 = !DILocation(line: 0, scope: !807)
!816 = !{!817, !817, i64 0}
!817 = !{!"0000017C2E41EF60.w4.b0", !818, i64 0}
!818 = !{!"0000017C2E41EF60.w8.b0", !819, i64 0}
!819 = !{!"0000017C2E41EF60.w16.b0", !820, i64 0}
!820 = !{!"0000017C2E41EF60.w32.b0", !821, i64 0}
!821 = !{!"0000017C2E41EF60.w64.b0", !822, i64 0}
!822 = !{!"0000017C2E41EF60.w128.b0", !823, i64 0}
!823 = !{!"0000017C2E41EF60.w256.b0", !824, i64 0}
!824 = !{!"0000017C2E41EF60.w512.b0", !825, i64 0}
!825 = !{!"0000017C2E41EF60.w1024.b0", !826, i64 0}
!826 = !{!"0000017C2E41EF60", !21, i64 0}
!827 = !{!828, !828, i64 0}
!828 = !{!"0000017C2E41EF60.w4.b4", !818, i64 0}
!829 = !{!830, !830, i64 0}
!830 = !{!"0000017C2E41EF60.w4.b8", !831, i64 0}
!831 = !{!"0000017C2E41EF60.w8.b8", !819, i64 0}
!832 = !{!833, !833, i64 0}
!833 = !{!"0000017C2E41EF60.w4.b12", !831, i64 0}
!834 = !{!835, !835, i64 0}
!835 = !{!"0000017C2E4241E0.w8.b0", !836, i64 0}
!836 = !{!"0000017C2E4241E0.w16.b0", !837, i64 0}
!837 = !{!"0000017C2E4241E0.w32.b0", !838, i64 0}
!838 = !{!"0000017C2E4241E0.w64.b0", !839, i64 0}
!839 = !{!"0000017C2E4241E0.w128.b0", !840, i64 0}
!840 = !{!"0000017C2E4241E0.w256.b0", !841, i64 0}
!841 = !{!"0000017C2E4241E0.w512.b0", !842, i64 0}
!842 = !{!"0000017C2E4241E0.w1024.b0", !843, i64 0}
!843 = !{!"0000017C2E4241E0", !21, i64 0}
!844 = !{!845, !845, i64 0}
!845 = !{!"0000017C2E4241E0.w8.b8", !836, i64 0}
!846 = !{!847, !847, i64 0}
!847 = !{!"0000017C2E4241E0.w8.b16", !848, i64 0}
!848 = !{!"0000017C2E4241E0.w16.b16", !837, i64 0}
!849 = !{!850, !850, i64 0}
!850 = !{!"0000017C2E4241E0.w8.b24", !848, i64 0}
!851 = !{!852, !852, i64 0}
!852 = !{!"0000017C2E425EA0.w8.b8", !853, i64 0}
!853 = !{!"0000017C2E425EA0.w16.b0", !854, i64 0}
!854 = !{!"0000017C2E425EA0.w32.b0", !855, i64 0}
!855 = !{!"0000017C2E425EA0.w64.b0", !856, i64 0}
!856 = !{!"0000017C2E425EA0.w128.b0", !857, i64 0}
!857 = !{!"0000017C2E425EA0.w256.b0", !858, i64 0}
!858 = !{!"0000017C2E425EA0.w512.b0", !859, i64 0}
!859 = !{!"0000017C2E425EA0.w1024.b0", !860, i64 0}
!860 = !{!"0000017C2E425EA0", !21, i64 0}
!861 = !{!862, !862, i64 0}
!862 = !{!"0000017C2E425EA0.w8.b16", !863, i64 0}
!863 = !{!"0000017C2E425EA0.w16.b16", !854, i64 0}
!864 = !{!865, !865, i64 0}
!865 = !{!"0000017C2E425EA0.w8.b24", !863, i64 0}
!866 = !{!867, !867, i64 0}
!867 = !{!"0000017C2E425160.w8.b0", !868, i64 0}
!868 = !{!"0000017C2E425160.w16.b0", !869, i64 0}
!869 = !{!"0000017C2E425160.w32.b0", !870, i64 0}
!870 = !{!"0000017C2E425160.w64.b0", !871, i64 0}
!871 = !{!"0000017C2E425160.w128.b0", !872, i64 0}
!872 = !{!"0000017C2E425160.w256.b0", !873, i64 0}
!873 = !{!"0000017C2E425160.w512.b0", !874, i64 0}
!874 = !{!"0000017C2E425160.w1024.b0", !875, i64 0}
!875 = !{!"0000017C2E425160", !21, i64 0}
!876 = !{!877, !877, i64 0}
!877 = !{!"0000017C2E425160.w8.b8", !868, i64 0}
!878 = !{!879, !879, i64 0}
!879 = !{!"0000017C2E425160.w8.b16", !880, i64 0}
!880 = !{!"0000017C2E425160.w16.b16", !869, i64 0}
!881 = !{!882, !882, i64 0}
!882 = !{!"0000017C2E425160.w8.b24", !880, i64 0}
!883 = !{!884, !884, i64 0}
!884 = !{!"0000017C2E425BA0.w8.b8", !885, i64 0}
!885 = !{!"0000017C2E425BA0.w16.b0", !886, i64 0}
!886 = !{!"0000017C2E425BA0.w32.b0", !887, i64 0}
!887 = !{!"0000017C2E425BA0.w64.b0", !888, i64 0}
!888 = !{!"0000017C2E425BA0.w128.b0", !889, i64 0}
!889 = !{!"0000017C2E425BA0.w256.b0", !890, i64 0}
!890 = !{!"0000017C2E425BA0.w512.b0", !891, i64 0}
!891 = !{!"0000017C2E425BA0.w1024.b0", !892, i64 0}
!892 = !{!"0000017C2E425BA0", !21, i64 0}
!893 = !{!894, !894, i64 0}
!894 = !{!"0000017C2E426C60.w8.b0", !895, i64 0}
!895 = !{!"0000017C2E426C60.w16.b0", !896, i64 0}
!896 = !{!"0000017C2E426C60.w32.b0", !897, i64 0}
!897 = !{!"0000017C2E426C60.w64.b0", !898, i64 0}
!898 = !{!"0000017C2E426C60.w128.b0", !899, i64 0}
!899 = !{!"0000017C2E426C60.w256.b0", !900, i64 0}
!900 = !{!"0000017C2E426C60.w512.b0", !901, i64 0}
!901 = !{!"0000017C2E426C60.w1024.b0", !902, i64 0}
!902 = !{!"0000017C2E426C60", !21, i64 0}
!903 = !{!904, !904, i64 0}
!904 = !{!"0000017C2E426C60.w8.b8", !895, i64 0}
!905 = !{!906, !906, i64 0}
!906 = !{!"0000017C2E426C60.w8.b16", !907, i64 0}
!907 = !{!"0000017C2E426C60.w16.b16", !896, i64 0}
!908 = !{!909, !909, i64 0}
!909 = !{!"0000017C2E426C60.w8.b24", !907, i64 0}
!910 = !{!911, !911, i64 0}
!911 = !{!"0000017C2E4266A0.w8.b8", !912, i64 0}
!912 = !{!"0000017C2E4266A0.w16.b0", !913, i64 0}
!913 = !{!"0000017C2E4266A0.w32.b0", !914, i64 0}
!914 = !{!"0000017C2E4266A0.w64.b0", !915, i64 0}
!915 = !{!"0000017C2E4266A0.w128.b0", !916, i64 0}
!916 = !{!"0000017C2E4266A0.w256.b0", !917, i64 0}
!917 = !{!"0000017C2E4266A0.w512.b0", !918, i64 0}
!918 = !{!"0000017C2E4266A0.w1024.b0", !919, i64 0}
!919 = !{!"0000017C2E4266A0", !21, i64 0}
!920 = !{!921, !921, i64 0}
!921 = !{!"0000017C2E4065E0.w8.b0", !922, i64 0}
!922 = !{!"0000017C2E4065E0.w16.b0", !923, i64 0}
!923 = !{!"0000017C2E4065E0.w32.b0", !924, i64 0}
!924 = !{!"0000017C2E4065E0.w64.b0", !925, i64 0}
!925 = !{!"0000017C2E4065E0.w128.b0", !926, i64 0}
!926 = !{!"0000017C2E4065E0.w256.b0", !927, i64 0}
!927 = !{!"0000017C2E4065E0.w512.b0", !928, i64 0}
!928 = !{!"0000017C2E4065E0.w1024.b0", !929, i64 0}
!929 = !{!"0000017C2E4065E0", !21, i64 0}
!930 = !{!931, !931, i64 0}
!931 = !{!"0000017C2E4065E0.w8.b8", !922, i64 0}
!932 = !{!933, !933, i64 0}
!933 = !{!"0000017C2E4065E0.w8.b16", !934, i64 0}
!934 = !{!"0000017C2E4065E0.w16.b16", !923, i64 0}
!935 = !{!936, !936, i64 0}
!936 = !{!"0000017C2E4065E0.w8.b24", !934, i64 0}
!937 = !{!938, !938, i64 0}
!938 = !{!"0000017C2E4068A0.w8.b8", !939, i64 0}
!939 = !{!"0000017C2E4068A0.w16.b0", !940, i64 0}
!940 = !{!"0000017C2E4068A0.w32.b0", !941, i64 0}
!941 = !{!"0000017C2E4068A0.w64.b0", !942, i64 0}
!942 = !{!"0000017C2E4068A0.w128.b0", !943, i64 0}
!943 = !{!"0000017C2E4068A0.w256.b0", !944, i64 0}
!944 = !{!"0000017C2E4068A0.w512.b0", !945, i64 0}
!945 = !{!"0000017C2E4068A0.w1024.b0", !946, i64 0}
!946 = !{!"0000017C2E4068A0", !21, i64 0}
!947 = !{!948, !948, i64 0}
!948 = !{!"0000017C2E4068A0.w8.b16", !949, i64 0}
!949 = !{!"0000017C2E4068A0.w16.b16", !940, i64 0}
!950 = !{!951, !951, i64 0}
!951 = !{!"0000017C2E4068A0.w8.b24", !949, i64 0}
!952 = !{!953, !953, i64 0}
!953 = !{!"0000017C2E302330.w4.b0", !954, i64 0}
!954 = !{!"0000017C2E302330.w8.b0", !955, i64 0}
!955 = !{!"0000017C2E302330.w16.b0", !956, i64 0}
!956 = !{!"0000017C2E302330.w32.b0", !957, i64 0}
!957 = !{!"0000017C2E302330.w64.b0", !958, i64 0}
!958 = !{!"0000017C2E302330.w128.b0", !959, i64 0}
!959 = !{!"0000017C2E302330.w256.b0", !960, i64 0}
!960 = !{!"0000017C2E302330.w512.b0", !961, i64 0}
!961 = !{!"0000017C2E302330.w1024.b0", !962, i64 0}
!962 = !{!"0000017C2E302330", !21, i64 0}
!963 = !{!964, !964, i64 0}
!964 = !{!"0000017C2E302330.w4.b4", !954, i64 0}
!965 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !966)
!966 = !{!967, !968, !969, !970, !971, !972}
!967 = !DILocalVariable(name: "arg1", arg: 1, scope: !965, file: !1, type: !8)
!968 = !DILocalVariable(name: "arg2", arg: 2, scope: !965, file: !1, type: !9)
!969 = !DILocalVariable(name: "arg3", arg: 3, scope: !965, file: !1, type: !7)
!970 = !DILocalVariable(name: "arg4", arg: 4, scope: !965, file: !1, type: !8)
!971 = !DILocalVariable(name: "arg5", arg: 5, scope: !965, file: !1, type: !9)
!972 = !DILocalVariable(name: "arg6", arg: 6, scope: !965, file: !1, type: !8)
!973 = !DILocation(line: 0, scope: !965)
!974 = !{!975, !975, i64 0}
!975 = !{!"0000017C2E3C20F0.w4.b0", !976, i64 0}
!976 = !{!"0000017C2E3C20F0.w8.b0", !977, i64 0}
!977 = !{!"0000017C2E3C20F0.w16.b0", !978, i64 0}
!978 = !{!"0000017C2E3C20F0.w32.b0", !979, i64 0}
!979 = !{!"0000017C2E3C20F0.w64.b0", !980, i64 0}
!980 = !{!"0000017C2E3C20F0.w128.b0", !981, i64 0}
!981 = !{!"0000017C2E3C20F0.w256.b0", !982, i64 0}
!982 = !{!"0000017C2E3C20F0.w512.b0", !983, i64 0}
!983 = !{!"0000017C2E3C20F0.w1024.b0", !984, i64 0}
!984 = !{!"0000017C2E3C20F0", !21, i64 0}
!985 = !{!986, !986, i64 0}
!986 = !{!"0000017C2E3C20F0.w4.b4", !976, i64 0}
!987 = !{!988, !988, i64 0}
!988 = !{!"0000017C2E3C20F0.w4.b8", !989, i64 0}
!989 = !{!"0000017C2E3C20F0.w8.b8", !977, i64 0}
!990 = !{!991, !991, i64 0}
!991 = !{!"0000017C2E3C20F0.w4.b12", !989, i64 0}
!992 = !{!993, !993, i64 0}
!993 = !{!"0000017C2E3C7AF0.w8.b0", !994, i64 0}
!994 = !{!"0000017C2E3C7AF0.w16.b0", !995, i64 0}
!995 = !{!"0000017C2E3C7AF0.w32.b0", !996, i64 0}
!996 = !{!"0000017C2E3C7AF0.w64.b0", !997, i64 0}
!997 = !{!"0000017C2E3C7AF0.w128.b0", !998, i64 0}
!998 = !{!"0000017C2E3C7AF0.w256.b0", !999, i64 0}
!999 = !{!"0000017C2E3C7AF0.w512.b0", !1000, i64 0}
!1000 = !{!"0000017C2E3C7AF0.w1024.b0", !1001, i64 0}
!1001 = !{!"0000017C2E3C7AF0", !21, i64 0}
!1002 = !{!1003, !1003, i64 0}
!1003 = !{!"0000017C2E3C7AF0.w8.b8", !994, i64 0}
!1004 = !{!1005, !1005, i64 0}
!1005 = !{!"0000017C2E3C7AF0.w8.b16", !1006, i64 0}
!1006 = !{!"0000017C2E3C7AF0.w16.b16", !995, i64 0}
!1007 = !{!1008, !1008, i64 0}
!1008 = !{!"0000017C2E3C7AF0.w8.b24", !1006, i64 0}
!1009 = !{!1010, !1010, i64 0}
!1010 = !{!"0000017C2E3C79F0.w8.b8", !1011, i64 0}
!1011 = !{!"0000017C2E3C79F0.w16.b0", !1012, i64 0}
!1012 = !{!"0000017C2E3C79F0.w32.b0", !1013, i64 0}
!1013 = !{!"0000017C2E3C79F0.w64.b0", !1014, i64 0}
!1014 = !{!"0000017C2E3C79F0.w128.b0", !1015, i64 0}
!1015 = !{!"0000017C2E3C79F0.w256.b0", !1016, i64 0}
!1016 = !{!"0000017C2E3C79F0.w512.b0", !1017, i64 0}
!1017 = !{!"0000017C2E3C79F0.w1024.b0", !1018, i64 0}
!1018 = !{!"0000017C2E3C79F0", !21, i64 0}
!1019 = !{!1020, !1020, i64 0}
!1020 = !{!"0000017C2E3C79F0.w8.b16", !1021, i64 0}
!1021 = !{!"0000017C2E3C79F0.w16.b16", !1012, i64 0}
!1022 = !{!1023, !1023, i64 0}
!1023 = !{!"0000017C2E3C79F0.w8.b24", !1021, i64 0}
!1024 = !{!1025, !1025, i64 0}
!1025 = !{!"0000017C2E3C8830.w8.b0", !1026, i64 0}
!1026 = !{!"0000017C2E3C8830.w16.b0", !1027, i64 0}
!1027 = !{!"0000017C2E3C8830.w32.b0", !1028, i64 0}
!1028 = !{!"0000017C2E3C8830.w64.b0", !1029, i64 0}
!1029 = !{!"0000017C2E3C8830.w128.b0", !1030, i64 0}
!1030 = !{!"0000017C2E3C8830.w256.b0", !1031, i64 0}
!1031 = !{!"0000017C2E3C8830.w512.b0", !1032, i64 0}
!1032 = !{!"0000017C2E3C8830.w1024.b0", !1033, i64 0}
!1033 = !{!"0000017C2E3C8830", !21, i64 0}
!1034 = !{!1035, !1035, i64 0}
!1035 = !{!"0000017C2E3C8830.w8.b8", !1026, i64 0}
!1036 = !{!1037, !1037, i64 0}
!1037 = !{!"0000017C2E3C8830.w8.b16", !1038, i64 0}
!1038 = !{!"0000017C2E3C8830.w16.b16", !1027, i64 0}
!1039 = !{!1040, !1040, i64 0}
!1040 = !{!"0000017C2E3C8830.w8.b24", !1038, i64 0}
!1041 = !{!1042, !1042, i64 0}
!1042 = !{!"0000017C2E3C89B0.w8.b8", !1043, i64 0}
!1043 = !{!"0000017C2E3C89B0.w16.b0", !1044, i64 0}
!1044 = !{!"0000017C2E3C89B0.w32.b0", !1045, i64 0}
!1045 = !{!"0000017C2E3C89B0.w64.b0", !1046, i64 0}
!1046 = !{!"0000017C2E3C89B0.w128.b0", !1047, i64 0}
!1047 = !{!"0000017C2E3C89B0.w256.b0", !1048, i64 0}
!1048 = !{!"0000017C2E3C89B0.w512.b0", !1049, i64 0}
!1049 = !{!"0000017C2E3C89B0.w1024.b0", !1050, i64 0}
!1050 = !{!"0000017C2E3C89B0", !21, i64 0}
!1051 = !{!1052, !1052, i64 0}
!1052 = !{!"0000017C2E3C95F0.w8.b0", !1053, i64 0}
!1053 = !{!"0000017C2E3C95F0.w16.b0", !1054, i64 0}
!1054 = !{!"0000017C2E3C95F0.w32.b0", !1055, i64 0}
!1055 = !{!"0000017C2E3C95F0.w64.b0", !1056, i64 0}
!1056 = !{!"0000017C2E3C95F0.w128.b0", !1057, i64 0}
!1057 = !{!"0000017C2E3C95F0.w256.b0", !1058, i64 0}
!1058 = !{!"0000017C2E3C95F0.w512.b0", !1059, i64 0}
!1059 = !{!"0000017C2E3C95F0.w1024.b0", !1060, i64 0}
!1060 = !{!"0000017C2E3C95F0", !21, i64 0}
!1061 = !{!1062, !1062, i64 0}
!1062 = !{!"0000017C2E3C95F0.w8.b8", !1053, i64 0}
!1063 = !{!1064, !1064, i64 0}
!1064 = !{!"0000017C2E3C95F0.w8.b16", !1065, i64 0}
!1065 = !{!"0000017C2E3C95F0.w16.b16", !1054, i64 0}
!1066 = !{!1067, !1067, i64 0}
!1067 = !{!"0000017C2E3C95F0.w8.b24", !1065, i64 0}
!1068 = !{!1069, !1069, i64 0}
!1069 = !{!"0000017C2E3C9DB0.w8.b8", !1070, i64 0}
!1070 = !{!"0000017C2E3C9DB0.w16.b0", !1071, i64 0}
!1071 = !{!"0000017C2E3C9DB0.w32.b0", !1072, i64 0}
!1072 = !{!"0000017C2E3C9DB0.w64.b0", !1073, i64 0}
!1073 = !{!"0000017C2E3C9DB0.w128.b0", !1074, i64 0}
!1074 = !{!"0000017C2E3C9DB0.w256.b0", !1075, i64 0}
!1075 = !{!"0000017C2E3C9DB0.w512.b0", !1076, i64 0}
!1076 = !{!"0000017C2E3C9DB0.w1024.b0", !1077, i64 0}
!1077 = !{!"0000017C2E3C9DB0", !21, i64 0}
!1078 = !{!1079, !1079, i64 0}
!1079 = !{!"0000017C2E3CB070.w8.b0", !1080, i64 0}
!1080 = !{!"0000017C2E3CB070.w16.b0", !1081, i64 0}
!1081 = !{!"0000017C2E3CB070.w32.b0", !1082, i64 0}
!1082 = !{!"0000017C2E3CB070.w64.b0", !1083, i64 0}
!1083 = !{!"0000017C2E3CB070.w128.b0", !1084, i64 0}
!1084 = !{!"0000017C2E3CB070.w256.b0", !1085, i64 0}
!1085 = !{!"0000017C2E3CB070.w512.b0", !1086, i64 0}
!1086 = !{!"0000017C2E3CB070.w1024.b0", !1087, i64 0}
!1087 = !{!"0000017C2E3CB070", !21, i64 0}
!1088 = !{!1089, !1089, i64 0}
!1089 = !{!"0000017C2E3CB070.w8.b8", !1080, i64 0}
!1090 = !{!1091, !1091, i64 0}
!1091 = !{!"0000017C2E3CB070.w8.b16", !1092, i64 0}
!1092 = !{!"0000017C2E3CB070.w16.b16", !1081, i64 0}
!1093 = !{!1094, !1094, i64 0}
!1094 = !{!"0000017C2E3CB070.w8.b24", !1092, i64 0}
!1095 = !{!1096, !1096, i64 0}
!1096 = !{!"0000017C2E3CA5F0.w8.b8", !1097, i64 0}
!1097 = !{!"0000017C2E3CA5F0.w16.b0", !1098, i64 0}
!1098 = !{!"0000017C2E3CA5F0.w32.b0", !1099, i64 0}
!1099 = !{!"0000017C2E3CA5F0.w64.b0", !1100, i64 0}
!1100 = !{!"0000017C2E3CA5F0.w128.b0", !1101, i64 0}
!1101 = !{!"0000017C2E3CA5F0.w256.b0", !1102, i64 0}
!1102 = !{!"0000017C2E3CA5F0.w512.b0", !1103, i64 0}
!1103 = !{!"0000017C2E3CA5F0.w1024.b0", !1104, i64 0}
!1104 = !{!"0000017C2E3CA5F0", !21, i64 0}
!1105 = !{!1106, !1106, i64 0}
!1106 = !{!"0000017C2E3CA5F0.w8.b16", !1107, i64 0}
!1107 = !{!"0000017C2E3CA5F0.w16.b16", !1098, i64 0}
!1108 = !{!1109, !1109, i64 0}
!1109 = !{!"0000017C2E3CA5F0.w8.b24", !1107, i64 0}
!1110 = !{!1111, !1111, i64 0}
!1111 = !{!"0000017C2E4FF470.w4.b0", !1112, i64 0}
!1112 = !{!"0000017C2E4FF470.w8.b0", !1113, i64 0}
!1113 = !{!"0000017C2E4FF470.w16.b0", !1114, i64 0}
!1114 = !{!"0000017C2E4FF470.w32.b0", !1115, i64 0}
!1115 = !{!"0000017C2E4FF470.w64.b0", !1116, i64 0}
!1116 = !{!"0000017C2E4FF470.w128.b0", !1117, i64 0}
!1117 = !{!"0000017C2E4FF470.w256.b0", !1118, i64 0}
!1118 = !{!"0000017C2E4FF470.w512.b0", !1119, i64 0}
!1119 = !{!"0000017C2E4FF470.w1024.b0", !1120, i64 0}
!1120 = !{!"0000017C2E4FF470", !21, i64 0}
!1121 = !{!1122, !1122, i64 0}
!1122 = !{!"0000017C2E4FF470.w4.b4", !1112, i64 0}
!1123 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129, !1130}
!1125 = !DILocalVariable(name: "arg1", arg: 1, scope: !1123, file: !1, type: !8)
!1126 = !DILocalVariable(name: "arg2", arg: 2, scope: !1123, file: !1, type: !9)
!1127 = !DILocalVariable(name: "arg3", arg: 3, scope: !1123, file: !1, type: !7)
!1128 = !DILocalVariable(name: "arg4", arg: 4, scope: !1123, file: !1, type: !8)
!1129 = !DILocalVariable(name: "arg5", arg: 5, scope: !1123, file: !1, type: !9)
!1130 = !DILocalVariable(name: "arg6", arg: 6, scope: !1123, file: !1, type: !8)
!1131 = !DILocation(line: 0, scope: !1123)
!1132 = !{!1133, !1133, i64 0}
!1133 = !{!"0000017C2E3B61F0.w4.b0", !1134, i64 0}
!1134 = !{!"0000017C2E3B61F0.w8.b0", !1135, i64 0}
!1135 = !{!"0000017C2E3B61F0.w16.b0", !1136, i64 0}
!1136 = !{!"0000017C2E3B61F0.w32.b0", !1137, i64 0}
!1137 = !{!"0000017C2E3B61F0.w64.b0", !1138, i64 0}
!1138 = !{!"0000017C2E3B61F0.w128.b0", !1139, i64 0}
!1139 = !{!"0000017C2E3B61F0.w256.b0", !1140, i64 0}
!1140 = !{!"0000017C2E3B61F0.w512.b0", !1141, i64 0}
!1141 = !{!"0000017C2E3B61F0.w1024.b0", !1142, i64 0}
!1142 = !{!"0000017C2E3B61F0", !21, i64 0}
!1143 = !{!1144, !1144, i64 0}
!1144 = !{!"0000017C2E3B61F0.w4.b4", !1134, i64 0}
!1145 = !{!1146, !1146, i64 0}
!1146 = !{!"0000017C2E3B61F0.w4.b8", !1147, i64 0}
!1147 = !{!"0000017C2E3B61F0.w8.b8", !1135, i64 0}
!1148 = !{!1149, !1149, i64 0}
!1149 = !{!"0000017C2E3B61F0.w4.b12", !1147, i64 0}
!1150 = !{!1151, !1151, i64 0}
!1151 = !{!"0000017C2E3BCB70.w8.b0", !1152, i64 0}
!1152 = !{!"0000017C2E3BCB70.w16.b0", !1153, i64 0}
!1153 = !{!"0000017C2E3BCB70.w32.b0", !1154, i64 0}
!1154 = !{!"0000017C2E3BCB70.w64.b0", !1155, i64 0}
!1155 = !{!"0000017C2E3BCB70.w128.b0", !1156, i64 0}
!1156 = !{!"0000017C2E3BCB70.w256.b0", !1157, i64 0}
!1157 = !{!"0000017C2E3BCB70.w512.b0", !1158, i64 0}
!1158 = !{!"0000017C2E3BCB70.w1024.b0", !1159, i64 0}
!1159 = !{!"0000017C2E3BCB70", !21, i64 0}
!1160 = !{!1161, !1161, i64 0}
!1161 = !{!"0000017C2E3BCB70.w8.b8", !1152, i64 0}
!1162 = !{!1163, !1163, i64 0}
!1163 = !{!"0000017C2E3BCB70.w8.b16", !1164, i64 0}
!1164 = !{!"0000017C2E3BCB70.w16.b16", !1153, i64 0}
!1165 = !{!1166, !1166, i64 0}
!1166 = !{!"0000017C2E3BCB70.w8.b24", !1164, i64 0}
!1167 = !{!1168, !1168, i64 0}
!1168 = !{!"0000017C2E3BC2F0.w8.b8", !1169, i64 0}
!1169 = !{!"0000017C2E3BC2F0.w16.b0", !1170, i64 0}
!1170 = !{!"0000017C2E3BC2F0.w32.b0", !1171, i64 0}
!1171 = !{!"0000017C2E3BC2F0.w64.b0", !1172, i64 0}
!1172 = !{!"0000017C2E3BC2F0.w128.b0", !1173, i64 0}
!1173 = !{!"0000017C2E3BC2F0.w256.b0", !1174, i64 0}
!1174 = !{!"0000017C2E3BC2F0.w512.b0", !1175, i64 0}
!1175 = !{!"0000017C2E3BC2F0.w1024.b0", !1176, i64 0}
!1176 = !{!"0000017C2E3BC2F0", !21, i64 0}
!1177 = !{!1178, !1178, i64 0}
!1178 = !{!"0000017C2E3BC2F0.w8.b16", !1179, i64 0}
!1179 = !{!"0000017C2E3BC2F0.w16.b16", !1170, i64 0}
!1180 = !{!1181, !1181, i64 0}
!1181 = !{!"0000017C2E3BC2F0.w8.b24", !1179, i64 0}
!1182 = !{!1183, !1183, i64 0}
!1183 = !{!"0000017C2E3BD5B0.w8.b0", !1184, i64 0}
!1184 = !{!"0000017C2E3BD5B0.w16.b0", !1185, i64 0}
!1185 = !{!"0000017C2E3BD5B0.w32.b0", !1186, i64 0}
!1186 = !{!"0000017C2E3BD5B0.w64.b0", !1187, i64 0}
!1187 = !{!"0000017C2E3BD5B0.w128.b0", !1188, i64 0}
!1188 = !{!"0000017C2E3BD5B0.w256.b0", !1189, i64 0}
!1189 = !{!"0000017C2E3BD5B0.w512.b0", !1190, i64 0}
!1190 = !{!"0000017C2E3BD5B0.w1024.b0", !1191, i64 0}
!1191 = !{!"0000017C2E3BD5B0", !21, i64 0}
!1192 = !{!1193, !1193, i64 0}
!1193 = !{!"0000017C2E3BD5B0.w8.b8", !1184, i64 0}
!1194 = !{!1195, !1195, i64 0}
!1195 = !{!"0000017C2E3BD5B0.w8.b16", !1196, i64 0}
!1196 = !{!"0000017C2E3BD5B0.w16.b16", !1185, i64 0}
!1197 = !{!1198, !1198, i64 0}
!1198 = !{!"0000017C2E3BD5B0.w8.b24", !1196, i64 0}
!1199 = !{!1200, !1200, i64 0}
!1200 = !{!"0000017C2E3BD330.w8.b8", !1201, i64 0}
!1201 = !{!"0000017C2E3BD330.w16.b0", !1202, i64 0}
!1202 = !{!"0000017C2E3BD330.w32.b0", !1203, i64 0}
!1203 = !{!"0000017C2E3BD330.w64.b0", !1204, i64 0}
!1204 = !{!"0000017C2E3BD330.w128.b0", !1205, i64 0}
!1205 = !{!"0000017C2E3BD330.w256.b0", !1206, i64 0}
!1206 = !{!"0000017C2E3BD330.w512.b0", !1207, i64 0}
!1207 = !{!"0000017C2E3BD330.w1024.b0", !1208, i64 0}
!1208 = !{!"0000017C2E3BD330", !21, i64 0}
!1209 = !{!1210, !1210, i64 0}
!1210 = !{!"0000017C2E3BE770.w8.b0", !1211, i64 0}
!1211 = !{!"0000017C2E3BE770.w16.b0", !1212, i64 0}
!1212 = !{!"0000017C2E3BE770.w32.b0", !1213, i64 0}
!1213 = !{!"0000017C2E3BE770.w64.b0", !1214, i64 0}
!1214 = !{!"0000017C2E3BE770.w128.b0", !1215, i64 0}
!1215 = !{!"0000017C2E3BE770.w256.b0", !1216, i64 0}
!1216 = !{!"0000017C2E3BE770.w512.b0", !1217, i64 0}
!1217 = !{!"0000017C2E3BE770.w1024.b0", !1218, i64 0}
!1218 = !{!"0000017C2E3BE770", !21, i64 0}
!1219 = !{!1220, !1220, i64 0}
!1220 = !{!"0000017C2E3BE770.w8.b8", !1211, i64 0}
!1221 = !{!1222, !1222, i64 0}
!1222 = !{!"0000017C2E3BE770.w8.b16", !1223, i64 0}
!1223 = !{!"0000017C2E3BE770.w16.b16", !1212, i64 0}
!1224 = !{!1225, !1225, i64 0}
!1225 = !{!"0000017C2E3BE770.w8.b24", !1223, i64 0}
!1226 = !{!1227, !1227, i64 0}
!1227 = !{!"0000017C2E3BE030.w8.b8", !1228, i64 0}
!1228 = !{!"0000017C2E3BE030.w16.b0", !1229, i64 0}
!1229 = !{!"0000017C2E3BE030.w32.b0", !1230, i64 0}
!1230 = !{!"0000017C2E3BE030.w64.b0", !1231, i64 0}
!1231 = !{!"0000017C2E3BE030.w128.b0", !1232, i64 0}
!1232 = !{!"0000017C2E3BE030.w256.b0", !1233, i64 0}
!1233 = !{!"0000017C2E3BE030.w512.b0", !1234, i64 0}
!1234 = !{!"0000017C2E3BE030.w1024.b0", !1235, i64 0}
!1235 = !{!"0000017C2E3BE030", !21, i64 0}
!1236 = !{!1237, !1237, i64 0}
!1237 = !{!"0000017C2E3BEC70.w8.b0", !1238, i64 0}
!1238 = !{!"0000017C2E3BEC70.w16.b0", !1239, i64 0}
!1239 = !{!"0000017C2E3BEC70.w32.b0", !1240, i64 0}
!1240 = !{!"0000017C2E3BEC70.w64.b0", !1241, i64 0}
!1241 = !{!"0000017C2E3BEC70.w128.b0", !1242, i64 0}
!1242 = !{!"0000017C2E3BEC70.w256.b0", !1243, i64 0}
!1243 = !{!"0000017C2E3BEC70.w512.b0", !1244, i64 0}
!1244 = !{!"0000017C2E3BEC70.w1024.b0", !1245, i64 0}
!1245 = !{!"0000017C2E3BEC70", !21, i64 0}
!1246 = !{!1247, !1247, i64 0}
!1247 = !{!"0000017C2E3BEC70.w8.b8", !1238, i64 0}
!1248 = !{!1249, !1249, i64 0}
!1249 = !{!"0000017C2E3BEC70.w8.b16", !1250, i64 0}
!1250 = !{!"0000017C2E3BEC70.w16.b16", !1239, i64 0}
!1251 = !{!1252, !1252, i64 0}
!1252 = !{!"0000017C2E3BEC70.w8.b24", !1250, i64 0}
!1253 = !{!1254, !1254, i64 0}
!1254 = !{!"0000017C2E3BF370.w8.b8", !1255, i64 0}
!1255 = !{!"0000017C2E3BF370.w16.b0", !1256, i64 0}
!1256 = !{!"0000017C2E3BF370.w32.b0", !1257, i64 0}
!1257 = !{!"0000017C2E3BF370.w64.b0", !1258, i64 0}
!1258 = !{!"0000017C2E3BF370.w128.b0", !1259, i64 0}
!1259 = !{!"0000017C2E3BF370.w256.b0", !1260, i64 0}
!1260 = !{!"0000017C2E3BF370.w512.b0", !1261, i64 0}
!1261 = !{!"0000017C2E3BF370.w1024.b0", !1262, i64 0}
!1262 = !{!"0000017C2E3BF370", !21, i64 0}
!1263 = !{!1264, !1264, i64 0}
!1264 = !{!"0000017C2E3BF370.w8.b16", !1265, i64 0}
!1265 = !{!"0000017C2E3BF370.w16.b16", !1256, i64 0}
!1266 = !{!1267, !1267, i64 0}
!1267 = !{!"0000017C2E3BF370.w8.b24", !1265, i64 0}
!1268 = !{!1269, !1269, i64 0}
!1269 = !{!"0000017C2E3BBBB0.w4.b0", !1270, i64 0}
!1270 = !{!"0000017C2E3BBBB0.w8.b0", !1271, i64 0}
!1271 = !{!"0000017C2E3BBBB0.w16.b0", !1272, i64 0}
!1272 = !{!"0000017C2E3BBBB0.w32.b0", !1273, i64 0}
!1273 = !{!"0000017C2E3BBBB0.w64.b0", !1274, i64 0}
!1274 = !{!"0000017C2E3BBBB0.w128.b0", !1275, i64 0}
!1275 = !{!"0000017C2E3BBBB0.w256.b0", !1276, i64 0}
!1276 = !{!"0000017C2E3BBBB0.w512.b0", !1277, i64 0}
!1277 = !{!"0000017C2E3BBBB0.w1024.b0", !1278, i64 0}
!1278 = !{!"0000017C2E3BBBB0", !21, i64 0}
!1279 = !{!1280, !1280, i64 0}
!1280 = !{!"0000017C2E3BBBB0.w4.b4", !1270, i64 0}
!1281 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287, !1288}
!1283 = !DILocalVariable(name: "arg1", arg: 1, scope: !1281, file: !1, type: !8)
!1284 = !DILocalVariable(name: "arg2", arg: 2, scope: !1281, file: !1, type: !9)
!1285 = !DILocalVariable(name: "arg3", arg: 3, scope: !1281, file: !1, type: !7)
!1286 = !DILocalVariable(name: "arg4", arg: 4, scope: !1281, file: !1, type: !8)
!1287 = !DILocalVariable(name: "arg5", arg: 5, scope: !1281, file: !1, type: !9)
!1288 = !DILocalVariable(name: "arg6", arg: 6, scope: !1281, file: !1, type: !8)
!1289 = !DILocation(line: 0, scope: !1281)
!1290 = !{!1291, !1291, i64 0}
!1291 = !{!"0000017C1B4BC030.w4.b0", !1292, i64 0}
!1292 = !{!"0000017C1B4BC030.w8.b0", !1293, i64 0}
!1293 = !{!"0000017C1B4BC030.w16.b0", !1294, i64 0}
!1294 = !{!"0000017C1B4BC030.w32.b0", !1295, i64 0}
!1295 = !{!"0000017C1B4BC030.w64.b0", !1296, i64 0}
!1296 = !{!"0000017C1B4BC030.w128.b0", !1297, i64 0}
!1297 = !{!"0000017C1B4BC030.w256.b0", !1298, i64 0}
!1298 = !{!"0000017C1B4BC030.w512.b0", !1299, i64 0}
!1299 = !{!"0000017C1B4BC030.w1024.b0", !1300, i64 0}
!1300 = !{!"0000017C1B4BC030", !21, i64 0}
!1301 = !{!1302, !1302, i64 0}
!1302 = !{!"0000017C1B4BC030.w4.b4", !1292, i64 0}
!1303 = !{!1304, !1304, i64 0}
!1304 = !{!"0000017C1B4BC030.w4.b8", !1305, i64 0}
!1305 = !{!"0000017C1B4BC030.w8.b8", !1293, i64 0}
!1306 = !{!1307, !1307, i64 0}
!1307 = !{!"0000017C1B4BC030.w4.b12", !1305, i64 0}
!1308 = !{!1309, !1309, i64 0}
!1309 = !{!"0000017C1B4BAAF0.w8.b0", !1310, i64 0}
!1310 = !{!"0000017C1B4BAAF0.w16.b0", !1311, i64 0}
!1311 = !{!"0000017C1B4BAAF0.w32.b0", !1312, i64 0}
!1312 = !{!"0000017C1B4BAAF0.w64.b0", !1313, i64 0}
!1313 = !{!"0000017C1B4BAAF0.w128.b0", !1314, i64 0}
!1314 = !{!"0000017C1B4BAAF0.w256.b0", !1315, i64 0}
!1315 = !{!"0000017C1B4BAAF0.w512.b0", !1316, i64 0}
!1316 = !{!"0000017C1B4BAAF0.w1024.b0", !1317, i64 0}
!1317 = !{!"0000017C1B4BAAF0", !21, i64 0}
!1318 = !{!1319, !1319, i64 0}
!1319 = !{!"0000017C1B4BAAF0.w8.b8", !1310, i64 0}
!1320 = !{!1321, !1321, i64 0}
!1321 = !{!"0000017C1B4BAAF0.w8.b16", !1322, i64 0}
!1322 = !{!"0000017C1B4BAAF0.w16.b16", !1311, i64 0}
!1323 = !{!1324, !1324, i64 0}
!1324 = !{!"0000017C1B4BAAF0.w8.b24", !1322, i64 0}
!1325 = !{!1326, !1326, i64 0}
!1326 = !{!"0000017C1AAF42B0.w8.b8", !1327, i64 0}
!1327 = !{!"0000017C1AAF42B0.w16.b0", !1328, i64 0}
!1328 = !{!"0000017C1AAF42B0.w32.b0", !1329, i64 0}
!1329 = !{!"0000017C1AAF42B0.w64.b0", !1330, i64 0}
!1330 = !{!"0000017C1AAF42B0.w128.b0", !1331, i64 0}
!1331 = !{!"0000017C1AAF42B0.w256.b0", !1332, i64 0}
!1332 = !{!"0000017C1AAF42B0.w512.b0", !1333, i64 0}
!1333 = !{!"0000017C1AAF42B0.w1024.b0", !1334, i64 0}
!1334 = !{!"0000017C1AAF42B0", !21, i64 0}
!1335 = !{!1336, !1336, i64 0}
!1336 = !{!"0000017C1AAF42B0.w8.b16", !1337, i64 0}
!1337 = !{!"0000017C1AAF42B0.w16.b16", !1328, i64 0}
!1338 = !{!1339, !1339, i64 0}
!1339 = !{!"0000017C1AAF42B0.w8.b24", !1337, i64 0}
!1340 = !{!1341, !1341, i64 0}
!1341 = !{!"0000017C21D77230.w8.b0", !1342, i64 0}
!1342 = !{!"0000017C21D77230.w16.b0", !1343, i64 0}
!1343 = !{!"0000017C21D77230.w32.b0", !1344, i64 0}
!1344 = !{!"0000017C21D77230.w64.b0", !1345, i64 0}
!1345 = !{!"0000017C21D77230.w128.b0", !1346, i64 0}
!1346 = !{!"0000017C21D77230.w256.b0", !1347, i64 0}
!1347 = !{!"0000017C21D77230.w512.b0", !1348, i64 0}
!1348 = !{!"0000017C21D77230.w1024.b0", !1349, i64 0}
!1349 = !{!"0000017C21D77230", !21, i64 0}
!1350 = !{!1351, !1351, i64 0}
!1351 = !{!"0000017C21D77230.w8.b8", !1342, i64 0}
!1352 = !{!1353, !1353, i64 0}
!1353 = !{!"0000017C21D77230.w8.b16", !1354, i64 0}
!1354 = !{!"0000017C21D77230.w16.b16", !1343, i64 0}
!1355 = !{!1356, !1356, i64 0}
!1356 = !{!"0000017C21D77230.w8.b24", !1354, i64 0}
!1357 = !{!1358, !1358, i64 0}
!1358 = !{!"0000017C225AB930.w8.b8", !1359, i64 0}
!1359 = !{!"0000017C225AB930.w16.b0", !1360, i64 0}
!1360 = !{!"0000017C225AB930.w32.b0", !1361, i64 0}
!1361 = !{!"0000017C225AB930.w64.b0", !1362, i64 0}
!1362 = !{!"0000017C225AB930.w128.b0", !1363, i64 0}
!1363 = !{!"0000017C225AB930.w256.b0", !1364, i64 0}
!1364 = !{!"0000017C225AB930.w512.b0", !1365, i64 0}
!1365 = !{!"0000017C225AB930.w1024.b0", !1366, i64 0}
!1366 = !{!"0000017C225AB930", !21, i64 0}
!1367 = !{!1368, !1368, i64 0}
!1368 = !{!"0000017C237A9B60.w8.b0", !1369, i64 0}
!1369 = !{!"0000017C237A9B60.w16.b0", !1370, i64 0}
!1370 = !{!"0000017C237A9B60.w32.b0", !1371, i64 0}
!1371 = !{!"0000017C237A9B60.w64.b0", !1372, i64 0}
!1372 = !{!"0000017C237A9B60.w128.b0", !1373, i64 0}
!1373 = !{!"0000017C237A9B60.w256.b0", !1374, i64 0}
!1374 = !{!"0000017C237A9B60.w512.b0", !1375, i64 0}
!1375 = !{!"0000017C237A9B60.w1024.b0", !1376, i64 0}
!1376 = !{!"0000017C237A9B60", !21, i64 0}
!1377 = !{!1378, !1378, i64 0}
!1378 = !{!"0000017C237A9B60.w8.b8", !1369, i64 0}
!1379 = !{!1380, !1380, i64 0}
!1380 = !{!"0000017C237A9B60.w8.b16", !1381, i64 0}
!1381 = !{!"0000017C237A9B60.w16.b16", !1370, i64 0}
!1382 = !{!1383, !1383, i64 0}
!1383 = !{!"0000017C237A9B60.w8.b24", !1381, i64 0}
!1384 = !{!1385, !1385, i64 0}
!1385 = !{!"0000017C237AC6E0.w8.b8", !1386, i64 0}
!1386 = !{!"0000017C237AC6E0.w16.b0", !1387, i64 0}
!1387 = !{!"0000017C237AC6E0.w32.b0", !1388, i64 0}
!1388 = !{!"0000017C237AC6E0.w64.b0", !1389, i64 0}
!1389 = !{!"0000017C237AC6E0.w128.b0", !1390, i64 0}
!1390 = !{!"0000017C237AC6E0.w256.b0", !1391, i64 0}
!1391 = !{!"0000017C237AC6E0.w512.b0", !1392, i64 0}
!1392 = !{!"0000017C237AC6E0.w1024.b0", !1393, i64 0}
!1393 = !{!"0000017C237AC6E0", !21, i64 0}
!1394 = !{!1395, !1395, i64 0}
!1395 = !{!"0000017C237C3060.w8.b0", !1396, i64 0}
!1396 = !{!"0000017C237C3060.w16.b0", !1397, i64 0}
!1397 = !{!"0000017C237C3060.w32.b0", !1398, i64 0}
!1398 = !{!"0000017C237C3060.w64.b0", !1399, i64 0}
!1399 = !{!"0000017C237C3060.w128.b0", !1400, i64 0}
!1400 = !{!"0000017C237C3060.w256.b0", !1401, i64 0}
!1401 = !{!"0000017C237C3060.w512.b0", !1402, i64 0}
!1402 = !{!"0000017C237C3060.w1024.b0", !1403, i64 0}
!1403 = !{!"0000017C237C3060", !21, i64 0}
!1404 = !{!1405, !1405, i64 0}
!1405 = !{!"0000017C237C3060.w8.b8", !1396, i64 0}
!1406 = !{!1407, !1407, i64 0}
!1407 = !{!"0000017C237C3060.w8.b16", !1408, i64 0}
!1408 = !{!"0000017C237C3060.w16.b16", !1397, i64 0}
!1409 = !{!1410, !1410, i64 0}
!1410 = !{!"0000017C237C3060.w8.b24", !1408, i64 0}
!1411 = !{!1412, !1412, i64 0}
!1412 = !{!"0000017C237C32A0.w8.b8", !1413, i64 0}
!1413 = !{!"0000017C237C32A0.w16.b0", !1414, i64 0}
!1414 = !{!"0000017C237C32A0.w32.b0", !1415, i64 0}
!1415 = !{!"0000017C237C32A0.w64.b0", !1416, i64 0}
!1416 = !{!"0000017C237C32A0.w128.b0", !1417, i64 0}
!1417 = !{!"0000017C237C32A0.w256.b0", !1418, i64 0}
!1418 = !{!"0000017C237C32A0.w512.b0", !1419, i64 0}
!1419 = !{!"0000017C237C32A0.w1024.b0", !1420, i64 0}
!1420 = !{!"0000017C237C32A0", !21, i64 0}
!1421 = !{!1422, !1422, i64 0}
!1422 = !{!"0000017C237C32A0.w8.b16", !1423, i64 0}
!1423 = !{!"0000017C237C32A0.w16.b16", !1414, i64 0}
!1424 = !{!1425, !1425, i64 0}
!1425 = !{!"0000017C237C32A0.w8.b24", !1423, i64 0}
!1426 = !{!1427, !1427, i64 0}
!1427 = !{!"0000017C2E56AD20.w4.b0", !1428, i64 0}
!1428 = !{!"0000017C2E56AD20.w8.b0", !1429, i64 0}
!1429 = !{!"0000017C2E56AD20.w16.b0", !1430, i64 0}
!1430 = !{!"0000017C2E56AD20.w32.b0", !1431, i64 0}
!1431 = !{!"0000017C2E56AD20.w64.b0", !1432, i64 0}
!1432 = !{!"0000017C2E56AD20.w128.b0", !1433, i64 0}
!1433 = !{!"0000017C2E56AD20.w256.b0", !1434, i64 0}
!1434 = !{!"0000017C2E56AD20.w512.b0", !1435, i64 0}
!1435 = !{!"0000017C2E56AD20.w1024.b0", !1436, i64 0}
!1436 = !{!"0000017C2E56AD20", !21, i64 0}
!1437 = !{!1438, !1438, i64 0}
!1438 = !{!"0000017C2E56AD20.w4.b4", !1428, i64 0}
!1439 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446}
!1441 = !DILocalVariable(name: "arg1", arg: 1, scope: !1439, file: !1, type: !8)
!1442 = !DILocalVariable(name: "arg2", arg: 2, scope: !1439, file: !1, type: !9)
!1443 = !DILocalVariable(name: "arg3", arg: 3, scope: !1439, file: !1, type: !7)
!1444 = !DILocalVariable(name: "arg4", arg: 4, scope: !1439, file: !1, type: !8)
!1445 = !DILocalVariable(name: "arg5", arg: 5, scope: !1439, file: !1, type: !9)
!1446 = !DILocalVariable(name: "arg6", arg: 6, scope: !1439, file: !1, type: !8)
!1447 = !DILocation(line: 0, scope: !1439)
!1448 = !{!1449, !1449, i64 0}
!1449 = !{!"0000017C2E40F660.w4.b0", !1450, i64 0}
!1450 = !{!"0000017C2E40F660.w8.b0", !1451, i64 0}
!1451 = !{!"0000017C2E40F660.w16.b0", !1452, i64 0}
!1452 = !{!"0000017C2E40F660.w32.b0", !1453, i64 0}
!1453 = !{!"0000017C2E40F660.w64.b0", !1454, i64 0}
!1454 = !{!"0000017C2E40F660.w128.b0", !1455, i64 0}
!1455 = !{!"0000017C2E40F660.w256.b0", !1456, i64 0}
!1456 = !{!"0000017C2E40F660.w512.b0", !1457, i64 0}
!1457 = !{!"0000017C2E40F660.w1024.b0", !1458, i64 0}
!1458 = !{!"0000017C2E40F660", !21, i64 0}
!1459 = !{!1460, !1460, i64 0}
!1460 = !{!"0000017C2E40F660.w4.b4", !1450, i64 0}
!1461 = !{!1462, !1462, i64 0}
!1462 = !{!"0000017C2E40F660.w4.b8", !1463, i64 0}
!1463 = !{!"0000017C2E40F660.w8.b8", !1451, i64 0}
!1464 = !{!1465, !1465, i64 0}
!1465 = !{!"0000017C2E40F660.w4.b12", !1463, i64 0}
!1466 = !{!1467, !1467, i64 0}
!1467 = !{!"0000017C2E4167E0.w8.b0", !1468, i64 0}
!1468 = !{!"0000017C2E4167E0.w16.b0", !1469, i64 0}
!1469 = !{!"0000017C2E4167E0.w32.b0", !1470, i64 0}
!1470 = !{!"0000017C2E4167E0.w64.b0", !1471, i64 0}
!1471 = !{!"0000017C2E4167E0.w128.b0", !1472, i64 0}
!1472 = !{!"0000017C2E4167E0.w256.b0", !1473, i64 0}
!1473 = !{!"0000017C2E4167E0.w512.b0", !1474, i64 0}
!1474 = !{!"0000017C2E4167E0.w1024.b0", !1475, i64 0}
!1475 = !{!"0000017C2E4167E0", !21, i64 0}
!1476 = !{!1477, !1477, i64 0}
!1477 = !{!"0000017C2E4167E0.w8.b8", !1468, i64 0}
!1478 = !{!1479, !1479, i64 0}
!1479 = !{!"0000017C2E4167E0.w8.b16", !1480, i64 0}
!1480 = !{!"0000017C2E4167E0.w16.b16", !1469, i64 0}
!1481 = !{!1482, !1482, i64 0}
!1482 = !{!"0000017C2E4167E0.w8.b24", !1480, i64 0}
!1483 = !{!1484, !1484, i64 0}
!1484 = !{!"0000017C2E416EA0.w8.b8", !1485, i64 0}
!1485 = !{!"0000017C2E416EA0.w16.b0", !1486, i64 0}
!1486 = !{!"0000017C2E416EA0.w32.b0", !1487, i64 0}
!1487 = !{!"0000017C2E416EA0.w64.b0", !1488, i64 0}
!1488 = !{!"0000017C2E416EA0.w128.b0", !1489, i64 0}
!1489 = !{!"0000017C2E416EA0.w256.b0", !1490, i64 0}
!1490 = !{!"0000017C2E416EA0.w512.b0", !1491, i64 0}
!1491 = !{!"0000017C2E416EA0.w1024.b0", !1492, i64 0}
!1492 = !{!"0000017C2E416EA0", !21, i64 0}
!1493 = !{!1494, !1494, i64 0}
!1494 = !{!"0000017C2E416EA0.w8.b16", !1495, i64 0}
!1495 = !{!"0000017C2E416EA0.w16.b16", !1486, i64 0}
!1496 = !{!1497, !1497, i64 0}
!1497 = !{!"0000017C2E416EA0.w8.b24", !1495, i64 0}
!1498 = !{!1499, !1499, i64 0}
!1499 = !{!"0000017C2E4176A0.w8.b0", !1500, i64 0}
!1500 = !{!"0000017C2E4176A0.w16.b0", !1501, i64 0}
!1501 = !{!"0000017C2E4176A0.w32.b0", !1502, i64 0}
!1502 = !{!"0000017C2E4176A0.w64.b0", !1503, i64 0}
!1503 = !{!"0000017C2E4176A0.w128.b0", !1504, i64 0}
!1504 = !{!"0000017C2E4176A0.w256.b0", !1505, i64 0}
!1505 = !{!"0000017C2E4176A0.w512.b0", !1506, i64 0}
!1506 = !{!"0000017C2E4176A0.w1024.b0", !1507, i64 0}
!1507 = !{!"0000017C2E4176A0", !21, i64 0}
!1508 = !{!1509, !1509, i64 0}
!1509 = !{!"0000017C2E4176A0.w8.b8", !1500, i64 0}
!1510 = !{!1511, !1511, i64 0}
!1511 = !{!"0000017C2E4176A0.w8.b16", !1512, i64 0}
!1512 = !{!"0000017C2E4176A0.w16.b16", !1501, i64 0}
!1513 = !{!1514, !1514, i64 0}
!1514 = !{!"0000017C2E4176A0.w8.b24", !1512, i64 0}
!1515 = !{!1516, !1516, i64 0}
!1516 = !{!"0000017C2E417960.w8.b8", !1517, i64 0}
!1517 = !{!"0000017C2E417960.w16.b0", !1518, i64 0}
!1518 = !{!"0000017C2E417960.w32.b0", !1519, i64 0}
!1519 = !{!"0000017C2E417960.w64.b0", !1520, i64 0}
!1520 = !{!"0000017C2E417960.w128.b0", !1521, i64 0}
!1521 = !{!"0000017C2E417960.w256.b0", !1522, i64 0}
!1522 = !{!"0000017C2E417960.w512.b0", !1523, i64 0}
!1523 = !{!"0000017C2E417960.w1024.b0", !1524, i64 0}
!1524 = !{!"0000017C2E417960", !21, i64 0}
!1525 = !{!1526, !1526, i64 0}
!1526 = !{!"0000017C2E417FE0.w8.b0", !1527, i64 0}
!1527 = !{!"0000017C2E417FE0.w16.b0", !1528, i64 0}
!1528 = !{!"0000017C2E417FE0.w32.b0", !1529, i64 0}
!1529 = !{!"0000017C2E417FE0.w64.b0", !1530, i64 0}
!1530 = !{!"0000017C2E417FE0.w128.b0", !1531, i64 0}
!1531 = !{!"0000017C2E417FE0.w256.b0", !1532, i64 0}
!1532 = !{!"0000017C2E417FE0.w512.b0", !1533, i64 0}
!1533 = !{!"0000017C2E417FE0.w1024.b0", !1534, i64 0}
!1534 = !{!"0000017C2E417FE0", !21, i64 0}
!1535 = !{!1536, !1536, i64 0}
!1536 = !{!"0000017C2E417FE0.w8.b8", !1527, i64 0}
!1537 = !{!1538, !1538, i64 0}
!1538 = !{!"0000017C2E417FE0.w8.b16", !1539, i64 0}
!1539 = !{!"0000017C2E417FE0.w16.b16", !1528, i64 0}
!1540 = !{!1541, !1541, i64 0}
!1541 = !{!"0000017C2E417FE0.w8.b24", !1539, i64 0}
!1542 = !{!1543, !1543, i64 0}
!1543 = !{!"0000017C2E418AE0.w8.b8", !1544, i64 0}
!1544 = !{!"0000017C2E418AE0.w16.b0", !1545, i64 0}
!1545 = !{!"0000017C2E418AE0.w32.b0", !1546, i64 0}
!1546 = !{!"0000017C2E418AE0.w64.b0", !1547, i64 0}
!1547 = !{!"0000017C2E418AE0.w128.b0", !1548, i64 0}
!1548 = !{!"0000017C2E418AE0.w256.b0", !1549, i64 0}
!1549 = !{!"0000017C2E418AE0.w512.b0", !1550, i64 0}
!1550 = !{!"0000017C2E418AE0.w1024.b0", !1551, i64 0}
!1551 = !{!"0000017C2E418AE0", !21, i64 0}
!1552 = !{!1553, !1553, i64 0}
!1553 = !{!"0000017C2E4190E0.w8.b0", !1554, i64 0}
!1554 = !{!"0000017C2E4190E0.w16.b0", !1555, i64 0}
!1555 = !{!"0000017C2E4190E0.w32.b0", !1556, i64 0}
!1556 = !{!"0000017C2E4190E0.w64.b0", !1557, i64 0}
!1557 = !{!"0000017C2E4190E0.w128.b0", !1558, i64 0}
!1558 = !{!"0000017C2E4190E0.w256.b0", !1559, i64 0}
!1559 = !{!"0000017C2E4190E0.w512.b0", !1560, i64 0}
!1560 = !{!"0000017C2E4190E0.w1024.b0", !1561, i64 0}
!1561 = !{!"0000017C2E4190E0", !21, i64 0}
!1562 = !{!1563, !1563, i64 0}
!1563 = !{!"0000017C2E4190E0.w8.b8", !1554, i64 0}
!1564 = !{!1565, !1565, i64 0}
!1565 = !{!"0000017C2E4190E0.w8.b16", !1566, i64 0}
!1566 = !{!"0000017C2E4190E0.w16.b16", !1555, i64 0}
!1567 = !{!1568, !1568, i64 0}
!1568 = !{!"0000017C2E4190E0.w8.b24", !1566, i64 0}
!1569 = !{!1570, !1570, i64 0}
!1570 = !{!"0000017C2E418F20.w8.b8", !1571, i64 0}
!1571 = !{!"0000017C2E418F20.w16.b0", !1572, i64 0}
!1572 = !{!"0000017C2E418F20.w32.b0", !1573, i64 0}
!1573 = !{!"0000017C2E418F20.w64.b0", !1574, i64 0}
!1574 = !{!"0000017C2E418F20.w128.b0", !1575, i64 0}
!1575 = !{!"0000017C2E418F20.w256.b0", !1576, i64 0}
!1576 = !{!"0000017C2E418F20.w512.b0", !1577, i64 0}
!1577 = !{!"0000017C2E418F20.w1024.b0", !1578, i64 0}
!1578 = !{!"0000017C2E418F20", !21, i64 0}
!1579 = !{!1580, !1580, i64 0}
!1580 = !{!"0000017C2E418F20.w8.b16", !1581, i64 0}
!1581 = !{!"0000017C2E418F20.w16.b16", !1572, i64 0}
!1582 = !{!1583, !1583, i64 0}
!1583 = !{!"0000017C2E418F20.w8.b24", !1581, i64 0}
!1584 = !{!1585, !1585, i64 0}
!1585 = !{!"0000017C2E2F0170.w4.b0", !1586, i64 0}
!1586 = !{!"0000017C2E2F0170.w8.b0", !1587, i64 0}
!1587 = !{!"0000017C2E2F0170.w16.b0", !1588, i64 0}
!1588 = !{!"0000017C2E2F0170.w32.b0", !1589, i64 0}
!1589 = !{!"0000017C2E2F0170.w64.b0", !1590, i64 0}
!1590 = !{!"0000017C2E2F0170.w128.b0", !1591, i64 0}
!1591 = !{!"0000017C2E2F0170.w256.b0", !1592, i64 0}
!1592 = !{!"0000017C2E2F0170.w512.b0", !1593, i64 0}
!1593 = !{!"0000017C2E2F0170.w1024.b0", !1594, i64 0}
!1594 = !{!"0000017C2E2F0170", !21, i64 0}
!1595 = !{!1596, !1596, i64 0}
!1596 = !{!"0000017C2E2F0170.w4.b4", !1586, i64 0}
!1597 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604}
!1599 = !DILocalVariable(name: "arg1", arg: 1, scope: !1597, file: !1, type: !8)
!1600 = !DILocalVariable(name: "arg2", arg: 2, scope: !1597, file: !1, type: !9)
!1601 = !DILocalVariable(name: "arg3", arg: 3, scope: !1597, file: !1, type: !7)
!1602 = !DILocalVariable(name: "arg4", arg: 4, scope: !1597, file: !1, type: !8)
!1603 = !DILocalVariable(name: "arg5", arg: 5, scope: !1597, file: !1, type: !9)
!1604 = !DILocalVariable(name: "arg6", arg: 6, scope: !1597, file: !1, type: !8)
!1605 = !DILocation(line: 0, scope: !1597)
!1606 = !{!1607, !1607, i64 0}
!1607 = !{!"0000017C2E2FD630.w4.b0", !1608, i64 0}
!1608 = !{!"0000017C2E2FD630.w8.b0", !1609, i64 0}
!1609 = !{!"0000017C2E2FD630.w16.b0", !1610, i64 0}
!1610 = !{!"0000017C2E2FD630.w32.b0", !1611, i64 0}
!1611 = !{!"0000017C2E2FD630.w64.b0", !1612, i64 0}
!1612 = !{!"0000017C2E2FD630.w128.b0", !1613, i64 0}
!1613 = !{!"0000017C2E2FD630.w256.b0", !1614, i64 0}
!1614 = !{!"0000017C2E2FD630.w512.b0", !1615, i64 0}
!1615 = !{!"0000017C2E2FD630.w1024.b0", !1616, i64 0}
!1616 = !{!"0000017C2E2FD630", !21, i64 0}
!1617 = !{!1618, !1618, i64 0}
!1618 = !{!"0000017C2E2FD630.w4.b4", !1608, i64 0}
!1619 = !{!1620, !1620, i64 0}
!1620 = !{!"0000017C2E2FD630.w4.b8", !1621, i64 0}
!1621 = !{!"0000017C2E2FD630.w8.b8", !1609, i64 0}
!1622 = !{!1623, !1623, i64 0}
!1623 = !{!"0000017C2E2FD630.w4.b12", !1621, i64 0}
!1624 = !{!1625, !1625, i64 0}
!1625 = !{!"0000017C2E303F30.w8.b0", !1626, i64 0}
!1626 = !{!"0000017C2E303F30.w16.b0", !1627, i64 0}
!1627 = !{!"0000017C2E303F30.w32.b0", !1628, i64 0}
!1628 = !{!"0000017C2E303F30.w64.b0", !1629, i64 0}
!1629 = !{!"0000017C2E303F30.w128.b0", !1630, i64 0}
!1630 = !{!"0000017C2E303F30.w256.b0", !1631, i64 0}
!1631 = !{!"0000017C2E303F30.w512.b0", !1632, i64 0}
!1632 = !{!"0000017C2E303F30.w1024.b0", !1633, i64 0}
!1633 = !{!"0000017C2E303F30", !21, i64 0}
!1634 = !{!1635, !1635, i64 0}
!1635 = !{!"0000017C2E303F30.w8.b8", !1626, i64 0}
!1636 = !{!1637, !1637, i64 0}
!1637 = !{!"0000017C2E303F30.w8.b16", !1638, i64 0}
!1638 = !{!"0000017C2E303F30.w16.b16", !1627, i64 0}
!1639 = !{!1640, !1640, i64 0}
!1640 = !{!"0000017C2E303F30.w8.b24", !1638, i64 0}
!1641 = !{!1642, !1642, i64 0}
!1642 = !{!"0000017C2E303E30.w8.b8", !1643, i64 0}
!1643 = !{!"0000017C2E303E30.w16.b0", !1644, i64 0}
!1644 = !{!"0000017C2E303E30.w32.b0", !1645, i64 0}
!1645 = !{!"0000017C2E303E30.w64.b0", !1646, i64 0}
!1646 = !{!"0000017C2E303E30.w128.b0", !1647, i64 0}
!1647 = !{!"0000017C2E303E30.w256.b0", !1648, i64 0}
!1648 = !{!"0000017C2E303E30.w512.b0", !1649, i64 0}
!1649 = !{!"0000017C2E303E30.w1024.b0", !1650, i64 0}
!1650 = !{!"0000017C2E303E30", !21, i64 0}
!1651 = !{!1652, !1652, i64 0}
!1652 = !{!"0000017C2E303E30.w8.b16", !1653, i64 0}
!1653 = !{!"0000017C2E303E30.w16.b16", !1644, i64 0}
!1654 = !{!1655, !1655, i64 0}
!1655 = !{!"0000017C2E303E30.w8.b24", !1653, i64 0}
!1656 = !{!1657, !1657, i64 0}
!1657 = !{!"0000017C2E304D70.w8.b0", !1658, i64 0}
!1658 = !{!"0000017C2E304D70.w16.b0", !1659, i64 0}
!1659 = !{!"0000017C2E304D70.w32.b0", !1660, i64 0}
!1660 = !{!"0000017C2E304D70.w64.b0", !1661, i64 0}
!1661 = !{!"0000017C2E304D70.w128.b0", !1662, i64 0}
!1662 = !{!"0000017C2E304D70.w256.b0", !1663, i64 0}
!1663 = !{!"0000017C2E304D70.w512.b0", !1664, i64 0}
!1664 = !{!"0000017C2E304D70.w1024.b0", !1665, i64 0}
!1665 = !{!"0000017C2E304D70", !21, i64 0}
!1666 = !{!1667, !1667, i64 0}
!1667 = !{!"0000017C2E304D70.w8.b8", !1658, i64 0}
!1668 = !{!1669, !1669, i64 0}
!1669 = !{!"0000017C2E304D70.w8.b16", !1670, i64 0}
!1670 = !{!"0000017C2E304D70.w16.b16", !1659, i64 0}
!1671 = !{!1672, !1672, i64 0}
!1672 = !{!"0000017C2E304D70.w8.b24", !1670, i64 0}
!1673 = !{!1674, !1674, i64 0}
!1674 = !{!"0000017C2E3042F0.w8.b8", !1675, i64 0}
!1675 = !{!"0000017C2E3042F0.w16.b0", !1676, i64 0}
!1676 = !{!"0000017C2E3042F0.w32.b0", !1677, i64 0}
!1677 = !{!"0000017C2E3042F0.w64.b0", !1678, i64 0}
!1678 = !{!"0000017C2E3042F0.w128.b0", !1679, i64 0}
!1679 = !{!"0000017C2E3042F0.w256.b0", !1680, i64 0}
!1680 = !{!"0000017C2E3042F0.w512.b0", !1681, i64 0}
!1681 = !{!"0000017C2E3042F0.w1024.b0", !1682, i64 0}
!1682 = !{!"0000017C2E3042F0", !21, i64 0}
!1683 = !{!1684, !1684, i64 0}
!1684 = !{!"0000017C2E305330.w8.b0", !1685, i64 0}
!1685 = !{!"0000017C2E305330.w16.b0", !1686, i64 0}
!1686 = !{!"0000017C2E305330.w32.b0", !1687, i64 0}
!1687 = !{!"0000017C2E305330.w64.b0", !1688, i64 0}
!1688 = !{!"0000017C2E305330.w128.b0", !1689, i64 0}
!1689 = !{!"0000017C2E305330.w256.b0", !1690, i64 0}
!1690 = !{!"0000017C2E305330.w512.b0", !1691, i64 0}
!1691 = !{!"0000017C2E305330.w1024.b0", !1692, i64 0}
!1692 = !{!"0000017C2E305330", !21, i64 0}
!1693 = !{!1694, !1694, i64 0}
!1694 = !{!"0000017C2E305330.w8.b8", !1685, i64 0}
!1695 = !{!1696, !1696, i64 0}
!1696 = !{!"0000017C2E305330.w8.b16", !1697, i64 0}
!1697 = !{!"0000017C2E305330.w16.b16", !1686, i64 0}
!1698 = !{!1699, !1699, i64 0}
!1699 = !{!"0000017C2E305330.w8.b24", !1697, i64 0}
!1700 = !{!1701, !1701, i64 0}
!1701 = !{!"0000017C2E305DF0.w8.b8", !1702, i64 0}
!1702 = !{!"0000017C2E305DF0.w16.b0", !1703, i64 0}
!1703 = !{!"0000017C2E305DF0.w32.b0", !1704, i64 0}
!1704 = !{!"0000017C2E305DF0.w64.b0", !1705, i64 0}
!1705 = !{!"0000017C2E305DF0.w128.b0", !1706, i64 0}
!1706 = !{!"0000017C2E305DF0.w256.b0", !1707, i64 0}
!1707 = !{!"0000017C2E305DF0.w512.b0", !1708, i64 0}
!1708 = !{!"0000017C2E305DF0.w1024.b0", !1709, i64 0}
!1709 = !{!"0000017C2E305DF0", !21, i64 0}
!1710 = !{!1711, !1711, i64 0}
!1711 = !{!"0000017C2E3051B0.w8.b0", !1712, i64 0}
!1712 = !{!"0000017C2E3051B0.w16.b0", !1713, i64 0}
!1713 = !{!"0000017C2E3051B0.w32.b0", !1714, i64 0}
!1714 = !{!"0000017C2E3051B0.w64.b0", !1715, i64 0}
!1715 = !{!"0000017C2E3051B0.w128.b0", !1716, i64 0}
!1716 = !{!"0000017C2E3051B0.w256.b0", !1717, i64 0}
!1717 = !{!"0000017C2E3051B0.w512.b0", !1718, i64 0}
!1718 = !{!"0000017C2E3051B0.w1024.b0", !1719, i64 0}
!1719 = !{!"0000017C2E3051B0", !21, i64 0}
!1720 = !{!1721, !1721, i64 0}
!1721 = !{!"0000017C2E3051B0.w8.b8", !1712, i64 0}
!1722 = !{!1723, !1723, i64 0}
!1723 = !{!"0000017C2E3051B0.w8.b16", !1724, i64 0}
!1724 = !{!"0000017C2E3051B0.w16.b16", !1713, i64 0}
!1725 = !{!1726, !1726, i64 0}
!1726 = !{!"0000017C2E3051B0.w8.b24", !1724, i64 0}
!1727 = !{!1728, !1728, i64 0}
!1728 = !{!"0000017C2E306630.w8.b8", !1729, i64 0}
!1729 = !{!"0000017C2E306630.w16.b0", !1730, i64 0}
!1730 = !{!"0000017C2E306630.w32.b0", !1731, i64 0}
!1731 = !{!"0000017C2E306630.w64.b0", !1732, i64 0}
!1732 = !{!"0000017C2E306630.w128.b0", !1733, i64 0}
!1733 = !{!"0000017C2E306630.w256.b0", !1734, i64 0}
!1734 = !{!"0000017C2E306630.w512.b0", !1735, i64 0}
!1735 = !{!"0000017C2E306630.w1024.b0", !1736, i64 0}
!1736 = !{!"0000017C2E306630", !21, i64 0}
!1737 = !{!1738, !1738, i64 0}
!1738 = !{!"0000017C2E306630.w8.b16", !1739, i64 0}
!1739 = !{!"0000017C2E306630.w16.b16", !1730, i64 0}
!1740 = !{!1741, !1741, i64 0}
!1741 = !{!"0000017C2E306630.w8.b24", !1739, i64 0}
!1742 = !{!1743, !1743, i64 0}
!1743 = !{!"0000017C2E49BF70.w4.b0", !1744, i64 0}
!1744 = !{!"0000017C2E49BF70.w8.b0", !1745, i64 0}
!1745 = !{!"0000017C2E49BF70.w16.b0", !1746, i64 0}
!1746 = !{!"0000017C2E49BF70.w32.b0", !1747, i64 0}
!1747 = !{!"0000017C2E49BF70.w64.b0", !1748, i64 0}
!1748 = !{!"0000017C2E49BF70.w128.b0", !1749, i64 0}
!1749 = !{!"0000017C2E49BF70.w256.b0", !1750, i64 0}
!1750 = !{!"0000017C2E49BF70.w512.b0", !1751, i64 0}
!1751 = !{!"0000017C2E49BF70.w1024.b0", !1752, i64 0}
!1752 = !{!"0000017C2E49BF70", !21, i64 0}
!1753 = !{!1754, !1754, i64 0}
!1754 = !{!"0000017C2E49BF70.w4.b4", !1744, i64 0}
!1755 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762}
!1757 = !DILocalVariable(name: "arg1", arg: 1, scope: !1755, file: !1, type: !8)
!1758 = !DILocalVariable(name: "arg2", arg: 2, scope: !1755, file: !1, type: !9)
!1759 = !DILocalVariable(name: "arg3", arg: 3, scope: !1755, file: !1, type: !7)
!1760 = !DILocalVariable(name: "arg4", arg: 4, scope: !1755, file: !1, type: !8)
!1761 = !DILocalVariable(name: "arg5", arg: 5, scope: !1755, file: !1, type: !9)
!1762 = !DILocalVariable(name: "arg6", arg: 6, scope: !1755, file: !1, type: !8)
!1763 = !DILocation(line: 0, scope: !1755)
!1764 = !{!1765, !1765, i64 0}
!1765 = !{!"0000017C2E2F2F70.w4.b0", !1766, i64 0}
!1766 = !{!"0000017C2E2F2F70.w8.b0", !1767, i64 0}
!1767 = !{!"0000017C2E2F2F70.w16.b0", !1768, i64 0}
!1768 = !{!"0000017C2E2F2F70.w32.b0", !1769, i64 0}
!1769 = !{!"0000017C2E2F2F70.w64.b0", !1770, i64 0}
!1770 = !{!"0000017C2E2F2F70.w128.b0", !1771, i64 0}
!1771 = !{!"0000017C2E2F2F70.w256.b0", !1772, i64 0}
!1772 = !{!"0000017C2E2F2F70.w512.b0", !1773, i64 0}
!1773 = !{!"0000017C2E2F2F70.w1024.b0", !1774, i64 0}
!1774 = !{!"0000017C2E2F2F70", !21, i64 0}
!1775 = !{!1776, !1776, i64 0}
!1776 = !{!"0000017C2E2F2F70.w4.b4", !1766, i64 0}
!1777 = !{!1778, !1778, i64 0}
!1778 = !{!"0000017C2E2F2F70.w4.b8", !1779, i64 0}
!1779 = !{!"0000017C2E2F2F70.w8.b8", !1767, i64 0}
!1780 = !{!1781, !1781, i64 0}
!1781 = !{!"0000017C2E2F2F70.w4.b12", !1779, i64 0}
!1782 = !{!1783, !1783, i64 0}
!1783 = !{!"0000017C2E2F8DB0.w8.b0", !1784, i64 0}
!1784 = !{!"0000017C2E2F8DB0.w16.b0", !1785, i64 0}
!1785 = !{!"0000017C2E2F8DB0.w32.b0", !1786, i64 0}
!1786 = !{!"0000017C2E2F8DB0.w64.b0", !1787, i64 0}
!1787 = !{!"0000017C2E2F8DB0.w128.b0", !1788, i64 0}
!1788 = !{!"0000017C2E2F8DB0.w256.b0", !1789, i64 0}
!1789 = !{!"0000017C2E2F8DB0.w512.b0", !1790, i64 0}
!1790 = !{!"0000017C2E2F8DB0.w1024.b0", !1791, i64 0}
!1791 = !{!"0000017C2E2F8DB0", !21, i64 0}
!1792 = !{!1793, !1793, i64 0}
!1793 = !{!"0000017C2E2F8DB0.w8.b8", !1784, i64 0}
!1794 = !{!1795, !1795, i64 0}
!1795 = !{!"0000017C2E2F8DB0.w8.b16", !1796, i64 0}
!1796 = !{!"0000017C2E2F8DB0.w16.b16", !1785, i64 0}
!1797 = !{!1798, !1798, i64 0}
!1798 = !{!"0000017C2E2F8DB0.w8.b24", !1796, i64 0}
!1799 = !{!1800, !1800, i64 0}
!1800 = !{!"0000017C2E2F8270.w8.b8", !1801, i64 0}
!1801 = !{!"0000017C2E2F8270.w16.b0", !1802, i64 0}
!1802 = !{!"0000017C2E2F8270.w32.b0", !1803, i64 0}
!1803 = !{!"0000017C2E2F8270.w64.b0", !1804, i64 0}
!1804 = !{!"0000017C2E2F8270.w128.b0", !1805, i64 0}
!1805 = !{!"0000017C2E2F8270.w256.b0", !1806, i64 0}
!1806 = !{!"0000017C2E2F8270.w512.b0", !1807, i64 0}
!1807 = !{!"0000017C2E2F8270.w1024.b0", !1808, i64 0}
!1808 = !{!"0000017C2E2F8270", !21, i64 0}
!1809 = !{!1810, !1810, i64 0}
!1810 = !{!"0000017C2E2F8270.w8.b16", !1811, i64 0}
!1811 = !{!"0000017C2E2F8270.w16.b16", !1802, i64 0}
!1812 = !{!1813, !1813, i64 0}
!1813 = !{!"0000017C2E2F8270.w8.b24", !1811, i64 0}
!1814 = !{!1815, !1815, i64 0}
!1815 = !{!"0000017C2E2F86B0.w8.b0", !1816, i64 0}
!1816 = !{!"0000017C2E2F86B0.w16.b0", !1817, i64 0}
!1817 = !{!"0000017C2E2F86B0.w32.b0", !1818, i64 0}
!1818 = !{!"0000017C2E2F86B0.w64.b0", !1819, i64 0}
!1819 = !{!"0000017C2E2F86B0.w128.b0", !1820, i64 0}
!1820 = !{!"0000017C2E2F86B0.w256.b0", !1821, i64 0}
!1821 = !{!"0000017C2E2F86B0.w512.b0", !1822, i64 0}
!1822 = !{!"0000017C2E2F86B0.w1024.b0", !1823, i64 0}
!1823 = !{!"0000017C2E2F86B0", !21, i64 0}
!1824 = !{!1825, !1825, i64 0}
!1825 = !{!"0000017C2E2F86B0.w8.b8", !1816, i64 0}
!1826 = !{!1827, !1827, i64 0}
!1827 = !{!"0000017C2E2F86B0.w8.b16", !1828, i64 0}
!1828 = !{!"0000017C2E2F86B0.w16.b16", !1817, i64 0}
!1829 = !{!1830, !1830, i64 0}
!1830 = !{!"0000017C2E2F86B0.w8.b24", !1828, i64 0}
!1831 = !{!1832, !1832, i64 0}
!1832 = !{!"0000017C2E2F99B0.w8.b8", !1833, i64 0}
!1833 = !{!"0000017C2E2F99B0.w16.b0", !1834, i64 0}
!1834 = !{!"0000017C2E2F99B0.w32.b0", !1835, i64 0}
!1835 = !{!"0000017C2E2F99B0.w64.b0", !1836, i64 0}
!1836 = !{!"0000017C2E2F99B0.w128.b0", !1837, i64 0}
!1837 = !{!"0000017C2E2F99B0.w256.b0", !1838, i64 0}
!1838 = !{!"0000017C2E2F99B0.w512.b0", !1839, i64 0}
!1839 = !{!"0000017C2E2F99B0.w1024.b0", !1840, i64 0}
!1840 = !{!"0000017C2E2F99B0", !21, i64 0}
!1841 = !{!1842, !1842, i64 0}
!1842 = !{!"0000017C2E2F9830.w8.b0", !1843, i64 0}
!1843 = !{!"0000017C2E2F9830.w16.b0", !1844, i64 0}
!1844 = !{!"0000017C2E2F9830.w32.b0", !1845, i64 0}
!1845 = !{!"0000017C2E2F9830.w64.b0", !1846, i64 0}
!1846 = !{!"0000017C2E2F9830.w128.b0", !1847, i64 0}
!1847 = !{!"0000017C2E2F9830.w256.b0", !1848, i64 0}
!1848 = !{!"0000017C2E2F9830.w512.b0", !1849, i64 0}
!1849 = !{!"0000017C2E2F9830.w1024.b0", !1850, i64 0}
!1850 = !{!"0000017C2E2F9830", !21, i64 0}
!1851 = !{!1852, !1852, i64 0}
!1852 = !{!"0000017C2E2F9830.w8.b8", !1843, i64 0}
!1853 = !{!1854, !1854, i64 0}
!1854 = !{!"0000017C2E2F9830.w8.b16", !1855, i64 0}
!1855 = !{!"0000017C2E2F9830.w16.b16", !1844, i64 0}
!1856 = !{!1857, !1857, i64 0}
!1857 = !{!"0000017C2E2F9830.w8.b24", !1855, i64 0}
!1858 = !{!1859, !1859, i64 0}
!1859 = !{!"0000017C2E2F9230.w8.b8", !1860, i64 0}
!1860 = !{!"0000017C2E2F9230.w16.b0", !1861, i64 0}
!1861 = !{!"0000017C2E2F9230.w32.b0", !1862, i64 0}
!1862 = !{!"0000017C2E2F9230.w64.b0", !1863, i64 0}
!1863 = !{!"0000017C2E2F9230.w128.b0", !1864, i64 0}
!1864 = !{!"0000017C2E2F9230.w256.b0", !1865, i64 0}
!1865 = !{!"0000017C2E2F9230.w512.b0", !1866, i64 0}
!1866 = !{!"0000017C2E2F9230.w1024.b0", !1867, i64 0}
!1867 = !{!"0000017C2E2F9230", !21, i64 0}
!1868 = !{!1869, !1869, i64 0}
!1869 = !{!"0000017C2E2FA7F0.w8.b0", !1870, i64 0}
!1870 = !{!"0000017C2E2FA7F0.w16.b0", !1871, i64 0}
!1871 = !{!"0000017C2E2FA7F0.w32.b0", !1872, i64 0}
!1872 = !{!"0000017C2E2FA7F0.w64.b0", !1873, i64 0}
!1873 = !{!"0000017C2E2FA7F0.w128.b0", !1874, i64 0}
!1874 = !{!"0000017C2E2FA7F0.w256.b0", !1875, i64 0}
!1875 = !{!"0000017C2E2FA7F0.w512.b0", !1876, i64 0}
!1876 = !{!"0000017C2E2FA7F0.w1024.b0", !1877, i64 0}
!1877 = !{!"0000017C2E2FA7F0", !21, i64 0}
!1878 = !{!1879, !1879, i64 0}
!1879 = !{!"0000017C2E2FA7F0.w8.b8", !1870, i64 0}
!1880 = !{!1881, !1881, i64 0}
!1881 = !{!"0000017C2E2FA7F0.w8.b16", !1882, i64 0}
!1882 = !{!"0000017C2E2FA7F0.w16.b16", !1871, i64 0}
!1883 = !{!1884, !1884, i64 0}
!1884 = !{!"0000017C2E2FA7F0.w8.b24", !1882, i64 0}
!1885 = !{!1886, !1886, i64 0}
!1886 = !{!"0000017C2E2FA7B0.w8.b8", !1887, i64 0}
!1887 = !{!"0000017C2E2FA7B0.w16.b0", !1888, i64 0}
!1888 = !{!"0000017C2E2FA7B0.w32.b0", !1889, i64 0}
!1889 = !{!"0000017C2E2FA7B0.w64.b0", !1890, i64 0}
!1890 = !{!"0000017C2E2FA7B0.w128.b0", !1891, i64 0}
!1891 = !{!"0000017C2E2FA7B0.w256.b0", !1892, i64 0}
!1892 = !{!"0000017C2E2FA7B0.w512.b0", !1893, i64 0}
!1893 = !{!"0000017C2E2FA7B0.w1024.b0", !1894, i64 0}
!1894 = !{!"0000017C2E2FA7B0", !21, i64 0}
!1895 = !{!1896, !1896, i64 0}
!1896 = !{!"0000017C2E2FA7B0.w8.b16", !1897, i64 0}
!1897 = !{!"0000017C2E2FA7B0.w16.b16", !1888, i64 0}
!1898 = !{!1899, !1899, i64 0}
!1899 = !{!"0000017C2E2FA7B0.w8.b24", !1897, i64 0}
!1900 = !{!1901, !1901, i64 0}
!1901 = !{!"0000017C22C11720.w4.b0", !1902, i64 0}
!1902 = !{!"0000017C22C11720.w8.b0", !1903, i64 0}
!1903 = !{!"0000017C22C11720.w16.b0", !1904, i64 0}
!1904 = !{!"0000017C22C11720.w32.b0", !1905, i64 0}
!1905 = !{!"0000017C22C11720.w64.b0", !1906, i64 0}
!1906 = !{!"0000017C22C11720.w128.b0", !1907, i64 0}
!1907 = !{!"0000017C22C11720.w256.b0", !1908, i64 0}
!1908 = !{!"0000017C22C11720.w512.b0", !1909, i64 0}
!1909 = !{!"0000017C22C11720.w1024.b0", !1910, i64 0}
!1910 = !{!"0000017C22C11720", !21, i64 0}
!1911 = !{!1912, !1912, i64 0}
!1912 = !{!"0000017C22C11720.w4.b4", !1902, i64 0}
!1913 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920}
!1915 = !DILocalVariable(name: "arg1", arg: 1, scope: !1913, file: !1, type: !8)
!1916 = !DILocalVariable(name: "arg2", arg: 2, scope: !1913, file: !1, type: !9)
!1917 = !DILocalVariable(name: "arg3", arg: 3, scope: !1913, file: !1, type: !7)
!1918 = !DILocalVariable(name: "arg4", arg: 4, scope: !1913, file: !1, type: !8)
!1919 = !DILocalVariable(name: "arg5", arg: 5, scope: !1913, file: !1, type: !9)
!1920 = !DILocalVariable(name: "arg6", arg: 6, scope: !1913, file: !1, type: !8)
!1921 = !DILocation(line: 0, scope: !1913)
!1922 = !{!1923, !1923, i64 0}
!1923 = !{!"0000017C2E3B3FF0.w4.b0", !1924, i64 0}
!1924 = !{!"0000017C2E3B3FF0.w8.b0", !1925, i64 0}
!1925 = !{!"0000017C2E3B3FF0.w16.b0", !1926, i64 0}
!1926 = !{!"0000017C2E3B3FF0.w32.b0", !1927, i64 0}
!1927 = !{!"0000017C2E3B3FF0.w64.b0", !1928, i64 0}
!1928 = !{!"0000017C2E3B3FF0.w128.b0", !1929, i64 0}
!1929 = !{!"0000017C2E3B3FF0.w256.b0", !1930, i64 0}
!1930 = !{!"0000017C2E3B3FF0.w512.b0", !1931, i64 0}
!1931 = !{!"0000017C2E3B3FF0.w1024.b0", !1932, i64 0}
!1932 = !{!"0000017C2E3B3FF0", !21, i64 0}
!1933 = !{!1934, !1934, i64 0}
!1934 = !{!"0000017C2E3B3FF0.w4.b4", !1924, i64 0}
!1935 = !{!1936, !1936, i64 0}
!1936 = !{!"0000017C2E3B3FF0.w4.b8", !1937, i64 0}
!1937 = !{!"0000017C2E3B3FF0.w8.b8", !1925, i64 0}
!1938 = !{!1939, !1939, i64 0}
!1939 = !{!"0000017C2E3B3FF0.w4.b12", !1937, i64 0}
!1940 = !{!1941, !1941, i64 0}
!1941 = !{!"0000017C2E3B8CB0.w8.b0", !1942, i64 0}
!1942 = !{!"0000017C2E3B8CB0.w16.b0", !1943, i64 0}
!1943 = !{!"0000017C2E3B8CB0.w32.b0", !1944, i64 0}
!1944 = !{!"0000017C2E3B8CB0.w64.b0", !1945, i64 0}
!1945 = !{!"0000017C2E3B8CB0.w128.b0", !1946, i64 0}
!1946 = !{!"0000017C2E3B8CB0.w256.b0", !1947, i64 0}
!1947 = !{!"0000017C2E3B8CB0.w512.b0", !1948, i64 0}
!1948 = !{!"0000017C2E3B8CB0.w1024.b0", !1949, i64 0}
!1949 = !{!"0000017C2E3B8CB0", !21, i64 0}
!1950 = !{!1951, !1951, i64 0}
!1951 = !{!"0000017C2E3B8CB0.w8.b8", !1942, i64 0}
!1952 = !{!1953, !1953, i64 0}
!1953 = !{!"0000017C2E3B8CB0.w8.b16", !1954, i64 0}
!1954 = !{!"0000017C2E3B8CB0.w16.b16", !1943, i64 0}
!1955 = !{!1956, !1956, i64 0}
!1956 = !{!"0000017C2E3B8CB0.w8.b24", !1954, i64 0}
!1957 = !{!1958, !1958, i64 0}
!1958 = !{!"0000017C2E3B8AB0.w8.b8", !1959, i64 0}
!1959 = !{!"0000017C2E3B8AB0.w16.b0", !1960, i64 0}
!1960 = !{!"0000017C2E3B8AB0.w32.b0", !1961, i64 0}
!1961 = !{!"0000017C2E3B8AB0.w64.b0", !1962, i64 0}
!1962 = !{!"0000017C2E3B8AB0.w128.b0", !1963, i64 0}
!1963 = !{!"0000017C2E3B8AB0.w256.b0", !1964, i64 0}
!1964 = !{!"0000017C2E3B8AB0.w512.b0", !1965, i64 0}
!1965 = !{!"0000017C2E3B8AB0.w1024.b0", !1966, i64 0}
!1966 = !{!"0000017C2E3B8AB0", !21, i64 0}
!1967 = !{!1968, !1968, i64 0}
!1968 = !{!"0000017C2E3B8AB0.w8.b16", !1969, i64 0}
!1969 = !{!"0000017C2E3B8AB0.w16.b16", !1960, i64 0}
!1970 = !{!1971, !1971, i64 0}
!1971 = !{!"0000017C2E3B8AB0.w8.b24", !1969, i64 0}
!1972 = !{!1973, !1973, i64 0}
!1973 = !{!"0000017C2E3B8B30.w8.b0", !1974, i64 0}
!1974 = !{!"0000017C2E3B8B30.w16.b0", !1975, i64 0}
!1975 = !{!"0000017C2E3B8B30.w32.b0", !1976, i64 0}
!1976 = !{!"0000017C2E3B8B30.w64.b0", !1977, i64 0}
!1977 = !{!"0000017C2E3B8B30.w128.b0", !1978, i64 0}
!1978 = !{!"0000017C2E3B8B30.w256.b0", !1979, i64 0}
!1979 = !{!"0000017C2E3B8B30.w512.b0", !1980, i64 0}
!1980 = !{!"0000017C2E3B8B30.w1024.b0", !1981, i64 0}
!1981 = !{!"0000017C2E3B8B30", !21, i64 0}
!1982 = !{!1983, !1983, i64 0}
!1983 = !{!"0000017C2E3B8B30.w8.b8", !1974, i64 0}
!1984 = !{!1985, !1985, i64 0}
!1985 = !{!"0000017C2E3B8B30.w8.b16", !1986, i64 0}
!1986 = !{!"0000017C2E3B8B30.w16.b16", !1975, i64 0}
!1987 = !{!1988, !1988, i64 0}
!1988 = !{!"0000017C2E3B8B30.w8.b24", !1986, i64 0}
!1989 = !{!1990, !1990, i64 0}
!1990 = !{!"0000017C2E3B9AF0.w8.b8", !1991, i64 0}
!1991 = !{!"0000017C2E3B9AF0.w16.b0", !1992, i64 0}
!1992 = !{!"0000017C2E3B9AF0.w32.b0", !1993, i64 0}
!1993 = !{!"0000017C2E3B9AF0.w64.b0", !1994, i64 0}
!1994 = !{!"0000017C2E3B9AF0.w128.b0", !1995, i64 0}
!1995 = !{!"0000017C2E3B9AF0.w256.b0", !1996, i64 0}
!1996 = !{!"0000017C2E3B9AF0.w512.b0", !1997, i64 0}
!1997 = !{!"0000017C2E3B9AF0.w1024.b0", !1998, i64 0}
!1998 = !{!"0000017C2E3B9AF0", !21, i64 0}
!1999 = !{!2000, !2000, i64 0}
!2000 = !{!"0000017C2E3B9730.w8.b0", !2001, i64 0}
!2001 = !{!"0000017C2E3B9730.w16.b0", !2002, i64 0}
!2002 = !{!"0000017C2E3B9730.w32.b0", !2003, i64 0}
!2003 = !{!"0000017C2E3B9730.w64.b0", !2004, i64 0}
!2004 = !{!"0000017C2E3B9730.w128.b0", !2005, i64 0}
!2005 = !{!"0000017C2E3B9730.w256.b0", !2006, i64 0}
!2006 = !{!"0000017C2E3B9730.w512.b0", !2007, i64 0}
!2007 = !{!"0000017C2E3B9730.w1024.b0", !2008, i64 0}
!2008 = !{!"0000017C2E3B9730", !21, i64 0}
!2009 = !{!2010, !2010, i64 0}
!2010 = !{!"0000017C2E3B9730.w8.b8", !2001, i64 0}
!2011 = !{!2012, !2012, i64 0}
!2012 = !{!"0000017C2E3B9730.w8.b16", !2013, i64 0}
!2013 = !{!"0000017C2E3B9730.w16.b16", !2002, i64 0}
!2014 = !{!2015, !2015, i64 0}
!2015 = !{!"0000017C2E3B9730.w8.b24", !2013, i64 0}
!2016 = !{!2017, !2017, i64 0}
!2017 = !{!"0000017C2E3B9FF0.w8.b8", !2018, i64 0}
!2018 = !{!"0000017C2E3B9FF0.w16.b0", !2019, i64 0}
!2019 = !{!"0000017C2E3B9FF0.w32.b0", !2020, i64 0}
!2020 = !{!"0000017C2E3B9FF0.w64.b0", !2021, i64 0}
!2021 = !{!"0000017C2E3B9FF0.w128.b0", !2022, i64 0}
!2022 = !{!"0000017C2E3B9FF0.w256.b0", !2023, i64 0}
!2023 = !{!"0000017C2E3B9FF0.w512.b0", !2024, i64 0}
!2024 = !{!"0000017C2E3B9FF0.w1024.b0", !2025, i64 0}
!2025 = !{!"0000017C2E3B9FF0", !21, i64 0}
!2026 = !{!2027, !2027, i64 0}
!2027 = !{!"0000017C2E3BA3B0.w8.b0", !2028, i64 0}
!2028 = !{!"0000017C2E3BA3B0.w16.b0", !2029, i64 0}
!2029 = !{!"0000017C2E3BA3B0.w32.b0", !2030, i64 0}
!2030 = !{!"0000017C2E3BA3B0.w64.b0", !2031, i64 0}
!2031 = !{!"0000017C2E3BA3B0.w128.b0", !2032, i64 0}
!2032 = !{!"0000017C2E3BA3B0.w256.b0", !2033, i64 0}
!2033 = !{!"0000017C2E3BA3B0.w512.b0", !2034, i64 0}
!2034 = !{!"0000017C2E3BA3B0.w1024.b0", !2035, i64 0}
!2035 = !{!"0000017C2E3BA3B0", !21, i64 0}
!2036 = !{!2037, !2037, i64 0}
!2037 = !{!"0000017C2E3BA3B0.w8.b8", !2028, i64 0}
!2038 = !{!2039, !2039, i64 0}
!2039 = !{!"0000017C2E3BA3B0.w8.b16", !2040, i64 0}
!2040 = !{!"0000017C2E3BA3B0.w16.b16", !2029, i64 0}
!2041 = !{!2042, !2042, i64 0}
!2042 = !{!"0000017C2E3BA3B0.w8.b24", !2040, i64 0}
!2043 = !{!2044, !2044, i64 0}
!2044 = !{!"0000017C2E3BA930.w8.b8", !2045, i64 0}
!2045 = !{!"0000017C2E3BA930.w16.b0", !2046, i64 0}
!2046 = !{!"0000017C2E3BA930.w32.b0", !2047, i64 0}
!2047 = !{!"0000017C2E3BA930.w64.b0", !2048, i64 0}
!2048 = !{!"0000017C2E3BA930.w128.b0", !2049, i64 0}
!2049 = !{!"0000017C2E3BA930.w256.b0", !2050, i64 0}
!2050 = !{!"0000017C2E3BA930.w512.b0", !2051, i64 0}
!2051 = !{!"0000017C2E3BA930.w1024.b0", !2052, i64 0}
!2052 = !{!"0000017C2E3BA930", !21, i64 0}
!2053 = !{!2054, !2054, i64 0}
!2054 = !{!"0000017C2E3BA930.w8.b16", !2055, i64 0}
!2055 = !{!"0000017C2E3BA930.w16.b16", !2046, i64 0}
!2056 = !{!2057, !2057, i64 0}
!2057 = !{!"0000017C2E3BA930.w8.b24", !2055, i64 0}
!2058 = !{!2059, !2059, i64 0}
!2059 = !{!"0000017C2E3B3C70.w4.b0", !2060, i64 0}
!2060 = !{!"0000017C2E3B3C70.w8.b0", !2061, i64 0}
!2061 = !{!"0000017C2E3B3C70.w16.b0", !2062, i64 0}
!2062 = !{!"0000017C2E3B3C70.w32.b0", !2063, i64 0}
!2063 = !{!"0000017C2E3B3C70.w64.b0", !2064, i64 0}
!2064 = !{!"0000017C2E3B3C70.w128.b0", !2065, i64 0}
!2065 = !{!"0000017C2E3B3C70.w256.b0", !2066, i64 0}
!2066 = !{!"0000017C2E3B3C70.w512.b0", !2067, i64 0}
!2067 = !{!"0000017C2E3B3C70.w1024.b0", !2068, i64 0}
!2068 = !{!"0000017C2E3B3C70", !21, i64 0}
!2069 = !{!2070, !2070, i64 0}
!2070 = !{!"0000017C2E3B3C70.w4.b4", !2060, i64 0}
!2071 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078}
!2073 = !DILocalVariable(name: "arg1", arg: 1, scope: !2071, file: !1, type: !8)
!2074 = !DILocalVariable(name: "arg2", arg: 2, scope: !2071, file: !1, type: !9)
!2075 = !DILocalVariable(name: "arg3", arg: 3, scope: !2071, file: !1, type: !7)
!2076 = !DILocalVariable(name: "arg4", arg: 4, scope: !2071, file: !1, type: !8)
!2077 = !DILocalVariable(name: "arg5", arg: 5, scope: !2071, file: !1, type: !9)
!2078 = !DILocalVariable(name: "arg6", arg: 6, scope: !2071, file: !1, type: !8)
!2079 = !DILocation(line: 0, scope: !2071)
!2080 = !{!2081, !2081, i64 0}
!2081 = !{!"0000017C2E496A30.w4.b0", !2082, i64 0}
!2082 = !{!"0000017C2E496A30.w8.b0", !2083, i64 0}
!2083 = !{!"0000017C2E496A30.w16.b0", !2084, i64 0}
!2084 = !{!"0000017C2E496A30.w32.b0", !2085, i64 0}
!2085 = !{!"0000017C2E496A30.w64.b0", !2086, i64 0}
!2086 = !{!"0000017C2E496A30.w128.b0", !2087, i64 0}
!2087 = !{!"0000017C2E496A30.w256.b0", !2088, i64 0}
!2088 = !{!"0000017C2E496A30.w512.b0", !2089, i64 0}
!2089 = !{!"0000017C2E496A30.w1024.b0", !2090, i64 0}
!2090 = !{!"0000017C2E496A30", !21, i64 0}
!2091 = !{!2092, !2092, i64 0}
!2092 = !{!"0000017C2E496A30.w4.b4", !2082, i64 0}
!2093 = !{!2094, !2094, i64 0}
!2094 = !{!"0000017C2E496A30.w4.b8", !2095, i64 0}
!2095 = !{!"0000017C2E496A30.w8.b8", !2083, i64 0}
!2096 = !{!2097, !2097, i64 0}
!2097 = !{!"0000017C2E496A30.w4.b12", !2095, i64 0}
!2098 = !{!2099, !2099, i64 0}
!2099 = !{!"0000017C2E49BAF0.w8.b0", !2100, i64 0}
!2100 = !{!"0000017C2E49BAF0.w16.b0", !2101, i64 0}
!2101 = !{!"0000017C2E49BAF0.w32.b0", !2102, i64 0}
!2102 = !{!"0000017C2E49BAF0.w64.b0", !2103, i64 0}
!2103 = !{!"0000017C2E49BAF0.w128.b0", !2104, i64 0}
!2104 = !{!"0000017C2E49BAF0.w256.b0", !2105, i64 0}
!2105 = !{!"0000017C2E49BAF0.w512.b0", !2106, i64 0}
!2106 = !{!"0000017C2E49BAF0.w1024.b0", !2107, i64 0}
!2107 = !{!"0000017C2E49BAF0", !21, i64 0}
!2108 = !{!2109, !2109, i64 0}
!2109 = !{!"0000017C2E49BAF0.w8.b8", !2100, i64 0}
!2110 = !{!2111, !2111, i64 0}
!2111 = !{!"0000017C2E49BAF0.w8.b16", !2112, i64 0}
!2112 = !{!"0000017C2E49BAF0.w16.b16", !2101, i64 0}
!2113 = !{!2114, !2114, i64 0}
!2114 = !{!"0000017C2E49BAF0.w8.b24", !2112, i64 0}
!2115 = !{!2116, !2116, i64 0}
!2116 = !{!"0000017C2E49CF70.w8.b8", !2117, i64 0}
!2117 = !{!"0000017C2E49CF70.w16.b0", !2118, i64 0}
!2118 = !{!"0000017C2E49CF70.w32.b0", !2119, i64 0}
!2119 = !{!"0000017C2E49CF70.w64.b0", !2120, i64 0}
!2120 = !{!"0000017C2E49CF70.w128.b0", !2121, i64 0}
!2121 = !{!"0000017C2E49CF70.w256.b0", !2122, i64 0}
!2122 = !{!"0000017C2E49CF70.w512.b0", !2123, i64 0}
!2123 = !{!"0000017C2E49CF70.w1024.b0", !2124, i64 0}
!2124 = !{!"0000017C2E49CF70", !21, i64 0}
!2125 = !{!2126, !2126, i64 0}
!2126 = !{!"0000017C2E49CF70.w8.b16", !2127, i64 0}
!2127 = !{!"0000017C2E49CF70.w16.b16", !2118, i64 0}
!2128 = !{!2129, !2129, i64 0}
!2129 = !{!"0000017C2E49CF70.w8.b24", !2127, i64 0}
!2130 = !{!2131, !2131, i64 0}
!2131 = !{!"0000017C2E49DD30.w8.b0", !2132, i64 0}
!2132 = !{!"0000017C2E49DD30.w16.b0", !2133, i64 0}
!2133 = !{!"0000017C2E49DD30.w32.b0", !2134, i64 0}
!2134 = !{!"0000017C2E49DD30.w64.b0", !2135, i64 0}
!2135 = !{!"0000017C2E49DD30.w128.b0", !2136, i64 0}
!2136 = !{!"0000017C2E49DD30.w256.b0", !2137, i64 0}
!2137 = !{!"0000017C2E49DD30.w512.b0", !2138, i64 0}
!2138 = !{!"0000017C2E49DD30.w1024.b0", !2139, i64 0}
!2139 = !{!"0000017C2E49DD30", !21, i64 0}
!2140 = !{!2141, !2141, i64 0}
!2141 = !{!"0000017C2E49DD30.w8.b8", !2132, i64 0}
!2142 = !{!2143, !2143, i64 0}
!2143 = !{!"0000017C2E49DD30.w8.b16", !2144, i64 0}
!2144 = !{!"0000017C2E49DD30.w16.b16", !2133, i64 0}
!2145 = !{!2146, !2146, i64 0}
!2146 = !{!"0000017C2E49DD30.w8.b24", !2144, i64 0}
!2147 = !{!2148, !2148, i64 0}
!2148 = !{!"0000017C2E49D830.w8.b8", !2149, i64 0}
!2149 = !{!"0000017C2E49D830.w16.b0", !2150, i64 0}
!2150 = !{!"0000017C2E49D830.w32.b0", !2151, i64 0}
!2151 = !{!"0000017C2E49D830.w64.b0", !2152, i64 0}
!2152 = !{!"0000017C2E49D830.w128.b0", !2153, i64 0}
!2153 = !{!"0000017C2E49D830.w256.b0", !2154, i64 0}
!2154 = !{!"0000017C2E49D830.w512.b0", !2155, i64 0}
!2155 = !{!"0000017C2E49D830.w1024.b0", !2156, i64 0}
!2156 = !{!"0000017C2E49D830", !21, i64 0}
!2157 = !{!2158, !2158, i64 0}
!2158 = !{!"0000017C2E49EC70.w8.b0", !2159, i64 0}
!2159 = !{!"0000017C2E49EC70.w16.b0", !2160, i64 0}
!2160 = !{!"0000017C2E49EC70.w32.b0", !2161, i64 0}
!2161 = !{!"0000017C2E49EC70.w64.b0", !2162, i64 0}
!2162 = !{!"0000017C2E49EC70.w128.b0", !2163, i64 0}
!2163 = !{!"0000017C2E49EC70.w256.b0", !2164, i64 0}
!2164 = !{!"0000017C2E49EC70.w512.b0", !2165, i64 0}
!2165 = !{!"0000017C2E49EC70.w1024.b0", !2166, i64 0}
!2166 = !{!"0000017C2E49EC70", !21, i64 0}
!2167 = !{!2168, !2168, i64 0}
!2168 = !{!"0000017C2E49EC70.w8.b8", !2159, i64 0}
!2169 = !{!2170, !2170, i64 0}
!2170 = !{!"0000017C2E49EC70.w8.b16", !2171, i64 0}
!2171 = !{!"0000017C2E49EC70.w16.b16", !2160, i64 0}
!2172 = !{!2173, !2173, i64 0}
!2173 = !{!"0000017C2E49EC70.w8.b24", !2171, i64 0}
!2174 = !{!2175, !2175, i64 0}
!2175 = !{!"0000017C2E49E530.w8.b8", !2176, i64 0}
!2176 = !{!"0000017C2E49E530.w16.b0", !2177, i64 0}
!2177 = !{!"0000017C2E49E530.w32.b0", !2178, i64 0}
!2178 = !{!"0000017C2E49E530.w64.b0", !2179, i64 0}
!2179 = !{!"0000017C2E49E530.w128.b0", !2180, i64 0}
!2180 = !{!"0000017C2E49E530.w256.b0", !2181, i64 0}
!2181 = !{!"0000017C2E49E530.w512.b0", !2182, i64 0}
!2182 = !{!"0000017C2E49E530.w1024.b0", !2183, i64 0}
!2183 = !{!"0000017C2E49E530", !21, i64 0}
!2184 = !{!2185, !2185, i64 0}
!2185 = !{!"0000017C2E49F330.w8.b0", !2186, i64 0}
!2186 = !{!"0000017C2E49F330.w16.b0", !2187, i64 0}
!2187 = !{!"0000017C2E49F330.w32.b0", !2188, i64 0}
!2188 = !{!"0000017C2E49F330.w64.b0", !2189, i64 0}
!2189 = !{!"0000017C2E49F330.w128.b0", !2190, i64 0}
!2190 = !{!"0000017C2E49F330.w256.b0", !2191, i64 0}
!2191 = !{!"0000017C2E49F330.w512.b0", !2192, i64 0}
!2192 = !{!"0000017C2E49F330.w1024.b0", !2193, i64 0}
!2193 = !{!"0000017C2E49F330", !21, i64 0}
!2194 = !{!2195, !2195, i64 0}
!2195 = !{!"0000017C2E49F330.w8.b8", !2186, i64 0}
!2196 = !{!2197, !2197, i64 0}
!2197 = !{!"0000017C2E49F330.w8.b16", !2198, i64 0}
!2198 = !{!"0000017C2E49F330.w16.b16", !2187, i64 0}
!2199 = !{!2200, !2200, i64 0}
!2200 = !{!"0000017C2E49F330.w8.b24", !2198, i64 0}
!2201 = !{!2202, !2202, i64 0}
!2202 = !{!"0000017C2E49F570.w8.b8", !2203, i64 0}
!2203 = !{!"0000017C2E49F570.w16.b0", !2204, i64 0}
!2204 = !{!"0000017C2E49F570.w32.b0", !2205, i64 0}
!2205 = !{!"0000017C2E49F570.w64.b0", !2206, i64 0}
!2206 = !{!"0000017C2E49F570.w128.b0", !2207, i64 0}
!2207 = !{!"0000017C2E49F570.w256.b0", !2208, i64 0}
!2208 = !{!"0000017C2E49F570.w512.b0", !2209, i64 0}
!2209 = !{!"0000017C2E49F570.w1024.b0", !2210, i64 0}
!2210 = !{!"0000017C2E49F570", !21, i64 0}
!2211 = !{!2212, !2212, i64 0}
!2212 = !{!"0000017C2E49F570.w8.b16", !2213, i64 0}
!2213 = !{!"0000017C2E49F570.w16.b16", !2204, i64 0}
!2214 = !{!2215, !2215, i64 0}
!2215 = !{!"0000017C2E49F570.w8.b24", !2213, i64 0}
!2216 = !{!2217, !2217, i64 0}
!2217 = !{!"0000017C2E5FF4F0.w4.b0", !2218, i64 0}
!2218 = !{!"0000017C2E5FF4F0.w8.b0", !2219, i64 0}
!2219 = !{!"0000017C2E5FF4F0.w16.b0", !2220, i64 0}
!2220 = !{!"0000017C2E5FF4F0.w32.b0", !2221, i64 0}
!2221 = !{!"0000017C2E5FF4F0.w64.b0", !2222, i64 0}
!2222 = !{!"0000017C2E5FF4F0.w128.b0", !2223, i64 0}
!2223 = !{!"0000017C2E5FF4F0.w256.b0", !2224, i64 0}
!2224 = !{!"0000017C2E5FF4F0.w512.b0", !2225, i64 0}
!2225 = !{!"0000017C2E5FF4F0.w1024.b0", !2226, i64 0}
!2226 = !{!"0000017C2E5FF4F0", !21, i64 0}
!2227 = !{!2228, !2228, i64 0}
!2228 = !{!"0000017C2E5FF4F0.w4.b4", !2218, i64 0}
!2229 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2230)
!2230 = !{!2231, !2232, !2233, !2234, !2235, !2236}
!2231 = !DILocalVariable(name: "arg1", arg: 1, scope: !2229, file: !1, type: !8)
!2232 = !DILocalVariable(name: "arg2", arg: 2, scope: !2229, file: !1, type: !9)
!2233 = !DILocalVariable(name: "arg3", arg: 3, scope: !2229, file: !1, type: !7)
!2234 = !DILocalVariable(name: "arg4", arg: 4, scope: !2229, file: !1, type: !8)
!2235 = !DILocalVariable(name: "arg5", arg: 5, scope: !2229, file: !1, type: !9)
!2236 = !DILocalVariable(name: "arg6", arg: 6, scope: !2229, file: !1, type: !8)
!2237 = !DILocation(line: 0, scope: !2229)
!2238 = !{!2239, !2239, i64 0}
!2239 = !{!"0000017C22BF9AE0.w4.b0", !2240, i64 0}
!2240 = !{!"0000017C22BF9AE0.w8.b0", !2241, i64 0}
!2241 = !{!"0000017C22BF9AE0.w16.b0", !2242, i64 0}
!2242 = !{!"0000017C22BF9AE0.w32.b0", !2243, i64 0}
!2243 = !{!"0000017C22BF9AE0.w64.b0", !2244, i64 0}
!2244 = !{!"0000017C22BF9AE0.w128.b0", !2245, i64 0}
!2245 = !{!"0000017C22BF9AE0.w256.b0", !2246, i64 0}
!2246 = !{!"0000017C22BF9AE0.w512.b0", !2247, i64 0}
!2247 = !{!"0000017C22BF9AE0.w1024.b0", !2248, i64 0}
!2248 = !{!"0000017C22BF9AE0", !21, i64 0}
!2249 = !{!2250, !2250, i64 0}
!2250 = !{!"0000017C22BF9AE0.w4.b4", !2240, i64 0}
!2251 = !{!2252, !2252, i64 0}
!2252 = !{!"0000017C22BF9AE0.w4.b8", !2253, i64 0}
!2253 = !{!"0000017C22BF9AE0.w8.b8", !2241, i64 0}
!2254 = !{!2255, !2255, i64 0}
!2255 = !{!"0000017C22BF9AE0.w4.b12", !2253, i64 0}
!2256 = !{!2257, !2257, i64 0}
!2257 = !{!"0000017C22BFA720.w8.b0", !2258, i64 0}
!2258 = !{!"0000017C22BFA720.w16.b0", !2259, i64 0}
!2259 = !{!"0000017C22BFA720.w32.b0", !2260, i64 0}
!2260 = !{!"0000017C22BFA720.w64.b0", !2261, i64 0}
!2261 = !{!"0000017C22BFA720.w128.b0", !2262, i64 0}
!2262 = !{!"0000017C22BFA720.w256.b0", !2263, i64 0}
!2263 = !{!"0000017C22BFA720.w512.b0", !2264, i64 0}
!2264 = !{!"0000017C22BFA720.w1024.b0", !2265, i64 0}
!2265 = !{!"0000017C22BFA720", !21, i64 0}
!2266 = !{!2267, !2267, i64 0}
!2267 = !{!"0000017C22BFA720.w8.b8", !2258, i64 0}
!2268 = !{!2269, !2269, i64 0}
!2269 = !{!"0000017C22BFA720.w8.b16", !2270, i64 0}
!2270 = !{!"0000017C22BFA720.w16.b16", !2259, i64 0}
!2271 = !{!2272, !2272, i64 0}
!2272 = !{!"0000017C22BFA720.w8.b24", !2270, i64 0}
!2273 = !{!2274, !2274, i64 0}
!2274 = !{!"0000017C22BFA560.w8.b8", !2275, i64 0}
!2275 = !{!"0000017C22BFA560.w16.b0", !2276, i64 0}
!2276 = !{!"0000017C22BFA560.w32.b0", !2277, i64 0}
!2277 = !{!"0000017C22BFA560.w64.b0", !2278, i64 0}
!2278 = !{!"0000017C22BFA560.w128.b0", !2279, i64 0}
!2279 = !{!"0000017C22BFA560.w256.b0", !2280, i64 0}
!2280 = !{!"0000017C22BFA560.w512.b0", !2281, i64 0}
!2281 = !{!"0000017C22BFA560.w1024.b0", !2282, i64 0}
!2282 = !{!"0000017C22BFA560", !21, i64 0}
!2283 = !{!2284, !2284, i64 0}
!2284 = !{!"0000017C22BFA560.w8.b16", !2285, i64 0}
!2285 = !{!"0000017C22BFA560.w16.b16", !2276, i64 0}
!2286 = !{!2287, !2287, i64 0}
!2287 = !{!"0000017C22BFA560.w8.b24", !2285, i64 0}
!2288 = !{!2289, !2289, i64 0}
!2289 = !{!"0000017C22BFB160.w8.b0", !2290, i64 0}
!2290 = !{!"0000017C22BFB160.w16.b0", !2291, i64 0}
!2291 = !{!"0000017C22BFB160.w32.b0", !2292, i64 0}
!2292 = !{!"0000017C22BFB160.w64.b0", !2293, i64 0}
!2293 = !{!"0000017C22BFB160.w128.b0", !2294, i64 0}
!2294 = !{!"0000017C22BFB160.w256.b0", !2295, i64 0}
!2295 = !{!"0000017C22BFB160.w512.b0", !2296, i64 0}
!2296 = !{!"0000017C22BFB160.w1024.b0", !2297, i64 0}
!2297 = !{!"0000017C22BFB160", !21, i64 0}
!2298 = !{!2299, !2299, i64 0}
!2299 = !{!"0000017C22BFB160.w8.b8", !2290, i64 0}
!2300 = !{!2301, !2301, i64 0}
!2301 = !{!"0000017C22BFB160.w8.b16", !2302, i64 0}
!2302 = !{!"0000017C22BFB160.w16.b16", !2291, i64 0}
!2303 = !{!2304, !2304, i64 0}
!2304 = !{!"0000017C22BFB160.w8.b24", !2302, i64 0}
!2305 = !{!2306, !2306, i64 0}
!2306 = !{!"0000017C22BFB7A0.w8.b8", !2307, i64 0}
!2307 = !{!"0000017C22BFB7A0.w16.b0", !2308, i64 0}
!2308 = !{!"0000017C22BFB7A0.w32.b0", !2309, i64 0}
!2309 = !{!"0000017C22BFB7A0.w64.b0", !2310, i64 0}
!2310 = !{!"0000017C22BFB7A0.w128.b0", !2311, i64 0}
!2311 = !{!"0000017C22BFB7A0.w256.b0", !2312, i64 0}
!2312 = !{!"0000017C22BFB7A0.w512.b0", !2313, i64 0}
!2313 = !{!"0000017C22BFB7A0.w1024.b0", !2314, i64 0}
!2314 = !{!"0000017C22BFB7A0", !21, i64 0}
!2315 = !{!2316, !2316, i64 0}
!2316 = !{!"0000017C22BFC360.w8.b0", !2317, i64 0}
!2317 = !{!"0000017C22BFC360.w16.b0", !2318, i64 0}
!2318 = !{!"0000017C22BFC360.w32.b0", !2319, i64 0}
!2319 = !{!"0000017C22BFC360.w64.b0", !2320, i64 0}
!2320 = !{!"0000017C22BFC360.w128.b0", !2321, i64 0}
!2321 = !{!"0000017C22BFC360.w256.b0", !2322, i64 0}
!2322 = !{!"0000017C22BFC360.w512.b0", !2323, i64 0}
!2323 = !{!"0000017C22BFC360.w1024.b0", !2324, i64 0}
!2324 = !{!"0000017C22BFC360", !21, i64 0}
!2325 = !{!2326, !2326, i64 0}
!2326 = !{!"0000017C22BFC360.w8.b8", !2317, i64 0}
!2327 = !{!2328, !2328, i64 0}
!2328 = !{!"0000017C22BFC360.w8.b16", !2329, i64 0}
!2329 = !{!"0000017C22BFC360.w16.b16", !2318, i64 0}
!2330 = !{!2331, !2331, i64 0}
!2331 = !{!"0000017C22BFC360.w8.b24", !2329, i64 0}
!2332 = !{!2333, !2333, i64 0}
!2333 = !{!"0000017C22BFCA60.w8.b8", !2334, i64 0}
!2334 = !{!"0000017C22BFCA60.w16.b0", !2335, i64 0}
!2335 = !{!"0000017C22BFCA60.w32.b0", !2336, i64 0}
!2336 = !{!"0000017C22BFCA60.w64.b0", !2337, i64 0}
!2337 = !{!"0000017C22BFCA60.w128.b0", !2338, i64 0}
!2338 = !{!"0000017C22BFCA60.w256.b0", !2339, i64 0}
!2339 = !{!"0000017C22BFCA60.w512.b0", !2340, i64 0}
!2340 = !{!"0000017C22BFCA60.w1024.b0", !2341, i64 0}
!2341 = !{!"0000017C22BFCA60", !21, i64 0}
!2342 = !{!2343, !2343, i64 0}
!2343 = !{!"0000017C22BFDCE0.w8.b0", !2344, i64 0}
!2344 = !{!"0000017C22BFDCE0.w16.b0", !2345, i64 0}
!2345 = !{!"0000017C22BFDCE0.w32.b0", !2346, i64 0}
!2346 = !{!"0000017C22BFDCE0.w64.b0", !2347, i64 0}
!2347 = !{!"0000017C22BFDCE0.w128.b0", !2348, i64 0}
!2348 = !{!"0000017C22BFDCE0.w256.b0", !2349, i64 0}
!2349 = !{!"0000017C22BFDCE0.w512.b0", !2350, i64 0}
!2350 = !{!"0000017C22BFDCE0.w1024.b0", !2351, i64 0}
!2351 = !{!"0000017C22BFDCE0", !21, i64 0}
!2352 = !{!2353, !2353, i64 0}
!2353 = !{!"0000017C22BFDCE0.w8.b8", !2344, i64 0}
!2354 = !{!2355, !2355, i64 0}
!2355 = !{!"0000017C22BFDCE0.w8.b16", !2356, i64 0}
!2356 = !{!"0000017C22BFDCE0.w16.b16", !2345, i64 0}
!2357 = !{!2358, !2358, i64 0}
!2358 = !{!"0000017C22BFDCE0.w8.b24", !2356, i64 0}
!2359 = !{!2360, !2360, i64 0}
!2360 = !{!"0000017C22BFD3A0.w8.b8", !2361, i64 0}
!2361 = !{!"0000017C22BFD3A0.w16.b0", !2362, i64 0}
!2362 = !{!"0000017C22BFD3A0.w32.b0", !2363, i64 0}
!2363 = !{!"0000017C22BFD3A0.w64.b0", !2364, i64 0}
!2364 = !{!"0000017C22BFD3A0.w128.b0", !2365, i64 0}
!2365 = !{!"0000017C22BFD3A0.w256.b0", !2366, i64 0}
!2366 = !{!"0000017C22BFD3A0.w512.b0", !2367, i64 0}
!2367 = !{!"0000017C22BFD3A0.w1024.b0", !2368, i64 0}
!2368 = !{!"0000017C22BFD3A0", !21, i64 0}
!2369 = !{!2370, !2370, i64 0}
!2370 = !{!"0000017C22BFD3A0.w8.b16", !2371, i64 0}
!2371 = !{!"0000017C22BFD3A0.w16.b16", !2362, i64 0}
!2372 = !{!2373, !2373, i64 0}
!2373 = !{!"0000017C22BFD3A0.w8.b24", !2371, i64 0}
!2374 = !{!2375, !2375, i64 0}
!2375 = !{!"0000017C2E60F670.w4.b0", !2376, i64 0}
!2376 = !{!"0000017C2E60F670.w8.b0", !2377, i64 0}
!2377 = !{!"0000017C2E60F670.w16.b0", !2378, i64 0}
!2378 = !{!"0000017C2E60F670.w32.b0", !2379, i64 0}
!2379 = !{!"0000017C2E60F670.w64.b0", !2380, i64 0}
!2380 = !{!"0000017C2E60F670.w128.b0", !2381, i64 0}
!2381 = !{!"0000017C2E60F670.w256.b0", !2382, i64 0}
!2382 = !{!"0000017C2E60F670.w512.b0", !2383, i64 0}
!2383 = !{!"0000017C2E60F670.w1024.b0", !2384, i64 0}
!2384 = !{!"0000017C2E60F670", !21, i64 0}
!2385 = !{!2386, !2386, i64 0}
!2386 = !{!"0000017C2E60F670.w4.b4", !2376, i64 0}
!2387 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394}
!2389 = !DILocalVariable(name: "arg1", arg: 1, scope: !2387, file: !1, type: !8)
!2390 = !DILocalVariable(name: "arg2", arg: 2, scope: !2387, file: !1, type: !9)
!2391 = !DILocalVariable(name: "arg3", arg: 3, scope: !2387, file: !1, type: !7)
!2392 = !DILocalVariable(name: "arg4", arg: 4, scope: !2387, file: !1, type: !8)
!2393 = !DILocalVariable(name: "arg5", arg: 5, scope: !2387, file: !1, type: !9)
!2394 = !DILocalVariable(name: "arg6", arg: 6, scope: !2387, file: !1, type: !8)
!2395 = !DILocation(line: 0, scope: !2387)
!2396 = !{!2397, !2397, i64 0}
!2397 = !{!"0000017C2E348630.w4.b0", !2398, i64 0}
!2398 = !{!"0000017C2E348630.w8.b0", !2399, i64 0}
!2399 = !{!"0000017C2E348630.w16.b0", !2400, i64 0}
!2400 = !{!"0000017C2E348630.w32.b0", !2401, i64 0}
!2401 = !{!"0000017C2E348630.w64.b0", !2402, i64 0}
!2402 = !{!"0000017C2E348630.w128.b0", !2403, i64 0}
!2403 = !{!"0000017C2E348630.w256.b0", !2404, i64 0}
!2404 = !{!"0000017C2E348630.w512.b0", !2405, i64 0}
!2405 = !{!"0000017C2E348630.w1024.b0", !2406, i64 0}
!2406 = !{!"0000017C2E348630", !21, i64 0}
!2407 = !{!2408, !2408, i64 0}
!2408 = !{!"0000017C2E348630.w4.b4", !2398, i64 0}
!2409 = !{!2410, !2410, i64 0}
!2410 = !{!"0000017C2E348630.w4.b8", !2411, i64 0}
!2411 = !{!"0000017C2E348630.w8.b8", !2399, i64 0}
!2412 = !{!2413, !2413, i64 0}
!2413 = !{!"0000017C2E348630.w4.b12", !2411, i64 0}
!2414 = !{!2415, !2415, i64 0}
!2415 = !{!"0000017C2E3492F0.w8.b0", !2416, i64 0}
!2416 = !{!"0000017C2E3492F0.w16.b0", !2417, i64 0}
!2417 = !{!"0000017C2E3492F0.w32.b0", !2418, i64 0}
!2418 = !{!"0000017C2E3492F0.w64.b0", !2419, i64 0}
!2419 = !{!"0000017C2E3492F0.w128.b0", !2420, i64 0}
!2420 = !{!"0000017C2E3492F0.w256.b0", !2421, i64 0}
!2421 = !{!"0000017C2E3492F0.w512.b0", !2422, i64 0}
!2422 = !{!"0000017C2E3492F0.w1024.b0", !2423, i64 0}
!2423 = !{!"0000017C2E3492F0", !21, i64 0}
!2424 = !{!2425, !2425, i64 0}
!2425 = !{!"0000017C2E3492F0.w8.b8", !2416, i64 0}
!2426 = !{!2427, !2427, i64 0}
!2427 = !{!"0000017C2E3492F0.w8.b16", !2428, i64 0}
!2428 = !{!"0000017C2E3492F0.w16.b16", !2417, i64 0}
!2429 = !{!2430, !2430, i64 0}
!2430 = !{!"0000017C2E3492F0.w8.b24", !2428, i64 0}
!2431 = !{!2432, !2432, i64 0}
!2432 = !{!"0000017C2E34A030.w8.b8", !2433, i64 0}
!2433 = !{!"0000017C2E34A030.w16.b0", !2434, i64 0}
!2434 = !{!"0000017C2E34A030.w32.b0", !2435, i64 0}
!2435 = !{!"0000017C2E34A030.w64.b0", !2436, i64 0}
!2436 = !{!"0000017C2E34A030.w128.b0", !2437, i64 0}
!2437 = !{!"0000017C2E34A030.w256.b0", !2438, i64 0}
!2438 = !{!"0000017C2E34A030.w512.b0", !2439, i64 0}
!2439 = !{!"0000017C2E34A030.w1024.b0", !2440, i64 0}
!2440 = !{!"0000017C2E34A030", !21, i64 0}
!2441 = !{!2442, !2442, i64 0}
!2442 = !{!"0000017C2E34A030.w8.b16", !2443, i64 0}
!2443 = !{!"0000017C2E34A030.w16.b16", !2434, i64 0}
!2444 = !{!2445, !2445, i64 0}
!2445 = !{!"0000017C2E34A030.w8.b24", !2443, i64 0}
!2446 = !{!2447, !2447, i64 0}
!2447 = !{!"0000017C2E34A3B0.w8.b0", !2448, i64 0}
!2448 = !{!"0000017C2E34A3B0.w16.b0", !2449, i64 0}
!2449 = !{!"0000017C2E34A3B0.w32.b0", !2450, i64 0}
!2450 = !{!"0000017C2E34A3B0.w64.b0", !2451, i64 0}
!2451 = !{!"0000017C2E34A3B0.w128.b0", !2452, i64 0}
!2452 = !{!"0000017C2E34A3B0.w256.b0", !2453, i64 0}
!2453 = !{!"0000017C2E34A3B0.w512.b0", !2454, i64 0}
!2454 = !{!"0000017C2E34A3B0.w1024.b0", !2455, i64 0}
!2455 = !{!"0000017C2E34A3B0", !21, i64 0}
!2456 = !{!2457, !2457, i64 0}
!2457 = !{!"0000017C2E34A3B0.w8.b8", !2448, i64 0}
!2458 = !{!2459, !2459, i64 0}
!2459 = !{!"0000017C2E34A3B0.w8.b16", !2460, i64 0}
!2460 = !{!"0000017C2E34A3B0.w16.b16", !2449, i64 0}
!2461 = !{!2462, !2462, i64 0}
!2462 = !{!"0000017C2E34A3B0.w8.b24", !2460, i64 0}
!2463 = !{!2464, !2464, i64 0}
!2464 = !{!"0000017C2E34B070.w8.b8", !2465, i64 0}
!2465 = !{!"0000017C2E34B070.w16.b0", !2466, i64 0}
!2466 = !{!"0000017C2E34B070.w32.b0", !2467, i64 0}
!2467 = !{!"0000017C2E34B070.w64.b0", !2468, i64 0}
!2468 = !{!"0000017C2E34B070.w128.b0", !2469, i64 0}
!2469 = !{!"0000017C2E34B070.w256.b0", !2470, i64 0}
!2470 = !{!"0000017C2E34B070.w512.b0", !2471, i64 0}
!2471 = !{!"0000017C2E34B070.w1024.b0", !2472, i64 0}
!2472 = !{!"0000017C2E34B070", !21, i64 0}
!2473 = !{!2474, !2474, i64 0}
!2474 = !{!"0000017C2E34BAF0.w8.b0", !2475, i64 0}
!2475 = !{!"0000017C2E34BAF0.w16.b0", !2476, i64 0}
!2476 = !{!"0000017C2E34BAF0.w32.b0", !2477, i64 0}
!2477 = !{!"0000017C2E34BAF0.w64.b0", !2478, i64 0}
!2478 = !{!"0000017C2E34BAF0.w128.b0", !2479, i64 0}
!2479 = !{!"0000017C2E34BAF0.w256.b0", !2480, i64 0}
!2480 = !{!"0000017C2E34BAF0.w512.b0", !2481, i64 0}
!2481 = !{!"0000017C2E34BAF0.w1024.b0", !2482, i64 0}
!2482 = !{!"0000017C2E34BAF0", !21, i64 0}
!2483 = !{!2484, !2484, i64 0}
!2484 = !{!"0000017C2E34BAF0.w8.b8", !2475, i64 0}
!2485 = !{!2486, !2486, i64 0}
!2486 = !{!"0000017C2E34BAF0.w8.b16", !2487, i64 0}
!2487 = !{!"0000017C2E34BAF0.w16.b16", !2476, i64 0}
!2488 = !{!2489, !2489, i64 0}
!2489 = !{!"0000017C2E34BAF0.w8.b24", !2487, i64 0}
!2490 = !{!2491, !2491, i64 0}
!2491 = !{!"0000017C2E34B5F0.w8.b8", !2492, i64 0}
!2492 = !{!"0000017C2E34B5F0.w16.b0", !2493, i64 0}
!2493 = !{!"0000017C2E34B5F0.w32.b0", !2494, i64 0}
!2494 = !{!"0000017C2E34B5F0.w64.b0", !2495, i64 0}
!2495 = !{!"0000017C2E34B5F0.w128.b0", !2496, i64 0}
!2496 = !{!"0000017C2E34B5F0.w256.b0", !2497, i64 0}
!2497 = !{!"0000017C2E34B5F0.w512.b0", !2498, i64 0}
!2498 = !{!"0000017C2E34B5F0.w1024.b0", !2499, i64 0}
!2499 = !{!"0000017C2E34B5F0", !21, i64 0}
!2500 = !{!2501, !2501, i64 0}
!2501 = !{!"0000017C2E34C270.w8.b0", !2502, i64 0}
!2502 = !{!"0000017C2E34C270.w16.b0", !2503, i64 0}
!2503 = !{!"0000017C2E34C270.w32.b0", !2504, i64 0}
!2504 = !{!"0000017C2E34C270.w64.b0", !2505, i64 0}
!2505 = !{!"0000017C2E34C270.w128.b0", !2506, i64 0}
!2506 = !{!"0000017C2E34C270.w256.b0", !2507, i64 0}
!2507 = !{!"0000017C2E34C270.w512.b0", !2508, i64 0}
!2508 = !{!"0000017C2E34C270.w1024.b0", !2509, i64 0}
!2509 = !{!"0000017C2E34C270", !21, i64 0}
!2510 = !{!2511, !2511, i64 0}
!2511 = !{!"0000017C2E34C270.w8.b8", !2502, i64 0}
!2512 = !{!2513, !2513, i64 0}
!2513 = !{!"0000017C2E34C270.w8.b16", !2514, i64 0}
!2514 = !{!"0000017C2E34C270.w16.b16", !2503, i64 0}
!2515 = !{!2516, !2516, i64 0}
!2516 = !{!"0000017C2E34C270.w8.b24", !2514, i64 0}
!2517 = !{!2518, !2518, i64 0}
!2518 = !{!"0000017C2E34C8B0.w8.b8", !2519, i64 0}
!2519 = !{!"0000017C2E34C8B0.w16.b0", !2520, i64 0}
!2520 = !{!"0000017C2E34C8B0.w32.b0", !2521, i64 0}
!2521 = !{!"0000017C2E34C8B0.w64.b0", !2522, i64 0}
!2522 = !{!"0000017C2E34C8B0.w128.b0", !2523, i64 0}
!2523 = !{!"0000017C2E34C8B0.w256.b0", !2524, i64 0}
!2524 = !{!"0000017C2E34C8B0.w512.b0", !2525, i64 0}
!2525 = !{!"0000017C2E34C8B0.w1024.b0", !2526, i64 0}
!2526 = !{!"0000017C2E34C8B0", !21, i64 0}
!2527 = !{!2528, !2528, i64 0}
!2528 = !{!"0000017C2E34C8B0.w8.b16", !2529, i64 0}
!2529 = !{!"0000017C2E34C8B0.w16.b16", !2520, i64 0}
!2530 = !{!2531, !2531, i64 0}
!2531 = !{!"0000017C2E34C8B0.w8.b24", !2529, i64 0}
!2532 = !{!2533, !2533, i64 0}
!2533 = !{!"0000017C1AB00C70.w4.b0", !2534, i64 0}
!2534 = !{!"0000017C1AB00C70.w8.b0", !2535, i64 0}
!2535 = !{!"0000017C1AB00C70.w16.b0", !2536, i64 0}
!2536 = !{!"0000017C1AB00C70.w32.b0", !2537, i64 0}
!2537 = !{!"0000017C1AB00C70.w64.b0", !2538, i64 0}
!2538 = !{!"0000017C1AB00C70.w128.b0", !2539, i64 0}
!2539 = !{!"0000017C1AB00C70.w256.b0", !2540, i64 0}
!2540 = !{!"0000017C1AB00C70.w512.b0", !2541, i64 0}
!2541 = !{!"0000017C1AB00C70.w1024.b0", !2542, i64 0}
!2542 = !{!"0000017C1AB00C70", !21, i64 0}
!2543 = !{!2544, !2544, i64 0}
!2544 = !{!"0000017C1AB00C70.w4.b4", !2534, i64 0}
!2545 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2546)
!2546 = !{!2547, !2548, !2549, !2550, !2551, !2552}
!2547 = !DILocalVariable(name: "arg1", arg: 1, scope: !2545, file: !1, type: !8)
!2548 = !DILocalVariable(name: "arg2", arg: 2, scope: !2545, file: !1, type: !9)
!2549 = !DILocalVariable(name: "arg3", arg: 3, scope: !2545, file: !1, type: !7)
!2550 = !DILocalVariable(name: "arg4", arg: 4, scope: !2545, file: !1, type: !8)
!2551 = !DILocalVariable(name: "arg5", arg: 5, scope: !2545, file: !1, type: !9)
!2552 = !DILocalVariable(name: "arg6", arg: 6, scope: !2545, file: !1, type: !8)
!2553 = !DILocation(line: 0, scope: !2545)
!2554 = !{!2555, !2555, i64 0}
!2555 = !{!"0000017C2E3493F0.w4.b0", !2556, i64 0}
!2556 = !{!"0000017C2E3493F0.w8.b0", !2557, i64 0}
!2557 = !{!"0000017C2E3493F0.w16.b0", !2558, i64 0}
!2558 = !{!"0000017C2E3493F0.w32.b0", !2559, i64 0}
!2559 = !{!"0000017C2E3493F0.w64.b0", !2560, i64 0}
!2560 = !{!"0000017C2E3493F0.w128.b0", !2561, i64 0}
!2561 = !{!"0000017C2E3493F0.w256.b0", !2562, i64 0}
!2562 = !{!"0000017C2E3493F0.w512.b0", !2563, i64 0}
!2563 = !{!"0000017C2E3493F0.w1024.b0", !2564, i64 0}
!2564 = !{!"0000017C2E3493F0", !21, i64 0}
!2565 = !{!2566, !2566, i64 0}
!2566 = !{!"0000017C2E3493F0.w4.b4", !2556, i64 0}
!2567 = !{!2568, !2568, i64 0}
!2568 = !{!"0000017C2E3493F0.w4.b8", !2569, i64 0}
!2569 = !{!"0000017C2E3493F0.w8.b8", !2557, i64 0}
!2570 = !{!2571, !2571, i64 0}
!2571 = !{!"0000017C2E3493F0.w4.b12", !2569, i64 0}
!2572 = !{!2573, !2573, i64 0}
!2573 = !{!"0000017C2E34DE30.w8.b0", !2574, i64 0}
!2574 = !{!"0000017C2E34DE30.w16.b0", !2575, i64 0}
!2575 = !{!"0000017C2E34DE30.w32.b0", !2576, i64 0}
!2576 = !{!"0000017C2E34DE30.w64.b0", !2577, i64 0}
!2577 = !{!"0000017C2E34DE30.w128.b0", !2578, i64 0}
!2578 = !{!"0000017C2E34DE30.w256.b0", !2579, i64 0}
!2579 = !{!"0000017C2E34DE30.w512.b0", !2580, i64 0}
!2580 = !{!"0000017C2E34DE30.w1024.b0", !2581, i64 0}
!2581 = !{!"0000017C2E34DE30", !21, i64 0}
!2582 = !{!2583, !2583, i64 0}
!2583 = !{!"0000017C2E34DE30.w8.b8", !2574, i64 0}
!2584 = !{!2585, !2585, i64 0}
!2585 = !{!"0000017C2E34DE30.w8.b16", !2586, i64 0}
!2586 = !{!"0000017C2E34DE30.w16.b16", !2575, i64 0}
!2587 = !{!2588, !2588, i64 0}
!2588 = !{!"0000017C2E34DE30.w8.b24", !2586, i64 0}
!2589 = !{!2590, !2590, i64 0}
!2590 = !{!"0000017C2E34F070.w8.b8", !2591, i64 0}
!2591 = !{!"0000017C2E34F070.w16.b0", !2592, i64 0}
!2592 = !{!"0000017C2E34F070.w32.b0", !2593, i64 0}
!2593 = !{!"0000017C2E34F070.w64.b0", !2594, i64 0}
!2594 = !{!"0000017C2E34F070.w128.b0", !2595, i64 0}
!2595 = !{!"0000017C2E34F070.w256.b0", !2596, i64 0}
!2596 = !{!"0000017C2E34F070.w512.b0", !2597, i64 0}
!2597 = !{!"0000017C2E34F070.w1024.b0", !2598, i64 0}
!2598 = !{!"0000017C2E34F070", !21, i64 0}
!2599 = !{!2600, !2600, i64 0}
!2600 = !{!"0000017C2E34F070.w8.b16", !2601, i64 0}
!2601 = !{!"0000017C2E34F070.w16.b16", !2592, i64 0}
!2602 = !{!2603, !2603, i64 0}
!2603 = !{!"0000017C2E34F070.w8.b24", !2601, i64 0}
!2604 = !{!2605, !2605, i64 0}
!2605 = !{!"0000017C2E34F370.w8.b0", !2606, i64 0}
!2606 = !{!"0000017C2E34F370.w16.b0", !2607, i64 0}
!2607 = !{!"0000017C2E34F370.w32.b0", !2608, i64 0}
!2608 = !{!"0000017C2E34F370.w64.b0", !2609, i64 0}
!2609 = !{!"0000017C2E34F370.w128.b0", !2610, i64 0}
!2610 = !{!"0000017C2E34F370.w256.b0", !2611, i64 0}
!2611 = !{!"0000017C2E34F370.w512.b0", !2612, i64 0}
!2612 = !{!"0000017C2E34F370.w1024.b0", !2613, i64 0}
!2613 = !{!"0000017C2E34F370", !21, i64 0}
!2614 = !{!2615, !2615, i64 0}
!2615 = !{!"0000017C2E34F370.w8.b8", !2606, i64 0}
!2616 = !{!2617, !2617, i64 0}
!2617 = !{!"0000017C2E34F370.w8.b16", !2618, i64 0}
!2618 = !{!"0000017C2E34F370.w16.b16", !2607, i64 0}
!2619 = !{!2620, !2620, i64 0}
!2620 = !{!"0000017C2E34F370.w8.b24", !2618, i64 0}
!2621 = !{!2622, !2622, i64 0}
!2622 = !{!"0000017C2E34FE30.w8.b8", !2623, i64 0}
!2623 = !{!"0000017C2E34FE30.w16.b0", !2624, i64 0}
!2624 = !{!"0000017C2E34FE30.w32.b0", !2625, i64 0}
!2625 = !{!"0000017C2E34FE30.w64.b0", !2626, i64 0}
!2626 = !{!"0000017C2E34FE30.w128.b0", !2627, i64 0}
!2627 = !{!"0000017C2E34FE30.w256.b0", !2628, i64 0}
!2628 = !{!"0000017C2E34FE30.w512.b0", !2629, i64 0}
!2629 = !{!"0000017C2E34FE30.w1024.b0", !2630, i64 0}
!2630 = !{!"0000017C2E34FE30", !21, i64 0}
!2631 = !{!2632, !2632, i64 0}
!2632 = !{!"0000017C2E34F970.w8.b0", !2633, i64 0}
!2633 = !{!"0000017C2E34F970.w16.b0", !2634, i64 0}
!2634 = !{!"0000017C2E34F970.w32.b0", !2635, i64 0}
!2635 = !{!"0000017C2E34F970.w64.b0", !2636, i64 0}
!2636 = !{!"0000017C2E34F970.w128.b0", !2637, i64 0}
!2637 = !{!"0000017C2E34F970.w256.b0", !2638, i64 0}
!2638 = !{!"0000017C2E34F970.w512.b0", !2639, i64 0}
!2639 = !{!"0000017C2E34F970.w1024.b0", !2640, i64 0}
!2640 = !{!"0000017C2E34F970", !21, i64 0}
!2641 = !{!2642, !2642, i64 0}
!2642 = !{!"0000017C2E34F970.w8.b8", !2633, i64 0}
!2643 = !{!2644, !2644, i64 0}
!2644 = !{!"0000017C2E34F970.w8.b16", !2645, i64 0}
!2645 = !{!"0000017C2E34F970.w16.b16", !2634, i64 0}
!2646 = !{!2647, !2647, i64 0}
!2647 = !{!"0000017C2E34F970.w8.b24", !2645, i64 0}
!2648 = !{!2649, !2649, i64 0}
!2649 = !{!"0000017C2E350BB0.w8.b8", !2650, i64 0}
!2650 = !{!"0000017C2E350BB0.w16.b0", !2651, i64 0}
!2651 = !{!"0000017C2E350BB0.w32.b0", !2652, i64 0}
!2652 = !{!"0000017C2E350BB0.w64.b0", !2653, i64 0}
!2653 = !{!"0000017C2E350BB0.w128.b0", !2654, i64 0}
!2654 = !{!"0000017C2E350BB0.w256.b0", !2655, i64 0}
!2655 = !{!"0000017C2E350BB0.w512.b0", !2656, i64 0}
!2656 = !{!"0000017C2E350BB0.w1024.b0", !2657, i64 0}
!2657 = !{!"0000017C2E350BB0", !21, i64 0}
!2658 = !{!2659, !2659, i64 0}
!2659 = !{!"0000017C2E350C30.w8.b0", !2660, i64 0}
!2660 = !{!"0000017C2E350C30.w16.b0", !2661, i64 0}
!2661 = !{!"0000017C2E350C30.w32.b0", !2662, i64 0}
!2662 = !{!"0000017C2E350C30.w64.b0", !2663, i64 0}
!2663 = !{!"0000017C2E350C30.w128.b0", !2664, i64 0}
!2664 = !{!"0000017C2E350C30.w256.b0", !2665, i64 0}
!2665 = !{!"0000017C2E350C30.w512.b0", !2666, i64 0}
!2666 = !{!"0000017C2E350C30.w1024.b0", !2667, i64 0}
!2667 = !{!"0000017C2E350C30", !21, i64 0}
!2668 = !{!2669, !2669, i64 0}
!2669 = !{!"0000017C2E350C30.w8.b8", !2660, i64 0}
!2670 = !{!2671, !2671, i64 0}
!2671 = !{!"0000017C2E350C30.w8.b16", !2672, i64 0}
!2672 = !{!"0000017C2E350C30.w16.b16", !2661, i64 0}
!2673 = !{!2674, !2674, i64 0}
!2674 = !{!"0000017C2E350C30.w8.b24", !2672, i64 0}
!2675 = !{!2676, !2676, i64 0}
!2676 = !{!"0000017C2E350230.w8.b8", !2677, i64 0}
!2677 = !{!"0000017C2E350230.w16.b0", !2678, i64 0}
!2678 = !{!"0000017C2E350230.w32.b0", !2679, i64 0}
!2679 = !{!"0000017C2E350230.w64.b0", !2680, i64 0}
!2680 = !{!"0000017C2E350230.w128.b0", !2681, i64 0}
!2681 = !{!"0000017C2E350230.w256.b0", !2682, i64 0}
!2682 = !{!"0000017C2E350230.w512.b0", !2683, i64 0}
!2683 = !{!"0000017C2E350230.w1024.b0", !2684, i64 0}
!2684 = !{!"0000017C2E350230", !21, i64 0}
!2685 = !{!2686, !2686, i64 0}
!2686 = !{!"0000017C2E350230.w8.b16", !2687, i64 0}
!2687 = !{!"0000017C2E350230.w16.b16", !2678, i64 0}
!2688 = !{!2689, !2689, i64 0}
!2689 = !{!"0000017C2E350230.w8.b24", !2687, i64 0}
!2690 = !{!2691, !2691, i64 0}
!2691 = !{!"0000017C2E5028F0.w4.b0", !2692, i64 0}
!2692 = !{!"0000017C2E5028F0.w8.b0", !2693, i64 0}
!2693 = !{!"0000017C2E5028F0.w16.b0", !2694, i64 0}
!2694 = !{!"0000017C2E5028F0.w32.b0", !2695, i64 0}
!2695 = !{!"0000017C2E5028F0.w64.b0", !2696, i64 0}
!2696 = !{!"0000017C2E5028F0.w128.b0", !2697, i64 0}
!2697 = !{!"0000017C2E5028F0.w256.b0", !2698, i64 0}
!2698 = !{!"0000017C2E5028F0.w512.b0", !2699, i64 0}
!2699 = !{!"0000017C2E5028F0.w1024.b0", !2700, i64 0}
!2700 = !{!"0000017C2E5028F0", !21, i64 0}
!2701 = !{!2702, !2702, i64 0}
!2702 = !{!"0000017C2E5028F0.w4.b4", !2692, i64 0}
!2703 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2704)
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710}
!2705 = !DILocalVariable(name: "arg1", arg: 1, scope: !2703, file: !1, type: !8)
!2706 = !DILocalVariable(name: "arg2", arg: 2, scope: !2703, file: !1, type: !9)
!2707 = !DILocalVariable(name: "arg3", arg: 3, scope: !2703, file: !1, type: !7)
!2708 = !DILocalVariable(name: "arg4", arg: 4, scope: !2703, file: !1, type: !8)
!2709 = !DILocalVariable(name: "arg5", arg: 5, scope: !2703, file: !1, type: !9)
!2710 = !DILocalVariable(name: "arg6", arg: 6, scope: !2703, file: !1, type: !8)
!2711 = !DILocation(line: 0, scope: !2703)
!2712 = !{!2713, !2713, i64 0}
!2713 = !{!"0000017C22BFB2A0.w4.b0", !2714, i64 0}
!2714 = !{!"0000017C22BFB2A0.w8.b0", !2715, i64 0}
!2715 = !{!"0000017C22BFB2A0.w16.b0", !2716, i64 0}
!2716 = !{!"0000017C22BFB2A0.w32.b0", !2717, i64 0}
!2717 = !{!"0000017C22BFB2A0.w64.b0", !2718, i64 0}
!2718 = !{!"0000017C22BFB2A0.w128.b0", !2719, i64 0}
!2719 = !{!"0000017C22BFB2A0.w256.b0", !2720, i64 0}
!2720 = !{!"0000017C22BFB2A0.w512.b0", !2721, i64 0}
!2721 = !{!"0000017C22BFB2A0.w1024.b0", !2722, i64 0}
!2722 = !{!"0000017C22BFB2A0", !21, i64 0}
!2723 = !{!2724, !2724, i64 0}
!2724 = !{!"0000017C22BFB2A0.w4.b4", !2714, i64 0}
!2725 = !{!2726, !2726, i64 0}
!2726 = !{!"0000017C22BFB2A0.w4.b8", !2727, i64 0}
!2727 = !{!"0000017C22BFB2A0.w8.b8", !2715, i64 0}
!2728 = !{!2729, !2729, i64 0}
!2729 = !{!"0000017C22BFB2A0.w4.b12", !2727, i64 0}
!2730 = !{!2731, !2731, i64 0}
!2731 = !{!"0000017C22C02660.w8.b0", !2732, i64 0}
!2732 = !{!"0000017C22C02660.w16.b0", !2733, i64 0}
!2733 = !{!"0000017C22C02660.w32.b0", !2734, i64 0}
!2734 = !{!"0000017C22C02660.w64.b0", !2735, i64 0}
!2735 = !{!"0000017C22C02660.w128.b0", !2736, i64 0}
!2736 = !{!"0000017C22C02660.w256.b0", !2737, i64 0}
!2737 = !{!"0000017C22C02660.w512.b0", !2738, i64 0}
!2738 = !{!"0000017C22C02660.w1024.b0", !2739, i64 0}
!2739 = !{!"0000017C22C02660", !21, i64 0}
!2740 = !{!2741, !2741, i64 0}
!2741 = !{!"0000017C22C02660.w8.b8", !2732, i64 0}
!2742 = !{!2743, !2743, i64 0}
!2743 = !{!"0000017C22C02660.w8.b16", !2744, i64 0}
!2744 = !{!"0000017C22C02660.w16.b16", !2733, i64 0}
!2745 = !{!2746, !2746, i64 0}
!2746 = !{!"0000017C22C02660.w8.b24", !2744, i64 0}
!2747 = !{!2748, !2748, i64 0}
!2748 = !{!"0000017C22C02820.w8.b8", !2749, i64 0}
!2749 = !{!"0000017C22C02820.w16.b0", !2750, i64 0}
!2750 = !{!"0000017C22C02820.w32.b0", !2751, i64 0}
!2751 = !{!"0000017C22C02820.w64.b0", !2752, i64 0}
!2752 = !{!"0000017C22C02820.w128.b0", !2753, i64 0}
!2753 = !{!"0000017C22C02820.w256.b0", !2754, i64 0}
!2754 = !{!"0000017C22C02820.w512.b0", !2755, i64 0}
!2755 = !{!"0000017C22C02820.w1024.b0", !2756, i64 0}
!2756 = !{!"0000017C22C02820", !21, i64 0}
!2757 = !{!2758, !2758, i64 0}
!2758 = !{!"0000017C22C02820.w8.b16", !2759, i64 0}
!2759 = !{!"0000017C22C02820.w16.b16", !2750, i64 0}
!2760 = !{!2761, !2761, i64 0}
!2761 = !{!"0000017C22C02820.w8.b24", !2759, i64 0}
!2762 = !{!2763, !2763, i64 0}
!2763 = !{!"0000017C22C03DE0.w8.b0", !2764, i64 0}
!2764 = !{!"0000017C22C03DE0.w16.b0", !2765, i64 0}
!2765 = !{!"0000017C22C03DE0.w32.b0", !2766, i64 0}
!2766 = !{!"0000017C22C03DE0.w64.b0", !2767, i64 0}
!2767 = !{!"0000017C22C03DE0.w128.b0", !2768, i64 0}
!2768 = !{!"0000017C22C03DE0.w256.b0", !2769, i64 0}
!2769 = !{!"0000017C22C03DE0.w512.b0", !2770, i64 0}
!2770 = !{!"0000017C22C03DE0.w1024.b0", !2771, i64 0}
!2771 = !{!"0000017C22C03DE0", !21, i64 0}
!2772 = !{!2773, !2773, i64 0}
!2773 = !{!"0000017C22C03DE0.w8.b8", !2764, i64 0}
!2774 = !{!2775, !2775, i64 0}
!2775 = !{!"0000017C22C03DE0.w8.b16", !2776, i64 0}
!2776 = !{!"0000017C22C03DE0.w16.b16", !2765, i64 0}
!2777 = !{!2778, !2778, i64 0}
!2778 = !{!"0000017C22C03DE0.w8.b24", !2776, i64 0}
!2779 = !{!2780, !2780, i64 0}
!2780 = !{!"0000017C22C03F60.w8.b8", !2781, i64 0}
!2781 = !{!"0000017C22C03F60.w16.b0", !2782, i64 0}
!2782 = !{!"0000017C22C03F60.w32.b0", !2783, i64 0}
!2783 = !{!"0000017C22C03F60.w64.b0", !2784, i64 0}
!2784 = !{!"0000017C22C03F60.w128.b0", !2785, i64 0}
!2785 = !{!"0000017C22C03F60.w256.b0", !2786, i64 0}
!2786 = !{!"0000017C22C03F60.w512.b0", !2787, i64 0}
!2787 = !{!"0000017C22C03F60.w1024.b0", !2788, i64 0}
!2788 = !{!"0000017C22C03F60", !21, i64 0}
!2789 = !{!2790, !2790, i64 0}
!2790 = !{!"0000017C22C04A60.w8.b0", !2791, i64 0}
!2791 = !{!"0000017C22C04A60.w16.b0", !2792, i64 0}
!2792 = !{!"0000017C22C04A60.w32.b0", !2793, i64 0}
!2793 = !{!"0000017C22C04A60.w64.b0", !2794, i64 0}
!2794 = !{!"0000017C22C04A60.w128.b0", !2795, i64 0}
!2795 = !{!"0000017C22C04A60.w256.b0", !2796, i64 0}
!2796 = !{!"0000017C22C04A60.w512.b0", !2797, i64 0}
!2797 = !{!"0000017C22C04A60.w1024.b0", !2798, i64 0}
!2798 = !{!"0000017C22C04A60", !21, i64 0}
!2799 = !{!2800, !2800, i64 0}
!2800 = !{!"0000017C22C04A60.w8.b8", !2791, i64 0}
!2801 = !{!2802, !2802, i64 0}
!2802 = !{!"0000017C22C04A60.w8.b16", !2803, i64 0}
!2803 = !{!"0000017C22C04A60.w16.b16", !2792, i64 0}
!2804 = !{!2805, !2805, i64 0}
!2805 = !{!"0000017C22C04A60.w8.b24", !2803, i64 0}
!2806 = !{!2807, !2807, i64 0}
!2807 = !{!"0000017C22C03F20.w8.b8", !2808, i64 0}
!2808 = !{!"0000017C22C03F20.w16.b0", !2809, i64 0}
!2809 = !{!"0000017C22C03F20.w32.b0", !2810, i64 0}
!2810 = !{!"0000017C22C03F20.w64.b0", !2811, i64 0}
!2811 = !{!"0000017C22C03F20.w128.b0", !2812, i64 0}
!2812 = !{!"0000017C22C03F20.w256.b0", !2813, i64 0}
!2813 = !{!"0000017C22C03F20.w512.b0", !2814, i64 0}
!2814 = !{!"0000017C22C03F20.w1024.b0", !2815, i64 0}
!2815 = !{!"0000017C22C03F20", !21, i64 0}
!2816 = !{!2817, !2817, i64 0}
!2817 = !{!"0000017C22C049A0.w8.b0", !2818, i64 0}
!2818 = !{!"0000017C22C049A0.w16.b0", !2819, i64 0}
!2819 = !{!"0000017C22C049A0.w32.b0", !2820, i64 0}
!2820 = !{!"0000017C22C049A0.w64.b0", !2821, i64 0}
!2821 = !{!"0000017C22C049A0.w128.b0", !2822, i64 0}
!2822 = !{!"0000017C22C049A0.w256.b0", !2823, i64 0}
!2823 = !{!"0000017C22C049A0.w512.b0", !2824, i64 0}
!2824 = !{!"0000017C22C049A0.w1024.b0", !2825, i64 0}
!2825 = !{!"0000017C22C049A0", !21, i64 0}
!2826 = !{!2827, !2827, i64 0}
!2827 = !{!"0000017C22C049A0.w8.b8", !2818, i64 0}
!2828 = !{!2829, !2829, i64 0}
!2829 = !{!"0000017C22C049A0.w8.b16", !2830, i64 0}
!2830 = !{!"0000017C22C049A0.w16.b16", !2819, i64 0}
!2831 = !{!2832, !2832, i64 0}
!2832 = !{!"0000017C22C049A0.w8.b24", !2830, i64 0}
!2833 = !{!2834, !2834, i64 0}
!2834 = !{!"0000017C22C05BE0.w8.b8", !2835, i64 0}
!2835 = !{!"0000017C22C05BE0.w16.b0", !2836, i64 0}
!2836 = !{!"0000017C22C05BE0.w32.b0", !2837, i64 0}
!2837 = !{!"0000017C22C05BE0.w64.b0", !2838, i64 0}
!2838 = !{!"0000017C22C05BE0.w128.b0", !2839, i64 0}
!2839 = !{!"0000017C22C05BE0.w256.b0", !2840, i64 0}
!2840 = !{!"0000017C22C05BE0.w512.b0", !2841, i64 0}
!2841 = !{!"0000017C22C05BE0.w1024.b0", !2842, i64 0}
!2842 = !{!"0000017C22C05BE0", !21, i64 0}
!2843 = !{!2844, !2844, i64 0}
!2844 = !{!"0000017C22C05BE0.w8.b16", !2845, i64 0}
!2845 = !{!"0000017C22C05BE0.w16.b16", !2836, i64 0}
!2846 = !{!2847, !2847, i64 0}
!2847 = !{!"0000017C22C05BE0.w8.b24", !2845, i64 0}
!2848 = !{!2849, !2849, i64 0}
!2849 = !{!"0000017C2E5582A0.w4.b0", !2850, i64 0}
!2850 = !{!"0000017C2E5582A0.w8.b0", !2851, i64 0}
!2851 = !{!"0000017C2E5582A0.w16.b0", !2852, i64 0}
!2852 = !{!"0000017C2E5582A0.w32.b0", !2853, i64 0}
!2853 = !{!"0000017C2E5582A0.w64.b0", !2854, i64 0}
!2854 = !{!"0000017C2E5582A0.w128.b0", !2855, i64 0}
!2855 = !{!"0000017C2E5582A0.w256.b0", !2856, i64 0}
!2856 = !{!"0000017C2E5582A0.w512.b0", !2857, i64 0}
!2857 = !{!"0000017C2E5582A0.w1024.b0", !2858, i64 0}
!2858 = !{!"0000017C2E5582A0", !21, i64 0}
!2859 = !{!2860, !2860, i64 0}
!2860 = !{!"0000017C2E5582A0.w4.b4", !2850, i64 0}
!2861 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2862)
!2862 = !{!2863, !2864, !2865, !2866, !2867, !2868}
!2863 = !DILocalVariable(name: "arg1", arg: 1, scope: !2861, file: !1, type: !8)
!2864 = !DILocalVariable(name: "arg2", arg: 2, scope: !2861, file: !1, type: !9)
!2865 = !DILocalVariable(name: "arg3", arg: 3, scope: !2861, file: !1, type: !7)
!2866 = !DILocalVariable(name: "arg4", arg: 4, scope: !2861, file: !1, type: !8)
!2867 = !DILocalVariable(name: "arg5", arg: 5, scope: !2861, file: !1, type: !9)
!2868 = !DILocalVariable(name: "arg6", arg: 6, scope: !2861, file: !1, type: !8)
!2869 = !DILocation(line: 0, scope: !2861)
!2870 = !{!2871, !2871, i64 0}
!2871 = !{!"0000017C2E492630.w4.b0", !2872, i64 0}
!2872 = !{!"0000017C2E492630.w8.b0", !2873, i64 0}
!2873 = !{!"0000017C2E492630.w16.b0", !2874, i64 0}
!2874 = !{!"0000017C2E492630.w32.b0", !2875, i64 0}
!2875 = !{!"0000017C2E492630.w64.b0", !2876, i64 0}
!2876 = !{!"0000017C2E492630.w128.b0", !2877, i64 0}
!2877 = !{!"0000017C2E492630.w256.b0", !2878, i64 0}
!2878 = !{!"0000017C2E492630.w512.b0", !2879, i64 0}
!2879 = !{!"0000017C2E492630.w1024.b0", !2880, i64 0}
!2880 = !{!"0000017C2E492630", !21, i64 0}
!2881 = !{!2882, !2882, i64 0}
!2882 = !{!"0000017C2E492630.w4.b4", !2872, i64 0}
!2883 = !{!2884, !2884, i64 0}
!2884 = !{!"0000017C2E492630.w4.b8", !2885, i64 0}
!2885 = !{!"0000017C2E492630.w8.b8", !2873, i64 0}
!2886 = !{!2887, !2887, i64 0}
!2887 = !{!"0000017C2E492630.w4.b12", !2885, i64 0}
!2888 = !{!2889, !2889, i64 0}
!2889 = !{!"0000017C2E4986F0.w8.b0", !2890, i64 0}
!2890 = !{!"0000017C2E4986F0.w16.b0", !2891, i64 0}
!2891 = !{!"0000017C2E4986F0.w32.b0", !2892, i64 0}
!2892 = !{!"0000017C2E4986F0.w64.b0", !2893, i64 0}
!2893 = !{!"0000017C2E4986F0.w128.b0", !2894, i64 0}
!2894 = !{!"0000017C2E4986F0.w256.b0", !2895, i64 0}
!2895 = !{!"0000017C2E4986F0.w512.b0", !2896, i64 0}
!2896 = !{!"0000017C2E4986F0.w1024.b0", !2897, i64 0}
!2897 = !{!"0000017C2E4986F0", !21, i64 0}
!2898 = !{!2899, !2899, i64 0}
!2899 = !{!"0000017C2E4986F0.w8.b8", !2890, i64 0}
!2900 = !{!2901, !2901, i64 0}
!2901 = !{!"0000017C2E4986F0.w8.b16", !2902, i64 0}
!2902 = !{!"0000017C2E4986F0.w16.b16", !2891, i64 0}
!2903 = !{!2904, !2904, i64 0}
!2904 = !{!"0000017C2E4986F0.w8.b24", !2902, i64 0}
!2905 = !{!2906, !2906, i64 0}
!2906 = !{!"0000017C2E498970.w8.b8", !2907, i64 0}
!2907 = !{!"0000017C2E498970.w16.b0", !2908, i64 0}
!2908 = !{!"0000017C2E498970.w32.b0", !2909, i64 0}
!2909 = !{!"0000017C2E498970.w64.b0", !2910, i64 0}
!2910 = !{!"0000017C2E498970.w128.b0", !2911, i64 0}
!2911 = !{!"0000017C2E498970.w256.b0", !2912, i64 0}
!2912 = !{!"0000017C2E498970.w512.b0", !2913, i64 0}
!2913 = !{!"0000017C2E498970.w1024.b0", !2914, i64 0}
!2914 = !{!"0000017C2E498970", !21, i64 0}
!2915 = !{!2916, !2916, i64 0}
!2916 = !{!"0000017C2E498970.w8.b16", !2917, i64 0}
!2917 = !{!"0000017C2E498970.w16.b16", !2908, i64 0}
!2918 = !{!2919, !2919, i64 0}
!2919 = !{!"0000017C2E498970.w8.b24", !2917, i64 0}
!2920 = !{!2921, !2921, i64 0}
!2921 = !{!"0000017C2E499630.w8.b0", !2922, i64 0}
!2922 = !{!"0000017C2E499630.w16.b0", !2923, i64 0}
!2923 = !{!"0000017C2E499630.w32.b0", !2924, i64 0}
!2924 = !{!"0000017C2E499630.w64.b0", !2925, i64 0}
!2925 = !{!"0000017C2E499630.w128.b0", !2926, i64 0}
!2926 = !{!"0000017C2E499630.w256.b0", !2927, i64 0}
!2927 = !{!"0000017C2E499630.w512.b0", !2928, i64 0}
!2928 = !{!"0000017C2E499630.w1024.b0", !2929, i64 0}
!2929 = !{!"0000017C2E499630", !21, i64 0}
!2930 = !{!2931, !2931, i64 0}
!2931 = !{!"0000017C2E499630.w8.b8", !2922, i64 0}
!2932 = !{!2933, !2933, i64 0}
!2933 = !{!"0000017C2E499630.w8.b16", !2934, i64 0}
!2934 = !{!"0000017C2E499630.w16.b16", !2923, i64 0}
!2935 = !{!2936, !2936, i64 0}
!2936 = !{!"0000017C2E499630.w8.b24", !2934, i64 0}
!2937 = !{!2938, !2938, i64 0}
!2938 = !{!"0000017C2E4991B0.w8.b8", !2939, i64 0}
!2939 = !{!"0000017C2E4991B0.w16.b0", !2940, i64 0}
!2940 = !{!"0000017C2E4991B0.w32.b0", !2941, i64 0}
!2941 = !{!"0000017C2E4991B0.w64.b0", !2942, i64 0}
!2942 = !{!"0000017C2E4991B0.w128.b0", !2943, i64 0}
!2943 = !{!"0000017C2E4991B0.w256.b0", !2944, i64 0}
!2944 = !{!"0000017C2E4991B0.w512.b0", !2945, i64 0}
!2945 = !{!"0000017C2E4991B0.w1024.b0", !2946, i64 0}
!2946 = !{!"0000017C2E4991B0", !21, i64 0}
!2947 = !{!2948, !2948, i64 0}
!2948 = !{!"0000017C2E4993B0.w8.b0", !2949, i64 0}
!2949 = !{!"0000017C2E4993B0.w16.b0", !2950, i64 0}
!2950 = !{!"0000017C2E4993B0.w32.b0", !2951, i64 0}
!2951 = !{!"0000017C2E4993B0.w64.b0", !2952, i64 0}
!2952 = !{!"0000017C2E4993B0.w128.b0", !2953, i64 0}
!2953 = !{!"0000017C2E4993B0.w256.b0", !2954, i64 0}
!2954 = !{!"0000017C2E4993B0.w512.b0", !2955, i64 0}
!2955 = !{!"0000017C2E4993B0.w1024.b0", !2956, i64 0}
!2956 = !{!"0000017C2E4993B0", !21, i64 0}
!2957 = !{!2958, !2958, i64 0}
!2958 = !{!"0000017C2E4993B0.w8.b8", !2949, i64 0}
!2959 = !{!2960, !2960, i64 0}
!2960 = !{!"0000017C2E4993B0.w8.b16", !2961, i64 0}
!2961 = !{!"0000017C2E4993B0.w16.b16", !2950, i64 0}
!2962 = !{!2963, !2963, i64 0}
!2963 = !{!"0000017C2E4993B0.w8.b24", !2961, i64 0}
!2964 = !{!2965, !2965, i64 0}
!2965 = !{!"0000017C2E49AC70.w8.b8", !2966, i64 0}
!2966 = !{!"0000017C2E49AC70.w16.b0", !2967, i64 0}
!2967 = !{!"0000017C2E49AC70.w32.b0", !2968, i64 0}
!2968 = !{!"0000017C2E49AC70.w64.b0", !2969, i64 0}
!2969 = !{!"0000017C2E49AC70.w128.b0", !2970, i64 0}
!2970 = !{!"0000017C2E49AC70.w256.b0", !2971, i64 0}
!2971 = !{!"0000017C2E49AC70.w512.b0", !2972, i64 0}
!2972 = !{!"0000017C2E49AC70.w1024.b0", !2973, i64 0}
!2973 = !{!"0000017C2E49AC70", !21, i64 0}
!2974 = !{!2975, !2975, i64 0}
!2975 = !{!"0000017C2E49AF30.w8.b0", !2976, i64 0}
!2976 = !{!"0000017C2E49AF30.w16.b0", !2977, i64 0}
!2977 = !{!"0000017C2E49AF30.w32.b0", !2978, i64 0}
!2978 = !{!"0000017C2E49AF30.w64.b0", !2979, i64 0}
!2979 = !{!"0000017C2E49AF30.w128.b0", !2980, i64 0}
!2980 = !{!"0000017C2E49AF30.w256.b0", !2981, i64 0}
!2981 = !{!"0000017C2E49AF30.w512.b0", !2982, i64 0}
!2982 = !{!"0000017C2E49AF30.w1024.b0", !2983, i64 0}
!2983 = !{!"0000017C2E49AF30", !21, i64 0}
!2984 = !{!2985, !2985, i64 0}
!2985 = !{!"0000017C2E49AF30.w8.b8", !2976, i64 0}
!2986 = !{!2987, !2987, i64 0}
!2987 = !{!"0000017C2E49AF30.w8.b16", !2988, i64 0}
!2988 = !{!"0000017C2E49AF30.w16.b16", !2977, i64 0}
!2989 = !{!2990, !2990, i64 0}
!2990 = !{!"0000017C2E49AF30.w8.b24", !2988, i64 0}
!2991 = !{!2992, !2992, i64 0}
!2992 = !{!"0000017C2E49A430.w8.b8", !2993, i64 0}
!2993 = !{!"0000017C2E49A430.w16.b0", !2994, i64 0}
!2994 = !{!"0000017C2E49A430.w32.b0", !2995, i64 0}
!2995 = !{!"0000017C2E49A430.w64.b0", !2996, i64 0}
!2996 = !{!"0000017C2E49A430.w128.b0", !2997, i64 0}
!2997 = !{!"0000017C2E49A430.w256.b0", !2998, i64 0}
!2998 = !{!"0000017C2E49A430.w512.b0", !2999, i64 0}
!2999 = !{!"0000017C2E49A430.w1024.b0", !3000, i64 0}
!3000 = !{!"0000017C2E49A430", !21, i64 0}
!3001 = !{!3002, !3002, i64 0}
!3002 = !{!"0000017C2E49A430.w8.b16", !3003, i64 0}
!3003 = !{!"0000017C2E49A430.w16.b16", !2994, i64 0}
!3004 = !{!3005, !3005, i64 0}
!3005 = !{!"0000017C2E49A430.w8.b24", !3003, i64 0}
!3006 = !{!3007, !3007, i64 0}
!3007 = !{!"0000017C2E5FED30.w4.b0", !3008, i64 0}
!3008 = !{!"0000017C2E5FED30.w8.b0", !3009, i64 0}
!3009 = !{!"0000017C2E5FED30.w16.b0", !3010, i64 0}
!3010 = !{!"0000017C2E5FED30.w32.b0", !3011, i64 0}
!3011 = !{!"0000017C2E5FED30.w64.b0", !3012, i64 0}
!3012 = !{!"0000017C2E5FED30.w128.b0", !3013, i64 0}
!3013 = !{!"0000017C2E5FED30.w256.b0", !3014, i64 0}
!3014 = !{!"0000017C2E5FED30.w512.b0", !3015, i64 0}
!3015 = !{!"0000017C2E5FED30.w1024.b0", !3016, i64 0}
!3016 = !{!"0000017C2E5FED30", !21, i64 0}
!3017 = !{!3018, !3018, i64 0}
!3018 = !{!"0000017C2E5FED30.w4.b4", !3008, i64 0}
!3019 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3020)
!3020 = !{!3021, !3022, !3023, !3024, !3025, !3026}
!3021 = !DILocalVariable(name: "arg1", arg: 1, scope: !3019, file: !1, type: !8)
!3022 = !DILocalVariable(name: "arg2", arg: 2, scope: !3019, file: !1, type: !9)
!3023 = !DILocalVariable(name: "arg3", arg: 3, scope: !3019, file: !1, type: !7)
!3024 = !DILocalVariable(name: "arg4", arg: 4, scope: !3019, file: !1, type: !8)
!3025 = !DILocalVariable(name: "arg5", arg: 5, scope: !3019, file: !1, type: !9)
!3026 = !DILocalVariable(name: "arg6", arg: 6, scope: !3019, file: !1, type: !8)
!3027 = !DILocation(line: 0, scope: !3019)
!3028 = !{!3029, !3029, i64 0}
!3029 = !{!"0000017C2E365AF0.w4.b0", !3030, i64 0}
!3030 = !{!"0000017C2E365AF0.w8.b0", !3031, i64 0}
!3031 = !{!"0000017C2E365AF0.w16.b0", !3032, i64 0}
!3032 = !{!"0000017C2E365AF0.w32.b0", !3033, i64 0}
!3033 = !{!"0000017C2E365AF0.w64.b0", !3034, i64 0}
!3034 = !{!"0000017C2E365AF0.w128.b0", !3035, i64 0}
!3035 = !{!"0000017C2E365AF0.w256.b0", !3036, i64 0}
!3036 = !{!"0000017C2E365AF0.w512.b0", !3037, i64 0}
!3037 = !{!"0000017C2E365AF0.w1024.b0", !3038, i64 0}
!3038 = !{!"0000017C2E365AF0", !21, i64 0}
!3039 = !{!3040, !3040, i64 0}
!3040 = !{!"0000017C2E365AF0.w4.b4", !3030, i64 0}
!3041 = !{!3042, !3042, i64 0}
!3042 = !{!"0000017C2E365AF0.w4.b8", !3043, i64 0}
!3043 = !{!"0000017C2E365AF0.w8.b8", !3031, i64 0}
!3044 = !{!3045, !3045, i64 0}
!3045 = !{!"0000017C2E365AF0.w4.b12", !3043, i64 0}
!3046 = !{!3047, !3047, i64 0}
!3047 = !{!"0000017C2E3B0630.w8.b0", !3048, i64 0}
!3048 = !{!"0000017C2E3B0630.w16.b0", !3049, i64 0}
!3049 = !{!"0000017C2E3B0630.w32.b0", !3050, i64 0}
!3050 = !{!"0000017C2E3B0630.w64.b0", !3051, i64 0}
!3051 = !{!"0000017C2E3B0630.w128.b0", !3052, i64 0}
!3052 = !{!"0000017C2E3B0630.w256.b0", !3053, i64 0}
!3053 = !{!"0000017C2E3B0630.w512.b0", !3054, i64 0}
!3054 = !{!"0000017C2E3B0630.w1024.b0", !3055, i64 0}
!3055 = !{!"0000017C2E3B0630", !21, i64 0}
!3056 = !{!3057, !3057, i64 0}
!3057 = !{!"0000017C2E3B0630.w8.b8", !3048, i64 0}
!3058 = !{!3059, !3059, i64 0}
!3059 = !{!"0000017C2E3B0630.w8.b16", !3060, i64 0}
!3060 = !{!"0000017C2E3B0630.w16.b16", !3049, i64 0}
!3061 = !{!3062, !3062, i64 0}
!3062 = !{!"0000017C2E3B0630.w8.b24", !3060, i64 0}
!3063 = !{!3064, !3064, i64 0}
!3064 = !{!"0000017C2E30A630.w8.b8", !3065, i64 0}
!3065 = !{!"0000017C2E30A630.w16.b0", !3066, i64 0}
!3066 = !{!"0000017C2E30A630.w32.b0", !3067, i64 0}
!3067 = !{!"0000017C2E30A630.w64.b0", !3068, i64 0}
!3068 = !{!"0000017C2E30A630.w128.b0", !3069, i64 0}
!3069 = !{!"0000017C2E30A630.w256.b0", !3070, i64 0}
!3070 = !{!"0000017C2E30A630.w512.b0", !3071, i64 0}
!3071 = !{!"0000017C2E30A630.w1024.b0", !3072, i64 0}
!3072 = !{!"0000017C2E30A630", !21, i64 0}
!3073 = !{!3074, !3074, i64 0}
!3074 = !{!"0000017C2E30A630.w8.b16", !3075, i64 0}
!3075 = !{!"0000017C2E30A630.w16.b16", !3066, i64 0}
!3076 = !{!3077, !3077, i64 0}
!3077 = !{!"0000017C2E30A630.w8.b24", !3075, i64 0}
!3078 = !{!3079, !3079, i64 0}
!3079 = !{!"0000017C2E407160.w8.b0", !3080, i64 0}
!3080 = !{!"0000017C2E407160.w16.b0", !3081, i64 0}
!3081 = !{!"0000017C2E407160.w32.b0", !3082, i64 0}
!3082 = !{!"0000017C2E407160.w64.b0", !3083, i64 0}
!3083 = !{!"0000017C2E407160.w128.b0", !3084, i64 0}
!3084 = !{!"0000017C2E407160.w256.b0", !3085, i64 0}
!3085 = !{!"0000017C2E407160.w512.b0", !3086, i64 0}
!3086 = !{!"0000017C2E407160.w1024.b0", !3087, i64 0}
!3087 = !{!"0000017C2E407160", !21, i64 0}
!3088 = !{!3089, !3089, i64 0}
!3089 = !{!"0000017C2E407160.w8.b8", !3080, i64 0}
!3090 = !{!3091, !3091, i64 0}
!3091 = !{!"0000017C2E407160.w8.b16", !3092, i64 0}
!3092 = !{!"0000017C2E407160.w16.b16", !3081, i64 0}
!3093 = !{!3094, !3094, i64 0}
!3094 = !{!"0000017C2E407160.w8.b24", !3092, i64 0}
!3095 = !{!3096, !3096, i64 0}
!3096 = !{!"0000017C2E407320.w8.b8", !3097, i64 0}
!3097 = !{!"0000017C2E407320.w16.b0", !3098, i64 0}
!3098 = !{!"0000017C2E407320.w32.b0", !3099, i64 0}
!3099 = !{!"0000017C2E407320.w64.b0", !3100, i64 0}
!3100 = !{!"0000017C2E407320.w128.b0", !3101, i64 0}
!3101 = !{!"0000017C2E407320.w256.b0", !3102, i64 0}
!3102 = !{!"0000017C2E407320.w512.b0", !3103, i64 0}
!3103 = !{!"0000017C2E407320.w1024.b0", !3104, i64 0}
!3104 = !{!"0000017C2E407320", !21, i64 0}
!3105 = !{!3106, !3106, i64 0}
!3106 = !{!"0000017C2E408F60.w8.b0", !3107, i64 0}
!3107 = !{!"0000017C2E408F60.w16.b0", !3108, i64 0}
!3108 = !{!"0000017C2E408F60.w32.b0", !3109, i64 0}
!3109 = !{!"0000017C2E408F60.w64.b0", !3110, i64 0}
!3110 = !{!"0000017C2E408F60.w128.b0", !3111, i64 0}
!3111 = !{!"0000017C2E408F60.w256.b0", !3112, i64 0}
!3112 = !{!"0000017C2E408F60.w512.b0", !3113, i64 0}
!3113 = !{!"0000017C2E408F60.w1024.b0", !3114, i64 0}
!3114 = !{!"0000017C2E408F60", !21, i64 0}
!3115 = !{!3116, !3116, i64 0}
!3116 = !{!"0000017C2E408F60.w8.b8", !3107, i64 0}
!3117 = !{!3118, !3118, i64 0}
!3118 = !{!"0000017C2E408F60.w8.b16", !3119, i64 0}
!3119 = !{!"0000017C2E408F60.w16.b16", !3108, i64 0}
!3120 = !{!3121, !3121, i64 0}
!3121 = !{!"0000017C2E408F60.w8.b24", !3119, i64 0}
!3122 = !{!3123, !3123, i64 0}
!3123 = !{!"0000017C2E408D20.w8.b8", !3124, i64 0}
!3124 = !{!"0000017C2E408D20.w16.b0", !3125, i64 0}
!3125 = !{!"0000017C2E408D20.w32.b0", !3126, i64 0}
!3126 = !{!"0000017C2E408D20.w64.b0", !3127, i64 0}
!3127 = !{!"0000017C2E408D20.w128.b0", !3128, i64 0}
!3128 = !{!"0000017C2E408D20.w256.b0", !3129, i64 0}
!3129 = !{!"0000017C2E408D20.w512.b0", !3130, i64 0}
!3130 = !{!"0000017C2E408D20.w1024.b0", !3131, i64 0}
!3131 = !{!"0000017C2E408D20", !21, i64 0}
!3132 = !{!3133, !3133, i64 0}
!3133 = !{!"0000017C2E409420.w8.b0", !3134, i64 0}
!3134 = !{!"0000017C2E409420.w16.b0", !3135, i64 0}
!3135 = !{!"0000017C2E409420.w32.b0", !3136, i64 0}
!3136 = !{!"0000017C2E409420.w64.b0", !3137, i64 0}
!3137 = !{!"0000017C2E409420.w128.b0", !3138, i64 0}
!3138 = !{!"0000017C2E409420.w256.b0", !3139, i64 0}
!3139 = !{!"0000017C2E409420.w512.b0", !3140, i64 0}
!3140 = !{!"0000017C2E409420.w1024.b0", !3141, i64 0}
!3141 = !{!"0000017C2E409420", !21, i64 0}
!3142 = !{!3143, !3143, i64 0}
!3143 = !{!"0000017C2E409420.w8.b8", !3134, i64 0}
!3144 = !{!3145, !3145, i64 0}
!3145 = !{!"0000017C2E409420.w8.b16", !3146, i64 0}
!3146 = !{!"0000017C2E409420.w16.b16", !3135, i64 0}
!3147 = !{!3148, !3148, i64 0}
!3148 = !{!"0000017C2E409420.w8.b24", !3146, i64 0}
!3149 = !{!3150, !3150, i64 0}
!3150 = !{!"0000017C2E4094A0.w8.b8", !3151, i64 0}
!3151 = !{!"0000017C2E4094A0.w16.b0", !3152, i64 0}
!3152 = !{!"0000017C2E4094A0.w32.b0", !3153, i64 0}
!3153 = !{!"0000017C2E4094A0.w64.b0", !3154, i64 0}
!3154 = !{!"0000017C2E4094A0.w128.b0", !3155, i64 0}
!3155 = !{!"0000017C2E4094A0.w256.b0", !3156, i64 0}
!3156 = !{!"0000017C2E4094A0.w512.b0", !3157, i64 0}
!3157 = !{!"0000017C2E4094A0.w1024.b0", !3158, i64 0}
!3158 = !{!"0000017C2E4094A0", !21, i64 0}
!3159 = !{!3160, !3160, i64 0}
!3160 = !{!"0000017C2E4094A0.w8.b16", !3161, i64 0}
!3161 = !{!"0000017C2E4094A0.w16.b16", !3152, i64 0}
!3162 = !{!3163, !3163, i64 0}
!3163 = !{!"0000017C2E4094A0.w8.b24", !3161, i64 0}
!3164 = !{!3165, !3165, i64 0}
!3165 = !{!"0000017C2E356EF0.w4.b0", !3166, i64 0}
!3166 = !{!"0000017C2E356EF0.w8.b0", !3167, i64 0}
!3167 = !{!"0000017C2E356EF0.w16.b0", !3168, i64 0}
!3168 = !{!"0000017C2E356EF0.w32.b0", !3169, i64 0}
!3169 = !{!"0000017C2E356EF0.w64.b0", !3170, i64 0}
!3170 = !{!"0000017C2E356EF0.w128.b0", !3171, i64 0}
!3171 = !{!"0000017C2E356EF0.w256.b0", !3172, i64 0}
!3172 = !{!"0000017C2E356EF0.w512.b0", !3173, i64 0}
!3173 = !{!"0000017C2E356EF0.w1024.b0", !3174, i64 0}
!3174 = !{!"0000017C2E356EF0", !21, i64 0}
!3175 = !{!3176, !3176, i64 0}
!3176 = !{!"0000017C2E356EF0.w4.b4", !3166, i64 0}
!3177 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3178)
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3184}
!3179 = !DILocalVariable(name: "arg1", arg: 1, scope: !3177, file: !1, type: !8)
!3180 = !DILocalVariable(name: "arg2", arg: 2, scope: !3177, file: !1, type: !9)
!3181 = !DILocalVariable(name: "arg3", arg: 3, scope: !3177, file: !1, type: !7)
!3182 = !DILocalVariable(name: "arg4", arg: 4, scope: !3177, file: !1, type: !8)
!3183 = !DILocalVariable(name: "arg5", arg: 5, scope: !3177, file: !1, type: !9)
!3184 = !DILocalVariable(name: "arg6", arg: 6, scope: !3177, file: !1, type: !8)
!3185 = !DILocation(line: 0, scope: !3177)
!3186 = !{!3187, !3187, i64 0}
!3187 = !{!"0000017C2E4096E0.w4.b0", !3188, i64 0}
!3188 = !{!"0000017C2E4096E0.w8.b0", !3189, i64 0}
!3189 = !{!"0000017C2E4096E0.w16.b0", !3190, i64 0}
!3190 = !{!"0000017C2E4096E0.w32.b0", !3191, i64 0}
!3191 = !{!"0000017C2E4096E0.w64.b0", !3192, i64 0}
!3192 = !{!"0000017C2E4096E0.w128.b0", !3193, i64 0}
!3193 = !{!"0000017C2E4096E0.w256.b0", !3194, i64 0}
!3194 = !{!"0000017C2E4096E0.w512.b0", !3195, i64 0}
!3195 = !{!"0000017C2E4096E0.w1024.b0", !3196, i64 0}
!3196 = !{!"0000017C2E4096E0", !21, i64 0}
!3197 = !{!3198, !3198, i64 0}
!3198 = !{!"0000017C2E4096E0.w4.b4", !3188, i64 0}
!3199 = !{!3200, !3200, i64 0}
!3200 = !{!"0000017C2E4096E0.w4.b8", !3201, i64 0}
!3201 = !{!"0000017C2E4096E0.w8.b8", !3189, i64 0}
!3202 = !{!3203, !3203, i64 0}
!3203 = !{!"0000017C2E4096E0.w4.b12", !3201, i64 0}
!3204 = !{!3205, !3205, i64 0}
!3205 = !{!"0000017C2E40E3E0.w8.b0", !3206, i64 0}
!3206 = !{!"0000017C2E40E3E0.w16.b0", !3207, i64 0}
!3207 = !{!"0000017C2E40E3E0.w32.b0", !3208, i64 0}
!3208 = !{!"0000017C2E40E3E0.w64.b0", !3209, i64 0}
!3209 = !{!"0000017C2E40E3E0.w128.b0", !3210, i64 0}
!3210 = !{!"0000017C2E40E3E0.w256.b0", !3211, i64 0}
!3211 = !{!"0000017C2E40E3E0.w512.b0", !3212, i64 0}
!3212 = !{!"0000017C2E40E3E0.w1024.b0", !3213, i64 0}
!3213 = !{!"0000017C2E40E3E0", !21, i64 0}
!3214 = !{!3215, !3215, i64 0}
!3215 = !{!"0000017C2E40E3E0.w8.b8", !3206, i64 0}
!3216 = !{!3217, !3217, i64 0}
!3217 = !{!"0000017C2E40E3E0.w8.b16", !3218, i64 0}
!3218 = !{!"0000017C2E40E3E0.w16.b16", !3207, i64 0}
!3219 = !{!3220, !3220, i64 0}
!3220 = !{!"0000017C2E40E3E0.w8.b24", !3218, i64 0}
!3221 = !{!3222, !3222, i64 0}
!3222 = !{!"0000017C2E40E6E0.w8.b8", !3223, i64 0}
!3223 = !{!"0000017C2E40E6E0.w16.b0", !3224, i64 0}
!3224 = !{!"0000017C2E40E6E0.w32.b0", !3225, i64 0}
!3225 = !{!"0000017C2E40E6E0.w64.b0", !3226, i64 0}
!3226 = !{!"0000017C2E40E6E0.w128.b0", !3227, i64 0}
!3227 = !{!"0000017C2E40E6E0.w256.b0", !3228, i64 0}
!3228 = !{!"0000017C2E40E6E0.w512.b0", !3229, i64 0}
!3229 = !{!"0000017C2E40E6E0.w1024.b0", !3230, i64 0}
!3230 = !{!"0000017C2E40E6E0", !21, i64 0}
!3231 = !{!3232, !3232, i64 0}
!3232 = !{!"0000017C2E40E6E0.w8.b16", !3233, i64 0}
!3233 = !{!"0000017C2E40E6E0.w16.b16", !3224, i64 0}
!3234 = !{!3235, !3235, i64 0}
!3235 = !{!"0000017C2E40E6E0.w8.b24", !3233, i64 0}
!3236 = !{!3237, !3237, i64 0}
!3237 = !{!"0000017C2E40F220.w8.b0", !3238, i64 0}
!3238 = !{!"0000017C2E40F220.w16.b0", !3239, i64 0}
!3239 = !{!"0000017C2E40F220.w32.b0", !3240, i64 0}
!3240 = !{!"0000017C2E40F220.w64.b0", !3241, i64 0}
!3241 = !{!"0000017C2E40F220.w128.b0", !3242, i64 0}
!3242 = !{!"0000017C2E40F220.w256.b0", !3243, i64 0}
!3243 = !{!"0000017C2E40F220.w512.b0", !3244, i64 0}
!3244 = !{!"0000017C2E40F220.w1024.b0", !3245, i64 0}
!3245 = !{!"0000017C2E40F220", !21, i64 0}
!3246 = !{!3247, !3247, i64 0}
!3247 = !{!"0000017C2E40F220.w8.b8", !3238, i64 0}
!3248 = !{!3249, !3249, i64 0}
!3249 = !{!"0000017C2E40F220.w8.b16", !3250, i64 0}
!3250 = !{!"0000017C2E40F220.w16.b16", !3239, i64 0}
!3251 = !{!3252, !3252, i64 0}
!3252 = !{!"0000017C2E40F220.w8.b24", !3250, i64 0}
!3253 = !{!3254, !3254, i64 0}
!3254 = !{!"0000017C2E40FE20.w8.b8", !3255, i64 0}
!3255 = !{!"0000017C2E40FE20.w16.b0", !3256, i64 0}
!3256 = !{!"0000017C2E40FE20.w32.b0", !3257, i64 0}
!3257 = !{!"0000017C2E40FE20.w64.b0", !3258, i64 0}
!3258 = !{!"0000017C2E40FE20.w128.b0", !3259, i64 0}
!3259 = !{!"0000017C2E40FE20.w256.b0", !3260, i64 0}
!3260 = !{!"0000017C2E40FE20.w512.b0", !3261, i64 0}
!3261 = !{!"0000017C2E40FE20.w1024.b0", !3262, i64 0}
!3262 = !{!"0000017C2E40FE20", !21, i64 0}
!3263 = !{!3264, !3264, i64 0}
!3264 = !{!"0000017C2E410E60.w8.b0", !3265, i64 0}
!3265 = !{!"0000017C2E410E60.w16.b0", !3266, i64 0}
!3266 = !{!"0000017C2E410E60.w32.b0", !3267, i64 0}
!3267 = !{!"0000017C2E410E60.w64.b0", !3268, i64 0}
!3268 = !{!"0000017C2E410E60.w128.b0", !3269, i64 0}
!3269 = !{!"0000017C2E410E60.w256.b0", !3270, i64 0}
!3270 = !{!"0000017C2E410E60.w512.b0", !3271, i64 0}
!3271 = !{!"0000017C2E410E60.w1024.b0", !3272, i64 0}
!3272 = !{!"0000017C2E410E60", !21, i64 0}
!3273 = !{!3274, !3274, i64 0}
!3274 = !{!"0000017C2E410E60.w8.b8", !3265, i64 0}
!3275 = !{!3276, !3276, i64 0}
!3276 = !{!"0000017C2E410E60.w8.b16", !3277, i64 0}
!3277 = !{!"0000017C2E410E60.w16.b16", !3266, i64 0}
!3278 = !{!3279, !3279, i64 0}
!3279 = !{!"0000017C2E410E60.w8.b24", !3277, i64 0}
!3280 = !{!3281, !3281, i64 0}
!3281 = !{!"0000017C2E4100A0.w8.b8", !3282, i64 0}
!3282 = !{!"0000017C2E4100A0.w16.b0", !3283, i64 0}
!3283 = !{!"0000017C2E4100A0.w32.b0", !3284, i64 0}
!3284 = !{!"0000017C2E4100A0.w64.b0", !3285, i64 0}
!3285 = !{!"0000017C2E4100A0.w128.b0", !3286, i64 0}
!3286 = !{!"0000017C2E4100A0.w256.b0", !3287, i64 0}
!3287 = !{!"0000017C2E4100A0.w512.b0", !3288, i64 0}
!3288 = !{!"0000017C2E4100A0.w1024.b0", !3289, i64 0}
!3289 = !{!"0000017C2E4100A0", !21, i64 0}
!3290 = !{!3291, !3291, i64 0}
!3291 = !{!"0000017C2E410EA0.w8.b0", !3292, i64 0}
!3292 = !{!"0000017C2E410EA0.w16.b0", !3293, i64 0}
!3293 = !{!"0000017C2E410EA0.w32.b0", !3294, i64 0}
!3294 = !{!"0000017C2E410EA0.w64.b0", !3295, i64 0}
!3295 = !{!"0000017C2E410EA0.w128.b0", !3296, i64 0}
!3296 = !{!"0000017C2E410EA0.w256.b0", !3297, i64 0}
!3297 = !{!"0000017C2E410EA0.w512.b0", !3298, i64 0}
!3298 = !{!"0000017C2E410EA0.w1024.b0", !3299, i64 0}
!3299 = !{!"0000017C2E410EA0", !21, i64 0}
!3300 = !{!3301, !3301, i64 0}
!3301 = !{!"0000017C2E410EA0.w8.b8", !3292, i64 0}
!3302 = !{!3303, !3303, i64 0}
!3303 = !{!"0000017C2E410EA0.w8.b16", !3304, i64 0}
!3304 = !{!"0000017C2E410EA0.w16.b16", !3293, i64 0}
!3305 = !{!3306, !3306, i64 0}
!3306 = !{!"0000017C2E410EA0.w8.b24", !3304, i64 0}
!3307 = !{!3308, !3308, i64 0}
!3308 = !{!"0000017C2E411660.w8.b8", !3309, i64 0}
!3309 = !{!"0000017C2E411660.w16.b0", !3310, i64 0}
!3310 = !{!"0000017C2E411660.w32.b0", !3311, i64 0}
!3311 = !{!"0000017C2E411660.w64.b0", !3312, i64 0}
!3312 = !{!"0000017C2E411660.w128.b0", !3313, i64 0}
!3313 = !{!"0000017C2E411660.w256.b0", !3314, i64 0}
!3314 = !{!"0000017C2E411660.w512.b0", !3315, i64 0}
!3315 = !{!"0000017C2E411660.w1024.b0", !3316, i64 0}
!3316 = !{!"0000017C2E411660", !21, i64 0}
!3317 = !{!3318, !3318, i64 0}
!3318 = !{!"0000017C2E411660.w8.b16", !3319, i64 0}
!3319 = !{!"0000017C2E411660.w16.b16", !3310, i64 0}
!3320 = !{!3321, !3321, i64 0}
!3321 = !{!"0000017C2E411660.w8.b24", !3319, i64 0}
!3322 = !{!3323, !3323, i64 0}
!3323 = !{!"0000017C2E35BA30.w4.b0", !3324, i64 0}
!3324 = !{!"0000017C2E35BA30.w8.b0", !3325, i64 0}
!3325 = !{!"0000017C2E35BA30.w16.b0", !3326, i64 0}
!3326 = !{!"0000017C2E35BA30.w32.b0", !3327, i64 0}
!3327 = !{!"0000017C2E35BA30.w64.b0", !3328, i64 0}
!3328 = !{!"0000017C2E35BA30.w128.b0", !3329, i64 0}
!3329 = !{!"0000017C2E35BA30.w256.b0", !3330, i64 0}
!3330 = !{!"0000017C2E35BA30.w512.b0", !3331, i64 0}
!3331 = !{!"0000017C2E35BA30.w1024.b0", !3332, i64 0}
!3332 = !{!"0000017C2E35BA30", !21, i64 0}
!3333 = !{!3334, !3334, i64 0}
!3334 = !{!"0000017C2E35BA30.w4.b4", !3324, i64 0}
!3335 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3336)
!3336 = !{!3337, !3338, !3339, !3340, !3341, !3342}
!3337 = !DILocalVariable(name: "arg1", arg: 1, scope: !3335, file: !1, type: !8)
!3338 = !DILocalVariable(name: "arg2", arg: 2, scope: !3335, file: !1, type: !9)
!3339 = !DILocalVariable(name: "arg3", arg: 3, scope: !3335, file: !1, type: !7)
!3340 = !DILocalVariable(name: "arg4", arg: 4, scope: !3335, file: !1, type: !8)
!3341 = !DILocalVariable(name: "arg5", arg: 5, scope: !3335, file: !1, type: !9)
!3342 = !DILocalVariable(name: "arg6", arg: 6, scope: !3335, file: !1, type: !8)
!3343 = !DILocation(line: 0, scope: !3335)
!3344 = !{!3345, !3345, i64 0}
!3345 = !{!"0000017C2E417520.w4.b0", !3346, i64 0}
!3346 = !{!"0000017C2E417520.w8.b0", !3347, i64 0}
!3347 = !{!"0000017C2E417520.w16.b0", !3348, i64 0}
!3348 = !{!"0000017C2E417520.w32.b0", !3349, i64 0}
!3349 = !{!"0000017C2E417520.w64.b0", !3350, i64 0}
!3350 = !{!"0000017C2E417520.w128.b0", !3351, i64 0}
!3351 = !{!"0000017C2E417520.w256.b0", !3352, i64 0}
!3352 = !{!"0000017C2E417520.w512.b0", !3353, i64 0}
!3353 = !{!"0000017C2E417520.w1024.b0", !3354, i64 0}
!3354 = !{!"0000017C2E417520", !21, i64 0}
!3355 = !{!3356, !3356, i64 0}
!3356 = !{!"0000017C2E417520.w4.b4", !3346, i64 0}
!3357 = !{!3358, !3358, i64 0}
!3358 = !{!"0000017C2E417520.w4.b8", !3359, i64 0}
!3359 = !{!"0000017C2E417520.w8.b8", !3347, i64 0}
!3360 = !{!3361, !3361, i64 0}
!3361 = !{!"0000017C2E417520.w4.b12", !3359, i64 0}
!3362 = !{!3363, !3363, i64 0}
!3363 = !{!"0000017C2E41E2A0.w8.b0", !3364, i64 0}
!3364 = !{!"0000017C2E41E2A0.w16.b0", !3365, i64 0}
!3365 = !{!"0000017C2E41E2A0.w32.b0", !3366, i64 0}
!3366 = !{!"0000017C2E41E2A0.w64.b0", !3367, i64 0}
!3367 = !{!"0000017C2E41E2A0.w128.b0", !3368, i64 0}
!3368 = !{!"0000017C2E41E2A0.w256.b0", !3369, i64 0}
!3369 = !{!"0000017C2E41E2A0.w512.b0", !3370, i64 0}
!3370 = !{!"0000017C2E41E2A0.w1024.b0", !3371, i64 0}
!3371 = !{!"0000017C2E41E2A0", !21, i64 0}
!3372 = !{!3373, !3373, i64 0}
!3373 = !{!"0000017C2E41E2A0.w8.b8", !3364, i64 0}
!3374 = !{!3375, !3375, i64 0}
!3375 = !{!"0000017C2E41E2A0.w8.b16", !3376, i64 0}
!3376 = !{!"0000017C2E41E2A0.w16.b16", !3365, i64 0}
!3377 = !{!3378, !3378, i64 0}
!3378 = !{!"0000017C2E41E2A0.w8.b24", !3376, i64 0}
!3379 = !{!3380, !3380, i64 0}
!3380 = !{!"0000017C2E41EE60.w8.b8", !3381, i64 0}
!3381 = !{!"0000017C2E41EE60.w16.b0", !3382, i64 0}
!3382 = !{!"0000017C2E41EE60.w32.b0", !3383, i64 0}
!3383 = !{!"0000017C2E41EE60.w64.b0", !3384, i64 0}
!3384 = !{!"0000017C2E41EE60.w128.b0", !3385, i64 0}
!3385 = !{!"0000017C2E41EE60.w256.b0", !3386, i64 0}
!3386 = !{!"0000017C2E41EE60.w512.b0", !3387, i64 0}
!3387 = !{!"0000017C2E41EE60.w1024.b0", !3388, i64 0}
!3388 = !{!"0000017C2E41EE60", !21, i64 0}
!3389 = !{!3390, !3390, i64 0}
!3390 = !{!"0000017C2E41EE60.w8.b16", !3391, i64 0}
!3391 = !{!"0000017C2E41EE60.w16.b16", !3382, i64 0}
!3392 = !{!3393, !3393, i64 0}
!3393 = !{!"0000017C2E41EE60.w8.b24", !3391, i64 0}
!3394 = !{!3395, !3395, i64 0}
!3395 = !{!"0000017C2E41F060.w8.b0", !3396, i64 0}
!3396 = !{!"0000017C2E41F060.w16.b0", !3397, i64 0}
!3397 = !{!"0000017C2E41F060.w32.b0", !3398, i64 0}
!3398 = !{!"0000017C2E41F060.w64.b0", !3399, i64 0}
!3399 = !{!"0000017C2E41F060.w128.b0", !3400, i64 0}
!3400 = !{!"0000017C2E41F060.w256.b0", !3401, i64 0}
!3401 = !{!"0000017C2E41F060.w512.b0", !3402, i64 0}
!3402 = !{!"0000017C2E41F060.w1024.b0", !3403, i64 0}
!3403 = !{!"0000017C2E41F060", !21, i64 0}
!3404 = !{!3405, !3405, i64 0}
!3405 = !{!"0000017C2E41F060.w8.b8", !3396, i64 0}
!3406 = !{!3407, !3407, i64 0}
!3407 = !{!"0000017C2E41F060.w8.b16", !3408, i64 0}
!3408 = !{!"0000017C2E41F060.w16.b16", !3397, i64 0}
!3409 = !{!3410, !3410, i64 0}
!3410 = !{!"0000017C2E41F060.w8.b24", !3408, i64 0}
!3411 = !{!3412, !3412, i64 0}
!3412 = !{!"0000017C2E41FE20.w8.b8", !3413, i64 0}
!3413 = !{!"0000017C2E41FE20.w16.b0", !3414, i64 0}
!3414 = !{!"0000017C2E41FE20.w32.b0", !3415, i64 0}
!3415 = !{!"0000017C2E41FE20.w64.b0", !3416, i64 0}
!3416 = !{!"0000017C2E41FE20.w128.b0", !3417, i64 0}
!3417 = !{!"0000017C2E41FE20.w256.b0", !3418, i64 0}
!3418 = !{!"0000017C2E41FE20.w512.b0", !3419, i64 0}
!3419 = !{!"0000017C2E41FE20.w1024.b0", !3420, i64 0}
!3420 = !{!"0000017C2E41FE20", !21, i64 0}
!3421 = !{!3422, !3422, i64 0}
!3422 = !{!"0000017C2E41FDA0.w8.b0", !3423, i64 0}
!3423 = !{!"0000017C2E41FDA0.w16.b0", !3424, i64 0}
!3424 = !{!"0000017C2E41FDA0.w32.b0", !3425, i64 0}
!3425 = !{!"0000017C2E41FDA0.w64.b0", !3426, i64 0}
!3426 = !{!"0000017C2E41FDA0.w128.b0", !3427, i64 0}
!3427 = !{!"0000017C2E41FDA0.w256.b0", !3428, i64 0}
!3428 = !{!"0000017C2E41FDA0.w512.b0", !3429, i64 0}
!3429 = !{!"0000017C2E41FDA0.w1024.b0", !3430, i64 0}
!3430 = !{!"0000017C2E41FDA0", !21, i64 0}
!3431 = !{!3432, !3432, i64 0}
!3432 = !{!"0000017C2E41FDA0.w8.b8", !3423, i64 0}
!3433 = !{!3434, !3434, i64 0}
!3434 = !{!"0000017C2E41FDA0.w8.b16", !3435, i64 0}
!3435 = !{!"0000017C2E41FDA0.w16.b16", !3424, i64 0}
!3436 = !{!3437, !3437, i64 0}
!3437 = !{!"0000017C2E41FDA0.w8.b24", !3435, i64 0}
!3438 = !{!3439, !3439, i64 0}
!3439 = !{!"0000017C2E420BE0.w8.b8", !3440, i64 0}
!3440 = !{!"0000017C2E420BE0.w16.b0", !3441, i64 0}
!3441 = !{!"0000017C2E420BE0.w32.b0", !3442, i64 0}
!3442 = !{!"0000017C2E420BE0.w64.b0", !3443, i64 0}
!3443 = !{!"0000017C2E420BE0.w128.b0", !3444, i64 0}
!3444 = !{!"0000017C2E420BE0.w256.b0", !3445, i64 0}
!3445 = !{!"0000017C2E420BE0.w512.b0", !3446, i64 0}
!3446 = !{!"0000017C2E420BE0.w1024.b0", !3447, i64 0}
!3447 = !{!"0000017C2E420BE0", !21, i64 0}
!3448 = !{!3449, !3449, i64 0}
!3449 = !{!"0000017C2E4208A0.w8.b0", !3450, i64 0}
!3450 = !{!"0000017C2E4208A0.w16.b0", !3451, i64 0}
!3451 = !{!"0000017C2E4208A0.w32.b0", !3452, i64 0}
!3452 = !{!"0000017C2E4208A0.w64.b0", !3453, i64 0}
!3453 = !{!"0000017C2E4208A0.w128.b0", !3454, i64 0}
!3454 = !{!"0000017C2E4208A0.w256.b0", !3455, i64 0}
!3455 = !{!"0000017C2E4208A0.w512.b0", !3456, i64 0}
!3456 = !{!"0000017C2E4208A0.w1024.b0", !3457, i64 0}
!3457 = !{!"0000017C2E4208A0", !21, i64 0}
!3458 = !{!3459, !3459, i64 0}
!3459 = !{!"0000017C2E4208A0.w8.b8", !3450, i64 0}
!3460 = !{!3461, !3461, i64 0}
!3461 = !{!"0000017C2E4208A0.w8.b16", !3462, i64 0}
!3462 = !{!"0000017C2E4208A0.w16.b16", !3451, i64 0}
!3463 = !{!3464, !3464, i64 0}
!3464 = !{!"0000017C2E4208A0.w8.b24", !3462, i64 0}
!3465 = !{!3466, !3466, i64 0}
!3466 = !{!"0000017C2E4205A0.w8.b8", !3467, i64 0}
!3467 = !{!"0000017C2E4205A0.w16.b0", !3468, i64 0}
!3468 = !{!"0000017C2E4205A0.w32.b0", !3469, i64 0}
!3469 = !{!"0000017C2E4205A0.w64.b0", !3470, i64 0}
!3470 = !{!"0000017C2E4205A0.w128.b0", !3471, i64 0}
!3471 = !{!"0000017C2E4205A0.w256.b0", !3472, i64 0}
!3472 = !{!"0000017C2E4205A0.w512.b0", !3473, i64 0}
!3473 = !{!"0000017C2E4205A0.w1024.b0", !3474, i64 0}
!3474 = !{!"0000017C2E4205A0", !21, i64 0}
!3475 = !{!3476, !3476, i64 0}
!3476 = !{!"0000017C2E4205A0.w8.b16", !3477, i64 0}
!3477 = !{!"0000017C2E4205A0.w16.b16", !3468, i64 0}
!3478 = !{!3479, !3479, i64 0}
!3479 = !{!"0000017C2E4205A0.w8.b24", !3477, i64 0}
!3480 = !{!3481, !3481, i64 0}
!3481 = !{!"0000017C2E2FCFB0.w4.b0", !3482, i64 0}
!3482 = !{!"0000017C2E2FCFB0.w8.b0", !3483, i64 0}
!3483 = !{!"0000017C2E2FCFB0.w16.b0", !3484, i64 0}
!3484 = !{!"0000017C2E2FCFB0.w32.b0", !3485, i64 0}
!3485 = !{!"0000017C2E2FCFB0.w64.b0", !3486, i64 0}
!3486 = !{!"0000017C2E2FCFB0.w128.b0", !3487, i64 0}
!3487 = !{!"0000017C2E2FCFB0.w256.b0", !3488, i64 0}
!3488 = !{!"0000017C2E2FCFB0.w512.b0", !3489, i64 0}
!3489 = !{!"0000017C2E2FCFB0.w1024.b0", !3490, i64 0}
!3490 = !{!"0000017C2E2FCFB0", !21, i64 0}
!3491 = !{!3492, !3492, i64 0}
!3492 = !{!"0000017C2E2FCFB0.w4.b4", !3482, i64 0}
!3493 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3494)
!3494 = !{!3495, !3496, !3497, !3498, !3499, !3500}
!3495 = !DILocalVariable(name: "arg1", arg: 1, scope: !3493, file: !1, type: !8)
!3496 = !DILocalVariable(name: "arg2", arg: 2, scope: !3493, file: !1, type: !9)
!3497 = !DILocalVariable(name: "arg3", arg: 3, scope: !3493, file: !1, type: !7)
!3498 = !DILocalVariable(name: "arg4", arg: 4, scope: !3493, file: !1, type: !8)
!3499 = !DILocalVariable(name: "arg5", arg: 5, scope: !3493, file: !1, type: !9)
!3500 = !DILocalVariable(name: "arg6", arg: 6, scope: !3493, file: !1, type: !8)
!3501 = !DILocation(line: 0, scope: !3493)
!3502 = !{!3503, !3503, i64 0}
!3503 = !{!"0000017C2E2EB330.w4.b0", !3504, i64 0}
!3504 = !{!"0000017C2E2EB330.w8.b0", !3505, i64 0}
!3505 = !{!"0000017C2E2EB330.w16.b0", !3506, i64 0}
!3506 = !{!"0000017C2E2EB330.w32.b0", !3507, i64 0}
!3507 = !{!"0000017C2E2EB330.w64.b0", !3508, i64 0}
!3508 = !{!"0000017C2E2EB330.w128.b0", !3509, i64 0}
!3509 = !{!"0000017C2E2EB330.w256.b0", !3510, i64 0}
!3510 = !{!"0000017C2E2EB330.w512.b0", !3511, i64 0}
!3511 = !{!"0000017C2E2EB330.w1024.b0", !3512, i64 0}
!3512 = !{!"0000017C2E2EB330", !21, i64 0}
!3513 = !{!3514, !3514, i64 0}
!3514 = !{!"0000017C2E2EB330.w4.b4", !3504, i64 0}
!3515 = !{!3516, !3516, i64 0}
!3516 = !{!"0000017C2E2EB330.w4.b8", !3517, i64 0}
!3517 = !{!"0000017C2E2EB330.w8.b8", !3505, i64 0}
!3518 = !{!3519, !3519, i64 0}
!3519 = !{!"0000017C2E2EB330.w4.b12", !3517, i64 0}
!3520 = !{!3521, !3521, i64 0}
!3521 = !{!"0000017C2E2EC670.w8.b0", !3522, i64 0}
!3522 = !{!"0000017C2E2EC670.w16.b0", !3523, i64 0}
!3523 = !{!"0000017C2E2EC670.w32.b0", !3524, i64 0}
!3524 = !{!"0000017C2E2EC670.w64.b0", !3525, i64 0}
!3525 = !{!"0000017C2E2EC670.w128.b0", !3526, i64 0}
!3526 = !{!"0000017C2E2EC670.w256.b0", !3527, i64 0}
!3527 = !{!"0000017C2E2EC670.w512.b0", !3528, i64 0}
!3528 = !{!"0000017C2E2EC670.w1024.b0", !3529, i64 0}
!3529 = !{!"0000017C2E2EC670", !21, i64 0}
!3530 = !{!3531, !3531, i64 0}
!3531 = !{!"0000017C2E2EC670.w8.b8", !3522, i64 0}
!3532 = !{!3533, !3533, i64 0}
!3533 = !{!"0000017C2E2EC670.w8.b16", !3534, i64 0}
!3534 = !{!"0000017C2E2EC670.w16.b16", !3523, i64 0}
!3535 = !{!3536, !3536, i64 0}
!3536 = !{!"0000017C2E2EC670.w8.b24", !3534, i64 0}
!3537 = !{!3538, !3538, i64 0}
!3538 = !{!"0000017C2E2ECAF0.w8.b8", !3539, i64 0}
!3539 = !{!"0000017C2E2ECAF0.w16.b0", !3540, i64 0}
!3540 = !{!"0000017C2E2ECAF0.w32.b0", !3541, i64 0}
!3541 = !{!"0000017C2E2ECAF0.w64.b0", !3542, i64 0}
!3542 = !{!"0000017C2E2ECAF0.w128.b0", !3543, i64 0}
!3543 = !{!"0000017C2E2ECAF0.w256.b0", !3544, i64 0}
!3544 = !{!"0000017C2E2ECAF0.w512.b0", !3545, i64 0}
!3545 = !{!"0000017C2E2ECAF0.w1024.b0", !3546, i64 0}
!3546 = !{!"0000017C2E2ECAF0", !21, i64 0}
!3547 = !{!3548, !3548, i64 0}
!3548 = !{!"0000017C2E2ECAF0.w8.b16", !3549, i64 0}
!3549 = !{!"0000017C2E2ECAF0.w16.b16", !3540, i64 0}
!3550 = !{!3551, !3551, i64 0}
!3551 = !{!"0000017C2E2ECAF0.w8.b24", !3549, i64 0}
!3552 = !{!3553, !3553, i64 0}
!3553 = !{!"0000017C2E2EDAF0.w8.b0", !3554, i64 0}
!3554 = !{!"0000017C2E2EDAF0.w16.b0", !3555, i64 0}
!3555 = !{!"0000017C2E2EDAF0.w32.b0", !3556, i64 0}
!3556 = !{!"0000017C2E2EDAF0.w64.b0", !3557, i64 0}
!3557 = !{!"0000017C2E2EDAF0.w128.b0", !3558, i64 0}
!3558 = !{!"0000017C2E2EDAF0.w256.b0", !3559, i64 0}
!3559 = !{!"0000017C2E2EDAF0.w512.b0", !3560, i64 0}
!3560 = !{!"0000017C2E2EDAF0.w1024.b0", !3561, i64 0}
!3561 = !{!"0000017C2E2EDAF0", !21, i64 0}
!3562 = !{!3563, !3563, i64 0}
!3563 = !{!"0000017C2E2EDAF0.w8.b8", !3554, i64 0}
!3564 = !{!3565, !3565, i64 0}
!3565 = !{!"0000017C2E2EDAF0.w8.b16", !3566, i64 0}
!3566 = !{!"0000017C2E2EDAF0.w16.b16", !3555, i64 0}
!3567 = !{!3568, !3568, i64 0}
!3568 = !{!"0000017C2E2EDAF0.w8.b24", !3566, i64 0}
!3569 = !{!3570, !3570, i64 0}
!3570 = !{!"0000017C2E2EDD70.w8.b8", !3571, i64 0}
!3571 = !{!"0000017C2E2EDD70.w16.b0", !3572, i64 0}
!3572 = !{!"0000017C2E2EDD70.w32.b0", !3573, i64 0}
!3573 = !{!"0000017C2E2EDD70.w64.b0", !3574, i64 0}
!3574 = !{!"0000017C2E2EDD70.w128.b0", !3575, i64 0}
!3575 = !{!"0000017C2E2EDD70.w256.b0", !3576, i64 0}
!3576 = !{!"0000017C2E2EDD70.w512.b0", !3577, i64 0}
!3577 = !{!"0000017C2E2EDD70.w1024.b0", !3578, i64 0}
!3578 = !{!"0000017C2E2EDD70", !21, i64 0}
!3579 = !{!3580, !3580, i64 0}
!3580 = !{!"0000017C2E2EEB70.w8.b0", !3581, i64 0}
!3581 = !{!"0000017C2E2EEB70.w16.b0", !3582, i64 0}
!3582 = !{!"0000017C2E2EEB70.w32.b0", !3583, i64 0}
!3583 = !{!"0000017C2E2EEB70.w64.b0", !3584, i64 0}
!3584 = !{!"0000017C2E2EEB70.w128.b0", !3585, i64 0}
!3585 = !{!"0000017C2E2EEB70.w256.b0", !3586, i64 0}
!3586 = !{!"0000017C2E2EEB70.w512.b0", !3587, i64 0}
!3587 = !{!"0000017C2E2EEB70.w1024.b0", !3588, i64 0}
!3588 = !{!"0000017C2E2EEB70", !21, i64 0}
!3589 = !{!3590, !3590, i64 0}
!3590 = !{!"0000017C2E2EEB70.w8.b8", !3581, i64 0}
!3591 = !{!3592, !3592, i64 0}
!3592 = !{!"0000017C2E2EEB70.w8.b16", !3593, i64 0}
!3593 = !{!"0000017C2E2EEB70.w16.b16", !3582, i64 0}
!3594 = !{!3595, !3595, i64 0}
!3595 = !{!"0000017C2E2EEB70.w8.b24", !3593, i64 0}
!3596 = !{!3597, !3597, i64 0}
!3597 = !{!"0000017C2E2EE8B0.w8.b8", !3598, i64 0}
!3598 = !{!"0000017C2E2EE8B0.w16.b0", !3599, i64 0}
!3599 = !{!"0000017C2E2EE8B0.w32.b0", !3600, i64 0}
!3600 = !{!"0000017C2E2EE8B0.w64.b0", !3601, i64 0}
!3601 = !{!"0000017C2E2EE8B0.w128.b0", !3602, i64 0}
!3602 = !{!"0000017C2E2EE8B0.w256.b0", !3603, i64 0}
!3603 = !{!"0000017C2E2EE8B0.w512.b0", !3604, i64 0}
!3604 = !{!"0000017C2E2EE8B0.w1024.b0", !3605, i64 0}
!3605 = !{!"0000017C2E2EE8B0", !21, i64 0}
!3606 = !{!3607, !3607, i64 0}
!3607 = !{!"0000017C2E2EFC30.w8.b0", !3608, i64 0}
!3608 = !{!"0000017C2E2EFC30.w16.b0", !3609, i64 0}
!3609 = !{!"0000017C2E2EFC30.w32.b0", !3610, i64 0}
!3610 = !{!"0000017C2E2EFC30.w64.b0", !3611, i64 0}
!3611 = !{!"0000017C2E2EFC30.w128.b0", !3612, i64 0}
!3612 = !{!"0000017C2E2EFC30.w256.b0", !3613, i64 0}
!3613 = !{!"0000017C2E2EFC30.w512.b0", !3614, i64 0}
!3614 = !{!"0000017C2E2EFC30.w1024.b0", !3615, i64 0}
!3615 = !{!"0000017C2E2EFC30", !21, i64 0}
!3616 = !{!3617, !3617, i64 0}
!3617 = !{!"0000017C2E2EFC30.w8.b8", !3608, i64 0}
!3618 = !{!3619, !3619, i64 0}
!3619 = !{!"0000017C2E2EFC30.w8.b16", !3620, i64 0}
!3620 = !{!"0000017C2E2EFC30.w16.b16", !3609, i64 0}
!3621 = !{!3622, !3622, i64 0}
!3622 = !{!"0000017C2E2EFC30.w8.b24", !3620, i64 0}
!3623 = !{!3624, !3624, i64 0}
!3624 = !{!"0000017C2E2EF8F0.w8.b8", !3625, i64 0}
!3625 = !{!"0000017C2E2EF8F0.w16.b0", !3626, i64 0}
!3626 = !{!"0000017C2E2EF8F0.w32.b0", !3627, i64 0}
!3627 = !{!"0000017C2E2EF8F0.w64.b0", !3628, i64 0}
!3628 = !{!"0000017C2E2EF8F0.w128.b0", !3629, i64 0}
!3629 = !{!"0000017C2E2EF8F0.w256.b0", !3630, i64 0}
!3630 = !{!"0000017C2E2EF8F0.w512.b0", !3631, i64 0}
!3631 = !{!"0000017C2E2EF8F0.w1024.b0", !3632, i64 0}
!3632 = !{!"0000017C2E2EF8F0", !21, i64 0}
!3633 = !{!3634, !3634, i64 0}
!3634 = !{!"0000017C2E2EF8F0.w8.b16", !3635, i64 0}
!3635 = !{!"0000017C2E2EF8F0.w16.b16", !3626, i64 0}
!3636 = !{!3637, !3637, i64 0}
!3637 = !{!"0000017C2E2EF8F0.w8.b24", !3635, i64 0}
!3638 = !{!3639, !3639, i64 0}
!3639 = !{!"0000017C22BFD560.w4.b0", !3640, i64 0}
!3640 = !{!"0000017C22BFD560.w8.b0", !3641, i64 0}
!3641 = !{!"0000017C22BFD560.w16.b0", !3642, i64 0}
!3642 = !{!"0000017C22BFD560.w32.b0", !3643, i64 0}
!3643 = !{!"0000017C22BFD560.w64.b0", !3644, i64 0}
!3644 = !{!"0000017C22BFD560.w128.b0", !3645, i64 0}
!3645 = !{!"0000017C22BFD560.w256.b0", !3646, i64 0}
!3646 = !{!"0000017C22BFD560.w512.b0", !3647, i64 0}
!3647 = !{!"0000017C22BFD560.w1024.b0", !3648, i64 0}
!3648 = !{!"0000017C22BFD560", !21, i64 0}
!3649 = !{!3650, !3650, i64 0}
!3650 = !{!"0000017C22BFD560.w4.b4", !3640, i64 0}
!3651 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3652)
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3658}
!3653 = !DILocalVariable(name: "arg1", arg: 1, scope: !3651, file: !1, type: !8)
!3654 = !DILocalVariable(name: "arg2", arg: 2, scope: !3651, file: !1, type: !9)
!3655 = !DILocalVariable(name: "arg3", arg: 3, scope: !3651, file: !1, type: !7)
!3656 = !DILocalVariable(name: "arg4", arg: 4, scope: !3651, file: !1, type: !8)
!3657 = !DILocalVariable(name: "arg5", arg: 5, scope: !3651, file: !1, type: !9)
!3658 = !DILocalVariable(name: "arg6", arg: 6, scope: !3651, file: !1, type: !8)
!3659 = !DILocation(line: 0, scope: !3651)
!3660 = !{!3661, !3661, i64 0}
!3661 = !{!"0000017C2E4A5670.w4.b0", !3662, i64 0}
!3662 = !{!"0000017C2E4A5670.w8.b0", !3663, i64 0}
!3663 = !{!"0000017C2E4A5670.w16.b0", !3664, i64 0}
!3664 = !{!"0000017C2E4A5670.w32.b0", !3665, i64 0}
!3665 = !{!"0000017C2E4A5670.w64.b0", !3666, i64 0}
!3666 = !{!"0000017C2E4A5670.w128.b0", !3667, i64 0}
!3667 = !{!"0000017C2E4A5670.w256.b0", !3668, i64 0}
!3668 = !{!"0000017C2E4A5670.w512.b0", !3669, i64 0}
!3669 = !{!"0000017C2E4A5670.w1024.b0", !3670, i64 0}
!3670 = !{!"0000017C2E4A5670", !21, i64 0}
!3671 = !{!3672, !3672, i64 0}
!3672 = !{!"0000017C2E4A5670.w4.b4", !3662, i64 0}
!3673 = !{!3674, !3674, i64 0}
!3674 = !{!"0000017C2E4A5670.w4.b8", !3675, i64 0}
!3675 = !{!"0000017C2E4A5670.w8.b8", !3663, i64 0}
!3676 = !{!3677, !3677, i64 0}
!3677 = !{!"0000017C2E4A5670.w4.b12", !3675, i64 0}
!3678 = !{!3679, !3679, i64 0}
!3679 = !{!"0000017C2E4AB970.w8.b0", !3680, i64 0}
!3680 = !{!"0000017C2E4AB970.w16.b0", !3681, i64 0}
!3681 = !{!"0000017C2E4AB970.w32.b0", !3682, i64 0}
!3682 = !{!"0000017C2E4AB970.w64.b0", !3683, i64 0}
!3683 = !{!"0000017C2E4AB970.w128.b0", !3684, i64 0}
!3684 = !{!"0000017C2E4AB970.w256.b0", !3685, i64 0}
!3685 = !{!"0000017C2E4AB970.w512.b0", !3686, i64 0}
!3686 = !{!"0000017C2E4AB970.w1024.b0", !3687, i64 0}
!3687 = !{!"0000017C2E4AB970", !21, i64 0}
!3688 = !{!3689, !3689, i64 0}
!3689 = !{!"0000017C2E4AB970.w8.b8", !3680, i64 0}
!3690 = !{!3691, !3691, i64 0}
!3691 = !{!"0000017C2E4AB970.w8.b16", !3692, i64 0}
!3692 = !{!"0000017C2E4AB970.w16.b16", !3681, i64 0}
!3693 = !{!3694, !3694, i64 0}
!3694 = !{!"0000017C2E4AB970.w8.b24", !3692, i64 0}
!3695 = !{!3696, !3696, i64 0}
!3696 = !{!"0000017C2E4ABD70.w8.b8", !3697, i64 0}
!3697 = !{!"0000017C2E4ABD70.w16.b0", !3698, i64 0}
!3698 = !{!"0000017C2E4ABD70.w32.b0", !3699, i64 0}
!3699 = !{!"0000017C2E4ABD70.w64.b0", !3700, i64 0}
!3700 = !{!"0000017C2E4ABD70.w128.b0", !3701, i64 0}
!3701 = !{!"0000017C2E4ABD70.w256.b0", !3702, i64 0}
!3702 = !{!"0000017C2E4ABD70.w512.b0", !3703, i64 0}
!3703 = !{!"0000017C2E4ABD70.w1024.b0", !3704, i64 0}
!3704 = !{!"0000017C2E4ABD70", !21, i64 0}
!3705 = !{!3706, !3706, i64 0}
!3706 = !{!"0000017C2E4ABD70.w8.b16", !3707, i64 0}
!3707 = !{!"0000017C2E4ABD70.w16.b16", !3698, i64 0}
!3708 = !{!3709, !3709, i64 0}
!3709 = !{!"0000017C2E4ABD70.w8.b24", !3707, i64 0}
!3710 = !{!3711, !3711, i64 0}
!3711 = !{!"0000017C2E4ACF30.w8.b0", !3712, i64 0}
!3712 = !{!"0000017C2E4ACF30.w16.b0", !3713, i64 0}
!3713 = !{!"0000017C2E4ACF30.w32.b0", !3714, i64 0}
!3714 = !{!"0000017C2E4ACF30.w64.b0", !3715, i64 0}
!3715 = !{!"0000017C2E4ACF30.w128.b0", !3716, i64 0}
!3716 = !{!"0000017C2E4ACF30.w256.b0", !3717, i64 0}
!3717 = !{!"0000017C2E4ACF30.w512.b0", !3718, i64 0}
!3718 = !{!"0000017C2E4ACF30.w1024.b0", !3719, i64 0}
!3719 = !{!"0000017C2E4ACF30", !21, i64 0}
!3720 = !{!3721, !3721, i64 0}
!3721 = !{!"0000017C2E4ACF30.w8.b8", !3712, i64 0}
!3722 = !{!3723, !3723, i64 0}
!3723 = !{!"0000017C2E4ACF30.w8.b16", !3724, i64 0}
!3724 = !{!"0000017C2E4ACF30.w16.b16", !3713, i64 0}
!3725 = !{!3726, !3726, i64 0}
!3726 = !{!"0000017C2E4ACF30.w8.b24", !3724, i64 0}
!3727 = !{!3728, !3728, i64 0}
!3728 = !{!"0000017C2E4ACB70.w8.b8", !3729, i64 0}
!3729 = !{!"0000017C2E4ACB70.w16.b0", !3730, i64 0}
!3730 = !{!"0000017C2E4ACB70.w32.b0", !3731, i64 0}
!3731 = !{!"0000017C2E4ACB70.w64.b0", !3732, i64 0}
!3732 = !{!"0000017C2E4ACB70.w128.b0", !3733, i64 0}
!3733 = !{!"0000017C2E4ACB70.w256.b0", !3734, i64 0}
!3734 = !{!"0000017C2E4ACB70.w512.b0", !3735, i64 0}
!3735 = !{!"0000017C2E4ACB70.w1024.b0", !3736, i64 0}
!3736 = !{!"0000017C2E4ACB70", !21, i64 0}
!3737 = !{!3738, !3738, i64 0}
!3738 = !{!"0000017C2E4AD370.w8.b0", !3739, i64 0}
!3739 = !{!"0000017C2E4AD370.w16.b0", !3740, i64 0}
!3740 = !{!"0000017C2E4AD370.w32.b0", !3741, i64 0}
!3741 = !{!"0000017C2E4AD370.w64.b0", !3742, i64 0}
!3742 = !{!"0000017C2E4AD370.w128.b0", !3743, i64 0}
!3743 = !{!"0000017C2E4AD370.w256.b0", !3744, i64 0}
!3744 = !{!"0000017C2E4AD370.w512.b0", !3745, i64 0}
!3745 = !{!"0000017C2E4AD370.w1024.b0", !3746, i64 0}
!3746 = !{!"0000017C2E4AD370", !21, i64 0}
!3747 = !{!3748, !3748, i64 0}
!3748 = !{!"0000017C2E4AD370.w8.b8", !3739, i64 0}
!3749 = !{!3750, !3750, i64 0}
!3750 = !{!"0000017C2E4AD370.w8.b16", !3751, i64 0}
!3751 = !{!"0000017C2E4AD370.w16.b16", !3740, i64 0}
!3752 = !{!3753, !3753, i64 0}
!3753 = !{!"0000017C2E4AD370.w8.b24", !3751, i64 0}
!3754 = !{!3755, !3755, i64 0}
!3755 = !{!"0000017C2E4ACA70.w8.b8", !3756, i64 0}
!3756 = !{!"0000017C2E4ACA70.w16.b0", !3757, i64 0}
!3757 = !{!"0000017C2E4ACA70.w32.b0", !3758, i64 0}
!3758 = !{!"0000017C2E4ACA70.w64.b0", !3759, i64 0}
!3759 = !{!"0000017C2E4ACA70.w128.b0", !3760, i64 0}
!3760 = !{!"0000017C2E4ACA70.w256.b0", !3761, i64 0}
!3761 = !{!"0000017C2E4ACA70.w512.b0", !3762, i64 0}
!3762 = !{!"0000017C2E4ACA70.w1024.b0", !3763, i64 0}
!3763 = !{!"0000017C2E4ACA70", !21, i64 0}
!3764 = !{!3765, !3765, i64 0}
!3765 = !{!"0000017C2E4AD9B0.w8.b0", !3766, i64 0}
!3766 = !{!"0000017C2E4AD9B0.w16.b0", !3767, i64 0}
!3767 = !{!"0000017C2E4AD9B0.w32.b0", !3768, i64 0}
!3768 = !{!"0000017C2E4AD9B0.w64.b0", !3769, i64 0}
!3769 = !{!"0000017C2E4AD9B0.w128.b0", !3770, i64 0}
!3770 = !{!"0000017C2E4AD9B0.w256.b0", !3771, i64 0}
!3771 = !{!"0000017C2E4AD9B0.w512.b0", !3772, i64 0}
!3772 = !{!"0000017C2E4AD9B0.w1024.b0", !3773, i64 0}
!3773 = !{!"0000017C2E4AD9B0", !21, i64 0}
!3774 = !{!3775, !3775, i64 0}
!3775 = !{!"0000017C2E4AD9B0.w8.b8", !3766, i64 0}
!3776 = !{!3777, !3777, i64 0}
!3777 = !{!"0000017C2E4AD9B0.w8.b16", !3778, i64 0}
!3778 = !{!"0000017C2E4AD9B0.w16.b16", !3767, i64 0}
!3779 = !{!3780, !3780, i64 0}
!3780 = !{!"0000017C2E4AD9B0.w8.b24", !3778, i64 0}
!3781 = !{!3782, !3782, i64 0}
!3782 = !{!"0000017C2E4AF0F0.w8.b8", !3783, i64 0}
!3783 = !{!"0000017C2E4AF0F0.w16.b0", !3784, i64 0}
!3784 = !{!"0000017C2E4AF0F0.w32.b0", !3785, i64 0}
!3785 = !{!"0000017C2E4AF0F0.w64.b0", !3786, i64 0}
!3786 = !{!"0000017C2E4AF0F0.w128.b0", !3787, i64 0}
!3787 = !{!"0000017C2E4AF0F0.w256.b0", !3788, i64 0}
!3788 = !{!"0000017C2E4AF0F0.w512.b0", !3789, i64 0}
!3789 = !{!"0000017C2E4AF0F0.w1024.b0", !3790, i64 0}
!3790 = !{!"0000017C2E4AF0F0", !21, i64 0}
!3791 = !{!3792, !3792, i64 0}
!3792 = !{!"0000017C2E4AF0F0.w8.b16", !3793, i64 0}
!3793 = !{!"0000017C2E4AF0F0.w16.b16", !3784, i64 0}
!3794 = !{!3795, !3795, i64 0}
!3795 = !{!"0000017C2E4AF0F0.w8.b24", !3793, i64 0}
!3796 = !{!3797, !3797, i64 0}
!3797 = !{!"0000017C2E6032F0.w4.b0", !3798, i64 0}
!3798 = !{!"0000017C2E6032F0.w8.b0", !3799, i64 0}
!3799 = !{!"0000017C2E6032F0.w16.b0", !3800, i64 0}
!3800 = !{!"0000017C2E6032F0.w32.b0", !3801, i64 0}
!3801 = !{!"0000017C2E6032F0.w64.b0", !3802, i64 0}
!3802 = !{!"0000017C2E6032F0.w128.b0", !3803, i64 0}
!3803 = !{!"0000017C2E6032F0.w256.b0", !3804, i64 0}
!3804 = !{!"0000017C2E6032F0.w512.b0", !3805, i64 0}
!3805 = !{!"0000017C2E6032F0.w1024.b0", !3806, i64 0}
!3806 = !{!"0000017C2E6032F0", !21, i64 0}
!3807 = !{!3808, !3808, i64 0}
!3808 = !{!"0000017C2E6032F0.w4.b4", !3798, i64 0}
!3809 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3810)
!3810 = !{!3811, !3812, !3813, !3814, !3815, !3816}
!3811 = !DILocalVariable(name: "arg1", arg: 1, scope: !3809, file: !1, type: !8)
!3812 = !DILocalVariable(name: "arg2", arg: 2, scope: !3809, file: !1, type: !9)
!3813 = !DILocalVariable(name: "arg3", arg: 3, scope: !3809, file: !1, type: !7)
!3814 = !DILocalVariable(name: "arg4", arg: 4, scope: !3809, file: !1, type: !8)
!3815 = !DILocalVariable(name: "arg5", arg: 5, scope: !3809, file: !1, type: !9)
!3816 = !DILocalVariable(name: "arg6", arg: 6, scope: !3809, file: !1, type: !8)
!3817 = !DILocation(line: 0, scope: !3809)
!3818 = !{!3819, !3819, i64 0}
!3819 = !{!"0000017C2E34BFB0.w4.b0", !3820, i64 0}
!3820 = !{!"0000017C2E34BFB0.w8.b0", !3821, i64 0}
!3821 = !{!"0000017C2E34BFB0.w16.b0", !3822, i64 0}
!3822 = !{!"0000017C2E34BFB0.w32.b0", !3823, i64 0}
!3823 = !{!"0000017C2E34BFB0.w64.b0", !3824, i64 0}
!3824 = !{!"0000017C2E34BFB0.w128.b0", !3825, i64 0}
!3825 = !{!"0000017C2E34BFB0.w256.b0", !3826, i64 0}
!3826 = !{!"0000017C2E34BFB0.w512.b0", !3827, i64 0}
!3827 = !{!"0000017C2E34BFB0.w1024.b0", !3828, i64 0}
!3828 = !{!"0000017C2E34BFB0", !21, i64 0}
!3829 = !{!3830, !3830, i64 0}
!3830 = !{!"0000017C2E34BFB0.w4.b4", !3820, i64 0}
!3831 = !{!3832, !3832, i64 0}
!3832 = !{!"0000017C2E34BFB0.w4.b8", !3833, i64 0}
!3833 = !{!"0000017C2E34BFB0.w8.b8", !3821, i64 0}
!3834 = !{!3835, !3835, i64 0}
!3835 = !{!"0000017C2E34BFB0.w4.b12", !3833, i64 0}
!3836 = !{!3837, !3837, i64 0}
!3837 = !{!"0000017C2E352170.w8.b0", !3838, i64 0}
!3838 = !{!"0000017C2E352170.w16.b0", !3839, i64 0}
!3839 = !{!"0000017C2E352170.w32.b0", !3840, i64 0}
!3840 = !{!"0000017C2E352170.w64.b0", !3841, i64 0}
!3841 = !{!"0000017C2E352170.w128.b0", !3842, i64 0}
!3842 = !{!"0000017C2E352170.w256.b0", !3843, i64 0}
!3843 = !{!"0000017C2E352170.w512.b0", !3844, i64 0}
!3844 = !{!"0000017C2E352170.w1024.b0", !3845, i64 0}
!3845 = !{!"0000017C2E352170", !21, i64 0}
!3846 = !{!3847, !3847, i64 0}
!3847 = !{!"0000017C2E352170.w8.b8", !3838, i64 0}
!3848 = !{!3849, !3849, i64 0}
!3849 = !{!"0000017C2E352170.w8.b16", !3850, i64 0}
!3850 = !{!"0000017C2E352170.w16.b16", !3839, i64 0}
!3851 = !{!3852, !3852, i64 0}
!3852 = !{!"0000017C2E352170.w8.b24", !3850, i64 0}
!3853 = !{!3854, !3854, i64 0}
!3854 = !{!"0000017C2E352FF0.w8.b8", !3855, i64 0}
!3855 = !{!"0000017C2E352FF0.w16.b0", !3856, i64 0}
!3856 = !{!"0000017C2E352FF0.w32.b0", !3857, i64 0}
!3857 = !{!"0000017C2E352FF0.w64.b0", !3858, i64 0}
!3858 = !{!"0000017C2E352FF0.w128.b0", !3859, i64 0}
!3859 = !{!"0000017C2E352FF0.w256.b0", !3860, i64 0}
!3860 = !{!"0000017C2E352FF0.w512.b0", !3861, i64 0}
!3861 = !{!"0000017C2E352FF0.w1024.b0", !3862, i64 0}
!3862 = !{!"0000017C2E352FF0", !21, i64 0}
!3863 = !{!3864, !3864, i64 0}
!3864 = !{!"0000017C2E352FF0.w8.b16", !3865, i64 0}
!3865 = !{!"0000017C2E352FF0.w16.b16", !3856, i64 0}
!3866 = !{!3867, !3867, i64 0}
!3867 = !{!"0000017C2E352FF0.w8.b24", !3865, i64 0}
!3868 = !{!3869, !3869, i64 0}
!3869 = !{!"0000017C2E353C30.w8.b0", !3870, i64 0}
!3870 = !{!"0000017C2E353C30.w16.b0", !3871, i64 0}
!3871 = !{!"0000017C2E353C30.w32.b0", !3872, i64 0}
!3872 = !{!"0000017C2E353C30.w64.b0", !3873, i64 0}
!3873 = !{!"0000017C2E353C30.w128.b0", !3874, i64 0}
!3874 = !{!"0000017C2E353C30.w256.b0", !3875, i64 0}
!3875 = !{!"0000017C2E353C30.w512.b0", !3876, i64 0}
!3876 = !{!"0000017C2E353C30.w1024.b0", !3877, i64 0}
!3877 = !{!"0000017C2E353C30", !21, i64 0}
!3878 = !{!3879, !3879, i64 0}
!3879 = !{!"0000017C2E353C30.w8.b8", !3870, i64 0}
!3880 = !{!3881, !3881, i64 0}
!3881 = !{!"0000017C2E353C30.w8.b16", !3882, i64 0}
!3882 = !{!"0000017C2E353C30.w16.b16", !3871, i64 0}
!3883 = !{!3884, !3884, i64 0}
!3884 = !{!"0000017C2E353C30.w8.b24", !3882, i64 0}
!3885 = !{!3886, !3886, i64 0}
!3886 = !{!"0000017C2E353AB0.w8.b8", !3887, i64 0}
!3887 = !{!"0000017C2E353AB0.w16.b0", !3888, i64 0}
!3888 = !{!"0000017C2E353AB0.w32.b0", !3889, i64 0}
!3889 = !{!"0000017C2E353AB0.w64.b0", !3890, i64 0}
!3890 = !{!"0000017C2E353AB0.w128.b0", !3891, i64 0}
!3891 = !{!"0000017C2E353AB0.w256.b0", !3892, i64 0}
!3892 = !{!"0000017C2E353AB0.w512.b0", !3893, i64 0}
!3893 = !{!"0000017C2E353AB0.w1024.b0", !3894, i64 0}
!3894 = !{!"0000017C2E353AB0", !21, i64 0}
!3895 = !{!3896, !3896, i64 0}
!3896 = !{!"0000017C2E3549B0.w8.b0", !3897, i64 0}
!3897 = !{!"0000017C2E3549B0.w16.b0", !3898, i64 0}
!3898 = !{!"0000017C2E3549B0.w32.b0", !3899, i64 0}
!3899 = !{!"0000017C2E3549B0.w64.b0", !3900, i64 0}
!3900 = !{!"0000017C2E3549B0.w128.b0", !3901, i64 0}
!3901 = !{!"0000017C2E3549B0.w256.b0", !3902, i64 0}
!3902 = !{!"0000017C2E3549B0.w512.b0", !3903, i64 0}
!3903 = !{!"0000017C2E3549B0.w1024.b0", !3904, i64 0}
!3904 = !{!"0000017C2E3549B0", !21, i64 0}
!3905 = !{!3906, !3906, i64 0}
!3906 = !{!"0000017C2E3549B0.w8.b8", !3897, i64 0}
!3907 = !{!3908, !3908, i64 0}
!3908 = !{!"0000017C2E3549B0.w8.b16", !3909, i64 0}
!3909 = !{!"0000017C2E3549B0.w16.b16", !3898, i64 0}
!3910 = !{!3911, !3911, i64 0}
!3911 = !{!"0000017C2E3549B0.w8.b24", !3909, i64 0}
!3912 = !{!3913, !3913, i64 0}
!3913 = !{!"0000017C2E354730.w8.b8", !3914, i64 0}
!3914 = !{!"0000017C2E354730.w16.b0", !3915, i64 0}
!3915 = !{!"0000017C2E354730.w32.b0", !3916, i64 0}
!3916 = !{!"0000017C2E354730.w64.b0", !3917, i64 0}
!3917 = !{!"0000017C2E354730.w128.b0", !3918, i64 0}
!3918 = !{!"0000017C2E354730.w256.b0", !3919, i64 0}
!3919 = !{!"0000017C2E354730.w512.b0", !3920, i64 0}
!3920 = !{!"0000017C2E354730.w1024.b0", !3921, i64 0}
!3921 = !{!"0000017C2E354730", !21, i64 0}
!3922 = !{!3923, !3923, i64 0}
!3923 = !{!"0000017C2E355F30.w8.b0", !3924, i64 0}
!3924 = !{!"0000017C2E355F30.w16.b0", !3925, i64 0}
!3925 = !{!"0000017C2E355F30.w32.b0", !3926, i64 0}
!3926 = !{!"0000017C2E355F30.w64.b0", !3927, i64 0}
!3927 = !{!"0000017C2E355F30.w128.b0", !3928, i64 0}
!3928 = !{!"0000017C2E355F30.w256.b0", !3929, i64 0}
!3929 = !{!"0000017C2E355F30.w512.b0", !3930, i64 0}
!3930 = !{!"0000017C2E355F30.w1024.b0", !3931, i64 0}
!3931 = !{!"0000017C2E355F30", !21, i64 0}
!3932 = !{!3933, !3933, i64 0}
!3933 = !{!"0000017C2E355F30.w8.b8", !3924, i64 0}
!3934 = !{!3935, !3935, i64 0}
!3935 = !{!"0000017C2E355F30.w8.b16", !3936, i64 0}
!3936 = !{!"0000017C2E355F30.w16.b16", !3925, i64 0}
!3937 = !{!3938, !3938, i64 0}
!3938 = !{!"0000017C2E355F30.w8.b24", !3936, i64 0}
!3939 = !{!3940, !3940, i64 0}
!3940 = !{!"0000017C2E355730.w8.b8", !3941, i64 0}
!3941 = !{!"0000017C2E355730.w16.b0", !3942, i64 0}
!3942 = !{!"0000017C2E355730.w32.b0", !3943, i64 0}
!3943 = !{!"0000017C2E355730.w64.b0", !3944, i64 0}
!3944 = !{!"0000017C2E355730.w128.b0", !3945, i64 0}
!3945 = !{!"0000017C2E355730.w256.b0", !3946, i64 0}
!3946 = !{!"0000017C2E355730.w512.b0", !3947, i64 0}
!3947 = !{!"0000017C2E355730.w1024.b0", !3948, i64 0}
!3948 = !{!"0000017C2E355730", !21, i64 0}
!3949 = !{!3950, !3950, i64 0}
!3950 = !{!"0000017C2E355730.w8.b16", !3951, i64 0}
!3951 = !{!"0000017C2E355730.w16.b16", !3942, i64 0}
!3952 = !{!3953, !3953, i64 0}
!3953 = !{!"0000017C2E355730.w8.b24", !3951, i64 0}
!3954 = !{!3955, !3955, i64 0}
!3955 = !{!"0000017C2E5062B0.w4.b0", !3956, i64 0}
!3956 = !{!"0000017C2E5062B0.w8.b0", !3957, i64 0}
!3957 = !{!"0000017C2E5062B0.w16.b0", !3958, i64 0}
!3958 = !{!"0000017C2E5062B0.w32.b0", !3959, i64 0}
!3959 = !{!"0000017C2E5062B0.w64.b0", !3960, i64 0}
!3960 = !{!"0000017C2E5062B0.w128.b0", !3961, i64 0}
!3961 = !{!"0000017C2E5062B0.w256.b0", !3962, i64 0}
!3962 = !{!"0000017C2E5062B0.w512.b0", !3963, i64 0}
!3963 = !{!"0000017C2E5062B0.w1024.b0", !3964, i64 0}
!3964 = !{!"0000017C2E5062B0", !21, i64 0}
!3965 = !{!3966, !3966, i64 0}
!3966 = !{!"0000017C2E5062B0.w4.b4", !3956, i64 0}
!3967 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3968)
!3968 = !{!3969, !3970, !3971, !3972, !3973, !3974}
!3969 = !DILocalVariable(name: "arg1", arg: 1, scope: !3967, file: !1, type: !8)
!3970 = !DILocalVariable(name: "arg2", arg: 2, scope: !3967, file: !1, type: !9)
!3971 = !DILocalVariable(name: "arg3", arg: 3, scope: !3967, file: !1, type: !7)
!3972 = !DILocalVariable(name: "arg4", arg: 4, scope: !3967, file: !1, type: !8)
!3973 = !DILocalVariable(name: "arg5", arg: 5, scope: !3967, file: !1, type: !9)
!3974 = !DILocalVariable(name: "arg6", arg: 6, scope: !3967, file: !1, type: !8)
!3975 = !DILocation(line: 0, scope: !3967)
!3976 = !{!3977, !3977, i64 0}
!3977 = !{!"0000017C2E409B20.w4.b0", !3978, i64 0}
!3978 = !{!"0000017C2E409B20.w8.b0", !3979, i64 0}
!3979 = !{!"0000017C2E409B20.w16.b0", !3980, i64 0}
!3980 = !{!"0000017C2E409B20.w32.b0", !3981, i64 0}
!3981 = !{!"0000017C2E409B20.w64.b0", !3982, i64 0}
!3982 = !{!"0000017C2E409B20.w128.b0", !3983, i64 0}
!3983 = !{!"0000017C2E409B20.w256.b0", !3984, i64 0}
!3984 = !{!"0000017C2E409B20.w512.b0", !3985, i64 0}
!3985 = !{!"0000017C2E409B20.w1024.b0", !3986, i64 0}
!3986 = !{!"0000017C2E409B20", !21, i64 0}
!3987 = !{!3988, !3988, i64 0}
!3988 = !{!"0000017C2E409B20.w4.b4", !3978, i64 0}
!3989 = !{!3990, !3990, i64 0}
!3990 = !{!"0000017C2E40B920.w8.b0", !3991, i64 0}
!3991 = !{!"0000017C2E40B920.w16.b0", !3992, i64 0}
!3992 = !{!"0000017C2E40B920.w32.b0", !3993, i64 0}
!3993 = !{!"0000017C2E40B920.w64.b0", !3994, i64 0}
!3994 = !{!"0000017C2E40B920.w128.b0", !3995, i64 0}
!3995 = !{!"0000017C2E40B920.w256.b0", !3996, i64 0}
!3996 = !{!"0000017C2E40B920.w512.b0", !3997, i64 0}
!3997 = !{!"0000017C2E40B920.w1024.b0", !3998, i64 0}
!3998 = !{!"0000017C2E40B920", !21, i64 0}
!3999 = !{!4000, !4000, i64 0}
!4000 = !{!"0000017C2E40B920.w8.b8", !3991, i64 0}
!4001 = !{!4002, !4002, i64 0}
!4002 = !{!"0000017C2E40B920.w8.b16", !4003, i64 0}
!4003 = !{!"0000017C2E40B920.w16.b16", !3992, i64 0}
!4004 = !{!4005, !4005, i64 0}
!4005 = !{!"0000017C2E40B920.w8.b24", !4003, i64 0}
!4006 = !{!4007, !4007, i64 0}
!4007 = !{!"0000017C2E40B820.w8.b8", !4008, i64 0}
!4008 = !{!"0000017C2E40B820.w16.b0", !4009, i64 0}
!4009 = !{!"0000017C2E40B820.w32.b0", !4010, i64 0}
!4010 = !{!"0000017C2E40B820.w64.b0", !4011, i64 0}
!4011 = !{!"0000017C2E40B820.w128.b0", !4012, i64 0}
!4012 = !{!"0000017C2E40B820.w256.b0", !4013, i64 0}
!4013 = !{!"0000017C2E40B820.w512.b0", !4014, i64 0}
!4014 = !{!"0000017C2E40B820.w1024.b0", !4015, i64 0}
!4015 = !{!"0000017C2E40B820", !21, i64 0}
!4016 = !{!4017, !4017, i64 0}
!4017 = !{!"0000017C2E40B820.w8.b16", !4018, i64 0}
!4018 = !{!"0000017C2E40B820.w16.b16", !4009, i64 0}
!4019 = !{!4020, !4020, i64 0}
!4020 = !{!"0000017C2E40B820.w8.b24", !4018, i64 0}
!4021 = !{!4022, !4022, i64 0}
!4022 = !{!"0000017C2E40C9E0.w8.b0", !4023, i64 0}
!4023 = !{!"0000017C2E40C9E0.w16.b0", !4024, i64 0}
!4024 = !{!"0000017C2E40C9E0.w32.b0", !4025, i64 0}
!4025 = !{!"0000017C2E40C9E0.w64.b0", !4026, i64 0}
!4026 = !{!"0000017C2E40C9E0.w128.b0", !4027, i64 0}
!4027 = !{!"0000017C2E40C9E0.w256.b0", !4028, i64 0}
!4028 = !{!"0000017C2E40C9E0.w512.b0", !4029, i64 0}
!4029 = !{!"0000017C2E40C9E0.w1024.b0", !4030, i64 0}
!4030 = !{!"0000017C2E40C9E0", !21, i64 0}
!4031 = !{!4032, !4032, i64 0}
!4032 = !{!"0000017C2E40C9E0.w8.b8", !4023, i64 0}
!4033 = !{!4034, !4034, i64 0}
!4034 = !{!"0000017C2E40C9E0.w8.b16", !4035, i64 0}
!4035 = !{!"0000017C2E40C9E0.w16.b16", !4024, i64 0}
!4036 = !{!4037, !4037, i64 0}
!4037 = !{!"0000017C2E40C9E0.w8.b24", !4035, i64 0}
!4038 = !{!4039, !4039, i64 0}
!4039 = !{!"0000017C2E40C660.w8.b8", !4040, i64 0}
!4040 = !{!"0000017C2E40C660.w16.b0", !4041, i64 0}
!4041 = !{!"0000017C2E40C660.w32.b0", !4042, i64 0}
!4042 = !{!"0000017C2E40C660.w64.b0", !4043, i64 0}
!4043 = !{!"0000017C2E40C660.w128.b0", !4044, i64 0}
!4044 = !{!"0000017C2E40C660.w256.b0", !4045, i64 0}
!4045 = !{!"0000017C2E40C660.w512.b0", !4046, i64 0}
!4046 = !{!"0000017C2E40C660.w1024.b0", !4047, i64 0}
!4047 = !{!"0000017C2E40C660", !21, i64 0}
!4048 = !{!4049, !4049, i64 0}
!4049 = !{!"0000017C2E40C660.w8.b16", !4050, i64 0}
!4050 = !{!"0000017C2E40C660.w16.b16", !4041, i64 0}
!4051 = !{!4052, !4052, i64 0}
!4052 = !{!"0000017C2E40C660.w8.b24", !4050, i64 0}
!4053 = !{!4054, !4054, i64 0}
!4054 = !{!"0000017C2E35B970.w4.b0", !4055, i64 0}
!4055 = !{!"0000017C2E35B970.w8.b0", !4056, i64 0}
!4056 = !{!"0000017C2E35B970.w16.b0", !4057, i64 0}
!4057 = !{!"0000017C2E35B970.w32.b0", !4058, i64 0}
!4058 = !{!"0000017C2E35B970.w64.b0", !4059, i64 0}
!4059 = !{!"0000017C2E35B970.w128.b0", !4060, i64 0}
!4060 = !{!"0000017C2E35B970.w256.b0", !4061, i64 0}
!4061 = !{!"0000017C2E35B970.w512.b0", !4062, i64 0}
!4062 = !{!"0000017C2E35B970.w1024.b0", !4063, i64 0}
!4063 = !{!"0000017C2E35B970", !21, i64 0}
!4064 = !{!4065, !4065, i64 0}
!4065 = !{!"0000017C2E35B970.w4.b4", !4055, i64 0}
!4066 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4067)
!4067 = !{!4068, !4069, !4070, !4071, !4072, !4073}
!4068 = !DILocalVariable(name: "arg1", arg: 1, scope: !4066, file: !1, type: !8)
!4069 = !DILocalVariable(name: "arg2", arg: 2, scope: !4066, file: !1, type: !9)
!4070 = !DILocalVariable(name: "arg3", arg: 3, scope: !4066, file: !1, type: !7)
!4071 = !DILocalVariable(name: "arg4", arg: 4, scope: !4066, file: !1, type: !8)
!4072 = !DILocalVariable(name: "arg5", arg: 5, scope: !4066, file: !1, type: !9)
!4073 = !DILocalVariable(name: "arg6", arg: 6, scope: !4066, file: !1, type: !8)
!4074 = !DILocation(line: 0, scope: !4066)
!4075 = !{!4076, !4076, i64 0}
!4076 = !{!"0000017C1AAFFA30.w4.b0", !4077, i64 0}
!4077 = !{!"0000017C1AAFFA30.w8.b0", !4078, i64 0}
!4078 = !{!"0000017C1AAFFA30.w16.b0", !4079, i64 0}
!4079 = !{!"0000017C1AAFFA30.w32.b0", !4080, i64 0}
!4080 = !{!"0000017C1AAFFA30.w64.b0", !4081, i64 0}
!4081 = !{!"0000017C1AAFFA30.w128.b0", !4082, i64 0}
!4082 = !{!"0000017C1AAFFA30.w256.b0", !4083, i64 0}
!4083 = !{!"0000017C1AAFFA30.w512.b0", !4084, i64 0}
!4084 = !{!"0000017C1AAFFA30.w1024.b0", !4085, i64 0}
!4085 = !{!"0000017C1AAFFA30", !21, i64 0}
!4086 = !{!4087, !4087, i64 0}
!4087 = !{!"0000017C1AAFFA30.w4.b4", !4077, i64 0}
!4088 = !{!4089, !4089, i64 0}
!4089 = !{!"0000017C1AB06070.w8.b0", !4090, i64 0}
!4090 = !{!"0000017C1AB06070.w16.b0", !4091, i64 0}
!4091 = !{!"0000017C1AB06070.w32.b0", !4092, i64 0}
!4092 = !{!"0000017C1AB06070.w64.b0", !4093, i64 0}
!4093 = !{!"0000017C1AB06070.w128.b0", !4094, i64 0}
!4094 = !{!"0000017C1AB06070.w256.b0", !4095, i64 0}
!4095 = !{!"0000017C1AB06070.w512.b0", !4096, i64 0}
!4096 = !{!"0000017C1AB06070.w1024.b0", !4097, i64 0}
!4097 = !{!"0000017C1AB06070", !21, i64 0}
!4098 = !{!4099, !4099, i64 0}
!4099 = !{!"0000017C1AB06070.w8.b8", !4090, i64 0}
!4100 = !{!4101, !4101, i64 0}
!4101 = !{!"0000017C1AB06070.w8.b16", !4102, i64 0}
!4102 = !{!"0000017C1AB06070.w16.b16", !4091, i64 0}
!4103 = !{!4104, !4104, i64 0}
!4104 = !{!"0000017C1AB06070.w8.b24", !4102, i64 0}
!4105 = !{!4106, !4106, i64 0}
!4106 = !{!"0000017C1AB06F70.w8.b8", !4107, i64 0}
!4107 = !{!"0000017C1AB06F70.w16.b0", !4108, i64 0}
!4108 = !{!"0000017C1AB06F70.w32.b0", !4109, i64 0}
!4109 = !{!"0000017C1AB06F70.w64.b0", !4110, i64 0}
!4110 = !{!"0000017C1AB06F70.w128.b0", !4111, i64 0}
!4111 = !{!"0000017C1AB06F70.w256.b0", !4112, i64 0}
!4112 = !{!"0000017C1AB06F70.w512.b0", !4113, i64 0}
!4113 = !{!"0000017C1AB06F70.w1024.b0", !4114, i64 0}
!4114 = !{!"0000017C1AB06F70", !21, i64 0}
!4115 = !{!4116, !4116, i64 0}
!4116 = !{!"0000017C1AB06F70.w8.b16", !4117, i64 0}
!4117 = !{!"0000017C1AB06F70.w16.b16", !4108, i64 0}
!4118 = !{!4119, !4119, i64 0}
!4119 = !{!"0000017C1AB06F70.w8.b24", !4117, i64 0}
!4120 = !{!4121, !4121, i64 0}
!4121 = !{!"0000017C1AB08FB0.w8.b0", !4122, i64 0}
!4122 = !{!"0000017C1AB08FB0.w16.b0", !4123, i64 0}
!4123 = !{!"0000017C1AB08FB0.w32.b0", !4124, i64 0}
!4124 = !{!"0000017C1AB08FB0.w64.b0", !4125, i64 0}
!4125 = !{!"0000017C1AB08FB0.w128.b0", !4126, i64 0}
!4126 = !{!"0000017C1AB08FB0.w256.b0", !4127, i64 0}
!4127 = !{!"0000017C1AB08FB0.w512.b0", !4128, i64 0}
!4128 = !{!"0000017C1AB08FB0.w1024.b0", !4129, i64 0}
!4129 = !{!"0000017C1AB08FB0", !21, i64 0}
!4130 = !{!4131, !4131, i64 0}
!4131 = !{!"0000017C1AB08FB0.w8.b8", !4122, i64 0}
!4132 = !{!4133, !4133, i64 0}
!4133 = !{!"0000017C1AB08FB0.w8.b16", !4134, i64 0}
!4134 = !{!"0000017C1AB08FB0.w16.b16", !4123, i64 0}
!4135 = !{!4136, !4136, i64 0}
!4136 = !{!"0000017C1AB08FB0.w8.b24", !4134, i64 0}
!4137 = !{!4138, !4138, i64 0}
!4138 = !{!"0000017C1AB08670.w8.b8", !4139, i64 0}
!4139 = !{!"0000017C1AB08670.w16.b0", !4140, i64 0}
!4140 = !{!"0000017C1AB08670.w32.b0", !4141, i64 0}
!4141 = !{!"0000017C1AB08670.w64.b0", !4142, i64 0}
!4142 = !{!"0000017C1AB08670.w128.b0", !4143, i64 0}
!4143 = !{!"0000017C1AB08670.w256.b0", !4144, i64 0}
!4144 = !{!"0000017C1AB08670.w512.b0", !4145, i64 0}
!4145 = !{!"0000017C1AB08670.w1024.b0", !4146, i64 0}
!4146 = !{!"0000017C1AB08670", !21, i64 0}
!4147 = !{!4148, !4148, i64 0}
!4148 = !{!"0000017C2E5608A0.w4.b0", !4149, i64 0}
!4149 = !{!"0000017C2E5608A0.w8.b0", !4150, i64 0}
!4150 = !{!"0000017C2E5608A0.w16.b0", !4151, i64 0}
!4151 = !{!"0000017C2E5608A0.w32.b0", !4152, i64 0}
!4152 = !{!"0000017C2E5608A0.w64.b0", !4153, i64 0}
!4153 = !{!"0000017C2E5608A0.w128.b0", !4154, i64 0}
!4154 = !{!"0000017C2E5608A0.w256.b0", !4155, i64 0}
!4155 = !{!"0000017C2E5608A0.w512.b0", !4156, i64 0}
!4156 = !{!"0000017C2E5608A0.w1024.b0", !4157, i64 0}
!4157 = !{!"0000017C2E5608A0", !21, i64 0}
!4158 = !{!4159, !4159, i64 0}
!4159 = !{!"0000017C2E5608A0.w4.b4", !4149, i64 0}
!4160 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4161)
!4161 = !{!4162, !4163, !4164, !4165, !4166, !4167}
!4162 = !DILocalVariable(name: "arg1", arg: 1, scope: !4160, file: !1, type: !8)
!4163 = !DILocalVariable(name: "arg2", arg: 2, scope: !4160, file: !1, type: !9)
!4164 = !DILocalVariable(name: "arg3", arg: 3, scope: !4160, file: !1, type: !7)
!4165 = !DILocalVariable(name: "arg4", arg: 4, scope: !4160, file: !1, type: !8)
!4166 = !DILocalVariable(name: "arg5", arg: 5, scope: !4160, file: !1, type: !9)
!4167 = !DILocalVariable(name: "arg6", arg: 6, scope: !4160, file: !1, type: !8)
!4168 = !DILocation(line: 0, scope: !4160)
!4169 = !{!4170, !4170, i64 0}
!4170 = !{!"0000017C2E49DF70.w4.b0", !4171, i64 0}
!4171 = !{!"0000017C2E49DF70.w8.b0", !4172, i64 0}
!4172 = !{!"0000017C2E49DF70.w16.b0", !4173, i64 0}
!4173 = !{!"0000017C2E49DF70.w32.b0", !4174, i64 0}
!4174 = !{!"0000017C2E49DF70.w64.b0", !4175, i64 0}
!4175 = !{!"0000017C2E49DF70.w128.b0", !4176, i64 0}
!4176 = !{!"0000017C2E49DF70.w256.b0", !4177, i64 0}
!4177 = !{!"0000017C2E49DF70.w512.b0", !4178, i64 0}
!4178 = !{!"0000017C2E49DF70.w1024.b0", !4179, i64 0}
!4179 = !{!"0000017C2E49DF70", !21, i64 0}
!4180 = !{!4181, !4181, i64 0}
!4181 = !{!"0000017C2E49DF70.w4.b4", !4171, i64 0}
!4182 = !{!4183, !4183, i64 0}
!4183 = !{!"0000017C2E49DF70.w4.b8", !4184, i64 0}
!4184 = !{!"0000017C2E49DF70.w8.b8", !4172, i64 0}
!4185 = !{!4186, !4186, i64 0}
!4186 = !{!"0000017C2E4A4970.w8.b0", !4187, i64 0}
!4187 = !{!"0000017C2E4A4970.w16.b0", !4188, i64 0}
!4188 = !{!"0000017C2E4A4970.w32.b0", !4189, i64 0}
!4189 = !{!"0000017C2E4A4970.w64.b0", !4190, i64 0}
!4190 = !{!"0000017C2E4A4970.w128.b0", !4191, i64 0}
!4191 = !{!"0000017C2E4A4970.w256.b0", !4192, i64 0}
!4192 = !{!"0000017C2E4A4970.w512.b0", !4193, i64 0}
!4193 = !{!"0000017C2E4A4970.w1024.b0", !4194, i64 0}
!4194 = !{!"0000017C2E4A4970", !21, i64 0}
!4195 = !{!4196, !4196, i64 0}
!4196 = !{!"0000017C2E4A4970.w8.b8", !4187, i64 0}
!4197 = !{!4198, !4198, i64 0}
!4198 = !{!"0000017C2E4A4970.w8.b16", !4199, i64 0}
!4199 = !{!"0000017C2E4A4970.w16.b16", !4188, i64 0}
!4200 = !{!4201, !4201, i64 0}
!4201 = !{!"0000017C2E4A4970.w8.b24", !4199, i64 0}
!4202 = !{!4203, !4203, i64 0}
!4203 = !{!"0000017C2E4A4430.w8.b8", !4204, i64 0}
!4204 = !{!"0000017C2E4A4430.w16.b0", !4205, i64 0}
!4205 = !{!"0000017C2E4A4430.w32.b0", !4206, i64 0}
!4206 = !{!"0000017C2E4A4430.w64.b0", !4207, i64 0}
!4207 = !{!"0000017C2E4A4430.w128.b0", !4208, i64 0}
!4208 = !{!"0000017C2E4A4430.w256.b0", !4209, i64 0}
!4209 = !{!"0000017C2E4A4430.w512.b0", !4210, i64 0}
!4210 = !{!"0000017C2E4A4430.w1024.b0", !4211, i64 0}
!4211 = !{!"0000017C2E4A4430", !21, i64 0}
!4212 = !{!4213, !4213, i64 0}
!4213 = !{!"0000017C2E4A4430.w8.b16", !4214, i64 0}
!4214 = !{!"0000017C2E4A4430.w16.b16", !4205, i64 0}
!4215 = !{!4216, !4216, i64 0}
!4216 = !{!"0000017C2E4A4430.w8.b24", !4214, i64 0}
!4217 = !{!4218, !4218, i64 0}
!4218 = !{!"0000017C2E4A5870.w8.b0", !4219, i64 0}
!4219 = !{!"0000017C2E4A5870.w16.b0", !4220, i64 0}
!4220 = !{!"0000017C2E4A5870.w32.b0", !4221, i64 0}
!4221 = !{!"0000017C2E4A5870.w64.b0", !4222, i64 0}
!4222 = !{!"0000017C2E4A5870.w128.b0", !4223, i64 0}
!4223 = !{!"0000017C2E4A5870.w256.b0", !4224, i64 0}
!4224 = !{!"0000017C2E4A5870.w512.b0", !4225, i64 0}
!4225 = !{!"0000017C2E4A5870.w1024.b0", !4226, i64 0}
!4226 = !{!"0000017C2E4A5870", !21, i64 0}
!4227 = !{!4228, !4228, i64 0}
!4228 = !{!"0000017C2E4A5870.w8.b8", !4219, i64 0}
!4229 = !{!4230, !4230, i64 0}
!4230 = !{!"0000017C2E4A5870.w8.b16", !4231, i64 0}
!4231 = !{!"0000017C2E4A5870.w16.b16", !4220, i64 0}
!4232 = !{!4233, !4233, i64 0}
!4233 = !{!"0000017C2E4A5870.w8.b24", !4231, i64 0}
!4234 = !{!4235, !4235, i64 0}
!4235 = !{!"0000017C2E4A5DF0.w8.b0", !4236, i64 0}
!4236 = !{!"0000017C2E4A5DF0.w16.b0", !4237, i64 0}
!4237 = !{!"0000017C2E4A5DF0.w32.b0", !4238, i64 0}
!4238 = !{!"0000017C2E4A5DF0.w64.b0", !4239, i64 0}
!4239 = !{!"0000017C2E4A5DF0.w128.b0", !4240, i64 0}
!4240 = !{!"0000017C2E4A5DF0.w256.b0", !4241, i64 0}
!4241 = !{!"0000017C2E4A5DF0.w512.b0", !4242, i64 0}
!4242 = !{!"0000017C2E4A5DF0.w1024.b0", !4243, i64 0}
!4243 = !{!"0000017C2E4A5DF0", !21, i64 0}
!4244 = !{!4245, !4245, i64 0}
!4245 = !{!"0000017C2E4A5DF0.w8.b8", !4236, i64 0}
!4246 = !{!4247, !4247, i64 0}
!4247 = !{!"0000017C2E4A5DF0.w8.b16", !4248, i64 0}
!4248 = !{!"0000017C2E4A5DF0.w16.b16", !4237, i64 0}
!4249 = !{!4250, !4250, i64 0}
!4250 = !{!"0000017C2E4A5DF0.w8.b24", !4248, i64 0}
!4251 = !{!4252, !4252, i64 0}
!4252 = !{!"0000017C2E4A6830.w8.b0", !4253, i64 0}
!4253 = !{!"0000017C2E4A6830.w16.b0", !4254, i64 0}
!4254 = !{!"0000017C2E4A6830.w32.b0", !4255, i64 0}
!4255 = !{!"0000017C2E4A6830.w64.b0", !4256, i64 0}
!4256 = !{!"0000017C2E4A6830.w128.b0", !4257, i64 0}
!4257 = !{!"0000017C2E4A6830.w256.b0", !4258, i64 0}
!4258 = !{!"0000017C2E4A6830.w512.b0", !4259, i64 0}
!4259 = !{!"0000017C2E4A6830.w1024.b0", !4260, i64 0}
!4260 = !{!"0000017C2E4A6830", !21, i64 0}
!4261 = !{!4262, !4262, i64 0}
!4262 = !{!"0000017C2E4A6830.w8.b8", !4253, i64 0}
!4263 = !{!4264, !4264, i64 0}
!4264 = !{!"0000017C2E4A6830.w8.b16", !4265, i64 0}
!4265 = !{!"0000017C2E4A6830.w16.b16", !4254, i64 0}
!4266 = !{!4267, !4267, i64 0}
!4267 = !{!"0000017C2E4A6830.w8.b24", !4265, i64 0}
!4268 = !{!4269, !4269, i64 0}
!4269 = !{!"0000017C2E4A6AF0.w8.b8", !4270, i64 0}
!4270 = !{!"0000017C2E4A6AF0.w16.b0", !4271, i64 0}
!4271 = !{!"0000017C2E4A6AF0.w32.b0", !4272, i64 0}
!4272 = !{!"0000017C2E4A6AF0.w64.b0", !4273, i64 0}
!4273 = !{!"0000017C2E4A6AF0.w128.b0", !4274, i64 0}
!4274 = !{!"0000017C2E4A6AF0.w256.b0", !4275, i64 0}
!4275 = !{!"0000017C2E4A6AF0.w512.b0", !4276, i64 0}
!4276 = !{!"0000017C2E4A6AF0.w1024.b0", !4277, i64 0}
!4277 = !{!"0000017C2E4A6AF0", !21, i64 0}
!4278 = !{!4279, !4279, i64 0}
!4279 = !{!"0000017C2E4A6AF0.w8.b16", !4280, i64 0}
!4280 = !{!"0000017C2E4A6AF0.w16.b16", !4271, i64 0}
!4281 = !{!4282, !4282, i64 0}
!4282 = !{!"0000017C2E4A6AF0.w8.b24", !4280, i64 0}
!4283 = !{!4284, !4284, i64 0}
!4284 = !{!"0000017C2E601670.w4.b0", !4285, i64 0}
!4285 = !{!"0000017C2E601670.w8.b0", !4286, i64 0}
!4286 = !{!"0000017C2E601670.w16.b0", !4287, i64 0}
!4287 = !{!"0000017C2E601670.w32.b0", !4288, i64 0}
!4288 = !{!"0000017C2E601670.w64.b0", !4289, i64 0}
!4289 = !{!"0000017C2E601670.w128.b0", !4290, i64 0}
!4290 = !{!"0000017C2E601670.w256.b0", !4291, i64 0}
!4291 = !{!"0000017C2E601670.w512.b0", !4292, i64 0}
!4292 = !{!"0000017C2E601670.w1024.b0", !4293, i64 0}
!4293 = !{!"0000017C2E601670", !21, i64 0}
!4294 = !{!4295, !4295, i64 0}
!4295 = !{!"0000017C2E601670.w4.b4", !4285, i64 0}
!4296 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4297)
!4297 = !{!4298, !4299, !4300, !4301, !4302, !4303}
!4298 = !DILocalVariable(name: "arg1", arg: 1, scope: !4296, file: !1, type: !8)
!4299 = !DILocalVariable(name: "arg2", arg: 2, scope: !4296, file: !1, type: !9)
!4300 = !DILocalVariable(name: "arg3", arg: 3, scope: !4296, file: !1, type: !7)
!4301 = !DILocalVariable(name: "arg4", arg: 4, scope: !4296, file: !1, type: !8)
!4302 = !DILocalVariable(name: "arg5", arg: 5, scope: !4296, file: !1, type: !9)
!4303 = !DILocalVariable(name: "arg6", arg: 6, scope: !4296, file: !1, type: !8)
!4304 = !DILocation(line: 0, scope: !4296)
!4305 = !{!4306, !4306, i64 0}
!4306 = !{!"0000017C2E2F67F0.w4.b0", !4307, i64 0}
!4307 = !{!"0000017C2E2F67F0.w8.b0", !4308, i64 0}
!4308 = !{!"0000017C2E2F67F0.w16.b0", !4309, i64 0}
!4309 = !{!"0000017C2E2F67F0.w32.b0", !4310, i64 0}
!4310 = !{!"0000017C2E2F67F0.w64.b0", !4311, i64 0}
!4311 = !{!"0000017C2E2F67F0.w128.b0", !4312, i64 0}
!4312 = !{!"0000017C2E2F67F0.w256.b0", !4313, i64 0}
!4313 = !{!"0000017C2E2F67F0.w512.b0", !4314, i64 0}
!4314 = !{!"0000017C2E2F67F0.w1024.b0", !4315, i64 0}
!4315 = !{!"0000017C2E2F67F0", !21, i64 0}
!4316 = !{!4317, !4317, i64 0}
!4317 = !{!"0000017C2E2F67F0.w4.b4", !4307, i64 0}
!4318 = !{!4319, !4319, i64 0}
!4319 = !{!"0000017C2E2F67F0.w4.b8", !4320, i64 0}
!4320 = !{!"0000017C2E2F67F0.w8.b8", !4308, i64 0}
!4321 = !{!4322, !4322, i64 0}
!4322 = !{!"0000017C2E2FAAF0.w8.b0", !4323, i64 0}
!4323 = !{!"0000017C2E2FAAF0.w16.b0", !4324, i64 0}
!4324 = !{!"0000017C2E2FAAF0.w32.b0", !4325, i64 0}
!4325 = !{!"0000017C2E2FAAF0.w64.b0", !4326, i64 0}
!4326 = !{!"0000017C2E2FAAF0.w128.b0", !4327, i64 0}
!4327 = !{!"0000017C2E2FAAF0.w256.b0", !4328, i64 0}
!4328 = !{!"0000017C2E2FAAF0.w512.b0", !4329, i64 0}
!4329 = !{!"0000017C2E2FAAF0.w1024.b0", !4330, i64 0}
!4330 = !{!"0000017C2E2FAAF0", !21, i64 0}
!4331 = !{!4332, !4332, i64 0}
!4332 = !{!"0000017C2E2FAAF0.w8.b8", !4323, i64 0}
!4333 = !{!4334, !4334, i64 0}
!4334 = !{!"0000017C2E2FAAF0.w8.b16", !4335, i64 0}
!4335 = !{!"0000017C2E2FAAF0.w16.b16", !4324, i64 0}
!4336 = !{!4337, !4337, i64 0}
!4337 = !{!"0000017C2E2FAAF0.w8.b24", !4335, i64 0}
!4338 = !{!4339, !4339, i64 0}
!4339 = !{!"0000017C2E2FB930.w8.b8", !4340, i64 0}
!4340 = !{!"0000017C2E2FB930.w16.b0", !4341, i64 0}
!4341 = !{!"0000017C2E2FB930.w32.b0", !4342, i64 0}
!4342 = !{!"0000017C2E2FB930.w64.b0", !4343, i64 0}
!4343 = !{!"0000017C2E2FB930.w128.b0", !4344, i64 0}
!4344 = !{!"0000017C2E2FB930.w256.b0", !4345, i64 0}
!4345 = !{!"0000017C2E2FB930.w512.b0", !4346, i64 0}
!4346 = !{!"0000017C2E2FB930.w1024.b0", !4347, i64 0}
!4347 = !{!"0000017C2E2FB930", !21, i64 0}
!4348 = !{!4349, !4349, i64 0}
!4349 = !{!"0000017C2E2FB930.w8.b16", !4350, i64 0}
!4350 = !{!"0000017C2E2FB930.w16.b16", !4341, i64 0}
!4351 = !{!4352, !4352, i64 0}
!4352 = !{!"0000017C2E2FB930.w8.b24", !4350, i64 0}
!4353 = !{!4354, !4354, i64 0}
!4354 = !{!"0000017C2E2FDDB0.w8.b0", !4355, i64 0}
!4355 = !{!"0000017C2E2FDDB0.w16.b0", !4356, i64 0}
!4356 = !{!"0000017C2E2FDDB0.w32.b0", !4357, i64 0}
!4357 = !{!"0000017C2E2FDDB0.w64.b0", !4358, i64 0}
!4358 = !{!"0000017C2E2FDDB0.w128.b0", !4359, i64 0}
!4359 = !{!"0000017C2E2FDDB0.w256.b0", !4360, i64 0}
!4360 = !{!"0000017C2E2FDDB0.w512.b0", !4361, i64 0}
!4361 = !{!"0000017C2E2FDDB0.w1024.b0", !4362, i64 0}
!4362 = !{!"0000017C2E2FDDB0", !21, i64 0}
!4363 = !{!4364, !4364, i64 0}
!4364 = !{!"0000017C2E2FDDB0.w8.b8", !4355, i64 0}
!4365 = !{!4366, !4366, i64 0}
!4366 = !{!"0000017C2E2FDDB0.w8.b16", !4367, i64 0}
!4367 = !{!"0000017C2E2FDDB0.w16.b16", !4356, i64 0}
!4368 = !{!4369, !4369, i64 0}
!4369 = !{!"0000017C2E2FDDB0.w8.b24", !4367, i64 0}
!4370 = !{!4371, !4371, i64 0}
!4371 = !{!"0000017C2E2FD470.w8.b0", !4372, i64 0}
!4372 = !{!"0000017C2E2FD470.w16.b0", !4373, i64 0}
!4373 = !{!"0000017C2E2FD470.w32.b0", !4374, i64 0}
!4374 = !{!"0000017C2E2FD470.w64.b0", !4375, i64 0}
!4375 = !{!"0000017C2E2FD470.w128.b0", !4376, i64 0}
!4376 = !{!"0000017C2E2FD470.w256.b0", !4377, i64 0}
!4377 = !{!"0000017C2E2FD470.w512.b0", !4378, i64 0}
!4378 = !{!"0000017C2E2FD470.w1024.b0", !4379, i64 0}
!4379 = !{!"0000017C2E2FD470", !21, i64 0}
!4380 = !{!4381, !4381, i64 0}
!4381 = !{!"0000017C2E2FD470.w8.b8", !4372, i64 0}
!4382 = !{!4383, !4383, i64 0}
!4383 = !{!"0000017C2E2FD7F0.w8.b0", !4384, i64 0}
!4384 = !{!"0000017C2E2FD7F0.w16.b0", !4385, i64 0}
!4385 = !{!"0000017C2E2FD7F0.w32.b0", !4386, i64 0}
!4386 = !{!"0000017C2E2FD7F0.w64.b0", !4387, i64 0}
!4387 = !{!"0000017C2E2FD7F0.w128.b0", !4388, i64 0}
!4388 = !{!"0000017C2E2FD7F0.w256.b0", !4389, i64 0}
!4389 = !{!"0000017C2E2FD7F0.w512.b0", !4390, i64 0}
!4390 = !{!"0000017C2E2FD7F0.w1024.b0", !4391, i64 0}
!4391 = !{!"0000017C2E2FD7F0", !21, i64 0}
!4392 = !{!4393, !4393, i64 0}
!4393 = !{!"0000017C2E2FD7F0.w8.b8", !4384, i64 0}
!4394 = !{!4395, !4395, i64 0}
!4395 = !{!"0000017C2E2FD7F0.w8.b16", !4396, i64 0}
!4396 = !{!"0000017C2E2FD7F0.w16.b16", !4385, i64 0}
!4397 = !{!4398, !4398, i64 0}
!4398 = !{!"0000017C2E2FD7F0.w8.b24", !4396, i64 0}
!4399 = !{!4400, !4400, i64 0}
!4400 = !{!"0000017C2E2FE470.w8.b8", !4401, i64 0}
!4401 = !{!"0000017C2E2FE470.w16.b0", !4402, i64 0}
!4402 = !{!"0000017C2E2FE470.w32.b0", !4403, i64 0}
!4403 = !{!"0000017C2E2FE470.w64.b0", !4404, i64 0}
!4404 = !{!"0000017C2E2FE470.w128.b0", !4405, i64 0}
!4405 = !{!"0000017C2E2FE470.w256.b0", !4406, i64 0}
!4406 = !{!"0000017C2E2FE470.w512.b0", !4407, i64 0}
!4407 = !{!"0000017C2E2FE470.w1024.b0", !4408, i64 0}
!4408 = !{!"0000017C2E2FE470", !21, i64 0}
!4409 = !{!4410, !4410, i64 0}
!4410 = !{!"0000017C2E2FE470.w8.b16", !4411, i64 0}
!4411 = !{!"0000017C2E2FE470.w16.b16", !4402, i64 0}
!4412 = !{!4413, !4413, i64 0}
!4413 = !{!"0000017C2E2FE470.w8.b24", !4411, i64 0}
!4414 = !{!4415, !4415, i64 0}
!4415 = !{!"0000017C2E4AF130.w4.b0", !4416, i64 0}
!4416 = !{!"0000017C2E4AF130.w8.b0", !4417, i64 0}
!4417 = !{!"0000017C2E4AF130.w16.b0", !4418, i64 0}
!4418 = !{!"0000017C2E4AF130.w32.b0", !4419, i64 0}
!4419 = !{!"0000017C2E4AF130.w64.b0", !4420, i64 0}
!4420 = !{!"0000017C2E4AF130.w128.b0", !4421, i64 0}
!4421 = !{!"0000017C2E4AF130.w256.b0", !4422, i64 0}
!4422 = !{!"0000017C2E4AF130.w512.b0", !4423, i64 0}
!4423 = !{!"0000017C2E4AF130.w1024.b0", !4424, i64 0}
!4424 = !{!"0000017C2E4AF130", !21, i64 0}
!4425 = !{!4426, !4426, i64 0}
!4426 = !{!"0000017C2E4AF130.w4.b4", !4416, i64 0}
!4427 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4428)
!4428 = !{!4429, !4430, !4431, !4432, !4433, !4434}
!4429 = !DILocalVariable(name: "arg1", arg: 1, scope: !4427, file: !1, type: !8)
!4430 = !DILocalVariable(name: "arg2", arg: 2, scope: !4427, file: !1, type: !9)
!4431 = !DILocalVariable(name: "arg3", arg: 3, scope: !4427, file: !1, type: !7)
!4432 = !DILocalVariable(name: "arg4", arg: 4, scope: !4427, file: !1, type: !8)
!4433 = !DILocalVariable(name: "arg5", arg: 5, scope: !4427, file: !1, type: !9)
!4434 = !DILocalVariable(name: "arg6", arg: 6, scope: !4427, file: !1, type: !8)
!4435 = !DILocation(line: 0, scope: !4427)
!4436 = !{!4437, !4437, i64 0}
!4437 = !{!"0000017C2E2EDAB0.w4.b0", !4438, i64 0}
!4438 = !{!"0000017C2E2EDAB0.w8.b0", !4439, i64 0}
!4439 = !{!"0000017C2E2EDAB0.w16.b0", !4440, i64 0}
!4440 = !{!"0000017C2E2EDAB0.w32.b0", !4441, i64 0}
!4441 = !{!"0000017C2E2EDAB0.w64.b0", !4442, i64 0}
!4442 = !{!"0000017C2E2EDAB0.w128.b0", !4443, i64 0}
!4443 = !{!"0000017C2E2EDAB0.w256.b0", !4444, i64 0}
!4444 = !{!"0000017C2E2EDAB0.w512.b0", !4445, i64 0}
!4445 = !{!"0000017C2E2EDAB0.w1024.b0", !4446, i64 0}
!4446 = !{!"0000017C2E2EDAB0", !21, i64 0}
!4447 = !{!4448, !4448, i64 0}
!4448 = !{!"0000017C2E2EDAB0.w4.b4", !4438, i64 0}
!4449 = !{!4450, !4450, i64 0}
!4450 = !{!"0000017C2E2EDAB0.w4.b8", !4451, i64 0}
!4451 = !{!"0000017C2E2EDAB0.w8.b8", !4439, i64 0}
!4452 = !{!4453, !4453, i64 0}
!4453 = !{!"0000017C2E2F45F0.w8.b0", !4454, i64 0}
!4454 = !{!"0000017C2E2F45F0.w16.b0", !4455, i64 0}
!4455 = !{!"0000017C2E2F45F0.w32.b0", !4456, i64 0}
!4456 = !{!"0000017C2E2F45F0.w64.b0", !4457, i64 0}
!4457 = !{!"0000017C2E2F45F0.w128.b0", !4458, i64 0}
!4458 = !{!"0000017C2E2F45F0.w256.b0", !4459, i64 0}
!4459 = !{!"0000017C2E2F45F0.w512.b0", !4460, i64 0}
!4460 = !{!"0000017C2E2F45F0.w1024.b0", !4461, i64 0}
!4461 = !{!"0000017C2E2F45F0", !21, i64 0}
!4462 = !{!4463, !4463, i64 0}
!4463 = !{!"0000017C2E2F45F0.w8.b8", !4454, i64 0}
!4464 = !{!4465, !4465, i64 0}
!4465 = !{!"0000017C2E2F45F0.w8.b16", !4466, i64 0}
!4466 = !{!"0000017C2E2F45F0.w16.b16", !4455, i64 0}
!4467 = !{!4468, !4468, i64 0}
!4468 = !{!"0000017C2E2F45F0.w8.b24", !4466, i64 0}
!4469 = !{!4470, !4470, i64 0}
!4470 = !{!"0000017C2E2F41B0.w8.b8", !4471, i64 0}
!4471 = !{!"0000017C2E2F41B0.w16.b0", !4472, i64 0}
!4472 = !{!"0000017C2E2F41B0.w32.b0", !4473, i64 0}
!4473 = !{!"0000017C2E2F41B0.w64.b0", !4474, i64 0}
!4474 = !{!"0000017C2E2F41B0.w128.b0", !4475, i64 0}
!4475 = !{!"0000017C2E2F41B0.w256.b0", !4476, i64 0}
!4476 = !{!"0000017C2E2F41B0.w512.b0", !4477, i64 0}
!4477 = !{!"0000017C2E2F41B0.w1024.b0", !4478, i64 0}
!4478 = !{!"0000017C2E2F41B0", !21, i64 0}
!4479 = !{!4480, !4480, i64 0}
!4480 = !{!"0000017C2E2F41B0.w8.b16", !4481, i64 0}
!4481 = !{!"0000017C2E2F41B0.w16.b16", !4472, i64 0}
!4482 = !{!4483, !4483, i64 0}
!4483 = !{!"0000017C2E2F41B0.w8.b24", !4481, i64 0}
!4484 = !{!4485, !4485, i64 0}
!4485 = !{!"0000017C2E2F5170.w8.b0", !4486, i64 0}
!4486 = !{!"0000017C2E2F5170.w16.b0", !4487, i64 0}
!4487 = !{!"0000017C2E2F5170.w32.b0", !4488, i64 0}
!4488 = !{!"0000017C2E2F5170.w64.b0", !4489, i64 0}
!4489 = !{!"0000017C2E2F5170.w128.b0", !4490, i64 0}
!4490 = !{!"0000017C2E2F5170.w256.b0", !4491, i64 0}
!4491 = !{!"0000017C2E2F5170.w512.b0", !4492, i64 0}
!4492 = !{!"0000017C2E2F5170.w1024.b0", !4493, i64 0}
!4493 = !{!"0000017C2E2F5170", !21, i64 0}
!4494 = !{!4495, !4495, i64 0}
!4495 = !{!"0000017C2E2F5170.w8.b8", !4486, i64 0}
!4496 = !{!4497, !4497, i64 0}
!4497 = !{!"0000017C2E2F5170.w8.b16", !4498, i64 0}
!4498 = !{!"0000017C2E2F5170.w16.b16", !4487, i64 0}
!4499 = !{!4500, !4500, i64 0}
!4500 = !{!"0000017C2E2F5170.w8.b24", !4498, i64 0}
!4501 = !{!4502, !4502, i64 0}
!4502 = !{!"0000017C2E2F5230.w8.b0", !4503, i64 0}
!4503 = !{!"0000017C2E2F5230.w16.b0", !4504, i64 0}
!4504 = !{!"0000017C2E2F5230.w32.b0", !4505, i64 0}
!4505 = !{!"0000017C2E2F5230.w64.b0", !4506, i64 0}
!4506 = !{!"0000017C2E2F5230.w128.b0", !4507, i64 0}
!4507 = !{!"0000017C2E2F5230.w256.b0", !4508, i64 0}
!4508 = !{!"0000017C2E2F5230.w512.b0", !4509, i64 0}
!4509 = !{!"0000017C2E2F5230.w1024.b0", !4510, i64 0}
!4510 = !{!"0000017C2E2F5230", !21, i64 0}
!4511 = !{!4512, !4512, i64 0}
!4512 = !{!"0000017C2E2F5230.w8.b8", !4503, i64 0}
!4513 = !{!4514, !4514, i64 0}
!4514 = !{!"0000017C2E2F5230.w8.b16", !4515, i64 0}
!4515 = !{!"0000017C2E2F5230.w16.b16", !4504, i64 0}
!4516 = !{!4517, !4517, i64 0}
!4517 = !{!"0000017C2E2F5230.w8.b24", !4515, i64 0}
!4518 = !{!4519, !4519, i64 0}
!4519 = !{!"0000017C2E2F53B0.w8.b0", !4520, i64 0}
!4520 = !{!"0000017C2E2F53B0.w16.b0", !4521, i64 0}
!4521 = !{!"0000017C2E2F53B0.w32.b0", !4522, i64 0}
!4522 = !{!"0000017C2E2F53B0.w64.b0", !4523, i64 0}
!4523 = !{!"0000017C2E2F53B0.w128.b0", !4524, i64 0}
!4524 = !{!"0000017C2E2F53B0.w256.b0", !4525, i64 0}
!4525 = !{!"0000017C2E2F53B0.w512.b0", !4526, i64 0}
!4526 = !{!"0000017C2E2F53B0.w1024.b0", !4527, i64 0}
!4527 = !{!"0000017C2E2F53B0", !21, i64 0}
!4528 = !{!4529, !4529, i64 0}
!4529 = !{!"0000017C2E2F53B0.w8.b8", !4520, i64 0}
!4530 = !{!4531, !4531, i64 0}
!4531 = !{!"0000017C2E2F53B0.w8.b16", !4532, i64 0}
!4532 = !{!"0000017C2E2F53B0.w16.b16", !4521, i64 0}
!4533 = !{!4534, !4534, i64 0}
!4534 = !{!"0000017C2E2F53B0.w8.b24", !4532, i64 0}
!4535 = !{!4536, !4536, i64 0}
!4536 = !{!"0000017C2E2F6EB0.w8.b8", !4537, i64 0}
!4537 = !{!"0000017C2E2F6EB0.w16.b0", !4538, i64 0}
!4538 = !{!"0000017C2E2F6EB0.w32.b0", !4539, i64 0}
!4539 = !{!"0000017C2E2F6EB0.w64.b0", !4540, i64 0}
!4540 = !{!"0000017C2E2F6EB0.w128.b0", !4541, i64 0}
!4541 = !{!"0000017C2E2F6EB0.w256.b0", !4542, i64 0}
!4542 = !{!"0000017C2E2F6EB0.w512.b0", !4543, i64 0}
!4543 = !{!"0000017C2E2F6EB0.w1024.b0", !4544, i64 0}
!4544 = !{!"0000017C2E2F6EB0", !21, i64 0}
!4545 = !{!4546, !4546, i64 0}
!4546 = !{!"0000017C2E2F6EB0.w8.b16", !4547, i64 0}
!4547 = !{!"0000017C2E2F6EB0.w16.b16", !4538, i64 0}
!4548 = !{!4549, !4549, i64 0}
!4549 = !{!"0000017C2E2F6EB0.w8.b24", !4547, i64 0}
!4550 = !{!4551, !4551, i64 0}
!4551 = !{!"0000017C22C0A320.w4.b0", !4552, i64 0}
!4552 = !{!"0000017C22C0A320.w8.b0", !4553, i64 0}
!4553 = !{!"0000017C22C0A320.w16.b0", !4554, i64 0}
!4554 = !{!"0000017C22C0A320.w32.b0", !4555, i64 0}
!4555 = !{!"0000017C22C0A320.w64.b0", !4556, i64 0}
!4556 = !{!"0000017C22C0A320.w128.b0", !4557, i64 0}
!4557 = !{!"0000017C22C0A320.w256.b0", !4558, i64 0}
!4558 = !{!"0000017C22C0A320.w512.b0", !4559, i64 0}
!4559 = !{!"0000017C22C0A320.w1024.b0", !4560, i64 0}
!4560 = !{!"0000017C22C0A320", !21, i64 0}
!4561 = !{!4562, !4562, i64 0}
!4562 = !{!"0000017C22C0A320.w4.b4", !4552, i64 0}
!4563 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4564)
!4564 = !{!4565, !4566, !4567, !4568, !4569, !4570}
!4565 = !DILocalVariable(name: "arg1", arg: 1, scope: !4563, file: !1, type: !8)
!4566 = !DILocalVariable(name: "arg2", arg: 2, scope: !4563, file: !1, type: !9)
!4567 = !DILocalVariable(name: "arg3", arg: 3, scope: !4563, file: !1, type: !7)
!4568 = !DILocalVariable(name: "arg4", arg: 4, scope: !4563, file: !1, type: !8)
!4569 = !DILocalVariable(name: "arg5", arg: 5, scope: !4563, file: !1, type: !9)
!4570 = !DILocalVariable(name: "arg6", arg: 6, scope: !4563, file: !1, type: !8)
!4571 = !DILocation(line: 0, scope: !4563)
!4572 = !{!4573, !4573, i64 0}
!4573 = !{!"0000017C22C074A0.w4.b0", !4574, i64 0}
!4574 = !{!"0000017C22C074A0.w8.b0", !4575, i64 0}
!4575 = !{!"0000017C22C074A0.w16.b0", !4576, i64 0}
!4576 = !{!"0000017C22C074A0.w32.b0", !4577, i64 0}
!4577 = !{!"0000017C22C074A0.w64.b0", !4578, i64 0}
!4578 = !{!"0000017C22C074A0.w128.b0", !4579, i64 0}
!4579 = !{!"0000017C22C074A0.w256.b0", !4580, i64 0}
!4580 = !{!"0000017C22C074A0.w512.b0", !4581, i64 0}
!4581 = !{!"0000017C22C074A0.w1024.b0", !4582, i64 0}
!4582 = !{!"0000017C22C074A0", !21, i64 0}
!4583 = !{!4584, !4584, i64 0}
!4584 = !{!"0000017C22C074A0.w4.b4", !4574, i64 0}
!4585 = !{!4586, !4586, i64 0}
!4586 = !{!"0000017C22C074A0.w4.b8", !4587, i64 0}
!4587 = !{!"0000017C22C074A0.w8.b8", !4575, i64 0}
!4588 = !{!4589, !4589, i64 0}
!4589 = !{!"0000017C22C0E4E0.w8.b0", !4590, i64 0}
!4590 = !{!"0000017C22C0E4E0.w16.b0", !4591, i64 0}
!4591 = !{!"0000017C22C0E4E0.w32.b0", !4592, i64 0}
!4592 = !{!"0000017C22C0E4E0.w64.b0", !4593, i64 0}
!4593 = !{!"0000017C22C0E4E0.w128.b0", !4594, i64 0}
!4594 = !{!"0000017C22C0E4E0.w256.b0", !4595, i64 0}
!4595 = !{!"0000017C22C0E4E0.w512.b0", !4596, i64 0}
!4596 = !{!"0000017C22C0E4E0.w1024.b0", !4597, i64 0}
!4597 = !{!"0000017C22C0E4E0", !21, i64 0}
!4598 = !{!4599, !4599, i64 0}
!4599 = !{!"0000017C22C0E4E0.w8.b8", !4590, i64 0}
!4600 = !{!4601, !4601, i64 0}
!4601 = !{!"0000017C22C0E4E0.w8.b16", !4602, i64 0}
!4602 = !{!"0000017C22C0E4E0.w16.b16", !4591, i64 0}
!4603 = !{!4604, !4604, i64 0}
!4604 = !{!"0000017C22C0E4E0.w8.b24", !4602, i64 0}
!4605 = !{!4606, !4606, i64 0}
!4606 = !{!"0000017C22C0E1A0.w8.b8", !4607, i64 0}
!4607 = !{!"0000017C22C0E1A0.w16.b0", !4608, i64 0}
!4608 = !{!"0000017C22C0E1A0.w32.b0", !4609, i64 0}
!4609 = !{!"0000017C22C0E1A0.w64.b0", !4610, i64 0}
!4610 = !{!"0000017C22C0E1A0.w128.b0", !4611, i64 0}
!4611 = !{!"0000017C22C0E1A0.w256.b0", !4612, i64 0}
!4612 = !{!"0000017C22C0E1A0.w512.b0", !4613, i64 0}
!4613 = !{!"0000017C22C0E1A0.w1024.b0", !4614, i64 0}
!4614 = !{!"0000017C22C0E1A0", !21, i64 0}
!4615 = !{!4616, !4616, i64 0}
!4616 = !{!"0000017C22C0E1A0.w8.b16", !4617, i64 0}
!4617 = !{!"0000017C22C0E1A0.w16.b16", !4608, i64 0}
!4618 = !{!4619, !4619, i64 0}
!4619 = !{!"0000017C22C0E1A0.w8.b24", !4617, i64 0}
!4620 = !{!4621, !4621, i64 0}
!4621 = !{!"0000017C22C0F960.w8.b0", !4622, i64 0}
!4622 = !{!"0000017C22C0F960.w16.b0", !4623, i64 0}
!4623 = !{!"0000017C22C0F960.w32.b0", !4624, i64 0}
!4624 = !{!"0000017C22C0F960.w64.b0", !4625, i64 0}
!4625 = !{!"0000017C22C0F960.w128.b0", !4626, i64 0}
!4626 = !{!"0000017C22C0F960.w256.b0", !4627, i64 0}
!4627 = !{!"0000017C22C0F960.w512.b0", !4628, i64 0}
!4628 = !{!"0000017C22C0F960.w1024.b0", !4629, i64 0}
!4629 = !{!"0000017C22C0F960", !21, i64 0}
!4630 = !{!4631, !4631, i64 0}
!4631 = !{!"0000017C22C0F960.w8.b8", !4622, i64 0}
!4632 = !{!4633, !4633, i64 0}
!4633 = !{!"0000017C22C0F960.w8.b16", !4634, i64 0}
!4634 = !{!"0000017C22C0F960.w16.b16", !4623, i64 0}
!4635 = !{!4636, !4636, i64 0}
!4636 = !{!"0000017C22C0F960.w8.b24", !4634, i64 0}
!4637 = !{!4638, !4638, i64 0}
!4638 = !{!"0000017C22C0F6E0.w8.b0", !4639, i64 0}
!4639 = !{!"0000017C22C0F6E0.w16.b0", !4640, i64 0}
!4640 = !{!"0000017C22C0F6E0.w32.b0", !4641, i64 0}
!4641 = !{!"0000017C22C0F6E0.w64.b0", !4642, i64 0}
!4642 = !{!"0000017C22C0F6E0.w128.b0", !4643, i64 0}
!4643 = !{!"0000017C22C0F6E0.w256.b0", !4644, i64 0}
!4644 = !{!"0000017C22C0F6E0.w512.b0", !4645, i64 0}
!4645 = !{!"0000017C22C0F6E0.w1024.b0", !4646, i64 0}
!4646 = !{!"0000017C22C0F6E0", !21, i64 0}
!4647 = !{!4648, !4648, i64 0}
!4648 = !{!"0000017C22C0F6E0.w8.b8", !4639, i64 0}
!4649 = !{!4650, !4650, i64 0}
!4650 = !{!"0000017C22C0F620.w8.b0", !4651, i64 0}
!4651 = !{!"0000017C22C0F620.w16.b0", !4652, i64 0}
!4652 = !{!"0000017C22C0F620.w32.b0", !4653, i64 0}
!4653 = !{!"0000017C22C0F620.w64.b0", !4654, i64 0}
!4654 = !{!"0000017C22C0F620.w128.b0", !4655, i64 0}
!4655 = !{!"0000017C22C0F620.w256.b0", !4656, i64 0}
!4656 = !{!"0000017C22C0F620.w512.b0", !4657, i64 0}
!4657 = !{!"0000017C22C0F620.w1024.b0", !4658, i64 0}
!4658 = !{!"0000017C22C0F620", !21, i64 0}
!4659 = !{!4660, !4660, i64 0}
!4660 = !{!"0000017C22C0F620.w8.b8", !4651, i64 0}
!4661 = !{!4662, !4662, i64 0}
!4662 = !{!"0000017C22C0F620.w8.b16", !4663, i64 0}
!4663 = !{!"0000017C22C0F620.w16.b16", !4652, i64 0}
!4664 = !{!4665, !4665, i64 0}
!4665 = !{!"0000017C22C0F620.w8.b24", !4663, i64 0}
!4666 = !{!4667, !4667, i64 0}
!4667 = !{!"0000017C22C110A0.w8.b8", !4668, i64 0}
!4668 = !{!"0000017C22C110A0.w16.b0", !4669, i64 0}
!4669 = !{!"0000017C22C110A0.w32.b0", !4670, i64 0}
!4670 = !{!"0000017C22C110A0.w64.b0", !4671, i64 0}
!4671 = !{!"0000017C22C110A0.w128.b0", !4672, i64 0}
!4672 = !{!"0000017C22C110A0.w256.b0", !4673, i64 0}
!4673 = !{!"0000017C22C110A0.w512.b0", !4674, i64 0}
!4674 = !{!"0000017C22C110A0.w1024.b0", !4675, i64 0}
!4675 = !{!"0000017C22C110A0", !21, i64 0}
!4676 = !{!4677, !4677, i64 0}
!4677 = !{!"0000017C22C110A0.w8.b16", !4678, i64 0}
!4678 = !{!"0000017C22C110A0.w16.b16", !4669, i64 0}
!4679 = !{!4680, !4680, i64 0}
!4680 = !{!"0000017C22C110A0.w8.b24", !4678, i64 0}
!4681 = !{!4682, !4682, i64 0}
!4682 = !{!"0000017C2E55D4A0.w4.b0", !4683, i64 0}
!4683 = !{!"0000017C2E55D4A0.w8.b0", !4684, i64 0}
!4684 = !{!"0000017C2E55D4A0.w16.b0", !4685, i64 0}
!4685 = !{!"0000017C2E55D4A0.w32.b0", !4686, i64 0}
!4686 = !{!"0000017C2E55D4A0.w64.b0", !4687, i64 0}
!4687 = !{!"0000017C2E55D4A0.w128.b0", !4688, i64 0}
!4688 = !{!"0000017C2E55D4A0.w256.b0", !4689, i64 0}
!4689 = !{!"0000017C2E55D4A0.w512.b0", !4690, i64 0}
!4690 = !{!"0000017C2E55D4A0.w1024.b0", !4691, i64 0}
!4691 = !{!"0000017C2E55D4A0", !21, i64 0}
!4692 = !{!4693, !4693, i64 0}
!4693 = !{!"0000017C2E55D4A0.w4.b4", !4683, i64 0}
!4694 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4695)
!4695 = !{!4696, !4697, !4698, !4699, !4700, !4701}
!4696 = !DILocalVariable(name: "arg1", arg: 1, scope: !4694, file: !1, type: !8)
!4697 = !DILocalVariable(name: "arg2", arg: 2, scope: !4694, file: !1, type: !9)
!4698 = !DILocalVariable(name: "arg3", arg: 3, scope: !4694, file: !1, type: !7)
!4699 = !DILocalVariable(name: "arg4", arg: 4, scope: !4694, file: !1, type: !8)
!4700 = !DILocalVariable(name: "arg5", arg: 5, scope: !4694, file: !1, type: !9)
!4701 = !DILocalVariable(name: "arg6", arg: 6, scope: !4694, file: !1, type: !8)
!4702 = !DILocation(line: 0, scope: !4694)
!4703 = !{!4704, !4704, i64 0}
!4704 = !{!"0000017C2E3B9930.w4.b0", !4705, i64 0}
!4705 = !{!"0000017C2E3B9930.w8.b0", !4706, i64 0}
!4706 = !{!"0000017C2E3B9930.w16.b0", !4707, i64 0}
!4707 = !{!"0000017C2E3B9930.w32.b0", !4708, i64 0}
!4708 = !{!"0000017C2E3B9930.w64.b0", !4709, i64 0}
!4709 = !{!"0000017C2E3B9930.w128.b0", !4710, i64 0}
!4710 = !{!"0000017C2E3B9930.w256.b0", !4711, i64 0}
!4711 = !{!"0000017C2E3B9930.w512.b0", !4712, i64 0}
!4712 = !{!"0000017C2E3B9930.w1024.b0", !4713, i64 0}
!4713 = !{!"0000017C2E3B9930", !21, i64 0}
!4714 = !{!4715, !4715, i64 0}
!4715 = !{!"0000017C2E3B9930.w4.b4", !4705, i64 0}
!4716 = !{!4717, !4717, i64 0}
!4717 = !{!"0000017C2E3B9930.w4.b8", !4718, i64 0}
!4718 = !{!"0000017C2E3B9930.w8.b8", !4706, i64 0}
!4719 = !{!4720, !4720, i64 0}
!4720 = !{!"0000017C2E3BEEF0.w8.b0", !4721, i64 0}
!4721 = !{!"0000017C2E3BEEF0.w16.b0", !4722, i64 0}
!4722 = !{!"0000017C2E3BEEF0.w32.b0", !4723, i64 0}
!4723 = !{!"0000017C2E3BEEF0.w64.b0", !4724, i64 0}
!4724 = !{!"0000017C2E3BEEF0.w128.b0", !4725, i64 0}
!4725 = !{!"0000017C2E3BEEF0.w256.b0", !4726, i64 0}
!4726 = !{!"0000017C2E3BEEF0.w512.b0", !4727, i64 0}
!4727 = !{!"0000017C2E3BEEF0.w1024.b0", !4728, i64 0}
!4728 = !{!"0000017C2E3BEEF0", !21, i64 0}
!4729 = !{!4730, !4730, i64 0}
!4730 = !{!"0000017C2E3BEEF0.w8.b8", !4721, i64 0}
!4731 = !{!4732, !4732, i64 0}
!4732 = !{!"0000017C2E3BEEF0.w8.b16", !4733, i64 0}
!4733 = !{!"0000017C2E3BEEF0.w16.b16", !4722, i64 0}
!4734 = !{!4735, !4735, i64 0}
!4735 = !{!"0000017C2E3BEEF0.w8.b24", !4733, i64 0}
!4736 = !{!4737, !4737, i64 0}
!4737 = !{!"0000017C2E3BF5B0.w8.b8", !4738, i64 0}
!4738 = !{!"0000017C2E3BF5B0.w16.b0", !4739, i64 0}
!4739 = !{!"0000017C2E3BF5B0.w32.b0", !4740, i64 0}
!4740 = !{!"0000017C2E3BF5B0.w64.b0", !4741, i64 0}
!4741 = !{!"0000017C2E3BF5B0.w128.b0", !4742, i64 0}
!4742 = !{!"0000017C2E3BF5B0.w256.b0", !4743, i64 0}
!4743 = !{!"0000017C2E3BF5B0.w512.b0", !4744, i64 0}
!4744 = !{!"0000017C2E3BF5B0.w1024.b0", !4745, i64 0}
!4745 = !{!"0000017C2E3BF5B0", !21, i64 0}
!4746 = !{!4747, !4747, i64 0}
!4747 = !{!"0000017C2E3BF5B0.w8.b16", !4748, i64 0}
!4748 = !{!"0000017C2E3BF5B0.w16.b16", !4739, i64 0}
!4749 = !{!4750, !4750, i64 0}
!4750 = !{!"0000017C2E3BF5B0.w8.b24", !4748, i64 0}
!4751 = !{!4752, !4752, i64 0}
!4752 = !{!"0000017C2E3C20B0.w8.b0", !4753, i64 0}
!4753 = !{!"0000017C2E3C20B0.w16.b0", !4754, i64 0}
!4754 = !{!"0000017C2E3C20B0.w32.b0", !4755, i64 0}
!4755 = !{!"0000017C2E3C20B0.w64.b0", !4756, i64 0}
!4756 = !{!"0000017C2E3C20B0.w128.b0", !4757, i64 0}
!4757 = !{!"0000017C2E3C20B0.w256.b0", !4758, i64 0}
!4758 = !{!"0000017C2E3C20B0.w512.b0", !4759, i64 0}
!4759 = !{!"0000017C2E3C20B0.w1024.b0", !4760, i64 0}
!4760 = !{!"0000017C2E3C20B0", !21, i64 0}
!4761 = !{!4762, !4762, i64 0}
!4762 = !{!"0000017C2E3C20B0.w8.b8", !4753, i64 0}
!4763 = !{!4764, !4764, i64 0}
!4764 = !{!"0000017C2E3C20B0.w8.b16", !4765, i64 0}
!4765 = !{!"0000017C2E3C20B0.w16.b16", !4754, i64 0}
!4766 = !{!4767, !4767, i64 0}
!4767 = !{!"0000017C2E3C20B0.w8.b24", !4765, i64 0}
!4768 = !{!4769, !4769, i64 0}
!4769 = !{!"0000017C2E3C1CB0.w8.b0", !4770, i64 0}
!4770 = !{!"0000017C2E3C1CB0.w16.b0", !4771, i64 0}
!4771 = !{!"0000017C2E3C1CB0.w32.b0", !4772, i64 0}
!4772 = !{!"0000017C2E3C1CB0.w64.b0", !4773, i64 0}
!4773 = !{!"0000017C2E3C1CB0.w128.b0", !4774, i64 0}
!4774 = !{!"0000017C2E3C1CB0.w256.b0", !4775, i64 0}
!4775 = !{!"0000017C2E3C1CB0.w512.b0", !4776, i64 0}
!4776 = !{!"0000017C2E3C1CB0.w1024.b0", !4777, i64 0}
!4777 = !{!"0000017C2E3C1CB0", !21, i64 0}
!4778 = !{!4779, !4779, i64 0}
!4779 = !{!"0000017C2E3C1CB0.w8.b8", !4770, i64 0}
!4780 = !{!4781, !4781, i64 0}
!4781 = !{!"0000017C2E3C2F30.w8.b0", !4782, i64 0}
!4782 = !{!"0000017C2E3C2F30.w16.b0", !4783, i64 0}
!4783 = !{!"0000017C2E3C2F30.w32.b0", !4784, i64 0}
!4784 = !{!"0000017C2E3C2F30.w64.b0", !4785, i64 0}
!4785 = !{!"0000017C2E3C2F30.w128.b0", !4786, i64 0}
!4786 = !{!"0000017C2E3C2F30.w256.b0", !4787, i64 0}
!4787 = !{!"0000017C2E3C2F30.w512.b0", !4788, i64 0}
!4788 = !{!"0000017C2E3C2F30.w1024.b0", !4789, i64 0}
!4789 = !{!"0000017C2E3C2F30", !21, i64 0}
!4790 = !{!4791, !4791, i64 0}
!4791 = !{!"0000017C2E3C2F30.w8.b8", !4782, i64 0}
!4792 = !{!4793, !4793, i64 0}
!4793 = !{!"0000017C2E3C2F30.w8.b16", !4794, i64 0}
!4794 = !{!"0000017C2E3C2F30.w16.b16", !4783, i64 0}
!4795 = !{!4796, !4796, i64 0}
!4796 = !{!"0000017C2E3C2F30.w8.b24", !4794, i64 0}
!4797 = !{!4798, !4798, i64 0}
!4798 = !{!"0000017C2E3C2430.w8.b8", !4799, i64 0}
!4799 = !{!"0000017C2E3C2430.w16.b0", !4800, i64 0}
!4800 = !{!"0000017C2E3C2430.w32.b0", !4801, i64 0}
!4801 = !{!"0000017C2E3C2430.w64.b0", !4802, i64 0}
!4802 = !{!"0000017C2E3C2430.w128.b0", !4803, i64 0}
!4803 = !{!"0000017C2E3C2430.w256.b0", !4804, i64 0}
!4804 = !{!"0000017C2E3C2430.w512.b0", !4805, i64 0}
!4805 = !{!"0000017C2E3C2430.w1024.b0", !4806, i64 0}
!4806 = !{!"0000017C2E3C2430", !21, i64 0}
!4807 = !{!4808, !4808, i64 0}
!4808 = !{!"0000017C2E3C2430.w8.b16", !4809, i64 0}
!4809 = !{!"0000017C2E3C2430.w16.b16", !4800, i64 0}
!4810 = !{!4811, !4811, i64 0}
!4811 = !{!"0000017C2E3C2430.w8.b24", !4809, i64 0}
!4812 = !{!4813, !4813, i64 0}
!4813 = !{!"0000017C2E3C07B0.w4.b0", !4814, i64 0}
!4814 = !{!"0000017C2E3C07B0.w8.b0", !4815, i64 0}
!4815 = !{!"0000017C2E3C07B0.w16.b0", !4816, i64 0}
!4816 = !{!"0000017C2E3C07B0.w32.b0", !4817, i64 0}
!4817 = !{!"0000017C2E3C07B0.w64.b0", !4818, i64 0}
!4818 = !{!"0000017C2E3C07B0.w128.b0", !4819, i64 0}
!4819 = !{!"0000017C2E3C07B0.w256.b0", !4820, i64 0}
!4820 = !{!"0000017C2E3C07B0.w512.b0", !4821, i64 0}
!4821 = !{!"0000017C2E3C07B0.w1024.b0", !4822, i64 0}
!4822 = !{!"0000017C2E3C07B0", !21, i64 0}
!4823 = !{!4824, !4824, i64 0}
!4824 = !{!"0000017C2E3C07B0.w4.b4", !4814, i64 0}
!4825 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4826)
!4826 = !{!4827, !4828, !4829, !4830, !4831, !4832}
!4827 = !DILocalVariable(name: "arg1", arg: 1, scope: !4825, file: !1, type: !8)
!4828 = !DILocalVariable(name: "arg2", arg: 2, scope: !4825, file: !1, type: !9)
!4829 = !DILocalVariable(name: "arg3", arg: 3, scope: !4825, file: !1, type: !7)
!4830 = !DILocalVariable(name: "arg4", arg: 4, scope: !4825, file: !1, type: !8)
!4831 = !DILocalVariable(name: "arg5", arg: 5, scope: !4825, file: !1, type: !9)
!4832 = !DILocalVariable(name: "arg6", arg: 6, scope: !4825, file: !1, type: !8)
!4833 = !DILocation(line: 0, scope: !4825)
!4834 = !{!4835, !4835, i64 0}
!4835 = !{!"0000017C2E302130.w4.b0", !4836, i64 0}
!4836 = !{!"0000017C2E302130.w8.b0", !4837, i64 0}
!4837 = !{!"0000017C2E302130.w16.b0", !4838, i64 0}
!4838 = !{!"0000017C2E302130.w32.b0", !4839, i64 0}
!4839 = !{!"0000017C2E302130.w64.b0", !4840, i64 0}
!4840 = !{!"0000017C2E302130.w128.b0", !4841, i64 0}
!4841 = !{!"0000017C2E302130.w256.b0", !4842, i64 0}
!4842 = !{!"0000017C2E302130.w512.b0", !4843, i64 0}
!4843 = !{!"0000017C2E302130.w1024.b0", !4844, i64 0}
!4844 = !{!"0000017C2E302130", !21, i64 0}
!4845 = !{!4846, !4846, i64 0}
!4846 = !{!"0000017C2E302130.w4.b4", !4836, i64 0}
!4847 = !{!4848, !4848, i64 0}
!4848 = !{!"0000017C2E302130.w4.b8", !4849, i64 0}
!4849 = !{!"0000017C2E302130.w8.b8", !4837, i64 0}
!4850 = !{!4851, !4851, i64 0}
!4851 = !{!"0000017C2E305C30.w8.b0", !4852, i64 0}
!4852 = !{!"0000017C2E305C30.w16.b0", !4853, i64 0}
!4853 = !{!"0000017C2E305C30.w32.b0", !4854, i64 0}
!4854 = !{!"0000017C2E305C30.w64.b0", !4855, i64 0}
!4855 = !{!"0000017C2E305C30.w128.b0", !4856, i64 0}
!4856 = !{!"0000017C2E305C30.w256.b0", !4857, i64 0}
!4857 = !{!"0000017C2E305C30.w512.b0", !4858, i64 0}
!4858 = !{!"0000017C2E305C30.w1024.b0", !4859, i64 0}
!4859 = !{!"0000017C2E305C30", !21, i64 0}
!4860 = !{!4861, !4861, i64 0}
!4861 = !{!"0000017C2E305C30.w8.b8", !4852, i64 0}
!4862 = !{!4863, !4863, i64 0}
!4863 = !{!"0000017C2E305C30.w8.b16", !4864, i64 0}
!4864 = !{!"0000017C2E305C30.w16.b16", !4853, i64 0}
!4865 = !{!4866, !4866, i64 0}
!4866 = !{!"0000017C2E305C30.w8.b24", !4864, i64 0}
!4867 = !{!4868, !4868, i64 0}
!4868 = !{!"0000017C2E306870.w8.b8", !4869, i64 0}
!4869 = !{!"0000017C2E306870.w16.b0", !4870, i64 0}
!4870 = !{!"0000017C2E306870.w32.b0", !4871, i64 0}
!4871 = !{!"0000017C2E306870.w64.b0", !4872, i64 0}
!4872 = !{!"0000017C2E306870.w128.b0", !4873, i64 0}
!4873 = !{!"0000017C2E306870.w256.b0", !4874, i64 0}
!4874 = !{!"0000017C2E306870.w512.b0", !4875, i64 0}
!4875 = !{!"0000017C2E306870.w1024.b0", !4876, i64 0}
!4876 = !{!"0000017C2E306870", !21, i64 0}
!4877 = !{!4878, !4878, i64 0}
!4878 = !{!"0000017C2E306870.w8.b16", !4879, i64 0}
!4879 = !{!"0000017C2E306870.w16.b16", !4870, i64 0}
!4880 = !{!4881, !4881, i64 0}
!4881 = !{!"0000017C2E306870.w8.b24", !4879, i64 0}
!4882 = !{!4883, !4883, i64 0}
!4883 = !{!"0000017C2E308F30.w8.b0", !4884, i64 0}
!4884 = !{!"0000017C2E308F30.w16.b0", !4885, i64 0}
!4885 = !{!"0000017C2E308F30.w32.b0", !4886, i64 0}
!4886 = !{!"0000017C2E308F30.w64.b0", !4887, i64 0}
!4887 = !{!"0000017C2E308F30.w128.b0", !4888, i64 0}
!4888 = !{!"0000017C2E308F30.w256.b0", !4889, i64 0}
!4889 = !{!"0000017C2E308F30.w512.b0", !4890, i64 0}
!4890 = !{!"0000017C2E308F30.w1024.b0", !4891, i64 0}
!4891 = !{!"0000017C2E308F30", !21, i64 0}
!4892 = !{!4893, !4893, i64 0}
!4893 = !{!"0000017C2E308F30.w8.b8", !4884, i64 0}
!4894 = !{!4895, !4895, i64 0}
!4895 = !{!"0000017C2E308F30.w8.b16", !4896, i64 0}
!4896 = !{!"0000017C2E308F30.w16.b16", !4885, i64 0}
!4897 = !{!4898, !4898, i64 0}
!4898 = !{!"0000017C2E308F30.w8.b24", !4896, i64 0}
!4899 = !{!4900, !4900, i64 0}
!4900 = !{!"0000017C2E309030.w8.b0", !4901, i64 0}
!4901 = !{!"0000017C2E309030.w16.b0", !4902, i64 0}
!4902 = !{!"0000017C2E309030.w32.b0", !4903, i64 0}
!4903 = !{!"0000017C2E309030.w64.b0", !4904, i64 0}
!4904 = !{!"0000017C2E309030.w128.b0", !4905, i64 0}
!4905 = !{!"0000017C2E309030.w256.b0", !4906, i64 0}
!4906 = !{!"0000017C2E309030.w512.b0", !4907, i64 0}
!4907 = !{!"0000017C2E309030.w1024.b0", !4908, i64 0}
!4908 = !{!"0000017C2E309030", !21, i64 0}
!4909 = !{!4910, !4910, i64 0}
!4910 = !{!"0000017C2E309030.w8.b8", !4901, i64 0}
!4911 = !{!4912, !4912, i64 0}
!4912 = !{!"0000017C2E309030.w8.b16", !4913, i64 0}
!4913 = !{!"0000017C2E309030.w16.b16", !4902, i64 0}
!4914 = !{!4915, !4915, i64 0}
!4915 = !{!"0000017C2E309030.w8.b24", !4913, i64 0}
!4916 = !{!4917, !4917, i64 0}
!4917 = !{!"0000017C2E309C70.w8.b0", !4918, i64 0}
!4918 = !{!"0000017C2E309C70.w16.b0", !4919, i64 0}
!4919 = !{!"0000017C2E309C70.w32.b0", !4920, i64 0}
!4920 = !{!"0000017C2E309C70.w64.b0", !4921, i64 0}
!4921 = !{!"0000017C2E309C70.w128.b0", !4922, i64 0}
!4922 = !{!"0000017C2E309C70.w256.b0", !4923, i64 0}
!4923 = !{!"0000017C2E309C70.w512.b0", !4924, i64 0}
!4924 = !{!"0000017C2E309C70.w1024.b0", !4925, i64 0}
!4925 = !{!"0000017C2E309C70", !21, i64 0}
!4926 = !{!4927, !4927, i64 0}
!4927 = !{!"0000017C2E309C70.w8.b8", !4918, i64 0}
!4928 = !{!4929, !4929, i64 0}
!4929 = !{!"0000017C2E309C70.w8.b16", !4930, i64 0}
!4930 = !{!"0000017C2E309C70.w16.b16", !4919, i64 0}
!4931 = !{!4932, !4932, i64 0}
!4932 = !{!"0000017C2E309C70.w8.b24", !4930, i64 0}
!4933 = !{!4934, !4934, i64 0}
!4934 = !{!"0000017C2E309630.w8.b8", !4935, i64 0}
!4935 = !{!"0000017C2E309630.w16.b0", !4936, i64 0}
!4936 = !{!"0000017C2E309630.w32.b0", !4937, i64 0}
!4937 = !{!"0000017C2E309630.w64.b0", !4938, i64 0}
!4938 = !{!"0000017C2E309630.w128.b0", !4939, i64 0}
!4939 = !{!"0000017C2E309630.w256.b0", !4940, i64 0}
!4940 = !{!"0000017C2E309630.w512.b0", !4941, i64 0}
!4941 = !{!"0000017C2E309630.w1024.b0", !4942, i64 0}
!4942 = !{!"0000017C2E309630", !21, i64 0}
!4943 = !{!4944, !4944, i64 0}
!4944 = !{!"0000017C2E309630.w8.b16", !4945, i64 0}
!4945 = !{!"0000017C2E309630.w16.b16", !4936, i64 0}
!4946 = !{!4947, !4947, i64 0}
!4947 = !{!"0000017C2E309630.w8.b24", !4945, i64 0}
!4948 = !{!4949, !4949, i64 0}
!4949 = !{!"0000017C2E4A0D70.w4.b0", !4950, i64 0}
!4950 = !{!"0000017C2E4A0D70.w8.b0", !4951, i64 0}
!4951 = !{!"0000017C2E4A0D70.w16.b0", !4952, i64 0}
!4952 = !{!"0000017C2E4A0D70.w32.b0", !4953, i64 0}
!4953 = !{!"0000017C2E4A0D70.w64.b0", !4954, i64 0}
!4954 = !{!"0000017C2E4A0D70.w128.b0", !4955, i64 0}
!4955 = !{!"0000017C2E4A0D70.w256.b0", !4956, i64 0}
!4956 = !{!"0000017C2E4A0D70.w512.b0", !4957, i64 0}
!4957 = !{!"0000017C2E4A0D70.w1024.b0", !4958, i64 0}
!4958 = !{!"0000017C2E4A0D70", !21, i64 0}
!4959 = !{!4960, !4960, i64 0}
!4960 = !{!"0000017C2E4A0D70.w4.b4", !4950, i64 0}
!4961 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4962)
!4962 = !{!4963, !4964, !4965, !4966, !4967, !4968}
!4963 = !DILocalVariable(name: "arg1", arg: 1, scope: !4961, file: !1, type: !8)
!4964 = !DILocalVariable(name: "arg2", arg: 2, scope: !4961, file: !1, type: !9)
!4965 = !DILocalVariable(name: "arg3", arg: 3, scope: !4961, file: !1, type: !7)
!4966 = !DILocalVariable(name: "arg4", arg: 4, scope: !4961, file: !1, type: !8)
!4967 = !DILocalVariable(name: "arg5", arg: 5, scope: !4961, file: !1, type: !9)
!4968 = !DILocalVariable(name: "arg6", arg: 6, scope: !4961, file: !1, type: !8)
!4969 = !DILocation(line: 0, scope: !4961)
!4970 = !{!4971, !4971, i64 0}
!4971 = !{!"0000017C2E4F87B0.w4.b0", !4972, i64 0}
!4972 = !{!"0000017C2E4F87B0.w8.b0", !4973, i64 0}
!4973 = !{!"0000017C2E4F87B0.w16.b0", !4974, i64 0}
!4974 = !{!"0000017C2E4F87B0.w32.b0", !4975, i64 0}
!4975 = !{!"0000017C2E4F87B0.w64.b0", !4976, i64 0}
!4976 = !{!"0000017C2E4F87B0.w128.b0", !4977, i64 0}
!4977 = !{!"0000017C2E4F87B0.w256.b0", !4978, i64 0}
!4978 = !{!"0000017C2E4F87B0.w512.b0", !4979, i64 0}
!4979 = !{!"0000017C2E4F87B0.w1024.b0", !4980, i64 0}
!4980 = !{!"0000017C2E4F87B0", !21, i64 0}
!4981 = !{!4982, !4982, i64 0}
!4982 = !{!"0000017C2E4F87B0.w4.b4", !4972, i64 0}
!4983 = !{!4984, !4984, i64 0}
!4984 = !{!"0000017C2E4F87B0.w4.b8", !4985, i64 0}
!4985 = !{!"0000017C2E4F87B0.w8.b8", !4973, i64 0}
!4986 = !{!4987, !4987, i64 0}
!4987 = !{!"0000017C2E4FC5B0.w8.b0", !4988, i64 0}
!4988 = !{!"0000017C2E4FC5B0.w16.b0", !4989, i64 0}
!4989 = !{!"0000017C2E4FC5B0.w32.b0", !4990, i64 0}
!4990 = !{!"0000017C2E4FC5B0.w64.b0", !4991, i64 0}
!4991 = !{!"0000017C2E4FC5B0.w128.b0", !4992, i64 0}
!4992 = !{!"0000017C2E4FC5B0.w256.b0", !4993, i64 0}
!4993 = !{!"0000017C2E4FC5B0.w512.b0", !4994, i64 0}
!4994 = !{!"0000017C2E4FC5B0.w1024.b0", !4995, i64 0}
!4995 = !{!"0000017C2E4FC5B0", !21, i64 0}
!4996 = !{!4997, !4997, i64 0}
!4997 = !{!"0000017C2E4FC5B0.w8.b8", !4988, i64 0}
!4998 = !{!4999, !4999, i64 0}
!4999 = !{!"0000017C2E4FC5B0.w8.b16", !5000, i64 0}
!5000 = !{!"0000017C2E4FC5B0.w16.b16", !4989, i64 0}
!5001 = !{!5002, !5002, i64 0}
!5002 = !{!"0000017C2E4FC5B0.w8.b24", !5000, i64 0}
!5003 = !{!5004, !5004, i64 0}
!5004 = !{!"0000017C2E4FCFB0.w8.b8", !5005, i64 0}
!5005 = !{!"0000017C2E4FCFB0.w16.b0", !5006, i64 0}
!5006 = !{!"0000017C2E4FCFB0.w32.b0", !5007, i64 0}
!5007 = !{!"0000017C2E4FCFB0.w64.b0", !5008, i64 0}
!5008 = !{!"0000017C2E4FCFB0.w128.b0", !5009, i64 0}
!5009 = !{!"0000017C2E4FCFB0.w256.b0", !5010, i64 0}
!5010 = !{!"0000017C2E4FCFB0.w512.b0", !5011, i64 0}
!5011 = !{!"0000017C2E4FCFB0.w1024.b0", !5012, i64 0}
!5012 = !{!"0000017C2E4FCFB0", !21, i64 0}
!5013 = !{!5014, !5014, i64 0}
!5014 = !{!"0000017C2E4FCFB0.w8.b16", !5015, i64 0}
!5015 = !{!"0000017C2E4FCFB0.w16.b16", !5006, i64 0}
!5016 = !{!5017, !5017, i64 0}
!5017 = !{!"0000017C2E4FCFB0.w8.b24", !5015, i64 0}
!5018 = !{!5019, !5019, i64 0}
!5019 = !{!"0000017C2E4FD630.w8.b0", !5020, i64 0}
!5020 = !{!"0000017C2E4FD630.w16.b0", !5021, i64 0}
!5021 = !{!"0000017C2E4FD630.w32.b0", !5022, i64 0}
!5022 = !{!"0000017C2E4FD630.w64.b0", !5023, i64 0}
!5023 = !{!"0000017C2E4FD630.w128.b0", !5024, i64 0}
!5024 = !{!"0000017C2E4FD630.w256.b0", !5025, i64 0}
!5025 = !{!"0000017C2E4FD630.w512.b0", !5026, i64 0}
!5026 = !{!"0000017C2E4FD630.w1024.b0", !5027, i64 0}
!5027 = !{!"0000017C2E4FD630", !21, i64 0}
!5028 = !{!5029, !5029, i64 0}
!5029 = !{!"0000017C2E4FD630.w8.b8", !5020, i64 0}
!5030 = !{!5031, !5031, i64 0}
!5031 = !{!"0000017C2E4FD630.w8.b16", !5032, i64 0}
!5032 = !{!"0000017C2E4FD630.w16.b16", !5021, i64 0}
!5033 = !{!5034, !5034, i64 0}
!5034 = !{!"0000017C2E4FD630.w8.b24", !5032, i64 0}
!5035 = !{!5036, !5036, i64 0}
!5036 = !{!"0000017C2E4FD570.w8.b0", !5037, i64 0}
!5037 = !{!"0000017C2E4FD570.w16.b0", !5038, i64 0}
!5038 = !{!"0000017C2E4FD570.w32.b0", !5039, i64 0}
!5039 = !{!"0000017C2E4FD570.w64.b0", !5040, i64 0}
!5040 = !{!"0000017C2E4FD570.w128.b0", !5041, i64 0}
!5041 = !{!"0000017C2E4FD570.w256.b0", !5042, i64 0}
!5042 = !{!"0000017C2E4FD570.w512.b0", !5043, i64 0}
!5043 = !{!"0000017C2E4FD570.w1024.b0", !5044, i64 0}
!5044 = !{!"0000017C2E4FD570", !21, i64 0}
!5045 = !{!5046, !5046, i64 0}
!5046 = !{!"0000017C2E4FD570.w8.b8", !5037, i64 0}
!5047 = !{!5048, !5048, i64 0}
!5048 = !{!"0000017C2E4FE730.w8.b0", !5049, i64 0}
!5049 = !{!"0000017C2E4FE730.w16.b0", !5050, i64 0}
!5050 = !{!"0000017C2E4FE730.w32.b0", !5051, i64 0}
!5051 = !{!"0000017C2E4FE730.w64.b0", !5052, i64 0}
!5052 = !{!"0000017C2E4FE730.w128.b0", !5053, i64 0}
!5053 = !{!"0000017C2E4FE730.w256.b0", !5054, i64 0}
!5054 = !{!"0000017C2E4FE730.w512.b0", !5055, i64 0}
!5055 = !{!"0000017C2E4FE730.w1024.b0", !5056, i64 0}
!5056 = !{!"0000017C2E4FE730", !21, i64 0}
!5057 = !{!5058, !5058, i64 0}
!5058 = !{!"0000017C2E4FE730.w8.b8", !5049, i64 0}
!5059 = !{!5060, !5060, i64 0}
!5060 = !{!"0000017C2E4FE730.w8.b16", !5061, i64 0}
!5061 = !{!"0000017C2E4FE730.w16.b16", !5050, i64 0}
!5062 = !{!5063, !5063, i64 0}
!5063 = !{!"0000017C2E4FE730.w8.b24", !5061, i64 0}
!5064 = !{!5065, !5065, i64 0}
!5065 = !{!"0000017C2E4FF0B0.w8.b8", !5066, i64 0}
!5066 = !{!"0000017C2E4FF0B0.w16.b0", !5067, i64 0}
!5067 = !{!"0000017C2E4FF0B0.w32.b0", !5068, i64 0}
!5068 = !{!"0000017C2E4FF0B0.w64.b0", !5069, i64 0}
!5069 = !{!"0000017C2E4FF0B0.w128.b0", !5070, i64 0}
!5070 = !{!"0000017C2E4FF0B0.w256.b0", !5071, i64 0}
!5071 = !{!"0000017C2E4FF0B0.w512.b0", !5072, i64 0}
!5072 = !{!"0000017C2E4FF0B0.w1024.b0", !5073, i64 0}
!5073 = !{!"0000017C2E4FF0B0", !21, i64 0}
!5074 = !{!5075, !5075, i64 0}
!5075 = !{!"0000017C2E4FF0B0.w8.b16", !5076, i64 0}
!5076 = !{!"0000017C2E4FF0B0.w16.b16", !5067, i64 0}
!5077 = !{!5078, !5078, i64 0}
!5078 = !{!"0000017C2E4FF0B0.w8.b24", !5076, i64 0}
!5079 = !{!5080, !5080, i64 0}
!5080 = !{!"0000017C2E60BB70.w4.b0", !5081, i64 0}
!5081 = !{!"0000017C2E60BB70.w8.b0", !5082, i64 0}
!5082 = !{!"0000017C2E60BB70.w16.b0", !5083, i64 0}
!5083 = !{!"0000017C2E60BB70.w32.b0", !5084, i64 0}
!5084 = !{!"0000017C2E60BB70.w64.b0", !5085, i64 0}
!5085 = !{!"0000017C2E60BB70.w128.b0", !5086, i64 0}
!5086 = !{!"0000017C2E60BB70.w256.b0", !5087, i64 0}
!5087 = !{!"0000017C2E60BB70.w512.b0", !5088, i64 0}
!5088 = !{!"0000017C2E60BB70.w1024.b0", !5089, i64 0}
!5089 = !{!"0000017C2E60BB70", !21, i64 0}
!5090 = !{!5091, !5091, i64 0}
!5091 = !{!"0000017C2E60BB70.w4.b4", !5081, i64 0}
!5092 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5093)
!5093 = !{!5094, !5095, !5096, !5097, !5098, !5099}
!5094 = !DILocalVariable(name: "arg1", arg: 1, scope: !5092, file: !1, type: !8)
!5095 = !DILocalVariable(name: "arg2", arg: 2, scope: !5092, file: !1, type: !9)
!5096 = !DILocalVariable(name: "arg3", arg: 3, scope: !5092, file: !1, type: !7)
!5097 = !DILocalVariable(name: "arg4", arg: 4, scope: !5092, file: !1, type: !8)
!5098 = !DILocalVariable(name: "arg5", arg: 5, scope: !5092, file: !1, type: !9)
!5099 = !DILocalVariable(name: "arg6", arg: 6, scope: !5092, file: !1, type: !8)
!5100 = !DILocation(line: 0, scope: !5092)
!5101 = !{!5102, !5102, i64 0}
!5102 = !{!"0000017C22C0FDE0.w4.b0", !5103, i64 0}
!5103 = !{!"0000017C22C0FDE0.w8.b0", !5104, i64 0}
!5104 = !{!"0000017C22C0FDE0.w16.b0", !5105, i64 0}
!5105 = !{!"0000017C22C0FDE0.w32.b0", !5106, i64 0}
!5106 = !{!"0000017C22C0FDE0.w64.b0", !5107, i64 0}
!5107 = !{!"0000017C22C0FDE0.w128.b0", !5108, i64 0}
!5108 = !{!"0000017C22C0FDE0.w256.b0", !5109, i64 0}
!5109 = !{!"0000017C22C0FDE0.w512.b0", !5110, i64 0}
!5110 = !{!"0000017C22C0FDE0.w1024.b0", !5111, i64 0}
!5111 = !{!"0000017C22C0FDE0", !21, i64 0}
!5112 = !{!5113, !5113, i64 0}
!5113 = !{!"0000017C22C0FDE0.w4.b4", !5103, i64 0}
!5114 = !{!5115, !5115, i64 0}
!5115 = !{!"0000017C22C0FDE0.w4.b8", !5116, i64 0}
!5116 = !{!"0000017C22C0FDE0.w8.b8", !5104, i64 0}
!5117 = !{!5118, !5118, i64 0}
!5118 = !{!"0000017C22C15C60.w8.b0", !5119, i64 0}
!5119 = !{!"0000017C22C15C60.w16.b0", !5120, i64 0}
!5120 = !{!"0000017C22C15C60.w32.b0", !5121, i64 0}
!5121 = !{!"0000017C22C15C60.w64.b0", !5122, i64 0}
!5122 = !{!"0000017C22C15C60.w128.b0", !5123, i64 0}
!5123 = !{!"0000017C22C15C60.w256.b0", !5124, i64 0}
!5124 = !{!"0000017C22C15C60.w512.b0", !5125, i64 0}
!5125 = !{!"0000017C22C15C60.w1024.b0", !5126, i64 0}
!5126 = !{!"0000017C22C15C60", !21, i64 0}
!5127 = !{!5128, !5128, i64 0}
!5128 = !{!"0000017C22C15C60.w8.b8", !5119, i64 0}
!5129 = !{!5130, !5130, i64 0}
!5130 = !{!"0000017C22C15C60.w8.b16", !5131, i64 0}
!5131 = !{!"0000017C22C15C60.w16.b16", !5120, i64 0}
!5132 = !{!5133, !5133, i64 0}
!5133 = !{!"0000017C22C15C60.w8.b24", !5131, i64 0}
!5134 = !{!5135, !5135, i64 0}
!5135 = !{!"0000017C22C15520.w8.b8", !5136, i64 0}
!5136 = !{!"0000017C22C15520.w16.b0", !5137, i64 0}
!5137 = !{!"0000017C22C15520.w32.b0", !5138, i64 0}
!5138 = !{!"0000017C22C15520.w64.b0", !5139, i64 0}
!5139 = !{!"0000017C22C15520.w128.b0", !5140, i64 0}
!5140 = !{!"0000017C22C15520.w256.b0", !5141, i64 0}
!5141 = !{!"0000017C22C15520.w512.b0", !5142, i64 0}
!5142 = !{!"0000017C22C15520.w1024.b0", !5143, i64 0}
!5143 = !{!"0000017C22C15520", !21, i64 0}
!5144 = !{!5145, !5145, i64 0}
!5145 = !{!"0000017C22C15520.w8.b16", !5146, i64 0}
!5146 = !{!"0000017C22C15520.w16.b16", !5137, i64 0}
!5147 = !{!5148, !5148, i64 0}
!5148 = !{!"0000017C22C15520.w8.b24", !5146, i64 0}
!5149 = !{!5150, !5150, i64 0}
!5150 = !{!"0000017C22C16320.w8.b0", !5151, i64 0}
!5151 = !{!"0000017C22C16320.w16.b0", !5152, i64 0}
!5152 = !{!"0000017C22C16320.w32.b0", !5153, i64 0}
!5153 = !{!"0000017C22C16320.w64.b0", !5154, i64 0}
!5154 = !{!"0000017C22C16320.w128.b0", !5155, i64 0}
!5155 = !{!"0000017C22C16320.w256.b0", !5156, i64 0}
!5156 = !{!"0000017C22C16320.w512.b0", !5157, i64 0}
!5157 = !{!"0000017C22C16320.w1024.b0", !5158, i64 0}
!5158 = !{!"0000017C22C16320", !21, i64 0}
!5159 = !{!5160, !5160, i64 0}
!5160 = !{!"0000017C22C16320.w8.b8", !5151, i64 0}
!5161 = !{!5162, !5162, i64 0}
!5162 = !{!"0000017C22C16320.w8.b16", !5163, i64 0}
!5163 = !{!"0000017C22C16320.w16.b16", !5152, i64 0}
!5164 = !{!5165, !5165, i64 0}
!5165 = !{!"0000017C22C16320.w8.b24", !5163, i64 0}
!5166 = !{!5167, !5167, i64 0}
!5167 = !{!"0000017C22C16760.w8.b0", !5168, i64 0}
!5168 = !{!"0000017C22C16760.w16.b0", !5169, i64 0}
!5169 = !{!"0000017C22C16760.w32.b0", !5170, i64 0}
!5170 = !{!"0000017C22C16760.w64.b0", !5171, i64 0}
!5171 = !{!"0000017C22C16760.w128.b0", !5172, i64 0}
!5172 = !{!"0000017C22C16760.w256.b0", !5173, i64 0}
!5173 = !{!"0000017C22C16760.w512.b0", !5174, i64 0}
!5174 = !{!"0000017C22C16760.w1024.b0", !5175, i64 0}
!5175 = !{!"0000017C22C16760", !21, i64 0}
!5176 = !{!5177, !5177, i64 0}
!5177 = !{!"0000017C22C16760.w8.b8", !5168, i64 0}
!5178 = !{!5179, !5179, i64 0}
!5179 = !{!"0000017C22C16760.w8.b16", !5180, i64 0}
!5180 = !{!"0000017C22C16760.w16.b16", !5169, i64 0}
!5181 = !{!5182, !5182, i64 0}
!5182 = !{!"0000017C22C16760.w8.b24", !5180, i64 0}
!5183 = !{!5184, !5184, i64 0}
!5184 = !{!"0000017C22C16A20.w8.b0", !5185, i64 0}
!5185 = !{!"0000017C22C16A20.w16.b0", !5186, i64 0}
!5186 = !{!"0000017C22C16A20.w32.b0", !5187, i64 0}
!5187 = !{!"0000017C22C16A20.w64.b0", !5188, i64 0}
!5188 = !{!"0000017C22C16A20.w128.b0", !5189, i64 0}
!5189 = !{!"0000017C22C16A20.w256.b0", !5190, i64 0}
!5190 = !{!"0000017C22C16A20.w512.b0", !5191, i64 0}
!5191 = !{!"0000017C22C16A20.w1024.b0", !5192, i64 0}
!5192 = !{!"0000017C22C16A20", !21, i64 0}
!5193 = !{!5194, !5194, i64 0}
!5194 = !{!"0000017C22C16A20.w8.b8", !5185, i64 0}
!5195 = !{!5196, !5196, i64 0}
!5196 = !{!"0000017C22C16A20.w8.b16", !5197, i64 0}
!5197 = !{!"0000017C22C16A20.w16.b16", !5186, i64 0}
!5198 = !{!5199, !5199, i64 0}
!5199 = !{!"0000017C22C16A20.w8.b24", !5197, i64 0}
!5200 = !{!5201, !5201, i64 0}
!5201 = !{!"0000017C22BF7020.w8.b8", !5202, i64 0}
!5202 = !{!"0000017C22BF7020.w16.b0", !5203, i64 0}
!5203 = !{!"0000017C22BF7020.w32.b0", !5204, i64 0}
!5204 = !{!"0000017C22BF7020.w64.b0", !5205, i64 0}
!5205 = !{!"0000017C22BF7020.w128.b0", !5206, i64 0}
!5206 = !{!"0000017C22BF7020.w256.b0", !5207, i64 0}
!5207 = !{!"0000017C22BF7020.w512.b0", !5208, i64 0}
!5208 = !{!"0000017C22BF7020.w1024.b0", !5209, i64 0}
!5209 = !{!"0000017C22BF7020", !21, i64 0}
!5210 = !{!5211, !5211, i64 0}
!5211 = !{!"0000017C22BF7020.w8.b16", !5212, i64 0}
!5212 = !{!"0000017C22BF7020.w16.b16", !5203, i64 0}
!5213 = !{!5214, !5214, i64 0}
!5214 = !{!"0000017C22BF7020.w8.b24", !5212, i64 0}
!5215 = !{!5216, !5216, i64 0}
!5216 = !{!"0000017C2E564020.w4.b0", !5217, i64 0}
!5217 = !{!"0000017C2E564020.w8.b0", !5218, i64 0}
!5218 = !{!"0000017C2E564020.w16.b0", !5219, i64 0}
!5219 = !{!"0000017C2E564020.w32.b0", !5220, i64 0}
!5220 = !{!"0000017C2E564020.w64.b0", !5221, i64 0}
!5221 = !{!"0000017C2E564020.w128.b0", !5222, i64 0}
!5222 = !{!"0000017C2E564020.w256.b0", !5223, i64 0}
!5223 = !{!"0000017C2E564020.w512.b0", !5224, i64 0}
!5224 = !{!"0000017C2E564020.w1024.b0", !5225, i64 0}
!5225 = !{!"0000017C2E564020", !21, i64 0}
!5226 = !{!5227, !5227, i64 0}
!5227 = !{!"0000017C2E564020.w4.b4", !5217, i64 0}
!5228 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5229)
!5229 = !{!5230, !5231, !5232, !5233, !5234, !5235}
!5230 = !DILocalVariable(name: "arg1", arg: 1, scope: !5228, file: !1, type: !8)
!5231 = !DILocalVariable(name: "arg2", arg: 2, scope: !5228, file: !1, type: !9)
!5232 = !DILocalVariable(name: "arg3", arg: 3, scope: !5228, file: !1, type: !7)
!5233 = !DILocalVariable(name: "arg4", arg: 4, scope: !5228, file: !1, type: !8)
!5234 = !DILocalVariable(name: "arg5", arg: 5, scope: !5228, file: !1, type: !9)
!5235 = !DILocalVariable(name: "arg6", arg: 6, scope: !5228, file: !1, type: !8)
!5236 = !DILocation(line: 0, scope: !5228)
!5237 = !{!5238, !5238, i64 0}
!5238 = !{!"0000017C1AB0AD30.w4.b0", !5239, i64 0}
!5239 = !{!"0000017C1AB0AD30.w8.b0", !5240, i64 0}
!5240 = !{!"0000017C1AB0AD30.w16.b0", !5241, i64 0}
!5241 = !{!"0000017C1AB0AD30.w32.b0", !5242, i64 0}
!5242 = !{!"0000017C1AB0AD30.w64.b0", !5243, i64 0}
!5243 = !{!"0000017C1AB0AD30.w128.b0", !5244, i64 0}
!5244 = !{!"0000017C1AB0AD30.w256.b0", !5245, i64 0}
!5245 = !{!"0000017C1AB0AD30.w512.b0", !5246, i64 0}
!5246 = !{!"0000017C1AB0AD30.w1024.b0", !5247, i64 0}
!5247 = !{!"0000017C1AB0AD30", !21, i64 0}
!5248 = !{!5249, !5249, i64 0}
!5249 = !{!"0000017C1AB0AD30.w4.b4", !5239, i64 0}
!5250 = !{!5251, !5251, i64 0}
!5251 = !{!"0000017C1AB0AD30.w4.b8", !5252, i64 0}
!5252 = !{!"0000017C1AB0AD30.w8.b8", !5240, i64 0}
!5253 = !{!5254, !5254, i64 0}
!5254 = !{!"0000017C1AAF46F0.w8.b0", !5255, i64 0}
!5255 = !{!"0000017C1AAF46F0.w16.b0", !5256, i64 0}
!5256 = !{!"0000017C1AAF46F0.w32.b0", !5257, i64 0}
!5257 = !{!"0000017C1AAF46F0.w64.b0", !5258, i64 0}
!5258 = !{!"0000017C1AAF46F0.w128.b0", !5259, i64 0}
!5259 = !{!"0000017C1AAF46F0.w256.b0", !5260, i64 0}
!5260 = !{!"0000017C1AAF46F0.w512.b0", !5261, i64 0}
!5261 = !{!"0000017C1AAF46F0.w1024.b0", !5262, i64 0}
!5262 = !{!"0000017C1AAF46F0", !21, i64 0}
!5263 = !{!5264, !5264, i64 0}
!5264 = !{!"0000017C1AAF46F0.w8.b8", !5255, i64 0}
!5265 = !{!5266, !5266, i64 0}
!5266 = !{!"0000017C1AAF46F0.w8.b16", !5267, i64 0}
!5267 = !{!"0000017C1AAF46F0.w16.b16", !5256, i64 0}
!5268 = !{!5269, !5269, i64 0}
!5269 = !{!"0000017C1AAF46F0.w8.b24", !5267, i64 0}
!5270 = !{!5271, !5271, i64 0}
!5271 = !{!"0000017C1AAF4A70.w8.b8", !5272, i64 0}
!5272 = !{!"0000017C1AAF4A70.w16.b0", !5273, i64 0}
!5273 = !{!"0000017C1AAF4A70.w32.b0", !5274, i64 0}
!5274 = !{!"0000017C1AAF4A70.w64.b0", !5275, i64 0}
!5275 = !{!"0000017C1AAF4A70.w128.b0", !5276, i64 0}
!5276 = !{!"0000017C1AAF4A70.w256.b0", !5277, i64 0}
!5277 = !{!"0000017C1AAF4A70.w512.b0", !5278, i64 0}
!5278 = !{!"0000017C1AAF4A70.w1024.b0", !5279, i64 0}
!5279 = !{!"0000017C1AAF4A70", !21, i64 0}
!5280 = !{!5281, !5281, i64 0}
!5281 = !{!"0000017C1AAF4A70.w8.b16", !5282, i64 0}
!5282 = !{!"0000017C1AAF4A70.w16.b16", !5273, i64 0}
!5283 = !{!5284, !5284, i64 0}
!5284 = !{!"0000017C1AAF4A70.w8.b24", !5282, i64 0}
!5285 = !{!5286, !5286, i64 0}
!5286 = !{!"0000017C1AAF5BF0.w8.b0", !5287, i64 0}
!5287 = !{!"0000017C1AAF5BF0.w16.b0", !5288, i64 0}
!5288 = !{!"0000017C1AAF5BF0.w32.b0", !5289, i64 0}
!5289 = !{!"0000017C1AAF5BF0.w64.b0", !5290, i64 0}
!5290 = !{!"0000017C1AAF5BF0.w128.b0", !5291, i64 0}
!5291 = !{!"0000017C1AAF5BF0.w256.b0", !5292, i64 0}
!5292 = !{!"0000017C1AAF5BF0.w512.b0", !5293, i64 0}
!5293 = !{!"0000017C1AAF5BF0.w1024.b0", !5294, i64 0}
!5294 = !{!"0000017C1AAF5BF0", !21, i64 0}
!5295 = !{!5296, !5296, i64 0}
!5296 = !{!"0000017C1AAF5BF0.w8.b8", !5287, i64 0}
!5297 = !{!5298, !5298, i64 0}
!5298 = !{!"0000017C1AAF5BF0.w8.b16", !5299, i64 0}
!5299 = !{!"0000017C1AAF5BF0.w16.b16", !5288, i64 0}
!5300 = !{!5301, !5301, i64 0}
!5301 = !{!"0000017C1AAF5BF0.w8.b24", !5299, i64 0}
!5302 = !{!5303, !5303, i64 0}
!5303 = !{!"0000017C1AAF5E70.w8.b0", !5304, i64 0}
!5304 = !{!"0000017C1AAF5E70.w16.b0", !5305, i64 0}
!5305 = !{!"0000017C1AAF5E70.w32.b0", !5306, i64 0}
!5306 = !{!"0000017C1AAF5E70.w64.b0", !5307, i64 0}
!5307 = !{!"0000017C1AAF5E70.w128.b0", !5308, i64 0}
!5308 = !{!"0000017C1AAF5E70.w256.b0", !5309, i64 0}
!5309 = !{!"0000017C1AAF5E70.w512.b0", !5310, i64 0}
!5310 = !{!"0000017C1AAF5E70.w1024.b0", !5311, i64 0}
!5311 = !{!"0000017C1AAF5E70", !21, i64 0}
!5312 = !{!5313, !5313, i64 0}
!5313 = !{!"0000017C1AAF5E70.w8.b8", !5304, i64 0}
!5314 = !{!5315, !5315, i64 0}
!5315 = !{!"0000017C1AAF68B0.w8.b0", !5316, i64 0}
!5316 = !{!"0000017C1AAF68B0.w16.b0", !5317, i64 0}
!5317 = !{!"0000017C1AAF68B0.w32.b0", !5318, i64 0}
!5318 = !{!"0000017C1AAF68B0.w64.b0", !5319, i64 0}
!5319 = !{!"0000017C1AAF68B0.w128.b0", !5320, i64 0}
!5320 = !{!"0000017C1AAF68B0.w256.b0", !5321, i64 0}
!5321 = !{!"0000017C1AAF68B0.w512.b0", !5322, i64 0}
!5322 = !{!"0000017C1AAF68B0.w1024.b0", !5323, i64 0}
!5323 = !{!"0000017C1AAF68B0", !21, i64 0}
!5324 = !{!5325, !5325, i64 0}
!5325 = !{!"0000017C1AAF68B0.w8.b8", !5316, i64 0}
!5326 = !{!5327, !5327, i64 0}
!5327 = !{!"0000017C1AAF68B0.w8.b16", !5328, i64 0}
!5328 = !{!"0000017C1AAF68B0.w16.b16", !5317, i64 0}
!5329 = !{!5330, !5330, i64 0}
!5330 = !{!"0000017C1AAF68B0.w8.b24", !5328, i64 0}
!5331 = !{!5332, !5332, i64 0}
!5332 = !{!"0000017C1AAF7FB0.w8.b8", !5333, i64 0}
!5333 = !{!"0000017C1AAF7FB0.w16.b0", !5334, i64 0}
!5334 = !{!"0000017C1AAF7FB0.w32.b0", !5335, i64 0}
!5335 = !{!"0000017C1AAF7FB0.w64.b0", !5336, i64 0}
!5336 = !{!"0000017C1AAF7FB0.w128.b0", !5337, i64 0}
!5337 = !{!"0000017C1AAF7FB0.w256.b0", !5338, i64 0}
!5338 = !{!"0000017C1AAF7FB0.w512.b0", !5339, i64 0}
!5339 = !{!"0000017C1AAF7FB0.w1024.b0", !5340, i64 0}
!5340 = !{!"0000017C1AAF7FB0", !21, i64 0}
!5341 = !{!5342, !5342, i64 0}
!5342 = !{!"0000017C1AAF7FB0.w8.b16", !5343, i64 0}
!5343 = !{!"0000017C1AAF7FB0.w16.b16", !5334, i64 0}
!5344 = !{!5345, !5345, i64 0}
!5345 = !{!"0000017C1AAF7FB0.w8.b24", !5343, i64 0}
!5346 = !{!5347, !5347, i64 0}
!5347 = !{!"0000017C2E567AE0.w4.b0", !5348, i64 0}
!5348 = !{!"0000017C2E567AE0.w8.b0", !5349, i64 0}
!5349 = !{!"0000017C2E567AE0.w16.b0", !5350, i64 0}
!5350 = !{!"0000017C2E567AE0.w32.b0", !5351, i64 0}
!5351 = !{!"0000017C2E567AE0.w64.b0", !5352, i64 0}
!5352 = !{!"0000017C2E567AE0.w128.b0", !5353, i64 0}
!5353 = !{!"0000017C2E567AE0.w256.b0", !5354, i64 0}
!5354 = !{!"0000017C2E567AE0.w512.b0", !5355, i64 0}
!5355 = !{!"0000017C2E567AE0.w1024.b0", !5356, i64 0}
!5356 = !{!"0000017C2E567AE0", !21, i64 0}
!5357 = !{!5358, !5358, i64 0}
!5358 = !{!"0000017C2E567AE0.w4.b4", !5348, i64 0}
!5359 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5360)
!5360 = !{!5361, !5362, !5363, !5364, !5365, !5366}
!5361 = !DILocalVariable(name: "arg1", arg: 1, scope: !5359, file: !1, type: !8)
!5362 = !DILocalVariable(name: "arg2", arg: 2, scope: !5359, file: !1, type: !9)
!5363 = !DILocalVariable(name: "arg3", arg: 3, scope: !5359, file: !1, type: !7)
!5364 = !DILocalVariable(name: "arg4", arg: 4, scope: !5359, file: !1, type: !8)
!5365 = !DILocalVariable(name: "arg5", arg: 5, scope: !5359, file: !1, type: !9)
!5366 = !DILocalVariable(name: "arg6", arg: 6, scope: !5359, file: !1, type: !8)
!5367 = !DILocation(line: 0, scope: !5359)
!5368 = !{!5369, !5369, i64 0}
!5369 = !{!"0000017C2E3B2270.w4.b0", !5370, i64 0}
!5370 = !{!"0000017C2E3B2270.w8.b0", !5371, i64 0}
!5371 = !{!"0000017C2E3B2270.w16.b0", !5372, i64 0}
!5372 = !{!"0000017C2E3B2270.w32.b0", !5373, i64 0}
!5373 = !{!"0000017C2E3B2270.w64.b0", !5374, i64 0}
!5374 = !{!"0000017C2E3B2270.w128.b0", !5375, i64 0}
!5375 = !{!"0000017C2E3B2270.w256.b0", !5376, i64 0}
!5376 = !{!"0000017C2E3B2270.w512.b0", !5377, i64 0}
!5377 = !{!"0000017C2E3B2270.w1024.b0", !5378, i64 0}
!5378 = !{!"0000017C2E3B2270", !21, i64 0}
!5379 = !{!5380, !5380, i64 0}
!5380 = !{!"0000017C2E3B2270.w4.b4", !5370, i64 0}
!5381 = !{!5382, !5382, i64 0}
!5382 = !{!"0000017C2E3B2270.w4.b8", !5383, i64 0}
!5383 = !{!"0000017C2E3B2270.w8.b8", !5371, i64 0}
!5384 = !{!5385, !5385, i64 0}
!5385 = !{!"0000017C2E3B45B0.w8.b0", !5386, i64 0}
!5386 = !{!"0000017C2E3B45B0.w16.b0", !5387, i64 0}
!5387 = !{!"0000017C2E3B45B0.w32.b0", !5388, i64 0}
!5388 = !{!"0000017C2E3B45B0.w64.b0", !5389, i64 0}
!5389 = !{!"0000017C2E3B45B0.w128.b0", !5390, i64 0}
!5390 = !{!"0000017C2E3B45B0.w256.b0", !5391, i64 0}
!5391 = !{!"0000017C2E3B45B0.w512.b0", !5392, i64 0}
!5392 = !{!"0000017C2E3B45B0.w1024.b0", !5393, i64 0}
!5393 = !{!"0000017C2E3B45B0", !21, i64 0}
!5394 = !{!5395, !5395, i64 0}
!5395 = !{!"0000017C2E3B45B0.w8.b8", !5386, i64 0}
!5396 = !{!5397, !5397, i64 0}
!5397 = !{!"0000017C2E3B45B0.w8.b16", !5398, i64 0}
!5398 = !{!"0000017C2E3B45B0.w16.b16", !5387, i64 0}
!5399 = !{!5400, !5400, i64 0}
!5400 = !{!"0000017C2E3B45B0.w8.b24", !5398, i64 0}
!5401 = !{!5402, !5402, i64 0}
!5402 = !{!"0000017C2E3B4330.w8.b8", !5403, i64 0}
!5403 = !{!"0000017C2E3B4330.w16.b0", !5404, i64 0}
!5404 = !{!"0000017C2E3B4330.w32.b0", !5405, i64 0}
!5405 = !{!"0000017C2E3B4330.w64.b0", !5406, i64 0}
!5406 = !{!"0000017C2E3B4330.w128.b0", !5407, i64 0}
!5407 = !{!"0000017C2E3B4330.w256.b0", !5408, i64 0}
!5408 = !{!"0000017C2E3B4330.w512.b0", !5409, i64 0}
!5409 = !{!"0000017C2E3B4330.w1024.b0", !5410, i64 0}
!5410 = !{!"0000017C2E3B4330", !21, i64 0}
!5411 = !{!5412, !5412, i64 0}
!5412 = !{!"0000017C2E3B4330.w8.b16", !5413, i64 0}
!5413 = !{!"0000017C2E3B4330.w16.b16", !5404, i64 0}
!5414 = !{!5415, !5415, i64 0}
!5415 = !{!"0000017C2E3B4330.w8.b24", !5413, i64 0}
!5416 = !{!5417, !5417, i64 0}
!5417 = !{!"0000017C2E3B60B0.w8.b0", !5418, i64 0}
!5418 = !{!"0000017C2E3B60B0.w16.b0", !5419, i64 0}
!5419 = !{!"0000017C2E3B60B0.w32.b0", !5420, i64 0}
!5420 = !{!"0000017C2E3B60B0.w64.b0", !5421, i64 0}
!5421 = !{!"0000017C2E3B60B0.w128.b0", !5422, i64 0}
!5422 = !{!"0000017C2E3B60B0.w256.b0", !5423, i64 0}
!5423 = !{!"0000017C2E3B60B0.w512.b0", !5424, i64 0}
!5424 = !{!"0000017C2E3B60B0.w1024.b0", !5425, i64 0}
!5425 = !{!"0000017C2E3B60B0", !21, i64 0}
!5426 = !{!5427, !5427, i64 0}
!5427 = !{!"0000017C2E3B60B0.w8.b8", !5418, i64 0}
!5428 = !{!5429, !5429, i64 0}
!5429 = !{!"0000017C2E3B60B0.w8.b16", !5430, i64 0}
!5430 = !{!"0000017C2E3B60B0.w16.b16", !5419, i64 0}
!5431 = !{!5432, !5432, i64 0}
!5432 = !{!"0000017C2E3B60B0.w8.b24", !5430, i64 0}
!5433 = !{!5434, !5434, i64 0}
!5434 = !{!"0000017C2E3B58F0.w8.b0", !5435, i64 0}
!5435 = !{!"0000017C2E3B58F0.w16.b0", !5436, i64 0}
!5436 = !{!"0000017C2E3B58F0.w32.b0", !5437, i64 0}
!5437 = !{!"0000017C2E3B58F0.w64.b0", !5438, i64 0}
!5438 = !{!"0000017C2E3B58F0.w128.b0", !5439, i64 0}
!5439 = !{!"0000017C2E3B58F0.w256.b0", !5440, i64 0}
!5440 = !{!"0000017C2E3B58F0.w512.b0", !5441, i64 0}
!5441 = !{!"0000017C2E3B58F0.w1024.b0", !5442, i64 0}
!5442 = !{!"0000017C2E3B58F0", !21, i64 0}
!5443 = !{!5444, !5444, i64 0}
!5444 = !{!"0000017C2E3B58F0.w8.b8", !5435, i64 0}
!5445 = !{!5446, !5446, i64 0}
!5446 = !{!"0000017C2E3B58F0.w8.b16", !5447, i64 0}
!5447 = !{!"0000017C2E3B58F0.w16.b16", !5436, i64 0}
!5448 = !{!5449, !5449, i64 0}
!5449 = !{!"0000017C2E3B58F0.w8.b24", !5447, i64 0}
!5450 = !{!5451, !5451, i64 0}
!5451 = !{!"0000017C2E3B5E30.w8.b0", !5452, i64 0}
!5452 = !{!"0000017C2E3B5E30.w16.b0", !5453, i64 0}
!5453 = !{!"0000017C2E3B5E30.w32.b0", !5454, i64 0}
!5454 = !{!"0000017C2E3B5E30.w64.b0", !5455, i64 0}
!5455 = !{!"0000017C2E3B5E30.w128.b0", !5456, i64 0}
!5456 = !{!"0000017C2E3B5E30.w256.b0", !5457, i64 0}
!5457 = !{!"0000017C2E3B5E30.w512.b0", !5458, i64 0}
!5458 = !{!"0000017C2E3B5E30.w1024.b0", !5459, i64 0}
!5459 = !{!"0000017C2E3B5E30", !21, i64 0}
!5460 = !{!5461, !5461, i64 0}
!5461 = !{!"0000017C2E3B5E30.w8.b8", !5452, i64 0}
!5462 = !{!5463, !5463, i64 0}
!5463 = !{!"0000017C2E3B5E30.w8.b16", !5464, i64 0}
!5464 = !{!"0000017C2E3B5E30.w16.b16", !5453, i64 0}
!5465 = !{!5466, !5466, i64 0}
!5466 = !{!"0000017C2E3B5E30.w8.b24", !5464, i64 0}
!5467 = !{!5468, !5468, i64 0}
!5468 = !{!"0000017C2E3B7030.w8.b8", !5469, i64 0}
!5469 = !{!"0000017C2E3B7030.w16.b0", !5470, i64 0}
!5470 = !{!"0000017C2E3B7030.w32.b0", !5471, i64 0}
!5471 = !{!"0000017C2E3B7030.w64.b0", !5472, i64 0}
!5472 = !{!"0000017C2E3B7030.w128.b0", !5473, i64 0}
!5473 = !{!"0000017C2E3B7030.w256.b0", !5474, i64 0}
!5474 = !{!"0000017C2E3B7030.w512.b0", !5475, i64 0}
!5475 = !{!"0000017C2E3B7030.w1024.b0", !5476, i64 0}
!5476 = !{!"0000017C2E3B7030", !21, i64 0}
!5477 = !{!5478, !5478, i64 0}
!5478 = !{!"0000017C2E3B7030.w8.b16", !5479, i64 0}
!5479 = !{!"0000017C2E3B7030.w16.b16", !5470, i64 0}
!5480 = !{!5481, !5481, i64 0}
!5481 = !{!"0000017C2E3B7030.w8.b24", !5479, i64 0}
!5482 = !{!5483, !5483, i64 0}
!5483 = !{!"0000017C2E4AB9B0.w4.b0", !5484, i64 0}
!5484 = !{!"0000017C2E4AB9B0.w8.b0", !5485, i64 0}
!5485 = !{!"0000017C2E4AB9B0.w16.b0", !5486, i64 0}
!5486 = !{!"0000017C2E4AB9B0.w32.b0", !5487, i64 0}
!5487 = !{!"0000017C2E4AB9B0.w64.b0", !5488, i64 0}
!5488 = !{!"0000017C2E4AB9B0.w128.b0", !5489, i64 0}
!5489 = !{!"0000017C2E4AB9B0.w256.b0", !5490, i64 0}
!5490 = !{!"0000017C2E4AB9B0.w512.b0", !5491, i64 0}
!5491 = !{!"0000017C2E4AB9B0.w1024.b0", !5492, i64 0}
!5492 = !{!"0000017C2E4AB9B0", !21, i64 0}
!5493 = !{!5494, !5494, i64 0}
!5494 = !{!"0000017C2E4AB9B0.w4.b4", !5484, i64 0}
!5495 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5496)
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502}
!5497 = !DILocalVariable(name: "arg1", arg: 1, scope: !5495, file: !1, type: !8)
!5498 = !DILocalVariable(name: "arg2", arg: 2, scope: !5495, file: !1, type: !9)
!5499 = !DILocalVariable(name: "arg3", arg: 3, scope: !5495, file: !1, type: !7)
!5500 = !DILocalVariable(name: "arg4", arg: 4, scope: !5495, file: !1, type: !8)
!5501 = !DILocalVariable(name: "arg5", arg: 5, scope: !5495, file: !1, type: !9)
!5502 = !DILocalVariable(name: "arg6", arg: 6, scope: !5495, file: !1, type: !8)
!5503 = !DILocation(line: 0, scope: !5495)
!5504 = !{!5505, !5505, i64 0}
!5505 = !{!"0000017C2E4FDE70.w4.b0", !5506, i64 0}
!5506 = !{!"0000017C2E4FDE70.w8.b0", !5507, i64 0}
!5507 = !{!"0000017C2E4FDE70.w16.b0", !5508, i64 0}
!5508 = !{!"0000017C2E4FDE70.w32.b0", !5509, i64 0}
!5509 = !{!"0000017C2E4FDE70.w64.b0", !5510, i64 0}
!5510 = !{!"0000017C2E4FDE70.w128.b0", !5511, i64 0}
!5511 = !{!"0000017C2E4FDE70.w256.b0", !5512, i64 0}
!5512 = !{!"0000017C2E4FDE70.w512.b0", !5513, i64 0}
!5513 = !{!"0000017C2E4FDE70.w1024.b0", !5514, i64 0}
!5514 = !{!"0000017C2E4FDE70", !21, i64 0}
!5515 = !{!5516, !5516, i64 0}
!5516 = !{!"0000017C2E4FDE70.w4.b4", !5506, i64 0}
!5517 = !{!5518, !5518, i64 0}
!5518 = !{!"0000017C2E4FDE70.w4.b8", !5519, i64 0}
!5519 = !{!"0000017C2E4FDE70.w8.b8", !5507, i64 0}
!5520 = !{!5521, !5521, i64 0}
!5521 = !{!"0000017C2E5033F0.w8.b0", !5522, i64 0}
!5522 = !{!"0000017C2E5033F0.w16.b0", !5523, i64 0}
!5523 = !{!"0000017C2E5033F0.w32.b0", !5524, i64 0}
!5524 = !{!"0000017C2E5033F0.w64.b0", !5525, i64 0}
!5525 = !{!"0000017C2E5033F0.w128.b0", !5526, i64 0}
!5526 = !{!"0000017C2E5033F0.w256.b0", !5527, i64 0}
!5527 = !{!"0000017C2E5033F0.w512.b0", !5528, i64 0}
!5528 = !{!"0000017C2E5033F0.w1024.b0", !5529, i64 0}
!5529 = !{!"0000017C2E5033F0", !21, i64 0}
!5530 = !{!5531, !5531, i64 0}
!5531 = !{!"0000017C2E5033F0.w8.b8", !5522, i64 0}
!5532 = !{!5533, !5533, i64 0}
!5533 = !{!"0000017C2E5033F0.w8.b16", !5534, i64 0}
!5534 = !{!"0000017C2E5033F0.w16.b16", !5523, i64 0}
!5535 = !{!5536, !5536, i64 0}
!5536 = !{!"0000017C2E5033F0.w8.b24", !5534, i64 0}
!5537 = !{!5538, !5538, i64 0}
!5538 = !{!"0000017C2E5039F0.w8.b8", !5539, i64 0}
!5539 = !{!"0000017C2E5039F0.w16.b0", !5540, i64 0}
!5540 = !{!"0000017C2E5039F0.w32.b0", !5541, i64 0}
!5541 = !{!"0000017C2E5039F0.w64.b0", !5542, i64 0}
!5542 = !{!"0000017C2E5039F0.w128.b0", !5543, i64 0}
!5543 = !{!"0000017C2E5039F0.w256.b0", !5544, i64 0}
!5544 = !{!"0000017C2E5039F0.w512.b0", !5545, i64 0}
!5545 = !{!"0000017C2E5039F0.w1024.b0", !5546, i64 0}
!5546 = !{!"0000017C2E5039F0", !21, i64 0}
!5547 = !{!5548, !5548, i64 0}
!5548 = !{!"0000017C2E5039F0.w8.b16", !5549, i64 0}
!5549 = !{!"0000017C2E5039F0.w16.b16", !5540, i64 0}
!5550 = !{!5551, !5551, i64 0}
!5551 = !{!"0000017C2E5039F0.w8.b24", !5549, i64 0}
!5552 = !{!5553, !5553, i64 0}
!5553 = !{!"0000017C2E504970.w8.b0", !5554, i64 0}
!5554 = !{!"0000017C2E504970.w16.b0", !5555, i64 0}
!5555 = !{!"0000017C2E504970.w32.b0", !5556, i64 0}
!5556 = !{!"0000017C2E504970.w64.b0", !5557, i64 0}
!5557 = !{!"0000017C2E504970.w128.b0", !5558, i64 0}
!5558 = !{!"0000017C2E504970.w256.b0", !5559, i64 0}
!5559 = !{!"0000017C2E504970.w512.b0", !5560, i64 0}
!5560 = !{!"0000017C2E504970.w1024.b0", !5561, i64 0}
!5561 = !{!"0000017C2E504970", !21, i64 0}
!5562 = !{!5563, !5563, i64 0}
!5563 = !{!"0000017C2E504970.w8.b8", !5554, i64 0}
!5564 = !{!5565, !5565, i64 0}
!5565 = !{!"0000017C2E504970.w8.b16", !5566, i64 0}
!5566 = !{!"0000017C2E504970.w16.b16", !5555, i64 0}
!5567 = !{!5568, !5568, i64 0}
!5568 = !{!"0000017C2E504970.w8.b24", !5566, i64 0}
!5569 = !{!5570, !5570, i64 0}
!5570 = !{!"0000017C2E504170.w8.b0", !5571, i64 0}
!5571 = !{!"0000017C2E504170.w16.b0", !5572, i64 0}
!5572 = !{!"0000017C2E504170.w32.b0", !5573, i64 0}
!5573 = !{!"0000017C2E504170.w64.b0", !5574, i64 0}
!5574 = !{!"0000017C2E504170.w128.b0", !5575, i64 0}
!5575 = !{!"0000017C2E504170.w256.b0", !5576, i64 0}
!5576 = !{!"0000017C2E504170.w512.b0", !5577, i64 0}
!5577 = !{!"0000017C2E504170.w1024.b0", !5578, i64 0}
!5578 = !{!"0000017C2E504170", !21, i64 0}
!5579 = !{!5580, !5580, i64 0}
!5580 = !{!"0000017C2E504170.w8.b8", !5571, i64 0}
!5581 = !{!5582, !5582, i64 0}
!5582 = !{!"0000017C2E5051B0.w8.b0", !5583, i64 0}
!5583 = !{!"0000017C2E5051B0.w16.b0", !5584, i64 0}
!5584 = !{!"0000017C2E5051B0.w32.b0", !5585, i64 0}
!5585 = !{!"0000017C2E5051B0.w64.b0", !5586, i64 0}
!5586 = !{!"0000017C2E5051B0.w128.b0", !5587, i64 0}
!5587 = !{!"0000017C2E5051B0.w256.b0", !5588, i64 0}
!5588 = !{!"0000017C2E5051B0.w512.b0", !5589, i64 0}
!5589 = !{!"0000017C2E5051B0.w1024.b0", !5590, i64 0}
!5590 = !{!"0000017C2E5051B0", !21, i64 0}
!5591 = !{!5592, !5592, i64 0}
!5592 = !{!"0000017C2E5051B0.w8.b8", !5583, i64 0}
!5593 = !{!5594, !5594, i64 0}
!5594 = !{!"0000017C2E5051B0.w8.b16", !5595, i64 0}
!5595 = !{!"0000017C2E5051B0.w16.b16", !5584, i64 0}
!5596 = !{!5597, !5597, i64 0}
!5597 = !{!"0000017C2E5051B0.w8.b24", !5595, i64 0}
!5598 = !{!5599, !5599, i64 0}
!5599 = !{!"0000017C2E506030.w8.b8", !5600, i64 0}
!5600 = !{!"0000017C2E506030.w16.b0", !5601, i64 0}
!5601 = !{!"0000017C2E506030.w32.b0", !5602, i64 0}
!5602 = !{!"0000017C2E506030.w64.b0", !5603, i64 0}
!5603 = !{!"0000017C2E506030.w128.b0", !5604, i64 0}
!5604 = !{!"0000017C2E506030.w256.b0", !5605, i64 0}
!5605 = !{!"0000017C2E506030.w512.b0", !5606, i64 0}
!5606 = !{!"0000017C2E506030.w1024.b0", !5607, i64 0}
!5607 = !{!"0000017C2E506030", !21, i64 0}
!5608 = !{!5609, !5609, i64 0}
!5609 = !{!"0000017C2E506030.w8.b16", !5610, i64 0}
!5610 = !{!"0000017C2E506030.w16.b16", !5601, i64 0}
!5611 = !{!5612, !5612, i64 0}
!5612 = !{!"0000017C2E506030.w8.b24", !5610, i64 0}
!5613 = !{!5614, !5614, i64 0}
!5614 = !{!"0000017C2E60F1F0.w4.b0", !5615, i64 0}
!5615 = !{!"0000017C2E60F1F0.w8.b0", !5616, i64 0}
!5616 = !{!"0000017C2E60F1F0.w16.b0", !5617, i64 0}
!5617 = !{!"0000017C2E60F1F0.w32.b0", !5618, i64 0}
!5618 = !{!"0000017C2E60F1F0.w64.b0", !5619, i64 0}
!5619 = !{!"0000017C2E60F1F0.w128.b0", !5620, i64 0}
!5620 = !{!"0000017C2E60F1F0.w256.b0", !5621, i64 0}
!5621 = !{!"0000017C2E60F1F0.w512.b0", !5622, i64 0}
!5622 = !{!"0000017C2E60F1F0.w1024.b0", !5623, i64 0}
!5623 = !{!"0000017C2E60F1F0", !21, i64 0}
!5624 = !{!5625, !5625, i64 0}
!5625 = !{!"0000017C2E60F1F0.w4.b4", !5615, i64 0}
!5626 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5627)
!5627 = !{!5628, !5629, !5630, !5631, !5632, !5633}
!5628 = !DILocalVariable(name: "arg1", arg: 1, scope: !5626, file: !1, type: !8)
!5629 = !DILocalVariable(name: "arg2", arg: 2, scope: !5626, file: !1, type: !9)
!5630 = !DILocalVariable(name: "arg3", arg: 3, scope: !5626, file: !1, type: !7)
!5631 = !DILocalVariable(name: "arg4", arg: 4, scope: !5626, file: !1, type: !8)
!5632 = !DILocalVariable(name: "arg5", arg: 5, scope: !5626, file: !1, type: !9)
!5633 = !DILocalVariable(name: "arg6", arg: 6, scope: !5626, file: !1, type: !8)
!5634 = !DILocation(line: 0, scope: !5626)
!5635 = !{!5636, !5636, i64 0}
!5636 = !{!"0000017C2E4A1230.w4.b0", !5637, i64 0}
!5637 = !{!"0000017C2E4A1230.w8.b0", !5638, i64 0}
!5638 = !{!"0000017C2E4A1230.w16.b0", !5639, i64 0}
!5639 = !{!"0000017C2E4A1230.w32.b0", !5640, i64 0}
!5640 = !{!"0000017C2E4A1230.w64.b0", !5641, i64 0}
!5641 = !{!"0000017C2E4A1230.w128.b0", !5642, i64 0}
!5642 = !{!"0000017C2E4A1230.w256.b0", !5643, i64 0}
!5643 = !{!"0000017C2E4A1230.w512.b0", !5644, i64 0}
!5644 = !{!"0000017C2E4A1230.w1024.b0", !5645, i64 0}
!5645 = !{!"0000017C2E4A1230", !21, i64 0}
!5646 = !{!5647, !5647, i64 0}
!5647 = !{!"0000017C2E4A1230.w4.b4", !5637, i64 0}
!5648 = !{!5649, !5649, i64 0}
!5649 = !{!"0000017C2E4A1230.w4.b8", !5650, i64 0}
!5650 = !{!"0000017C2E4A1230.w8.b8", !5638, i64 0}
!5651 = !{!5652, !5652, i64 0}
!5652 = !{!"0000017C2E4A64B0.w8.b0", !5653, i64 0}
!5653 = !{!"0000017C2E4A64B0.w16.b0", !5654, i64 0}
!5654 = !{!"0000017C2E4A64B0.w32.b0", !5655, i64 0}
!5655 = !{!"0000017C2E4A64B0.w64.b0", !5656, i64 0}
!5656 = !{!"0000017C2E4A64B0.w128.b0", !5657, i64 0}
!5657 = !{!"0000017C2E4A64B0.w256.b0", !5658, i64 0}
!5658 = !{!"0000017C2E4A64B0.w512.b0", !5659, i64 0}
!5659 = !{!"0000017C2E4A64B0.w1024.b0", !5660, i64 0}
!5660 = !{!"0000017C2E4A64B0", !21, i64 0}
!5661 = !{!5662, !5662, i64 0}
!5662 = !{!"0000017C2E4A64B0.w8.b8", !5653, i64 0}
!5663 = !{!5664, !5664, i64 0}
!5664 = !{!"0000017C2E4A64B0.w8.b16", !5665, i64 0}
!5665 = !{!"0000017C2E4A64B0.w16.b16", !5654, i64 0}
!5666 = !{!5667, !5667, i64 0}
!5667 = !{!"0000017C2E4A64B0.w8.b24", !5665, i64 0}
!5668 = !{!5669, !5669, i64 0}
!5669 = !{!"0000017C2E4A7CF0.w8.b8", !5670, i64 0}
!5670 = !{!"0000017C2E4A7CF0.w16.b0", !5671, i64 0}
!5671 = !{!"0000017C2E4A7CF0.w32.b0", !5672, i64 0}
!5672 = !{!"0000017C2E4A7CF0.w64.b0", !5673, i64 0}
!5673 = !{!"0000017C2E4A7CF0.w128.b0", !5674, i64 0}
!5674 = !{!"0000017C2E4A7CF0.w256.b0", !5675, i64 0}
!5675 = !{!"0000017C2E4A7CF0.w512.b0", !5676, i64 0}
!5676 = !{!"0000017C2E4A7CF0.w1024.b0", !5677, i64 0}
!5677 = !{!"0000017C2E4A7CF0", !21, i64 0}
!5678 = !{!5679, !5679, i64 0}
!5679 = !{!"0000017C2E4A7CF0.w8.b16", !5680, i64 0}
!5680 = !{!"0000017C2E4A7CF0.w16.b16", !5671, i64 0}
!5681 = !{!5682, !5682, i64 0}
!5682 = !{!"0000017C2E4A7CF0.w8.b24", !5680, i64 0}
!5683 = !{!5684, !5684, i64 0}
!5684 = !{!"0000017C2E4A9070.w8.b0", !5685, i64 0}
!5685 = !{!"0000017C2E4A9070.w16.b0", !5686, i64 0}
!5686 = !{!"0000017C2E4A9070.w32.b0", !5687, i64 0}
!5687 = !{!"0000017C2E4A9070.w64.b0", !5688, i64 0}
!5688 = !{!"0000017C2E4A9070.w128.b0", !5689, i64 0}
!5689 = !{!"0000017C2E4A9070.w256.b0", !5690, i64 0}
!5690 = !{!"0000017C2E4A9070.w512.b0", !5691, i64 0}
!5691 = !{!"0000017C2E4A9070.w1024.b0", !5692, i64 0}
!5692 = !{!"0000017C2E4A9070", !21, i64 0}
!5693 = !{!5694, !5694, i64 0}
!5694 = !{!"0000017C2E4A9070.w8.b8", !5685, i64 0}
!5695 = !{!5696, !5696, i64 0}
!5696 = !{!"0000017C2E4A9070.w8.b16", !5697, i64 0}
!5697 = !{!"0000017C2E4A9070.w16.b16", !5686, i64 0}
!5698 = !{!5699, !5699, i64 0}
!5699 = !{!"0000017C2E4A9070.w8.b24", !5697, i64 0}
!5700 = !{!5701, !5701, i64 0}
!5701 = !{!"0000017C2E4A8C30.w8.b0", !5702, i64 0}
!5702 = !{!"0000017C2E4A8C30.w16.b0", !5703, i64 0}
!5703 = !{!"0000017C2E4A8C30.w32.b0", !5704, i64 0}
!5704 = !{!"0000017C2E4A8C30.w64.b0", !5705, i64 0}
!5705 = !{!"0000017C2E4A8C30.w128.b0", !5706, i64 0}
!5706 = !{!"0000017C2E4A8C30.w256.b0", !5707, i64 0}
!5707 = !{!"0000017C2E4A8C30.w512.b0", !5708, i64 0}
!5708 = !{!"0000017C2E4A8C30.w1024.b0", !5709, i64 0}
!5709 = !{!"0000017C2E4A8C30", !21, i64 0}
!5710 = !{!5711, !5711, i64 0}
!5711 = !{!"0000017C2E4A8C30.w8.b8", !5702, i64 0}
!5712 = !{!5713, !5713, i64 0}
!5713 = !{!"0000017C2E4A9DB0.w8.b0", !5714, i64 0}
!5714 = !{!"0000017C2E4A9DB0.w16.b0", !5715, i64 0}
!5715 = !{!"0000017C2E4A9DB0.w32.b0", !5716, i64 0}
!5716 = !{!"0000017C2E4A9DB0.w64.b0", !5717, i64 0}
!5717 = !{!"0000017C2E4A9DB0.w128.b0", !5718, i64 0}
!5718 = !{!"0000017C2E4A9DB0.w256.b0", !5719, i64 0}
!5719 = !{!"0000017C2E4A9DB0.w512.b0", !5720, i64 0}
!5720 = !{!"0000017C2E4A9DB0.w1024.b0", !5721, i64 0}
!5721 = !{!"0000017C2E4A9DB0", !21, i64 0}
!5722 = !{!5723, !5723, i64 0}
!5723 = !{!"0000017C2E4A9DB0.w8.b8", !5714, i64 0}
!5724 = !{!5725, !5725, i64 0}
!5725 = !{!"0000017C2E4A9DB0.w8.b16", !5726, i64 0}
!5726 = !{!"0000017C2E4A9DB0.w16.b16", !5715, i64 0}
!5727 = !{!5728, !5728, i64 0}
!5728 = !{!"0000017C2E4A9DB0.w8.b24", !5726, i64 0}
!5729 = !{!5730, !5730, i64 0}
!5730 = !{!"0000017C2E4A96F0.w8.b8", !5731, i64 0}
!5731 = !{!"0000017C2E4A96F0.w16.b0", !5732, i64 0}
!5732 = !{!"0000017C2E4A96F0.w32.b0", !5733, i64 0}
!5733 = !{!"0000017C2E4A96F0.w64.b0", !5734, i64 0}
!5734 = !{!"0000017C2E4A96F0.w128.b0", !5735, i64 0}
!5735 = !{!"0000017C2E4A96F0.w256.b0", !5736, i64 0}
!5736 = !{!"0000017C2E4A96F0.w512.b0", !5737, i64 0}
!5737 = !{!"0000017C2E4A96F0.w1024.b0", !5738, i64 0}
!5738 = !{!"0000017C2E4A96F0", !21, i64 0}
!5739 = !{!5740, !5740, i64 0}
!5740 = !{!"0000017C2E4A96F0.w8.b16", !5741, i64 0}
!5741 = !{!"0000017C2E4A96F0.w16.b16", !5732, i64 0}
!5742 = !{!5743, !5743, i64 0}
!5743 = !{!"0000017C2E4A96F0.w8.b24", !5741, i64 0}
!5744 = !{!5745, !5745, i64 0}
!5745 = !{!"0000017C2E603530.w4.b0", !5746, i64 0}
!5746 = !{!"0000017C2E603530.w8.b0", !5747, i64 0}
!5747 = !{!"0000017C2E603530.w16.b0", !5748, i64 0}
!5748 = !{!"0000017C2E603530.w32.b0", !5749, i64 0}
!5749 = !{!"0000017C2E603530.w64.b0", !5750, i64 0}
!5750 = !{!"0000017C2E603530.w128.b0", !5751, i64 0}
!5751 = !{!"0000017C2E603530.w256.b0", !5752, i64 0}
!5752 = !{!"0000017C2E603530.w512.b0", !5753, i64 0}
!5753 = !{!"0000017C2E603530.w1024.b0", !5754, i64 0}
!5754 = !{!"0000017C2E603530", !21, i64 0}
!5755 = !{!5756, !5756, i64 0}
!5756 = !{!"0000017C2E603530.w4.b4", !5746, i64 0}
!5757 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5758)
!5758 = !{!5759, !5760, !5761, !5762, !5763, !5764}
!5759 = !DILocalVariable(name: "arg1", arg: 1, scope: !5757, file: !1, type: !8)
!5760 = !DILocalVariable(name: "arg2", arg: 2, scope: !5757, file: !1, type: !9)
!5761 = !DILocalVariable(name: "arg3", arg: 3, scope: !5757, file: !1, type: !7)
!5762 = !DILocalVariable(name: "arg4", arg: 4, scope: !5757, file: !1, type: !8)
!5763 = !DILocalVariable(name: "arg5", arg: 5, scope: !5757, file: !1, type: !9)
!5764 = !DILocalVariable(name: "arg6", arg: 6, scope: !5757, file: !1, type: !8)
!5765 = !DILocation(line: 0, scope: !5757)
!5766 = !{!5767, !5767, i64 0}
!5767 = !{!"0000017C2E350570.w4.b0", !5768, i64 0}
!5768 = !{!"0000017C2E350570.w8.b0", !5769, i64 0}
!5769 = !{!"0000017C2E350570.w16.b0", !5770, i64 0}
!5770 = !{!"0000017C2E350570.w32.b0", !5771, i64 0}
!5771 = !{!"0000017C2E350570.w64.b0", !5772, i64 0}
!5772 = !{!"0000017C2E350570.w128.b0", !5773, i64 0}
!5773 = !{!"0000017C2E350570.w256.b0", !5774, i64 0}
!5774 = !{!"0000017C2E350570.w512.b0", !5775, i64 0}
!5775 = !{!"0000017C2E350570.w1024.b0", !5776, i64 0}
!5776 = !{!"0000017C2E350570", !21, i64 0}
!5777 = !{!5778, !5778, i64 0}
!5778 = !{!"0000017C2E350570.w4.b4", !5768, i64 0}
!5779 = !{!5780, !5780, i64 0}
!5780 = !{!"0000017C2E350570.w4.b8", !5781, i64 0}
!5781 = !{!"0000017C2E350570.w8.b8", !5769, i64 0}
!5782 = !{!5783, !5783, i64 0}
!5783 = !{!"0000017C2E3593F0.w8.b0", !5784, i64 0}
!5784 = !{!"0000017C2E3593F0.w16.b0", !5785, i64 0}
!5785 = !{!"0000017C2E3593F0.w32.b0", !5786, i64 0}
!5786 = !{!"0000017C2E3593F0.w64.b0", !5787, i64 0}
!5787 = !{!"0000017C2E3593F0.w128.b0", !5788, i64 0}
!5788 = !{!"0000017C2E3593F0.w256.b0", !5789, i64 0}
!5789 = !{!"0000017C2E3593F0.w512.b0", !5790, i64 0}
!5790 = !{!"0000017C2E3593F0.w1024.b0", !5791, i64 0}
!5791 = !{!"0000017C2E3593F0", !21, i64 0}
!5792 = !{!5793, !5793, i64 0}
!5793 = !{!"0000017C2E3593F0.w8.b8", !5784, i64 0}
!5794 = !{!5795, !5795, i64 0}
!5795 = !{!"0000017C2E3593F0.w8.b16", !5796, i64 0}
!5796 = !{!"0000017C2E3593F0.w16.b16", !5785, i64 0}
!5797 = !{!5798, !5798, i64 0}
!5798 = !{!"0000017C2E3593F0.w8.b24", !5796, i64 0}
!5799 = !{!5800, !5800, i64 0}
!5800 = !{!"0000017C2E359170.w8.b8", !5801, i64 0}
!5801 = !{!"0000017C2E359170.w16.b0", !5802, i64 0}
!5802 = !{!"0000017C2E359170.w32.b0", !5803, i64 0}
!5803 = !{!"0000017C2E359170.w64.b0", !5804, i64 0}
!5804 = !{!"0000017C2E359170.w128.b0", !5805, i64 0}
!5805 = !{!"0000017C2E359170.w256.b0", !5806, i64 0}
!5806 = !{!"0000017C2E359170.w512.b0", !5807, i64 0}
!5807 = !{!"0000017C2E359170.w1024.b0", !5808, i64 0}
!5808 = !{!"0000017C2E359170", !21, i64 0}
!5809 = !{!5810, !5810, i64 0}
!5810 = !{!"0000017C2E359170.w8.b16", !5811, i64 0}
!5811 = !{!"0000017C2E359170.w16.b16", !5802, i64 0}
!5812 = !{!5813, !5813, i64 0}
!5813 = !{!"0000017C2E359170.w8.b24", !5811, i64 0}
!5814 = !{!5815, !5815, i64 0}
!5815 = !{!"0000017C2E359B70.w8.b0", !5816, i64 0}
!5816 = !{!"0000017C2E359B70.w16.b0", !5817, i64 0}
!5817 = !{!"0000017C2E359B70.w32.b0", !5818, i64 0}
!5818 = !{!"0000017C2E359B70.w64.b0", !5819, i64 0}
!5819 = !{!"0000017C2E359B70.w128.b0", !5820, i64 0}
!5820 = !{!"0000017C2E359B70.w256.b0", !5821, i64 0}
!5821 = !{!"0000017C2E359B70.w512.b0", !5822, i64 0}
!5822 = !{!"0000017C2E359B70.w1024.b0", !5823, i64 0}
!5823 = !{!"0000017C2E359B70", !21, i64 0}
!5824 = !{!5825, !5825, i64 0}
!5825 = !{!"0000017C2E359B70.w8.b8", !5816, i64 0}
!5826 = !{!5827, !5827, i64 0}
!5827 = !{!"0000017C2E359B70.w8.b16", !5828, i64 0}
!5828 = !{!"0000017C2E359B70.w16.b16", !5817, i64 0}
!5829 = !{!5830, !5830, i64 0}
!5830 = !{!"0000017C2E359B70.w8.b24", !5828, i64 0}
!5831 = !{!5832, !5832, i64 0}
!5832 = !{!"0000017C2E35A470.w8.b0", !5833, i64 0}
!5833 = !{!"0000017C2E35A470.w16.b0", !5834, i64 0}
!5834 = !{!"0000017C2E35A470.w32.b0", !5835, i64 0}
!5835 = !{!"0000017C2E35A470.w64.b0", !5836, i64 0}
!5836 = !{!"0000017C2E35A470.w128.b0", !5837, i64 0}
!5837 = !{!"0000017C2E35A470.w256.b0", !5838, i64 0}
!5838 = !{!"0000017C2E35A470.w512.b0", !5839, i64 0}
!5839 = !{!"0000017C2E35A470.w1024.b0", !5840, i64 0}
!5840 = !{!"0000017C2E35A470", !21, i64 0}
!5841 = !{!5842, !5842, i64 0}
!5842 = !{!"0000017C2E35A470.w8.b8", !5833, i64 0}
!5843 = !{!5844, !5844, i64 0}
!5844 = !{!"0000017C2E35AE70.w8.b0", !5845, i64 0}
!5845 = !{!"0000017C2E35AE70.w16.b0", !5846, i64 0}
!5846 = !{!"0000017C2E35AE70.w32.b0", !5847, i64 0}
!5847 = !{!"0000017C2E35AE70.w64.b0", !5848, i64 0}
!5848 = !{!"0000017C2E35AE70.w128.b0", !5849, i64 0}
!5849 = !{!"0000017C2E35AE70.w256.b0", !5850, i64 0}
!5850 = !{!"0000017C2E35AE70.w512.b0", !5851, i64 0}
!5851 = !{!"0000017C2E35AE70.w1024.b0", !5852, i64 0}
!5852 = !{!"0000017C2E35AE70", !21, i64 0}
!5853 = !{!5854, !5854, i64 0}
!5854 = !{!"0000017C2E35AE70.w8.b8", !5845, i64 0}
!5855 = !{!5856, !5856, i64 0}
!5856 = !{!"0000017C2E35AE70.w8.b16", !5857, i64 0}
!5857 = !{!"0000017C2E35AE70.w16.b16", !5846, i64 0}
!5858 = !{!5859, !5859, i64 0}
!5859 = !{!"0000017C2E35AE70.w8.b24", !5857, i64 0}
!5860 = !{!5861, !5861, i64 0}
!5861 = !{!"0000017C2E35AB70.w8.b8", !5862, i64 0}
!5862 = !{!"0000017C2E35AB70.w16.b0", !5863, i64 0}
!5863 = !{!"0000017C2E35AB70.w32.b0", !5864, i64 0}
!5864 = !{!"0000017C2E35AB70.w64.b0", !5865, i64 0}
!5865 = !{!"0000017C2E35AB70.w128.b0", !5866, i64 0}
!5866 = !{!"0000017C2E35AB70.w256.b0", !5867, i64 0}
!5867 = !{!"0000017C2E35AB70.w512.b0", !5868, i64 0}
!5868 = !{!"0000017C2E35AB70.w1024.b0", !5869, i64 0}
!5869 = !{!"0000017C2E35AB70", !21, i64 0}
!5870 = !{!5871, !5871, i64 0}
!5871 = !{!"0000017C2E35AB70.w8.b16", !5872, i64 0}
!5872 = !{!"0000017C2E35AB70.w16.b16", !5863, i64 0}
!5873 = !{!5874, !5874, i64 0}
!5874 = !{!"0000017C2E35AB70.w8.b24", !5872, i64 0}
!5875 = !{!5876, !5876, i64 0}
!5876 = !{!"0000017C22BF7C60.w4.b0", !5877, i64 0}
!5877 = !{!"0000017C22BF7C60.w8.b0", !5878, i64 0}
!5878 = !{!"0000017C22BF7C60.w16.b0", !5879, i64 0}
!5879 = !{!"0000017C22BF7C60.w32.b0", !5880, i64 0}
!5880 = !{!"0000017C22BF7C60.w64.b0", !5881, i64 0}
!5881 = !{!"0000017C22BF7C60.w128.b0", !5882, i64 0}
!5882 = !{!"0000017C22BF7C60.w256.b0", !5883, i64 0}
!5883 = !{!"0000017C22BF7C60.w512.b0", !5884, i64 0}
!5884 = !{!"0000017C22BF7C60.w1024.b0", !5885, i64 0}
!5885 = !{!"0000017C22BF7C60", !21, i64 0}
!5886 = !{!5887, !5887, i64 0}
!5887 = !{!"0000017C22BF7C60.w4.b4", !5877, i64 0}
!5888 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5889)
!5889 = !{!5890, !5891, !5892, !5893, !5894, !5895}
!5890 = !DILocalVariable(name: "arg1", arg: 1, scope: !5888, file: !1, type: !8)
!5891 = !DILocalVariable(name: "arg2", arg: 2, scope: !5888, file: !1, type: !9)
!5892 = !DILocalVariable(name: "arg3", arg: 3, scope: !5888, file: !1, type: !7)
!5893 = !DILocalVariable(name: "arg4", arg: 4, scope: !5888, file: !1, type: !8)
!5894 = !DILocalVariable(name: "arg5", arg: 5, scope: !5888, file: !1, type: !9)
!5895 = !DILocalVariable(name: "arg6", arg: 6, scope: !5888, file: !1, type: !8)
!5896 = !DILocation(line: 0, scope: !5888)
!5897 = !{!5898, !5898, i64 0}
!5898 = !{!"0000017C2E357730.w4.b0", !5899, i64 0}
!5899 = !{!"0000017C2E357730.w8.b0", !5900, i64 0}
!5900 = !{!"0000017C2E357730.w16.b0", !5901, i64 0}
!5901 = !{!"0000017C2E357730.w32.b0", !5902, i64 0}
!5902 = !{!"0000017C2E357730.w64.b0", !5903, i64 0}
!5903 = !{!"0000017C2E357730.w128.b0", !5904, i64 0}
!5904 = !{!"0000017C2E357730.w256.b0", !5905, i64 0}
!5905 = !{!"0000017C2E357730.w512.b0", !5906, i64 0}
!5906 = !{!"0000017C2E357730.w1024.b0", !5907, i64 0}
!5907 = !{!"0000017C2E357730", !21, i64 0}
!5908 = !{!5909, !5909, i64 0}
!5909 = !{!"0000017C2E357730.w4.b4", !5899, i64 0}
!5910 = !{!5911, !5911, i64 0}
!5911 = !{!"0000017C2E357730.w4.b8", !5912, i64 0}
!5912 = !{!"0000017C2E357730.w8.b8", !5900, i64 0}
!5913 = !{!5914, !5914, i64 0}
!5914 = !{!"0000017C2E35C970.w8.b0", !5915, i64 0}
!5915 = !{!"0000017C2E35C970.w16.b0", !5916, i64 0}
!5916 = !{!"0000017C2E35C970.w32.b0", !5917, i64 0}
!5917 = !{!"0000017C2E35C970.w64.b0", !5918, i64 0}
!5918 = !{!"0000017C2E35C970.w128.b0", !5919, i64 0}
!5919 = !{!"0000017C2E35C970.w256.b0", !5920, i64 0}
!5920 = !{!"0000017C2E35C970.w512.b0", !5921, i64 0}
!5921 = !{!"0000017C2E35C970.w1024.b0", !5922, i64 0}
!5922 = !{!"0000017C2E35C970", !21, i64 0}
!5923 = !{!5924, !5924, i64 0}
!5924 = !{!"0000017C2E35C970.w8.b8", !5915, i64 0}
!5925 = !{!5926, !5926, i64 0}
!5926 = !{!"0000017C2E35C970.w8.b16", !5927, i64 0}
!5927 = !{!"0000017C2E35C970.w16.b16", !5916, i64 0}
!5928 = !{!5929, !5929, i64 0}
!5929 = !{!"0000017C2E35C970.w8.b24", !5927, i64 0}
!5930 = !{!5931, !5931, i64 0}
!5931 = !{!"0000017C2E35CF70.w8.b8", !5932, i64 0}
!5932 = !{!"0000017C2E35CF70.w16.b0", !5933, i64 0}
!5933 = !{!"0000017C2E35CF70.w32.b0", !5934, i64 0}
!5934 = !{!"0000017C2E35CF70.w64.b0", !5935, i64 0}
!5935 = !{!"0000017C2E35CF70.w128.b0", !5936, i64 0}
!5936 = !{!"0000017C2E35CF70.w256.b0", !5937, i64 0}
!5937 = !{!"0000017C2E35CF70.w512.b0", !5938, i64 0}
!5938 = !{!"0000017C2E35CF70.w1024.b0", !5939, i64 0}
!5939 = !{!"0000017C2E35CF70", !21, i64 0}
!5940 = !{!5941, !5941, i64 0}
!5941 = !{!"0000017C2E35CF70.w8.b16", !5942, i64 0}
!5942 = !{!"0000017C2E35CF70.w16.b16", !5933, i64 0}
!5943 = !{!5944, !5944, i64 0}
!5944 = !{!"0000017C2E35CF70.w8.b24", !5942, i64 0}
!5945 = !{!5946, !5946, i64 0}
!5946 = !{!"0000017C2E35DAB0.w8.b0", !5947, i64 0}
!5947 = !{!"0000017C2E35DAB0.w16.b0", !5948, i64 0}
!5948 = !{!"0000017C2E35DAB0.w32.b0", !5949, i64 0}
!5949 = !{!"0000017C2E35DAB0.w64.b0", !5950, i64 0}
!5950 = !{!"0000017C2E35DAB0.w128.b0", !5951, i64 0}
!5951 = !{!"0000017C2E35DAB0.w256.b0", !5952, i64 0}
!5952 = !{!"0000017C2E35DAB0.w512.b0", !5953, i64 0}
!5953 = !{!"0000017C2E35DAB0.w1024.b0", !5954, i64 0}
!5954 = !{!"0000017C2E35DAB0", !21, i64 0}
!5955 = !{!5956, !5956, i64 0}
!5956 = !{!"0000017C2E35DAB0.w8.b8", !5947, i64 0}
!5957 = !{!5958, !5958, i64 0}
!5958 = !{!"0000017C2E35DAB0.w8.b16", !5959, i64 0}
!5959 = !{!"0000017C2E35DAB0.w16.b16", !5948, i64 0}
!5960 = !{!5961, !5961, i64 0}
!5961 = !{!"0000017C2E35DAB0.w8.b24", !5959, i64 0}
!5962 = !{!5963, !5963, i64 0}
!5963 = !{!"0000017C2E35DD70.w8.b0", !5964, i64 0}
!5964 = !{!"0000017C2E35DD70.w16.b0", !5965, i64 0}
!5965 = !{!"0000017C2E35DD70.w32.b0", !5966, i64 0}
!5966 = !{!"0000017C2E35DD70.w64.b0", !5967, i64 0}
!5967 = !{!"0000017C2E35DD70.w128.b0", !5968, i64 0}
!5968 = !{!"0000017C2E35DD70.w256.b0", !5969, i64 0}
!5969 = !{!"0000017C2E35DD70.w512.b0", !5970, i64 0}
!5970 = !{!"0000017C2E35DD70.w1024.b0", !5971, i64 0}
!5971 = !{!"0000017C2E35DD70", !21, i64 0}
!5972 = !{!5973, !5973, i64 0}
!5973 = !{!"0000017C2E35DD70.w8.b8", !5964, i64 0}
!5974 = !{!5975, !5975, i64 0}
!5975 = !{!"0000017C2E35DCF0.w8.b0", !5976, i64 0}
!5976 = !{!"0000017C2E35DCF0.w16.b0", !5977, i64 0}
!5977 = !{!"0000017C2E35DCF0.w32.b0", !5978, i64 0}
!5978 = !{!"0000017C2E35DCF0.w64.b0", !5979, i64 0}
!5979 = !{!"0000017C2E35DCF0.w128.b0", !5980, i64 0}
!5980 = !{!"0000017C2E35DCF0.w256.b0", !5981, i64 0}
!5981 = !{!"0000017C2E35DCF0.w512.b0", !5982, i64 0}
!5982 = !{!"0000017C2E35DCF0.w1024.b0", !5983, i64 0}
!5983 = !{!"0000017C2E35DCF0", !21, i64 0}
!5984 = !{!5985, !5985, i64 0}
!5985 = !{!"0000017C2E35DCF0.w8.b8", !5976, i64 0}
!5986 = !{!5987, !5987, i64 0}
!5987 = !{!"0000017C2E35DCF0.w8.b16", !5988, i64 0}
!5988 = !{!"0000017C2E35DCF0.w16.b16", !5977, i64 0}
!5989 = !{!5990, !5990, i64 0}
!5990 = !{!"0000017C2E35DCF0.w8.b24", !5988, i64 0}
!5991 = !{!5992, !5992, i64 0}
!5992 = !{!"0000017C2E35E8F0.w8.b8", !5993, i64 0}
!5993 = !{!"0000017C2E35E8F0.w16.b0", !5994, i64 0}
!5994 = !{!"0000017C2E35E8F0.w32.b0", !5995, i64 0}
!5995 = !{!"0000017C2E35E8F0.w64.b0", !5996, i64 0}
!5996 = !{!"0000017C2E35E8F0.w128.b0", !5997, i64 0}
!5997 = !{!"0000017C2E35E8F0.w256.b0", !5998, i64 0}
!5998 = !{!"0000017C2E35E8F0.w512.b0", !5999, i64 0}
!5999 = !{!"0000017C2E35E8F0.w1024.b0", !6000, i64 0}
!6000 = !{!"0000017C2E35E8F0", !21, i64 0}
!6001 = !{!6002, !6002, i64 0}
!6002 = !{!"0000017C2E35E8F0.w8.b16", !6003, i64 0}
!6003 = !{!"0000017C2E35E8F0.w16.b16", !5994, i64 0}
!6004 = !{!6005, !6005, i64 0}
!6005 = !{!"0000017C2E35E8F0.w8.b24", !6003, i64 0}
!6006 = !{!6007, !6007, i64 0}
!6007 = !{!"0000017C2E40D460.w4.b0", !6008, i64 0}
!6008 = !{!"0000017C2E40D460.w8.b0", !6009, i64 0}
!6009 = !{!"0000017C2E40D460.w16.b0", !6010, i64 0}
!6010 = !{!"0000017C2E40D460.w32.b0", !6011, i64 0}
!6011 = !{!"0000017C2E40D460.w64.b0", !6012, i64 0}
!6012 = !{!"0000017C2E40D460.w128.b0", !6013, i64 0}
!6013 = !{!"0000017C2E40D460.w256.b0", !6014, i64 0}
!6014 = !{!"0000017C2E40D460.w512.b0", !6015, i64 0}
!6015 = !{!"0000017C2E40D460.w1024.b0", !6016, i64 0}
!6016 = !{!"0000017C2E40D460", !21, i64 0}
!6017 = !{!6018, !6018, i64 0}
!6018 = !{!"0000017C2E40D460.w4.b4", !6008, i64 0}
!6019 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6020)
!6020 = !{!6021, !6022, !6023, !6024, !6025, !6026}
!6021 = !DILocalVariable(name: "arg1", arg: 1, scope: !6019, file: !1, type: !8)
!6022 = !DILocalVariable(name: "arg2", arg: 2, scope: !6019, file: !1, type: !9)
!6023 = !DILocalVariable(name: "arg3", arg: 3, scope: !6019, file: !1, type: !7)
!6024 = !DILocalVariable(name: "arg4", arg: 4, scope: !6019, file: !1, type: !8)
!6025 = !DILocalVariable(name: "arg5", arg: 5, scope: !6019, file: !1, type: !9)
!6026 = !DILocalVariable(name: "arg6", arg: 6, scope: !6019, file: !1, type: !8)
!6027 = !DILocation(line: 0, scope: !6019)
!6028 = !{!6029, !6029, i64 0}
!6029 = !{!"0000017C2E4F89F0.w4.b0", !6030, i64 0}
!6030 = !{!"0000017C2E4F89F0.w8.b0", !6031, i64 0}
!6031 = !{!"0000017C2E4F89F0.w16.b0", !6032, i64 0}
!6032 = !{!"0000017C2E4F89F0.w32.b0", !6033, i64 0}
!6033 = !{!"0000017C2E4F89F0.w64.b0", !6034, i64 0}
!6034 = !{!"0000017C2E4F89F0.w128.b0", !6035, i64 0}
!6035 = !{!"0000017C2E4F89F0.w256.b0", !6036, i64 0}
!6036 = !{!"0000017C2E4F89F0.w512.b0", !6037, i64 0}
!6037 = !{!"0000017C2E4F89F0.w1024.b0", !6038, i64 0}
!6038 = !{!"0000017C2E4F89F0", !21, i64 0}
!6039 = !{!6040, !6040, i64 0}
!6040 = !{!"0000017C2E4F89F0.w4.b4", !6030, i64 0}
!6041 = !{!6042, !6042, i64 0}
!6042 = !{!"0000017C2E4F89F0.w4.b8", !6043, i64 0}
!6043 = !{!"0000017C2E4F89F0.w8.b8", !6031, i64 0}
!6044 = !{!6045, !6045, i64 0}
!6045 = !{!"0000017C2E4F9F30.w8.b0", !6046, i64 0}
!6046 = !{!"0000017C2E4F9F30.w16.b0", !6047, i64 0}
!6047 = !{!"0000017C2E4F9F30.w32.b0", !6048, i64 0}
!6048 = !{!"0000017C2E4F9F30.w64.b0", !6049, i64 0}
!6049 = !{!"0000017C2E4F9F30.w128.b0", !6050, i64 0}
!6050 = !{!"0000017C2E4F9F30.w256.b0", !6051, i64 0}
!6051 = !{!"0000017C2E4F9F30.w512.b0", !6052, i64 0}
!6052 = !{!"0000017C2E4F9F30.w1024.b0", !6053, i64 0}
!6053 = !{!"0000017C2E4F9F30", !21, i64 0}
!6054 = !{!6055, !6055, i64 0}
!6055 = !{!"0000017C2E4F9F30.w8.b8", !6046, i64 0}
!6056 = !{!6057, !6057, i64 0}
!6057 = !{!"0000017C2E4F9F30.w8.b16", !6058, i64 0}
!6058 = !{!"0000017C2E4F9F30.w16.b16", !6047, i64 0}
!6059 = !{!6060, !6060, i64 0}
!6060 = !{!"0000017C2E4F9F30.w8.b24", !6058, i64 0}
!6061 = !{!6062, !6062, i64 0}
!6062 = !{!"0000017C2E4F91F0.w8.b8", !6063, i64 0}
!6063 = !{!"0000017C2E4F91F0.w16.b0", !6064, i64 0}
!6064 = !{!"0000017C2E4F91F0.w32.b0", !6065, i64 0}
!6065 = !{!"0000017C2E4F91F0.w64.b0", !6066, i64 0}
!6066 = !{!"0000017C2E4F91F0.w128.b0", !6067, i64 0}
!6067 = !{!"0000017C2E4F91F0.w256.b0", !6068, i64 0}
!6068 = !{!"0000017C2E4F91F0.w512.b0", !6069, i64 0}
!6069 = !{!"0000017C2E4F91F0.w1024.b0", !6070, i64 0}
!6070 = !{!"0000017C2E4F91F0", !21, i64 0}
!6071 = !{!6072, !6072, i64 0}
!6072 = !{!"0000017C2E4F91F0.w8.b16", !6073, i64 0}
!6073 = !{!"0000017C2E4F91F0.w16.b16", !6064, i64 0}
!6074 = !{!6075, !6075, i64 0}
!6075 = !{!"0000017C2E4F91F0.w8.b24", !6073, i64 0}
!6076 = !{!6077, !6077, i64 0}
!6077 = !{!"0000017C2E4FA3F0.w8.b0", !6078, i64 0}
!6078 = !{!"0000017C2E4FA3F0.w16.b0", !6079, i64 0}
!6079 = !{!"0000017C2E4FA3F0.w32.b0", !6080, i64 0}
!6080 = !{!"0000017C2E4FA3F0.w64.b0", !6081, i64 0}
!6081 = !{!"0000017C2E4FA3F0.w128.b0", !6082, i64 0}
!6082 = !{!"0000017C2E4FA3F0.w256.b0", !6083, i64 0}
!6083 = !{!"0000017C2E4FA3F0.w512.b0", !6084, i64 0}
!6084 = !{!"0000017C2E4FA3F0.w1024.b0", !6085, i64 0}
!6085 = !{!"0000017C2E4FA3F0", !21, i64 0}
!6086 = !{!6087, !6087, i64 0}
!6087 = !{!"0000017C2E4FA3F0.w8.b8", !6078, i64 0}
!6088 = !{!6089, !6089, i64 0}
!6089 = !{!"0000017C2E4FA3F0.w8.b16", !6090, i64 0}
!6090 = !{!"0000017C2E4FA3F0.w16.b16", !6079, i64 0}
!6091 = !{!6092, !6092, i64 0}
!6092 = !{!"0000017C2E4FA3F0.w8.b24", !6090, i64 0}
!6093 = !{!6094, !6094, i64 0}
!6094 = !{!"0000017C2E4FA670.w8.b0", !6095, i64 0}
!6095 = !{!"0000017C2E4FA670.w16.b0", !6096, i64 0}
!6096 = !{!"0000017C2E4FA670.w32.b0", !6097, i64 0}
!6097 = !{!"0000017C2E4FA670.w64.b0", !6098, i64 0}
!6098 = !{!"0000017C2E4FA670.w128.b0", !6099, i64 0}
!6099 = !{!"0000017C2E4FA670.w256.b0", !6100, i64 0}
!6100 = !{!"0000017C2E4FA670.w512.b0", !6101, i64 0}
!6101 = !{!"0000017C2E4FA670.w1024.b0", !6102, i64 0}
!6102 = !{!"0000017C2E4FA670", !21, i64 0}
!6103 = !{!6104, !6104, i64 0}
!6104 = !{!"0000017C2E4FA670.w8.b8", !6095, i64 0}
!6105 = !{!6106, !6106, i64 0}
!6106 = !{!"0000017C2E4FA670.w8.b16", !6107, i64 0}
!6107 = !{!"0000017C2E4FA670.w16.b16", !6096, i64 0}
!6108 = !{!6109, !6109, i64 0}
!6109 = !{!"0000017C2E4FA670.w8.b24", !6107, i64 0}
!6110 = !{!6111, !6111, i64 0}
!6111 = !{!"0000017C2E4FA4F0.w8.b0", !6112, i64 0}
!6112 = !{!"0000017C2E4FA4F0.w16.b0", !6113, i64 0}
!6113 = !{!"0000017C2E4FA4F0.w32.b0", !6114, i64 0}
!6114 = !{!"0000017C2E4FA4F0.w64.b0", !6115, i64 0}
!6115 = !{!"0000017C2E4FA4F0.w128.b0", !6116, i64 0}
!6116 = !{!"0000017C2E4FA4F0.w256.b0", !6117, i64 0}
!6117 = !{!"0000017C2E4FA4F0.w512.b0", !6118, i64 0}
!6118 = !{!"0000017C2E4FA4F0.w1024.b0", !6119, i64 0}
!6119 = !{!"0000017C2E4FA4F0", !21, i64 0}
!6120 = !{!6121, !6121, i64 0}
!6121 = !{!"0000017C2E4FA4F0.w8.b8", !6112, i64 0}
!6122 = !{!6123, !6123, i64 0}
!6123 = !{!"0000017C2E4FA4F0.w8.b16", !6124, i64 0}
!6124 = !{!"0000017C2E4FA4F0.w16.b16", !6113, i64 0}
!6125 = !{!6126, !6126, i64 0}
!6126 = !{!"0000017C2E4FA4F0.w8.b24", !6124, i64 0}
!6127 = !{!6128, !6128, i64 0}
!6128 = !{!"0000017C2E4FB770.w8.b8", !6129, i64 0}
!6129 = !{!"0000017C2E4FB770.w16.b0", !6130, i64 0}
!6130 = !{!"0000017C2E4FB770.w32.b0", !6131, i64 0}
!6131 = !{!"0000017C2E4FB770.w64.b0", !6132, i64 0}
!6132 = !{!"0000017C2E4FB770.w128.b0", !6133, i64 0}
!6133 = !{!"0000017C2E4FB770.w256.b0", !6134, i64 0}
!6134 = !{!"0000017C2E4FB770.w512.b0", !6135, i64 0}
!6135 = !{!"0000017C2E4FB770.w1024.b0", !6136, i64 0}
!6136 = !{!"0000017C2E4FB770", !21, i64 0}
!6137 = !{!6138, !6138, i64 0}
!6138 = !{!"0000017C2E4FB770.w8.b16", !6139, i64 0}
!6139 = !{!"0000017C2E4FB770.w16.b16", !6130, i64 0}
!6140 = !{!6141, !6141, i64 0}
!6141 = !{!"0000017C2E4FB770.w8.b24", !6139, i64 0}
!6142 = !{!6143, !6143, i64 0}
!6143 = !{!"0000017C2E607630.w4.b0", !6144, i64 0}
!6144 = !{!"0000017C2E607630.w8.b0", !6145, i64 0}
!6145 = !{!"0000017C2E607630.w16.b0", !6146, i64 0}
!6146 = !{!"0000017C2E607630.w32.b0", !6147, i64 0}
!6147 = !{!"0000017C2E607630.w64.b0", !6148, i64 0}
!6148 = !{!"0000017C2E607630.w128.b0", !6149, i64 0}
!6149 = !{!"0000017C2E607630.w256.b0", !6150, i64 0}
!6150 = !{!"0000017C2E607630.w512.b0", !6151, i64 0}
!6151 = !{!"0000017C2E607630.w1024.b0", !6152, i64 0}
!6152 = !{!"0000017C2E607630", !21, i64 0}
!6153 = !{!6154, !6154, i64 0}
!6154 = !{!"0000017C2E607630.w4.b4", !6144, i64 0}
!6155 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6156)
!6156 = !{!6157, !6158, !6159, !6160, !6161, !6162}
!6157 = !DILocalVariable(name: "arg1", arg: 1, scope: !6155, file: !1, type: !8)
!6158 = !DILocalVariable(name: "arg2", arg: 2, scope: !6155, file: !1, type: !9)
!6159 = !DILocalVariable(name: "arg3", arg: 3, scope: !6155, file: !1, type: !7)
!6160 = !DILocalVariable(name: "arg4", arg: 4, scope: !6155, file: !1, type: !8)
!6161 = !DILocalVariable(name: "arg5", arg: 5, scope: !6155, file: !1, type: !9)
!6162 = !DILocalVariable(name: "arg6", arg: 6, scope: !6155, file: !1, type: !8)
!6163 = !DILocation(line: 0, scope: !6155)
!6164 = !{!6165, !6165, i64 0}
!6165 = !{!"0000017C22C0ADE0.w4.b0", !6166, i64 0}
!6166 = !{!"0000017C22C0ADE0.w8.b0", !6167, i64 0}
!6167 = !{!"0000017C22C0ADE0.w16.b0", !6168, i64 0}
!6168 = !{!"0000017C22C0ADE0.w32.b0", !6169, i64 0}
!6169 = !{!"0000017C22C0ADE0.w64.b0", !6170, i64 0}
!6170 = !{!"0000017C22C0ADE0.w128.b0", !6171, i64 0}
!6171 = !{!"0000017C22C0ADE0.w256.b0", !6172, i64 0}
!6172 = !{!"0000017C22C0ADE0.w512.b0", !6173, i64 0}
!6173 = !{!"0000017C22C0ADE0.w1024.b0", !6174, i64 0}
!6174 = !{!"0000017C22C0ADE0", !21, i64 0}
!6175 = !{!6176, !6176, i64 0}
!6176 = !{!"0000017C22C0ADE0.w4.b4", !6166, i64 0}
!6177 = !{!6178, !6178, i64 0}
!6178 = !{!"0000017C22C0ADE0.w4.b8", !6179, i64 0}
!6179 = !{!"0000017C22C0ADE0.w8.b8", !6167, i64 0}
!6180 = !{!6181, !6181, i64 0}
!6181 = !{!"0000017C22BF7060.w8.b0", !6182, i64 0}
!6182 = !{!"0000017C22BF7060.w16.b0", !6183, i64 0}
!6183 = !{!"0000017C22BF7060.w32.b0", !6184, i64 0}
!6184 = !{!"0000017C22BF7060.w64.b0", !6185, i64 0}
!6185 = !{!"0000017C22BF7060.w128.b0", !6186, i64 0}
!6186 = !{!"0000017C22BF7060.w256.b0", !6187, i64 0}
!6187 = !{!"0000017C22BF7060.w512.b0", !6188, i64 0}
!6188 = !{!"0000017C22BF7060.w1024.b0", !6189, i64 0}
!6189 = !{!"0000017C22BF7060", !21, i64 0}
!6190 = !{!6191, !6191, i64 0}
!6191 = !{!"0000017C22BF7060.w8.b8", !6182, i64 0}
!6192 = !{!6193, !6193, i64 0}
!6193 = !{!"0000017C22BF7060.w8.b16", !6194, i64 0}
!6194 = !{!"0000017C22BF7060.w16.b16", !6183, i64 0}
!6195 = !{!6196, !6196, i64 0}
!6196 = !{!"0000017C22BF7060.w8.b24", !6194, i64 0}
!6197 = !{!6198, !6198, i64 0}
!6198 = !{!"0000017C1AAF9070.w8.b8", !6199, i64 0}
!6199 = !{!"0000017C1AAF9070.w16.b0", !6200, i64 0}
!6200 = !{!"0000017C1AAF9070.w32.b0", !6201, i64 0}
!6201 = !{!"0000017C1AAF9070.w64.b0", !6202, i64 0}
!6202 = !{!"0000017C1AAF9070.w128.b0", !6203, i64 0}
!6203 = !{!"0000017C1AAF9070.w256.b0", !6204, i64 0}
!6204 = !{!"0000017C1AAF9070.w512.b0", !6205, i64 0}
!6205 = !{!"0000017C1AAF9070.w1024.b0", !6206, i64 0}
!6206 = !{!"0000017C1AAF9070", !21, i64 0}
!6207 = !{!6208, !6208, i64 0}
!6208 = !{!"0000017C1AAF9070.w8.b16", !6209, i64 0}
!6209 = !{!"0000017C1AAF9070.w16.b16", !6200, i64 0}
!6210 = !{!6211, !6211, i64 0}
!6211 = !{!"0000017C1AAF9070.w8.b24", !6209, i64 0}
!6212 = !{!6213, !6213, i64 0}
!6213 = !{!"0000017C1AAFB0B0.w8.b0", !6214, i64 0}
!6214 = !{!"0000017C1AAFB0B0.w16.b0", !6215, i64 0}
!6215 = !{!"0000017C1AAFB0B0.w32.b0", !6216, i64 0}
!6216 = !{!"0000017C1AAFB0B0.w64.b0", !6217, i64 0}
!6217 = !{!"0000017C1AAFB0B0.w128.b0", !6218, i64 0}
!6218 = !{!"0000017C1AAFB0B0.w256.b0", !6219, i64 0}
!6219 = !{!"0000017C1AAFB0B0.w512.b0", !6220, i64 0}
!6220 = !{!"0000017C1AAFB0B0.w1024.b0", !6221, i64 0}
!6221 = !{!"0000017C1AAFB0B0", !21, i64 0}
!6222 = !{!6223, !6223, i64 0}
!6223 = !{!"0000017C1AAFB0B0.w8.b8", !6214, i64 0}
!6224 = !{!6225, !6225, i64 0}
!6225 = !{!"0000017C1AAFB0B0.w8.b16", !6226, i64 0}
!6226 = !{!"0000017C1AAFB0B0.w16.b16", !6215, i64 0}
!6227 = !{!6228, !6228, i64 0}
!6228 = !{!"0000017C1AAFB0B0.w8.b24", !6226, i64 0}
!6229 = !{!6230, !6230, i64 0}
!6230 = !{!"0000017C1AAFA770.w8.b0", !6231, i64 0}
!6231 = !{!"0000017C1AAFA770.w16.b0", !6232, i64 0}
!6232 = !{!"0000017C1AAFA770.w32.b0", !6233, i64 0}
!6233 = !{!"0000017C1AAFA770.w64.b0", !6234, i64 0}
!6234 = !{!"0000017C1AAFA770.w128.b0", !6235, i64 0}
!6235 = !{!"0000017C1AAFA770.w256.b0", !6236, i64 0}
!6236 = !{!"0000017C1AAFA770.w512.b0", !6237, i64 0}
!6237 = !{!"0000017C1AAFA770.w1024.b0", !6238, i64 0}
!6238 = !{!"0000017C1AAFA770", !21, i64 0}
!6239 = !{!6240, !6240, i64 0}
!6240 = !{!"0000017C1AAFA770.w8.b8", !6231, i64 0}
!6241 = !{!6242, !6242, i64 0}
!6242 = !{!"0000017C1AAFA770.w8.b16", !6243, i64 0}
!6243 = !{!"0000017C1AAFA770.w16.b16", !6232, i64 0}
!6244 = !{!6245, !6245, i64 0}
!6245 = !{!"0000017C1AAFA770.w8.b24", !6243, i64 0}
!6246 = !{!6247, !6247, i64 0}
!6247 = !{!"0000017C1AAFCC70.w8.b0", !6248, i64 0}
!6248 = !{!"0000017C1AAFCC70.w16.b0", !6249, i64 0}
!6249 = !{!"0000017C1AAFCC70.w32.b0", !6250, i64 0}
!6250 = !{!"0000017C1AAFCC70.w64.b0", !6251, i64 0}
!6251 = !{!"0000017C1AAFCC70.w128.b0", !6252, i64 0}
!6252 = !{!"0000017C1AAFCC70.w256.b0", !6253, i64 0}
!6253 = !{!"0000017C1AAFCC70.w512.b0", !6254, i64 0}
!6254 = !{!"0000017C1AAFCC70.w1024.b0", !6255, i64 0}
!6255 = !{!"0000017C1AAFCC70", !21, i64 0}
!6256 = !{!6257, !6257, i64 0}
!6257 = !{!"0000017C1AAFCC70.w8.b8", !6248, i64 0}
!6258 = !{!6259, !6259, i64 0}
!6259 = !{!"0000017C1AAFCC70.w8.b16", !6260, i64 0}
!6260 = !{!"0000017C1AAFCC70.w16.b16", !6249, i64 0}
!6261 = !{!6262, !6262, i64 0}
!6262 = !{!"0000017C1AAFCC70.w8.b24", !6260, i64 0}
!6263 = !{!6264, !6264, i64 0}
!6264 = !{!"0000017C1AAFC6B0.w8.b8", !6265, i64 0}
!6265 = !{!"0000017C1AAFC6B0.w16.b0", !6266, i64 0}
!6266 = !{!"0000017C1AAFC6B0.w32.b0", !6267, i64 0}
!6267 = !{!"0000017C1AAFC6B0.w64.b0", !6268, i64 0}
!6268 = !{!"0000017C1AAFC6B0.w128.b0", !6269, i64 0}
!6269 = !{!"0000017C1AAFC6B0.w256.b0", !6270, i64 0}
!6270 = !{!"0000017C1AAFC6B0.w512.b0", !6271, i64 0}
!6271 = !{!"0000017C1AAFC6B0.w1024.b0", !6272, i64 0}
!6272 = !{!"0000017C1AAFC6B0", !21, i64 0}
!6273 = !{!6274, !6274, i64 0}
!6274 = !{!"0000017C1AAFC6B0.w8.b16", !6275, i64 0}
!6275 = !{!"0000017C1AAFC6B0.w16.b16", !6266, i64 0}
!6276 = !{!6277, !6277, i64 0}
!6277 = !{!"0000017C1AAFC6B0.w8.b24", !6275, i64 0}
!6278 = !{!6279, !6279, i64 0}
!6279 = !{!"0000017C2E563CE0.w4.b0", !6280, i64 0}
!6280 = !{!"0000017C2E563CE0.w8.b0", !6281, i64 0}
!6281 = !{!"0000017C2E563CE0.w16.b0", !6282, i64 0}
!6282 = !{!"0000017C2E563CE0.w32.b0", !6283, i64 0}
!6283 = !{!"0000017C2E563CE0.w64.b0", !6284, i64 0}
!6284 = !{!"0000017C2E563CE0.w128.b0", !6285, i64 0}
!6285 = !{!"0000017C2E563CE0.w256.b0", !6286, i64 0}
!6286 = !{!"0000017C2E563CE0.w512.b0", !6287, i64 0}
!6287 = !{!"0000017C2E563CE0.w1024.b0", !6288, i64 0}
!6288 = !{!"0000017C2E563CE0", !21, i64 0}
!6289 = !{!6290, !6290, i64 0}
!6290 = !{!"0000017C2E563CE0.w4.b4", !6280, i64 0}
!6291 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6292)
!6292 = !{!6293, !6294, !6295, !6296, !6297, !6298}
!6293 = !DILocalVariable(name: "arg1", arg: 1, scope: !6291, file: !1, type: !8)
!6294 = !DILocalVariable(name: "arg2", arg: 2, scope: !6291, file: !1, type: !9)
!6295 = !DILocalVariable(name: "arg3", arg: 3, scope: !6291, file: !1, type: !7)
!6296 = !DILocalVariable(name: "arg4", arg: 4, scope: !6291, file: !1, type: !8)
!6297 = !DILocalVariable(name: "arg5", arg: 5, scope: !6291, file: !1, type: !9)
!6298 = !DILocalVariable(name: "arg6", arg: 6, scope: !6291, file: !1, type: !8)
!6299 = !DILocation(line: 0, scope: !6291)
!6300 = !{!6301, !6301, i64 0}
!6301 = !{!"0000017C2E2EFCB0.w4.b0", !6302, i64 0}
!6302 = !{!"0000017C2E2EFCB0.w8.b0", !6303, i64 0}
!6303 = !{!"0000017C2E2EFCB0.w16.b0", !6304, i64 0}
!6304 = !{!"0000017C2E2EFCB0.w32.b0", !6305, i64 0}
!6305 = !{!"0000017C2E2EFCB0.w64.b0", !6306, i64 0}
!6306 = !{!"0000017C2E2EFCB0.w128.b0", !6307, i64 0}
!6307 = !{!"0000017C2E2EFCB0.w256.b0", !6308, i64 0}
!6308 = !{!"0000017C2E2EFCB0.w512.b0", !6309, i64 0}
!6309 = !{!"0000017C2E2EFCB0.w1024.b0", !6310, i64 0}
!6310 = !{!"0000017C2E2EFCB0", !21, i64 0}
!6311 = !{!6312, !6312, i64 0}
!6312 = !{!"0000017C2E2EFCB0.w4.b4", !6302, i64 0}
!6313 = !{!6314, !6314, i64 0}
!6314 = !{!"0000017C2E2EFCB0.w4.b8", !6315, i64 0}
!6315 = !{!"0000017C2E2EFCB0.w8.b8", !6303, i64 0}
!6316 = !{!6317, !6317, i64 0}
!6317 = !{!"0000017C2E3677F0.w8.b0", !6318, i64 0}
!6318 = !{!"0000017C2E3677F0.w16.b0", !6319, i64 0}
!6319 = !{!"0000017C2E3677F0.w32.b0", !6320, i64 0}
!6320 = !{!"0000017C2E3677F0.w64.b0", !6321, i64 0}
!6321 = !{!"0000017C2E3677F0.w128.b0", !6322, i64 0}
!6322 = !{!"0000017C2E3677F0.w256.b0", !6323, i64 0}
!6323 = !{!"0000017C2E3677F0.w512.b0", !6324, i64 0}
!6324 = !{!"0000017C2E3677F0.w1024.b0", !6325, i64 0}
!6325 = !{!"0000017C2E3677F0", !21, i64 0}
!6326 = !{!6327, !6327, i64 0}
!6327 = !{!"0000017C2E3677F0.w8.b8", !6318, i64 0}
!6328 = !{!6329, !6329, i64 0}
!6329 = !{!"0000017C2E3677F0.w8.b16", !6330, i64 0}
!6330 = !{!"0000017C2E3677F0.w16.b16", !6319, i64 0}
!6331 = !{!6332, !6332, i64 0}
!6332 = !{!"0000017C2E3677F0.w8.b24", !6330, i64 0}
!6333 = !{!6334, !6334, i64 0}
!6334 = !{!"0000017C237C67E0.w8.b8", !6335, i64 0}
!6335 = !{!"0000017C237C67E0.w16.b0", !6336, i64 0}
!6336 = !{!"0000017C237C67E0.w32.b0", !6337, i64 0}
!6337 = !{!"0000017C237C67E0.w64.b0", !6338, i64 0}
!6338 = !{!"0000017C237C67E0.w128.b0", !6339, i64 0}
!6339 = !{!"0000017C237C67E0.w256.b0", !6340, i64 0}
!6340 = !{!"0000017C237C67E0.w512.b0", !6341, i64 0}
!6341 = !{!"0000017C237C67E0.w1024.b0", !6342, i64 0}
!6342 = !{!"0000017C237C67E0", !21, i64 0}
!6343 = !{!6344, !6344, i64 0}
!6344 = !{!"0000017C237C67E0.w8.b16", !6345, i64 0}
!6345 = !{!"0000017C237C67E0.w16.b16", !6336, i64 0}
!6346 = !{!6347, !6347, i64 0}
!6347 = !{!"0000017C237C67E0.w8.b24", !6345, i64 0}
!6348 = !{!6349, !6349, i64 0}
!6349 = !{!"0000017C2E3B1530.w8.b0", !6350, i64 0}
!6350 = !{!"0000017C2E3B1530.w16.b0", !6351, i64 0}
!6351 = !{!"0000017C2E3B1530.w32.b0", !6352, i64 0}
!6352 = !{!"0000017C2E3B1530.w64.b0", !6353, i64 0}
!6353 = !{!"0000017C2E3B1530.w128.b0", !6354, i64 0}
!6354 = !{!"0000017C2E3B1530.w256.b0", !6355, i64 0}
!6355 = !{!"0000017C2E3B1530.w512.b0", !6356, i64 0}
!6356 = !{!"0000017C2E3B1530.w1024.b0", !6357, i64 0}
!6357 = !{!"0000017C2E3B1530", !21, i64 0}
!6358 = !{!6359, !6359, i64 0}
!6359 = !{!"0000017C2E3B1530.w8.b8", !6350, i64 0}
!6360 = !{!6361, !6361, i64 0}
!6361 = !{!"0000017C2E3B1530.w8.b16", !6362, i64 0}
!6362 = !{!"0000017C2E3B1530.w16.b16", !6351, i64 0}
!6363 = !{!6364, !6364, i64 0}
!6364 = !{!"0000017C2E3B1530.w8.b24", !6362, i64 0}
!6365 = !{!6366, !6366, i64 0}
!6366 = !{!"0000017C2E3B1430.w8.b0", !6367, i64 0}
!6367 = !{!"0000017C2E3B1430.w16.b0", !6368, i64 0}
!6368 = !{!"0000017C2E3B1430.w32.b0", !6369, i64 0}
!6369 = !{!"0000017C2E3B1430.w64.b0", !6370, i64 0}
!6370 = !{!"0000017C2E3B1430.w128.b0", !6371, i64 0}
!6371 = !{!"0000017C2E3B1430.w256.b0", !6372, i64 0}
!6372 = !{!"0000017C2E3B1430.w512.b0", !6373, i64 0}
!6373 = !{!"0000017C2E3B1430.w1024.b0", !6374, i64 0}
!6374 = !{!"0000017C2E3B1430", !21, i64 0}
!6375 = !{!6376, !6376, i64 0}
!6376 = !{!"0000017C2E3B1430.w8.b8", !6367, i64 0}
!6377 = !{!6378, !6378, i64 0}
!6378 = !{!"0000017C2E3B1730.w8.b0", !6379, i64 0}
!6379 = !{!"0000017C2E3B1730.w16.b0", !6380, i64 0}
!6380 = !{!"0000017C2E3B1730.w32.b0", !6381, i64 0}
!6381 = !{!"0000017C2E3B1730.w64.b0", !6382, i64 0}
!6382 = !{!"0000017C2E3B1730.w128.b0", !6383, i64 0}
!6383 = !{!"0000017C2E3B1730.w256.b0", !6384, i64 0}
!6384 = !{!"0000017C2E3B1730.w512.b0", !6385, i64 0}
!6385 = !{!"0000017C2E3B1730.w1024.b0", !6386, i64 0}
!6386 = !{!"0000017C2E3B1730", !21, i64 0}
!6387 = !{!6388, !6388, i64 0}
!6388 = !{!"0000017C2E3B1730.w8.b8", !6379, i64 0}
!6389 = !{!6390, !6390, i64 0}
!6390 = !{!"0000017C2E3B1730.w8.b16", !6391, i64 0}
!6391 = !{!"0000017C2E3B1730.w16.b16", !6380, i64 0}
!6392 = !{!6393, !6393, i64 0}
!6393 = !{!"0000017C2E3B1730.w8.b24", !6391, i64 0}
!6394 = !{!6395, !6395, i64 0}
!6395 = !{!"0000017C2E3B21F0.w8.b8", !6396, i64 0}
!6396 = !{!"0000017C2E3B21F0.w16.b0", !6397, i64 0}
!6397 = !{!"0000017C2E3B21F0.w32.b0", !6398, i64 0}
!6398 = !{!"0000017C2E3B21F0.w64.b0", !6399, i64 0}
!6399 = !{!"0000017C2E3B21F0.w128.b0", !6400, i64 0}
!6400 = !{!"0000017C2E3B21F0.w256.b0", !6401, i64 0}
!6401 = !{!"0000017C2E3B21F0.w512.b0", !6402, i64 0}
!6402 = !{!"0000017C2E3B21F0.w1024.b0", !6403, i64 0}
!6403 = !{!"0000017C2E3B21F0", !21, i64 0}
!6404 = !{!6405, !6405, i64 0}
!6405 = !{!"0000017C2E3B21F0.w8.b16", !6406, i64 0}
!6406 = !{!"0000017C2E3B21F0.w16.b16", !6397, i64 0}
!6407 = !{!6408, !6408, i64 0}
!6408 = !{!"0000017C2E3B21F0.w8.b24", !6406, i64 0}
!6409 = !{!6410, !6410, i64 0}
!6410 = !{!"0000017C1AAF06F0.w4.b0", !6411, i64 0}
!6411 = !{!"0000017C1AAF06F0.w8.b0", !6412, i64 0}
!6412 = !{!"0000017C1AAF06F0.w16.b0", !6413, i64 0}
!6413 = !{!"0000017C1AAF06F0.w32.b0", !6414, i64 0}
!6414 = !{!"0000017C1AAF06F0.w64.b0", !6415, i64 0}
!6415 = !{!"0000017C1AAF06F0.w128.b0", !6416, i64 0}
!6416 = !{!"0000017C1AAF06F0.w256.b0", !6417, i64 0}
!6417 = !{!"0000017C1AAF06F0.w512.b0", !6418, i64 0}
!6418 = !{!"0000017C1AAF06F0.w1024.b0", !6419, i64 0}
!6419 = !{!"0000017C1AAF06F0", !21, i64 0}
!6420 = !{!6421, !6421, i64 0}
!6421 = !{!"0000017C1AAF06F0.w4.b4", !6411, i64 0}
!6422 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6423)
!6423 = !{!6424, !6425, !6426, !6427, !6428, !6429}
!6424 = !DILocalVariable(name: "arg1", arg: 1, scope: !6422, file: !1, type: !8)
!6425 = !DILocalVariable(name: "arg2", arg: 2, scope: !6422, file: !1, type: !9)
!6426 = !DILocalVariable(name: "arg3", arg: 3, scope: !6422, file: !1, type: !7)
!6427 = !DILocalVariable(name: "arg4", arg: 4, scope: !6422, file: !1, type: !8)
!6428 = !DILocalVariable(name: "arg5", arg: 5, scope: !6422, file: !1, type: !9)
!6429 = !DILocalVariable(name: "arg6", arg: 6, scope: !6422, file: !1, type: !8)
!6430 = !DILocation(line: 0, scope: !6422)
!6431 = !{!6432, !6432, i64 0}
!6432 = !{!"0000017C2E3C5DF0.w4.b0", !6433, i64 0}
!6433 = !{!"0000017C2E3C5DF0.w8.b0", !6434, i64 0}
!6434 = !{!"0000017C2E3C5DF0.w16.b0", !6435, i64 0}
!6435 = !{!"0000017C2E3C5DF0.w32.b0", !6436, i64 0}
!6436 = !{!"0000017C2E3C5DF0.w64.b0", !6437, i64 0}
!6437 = !{!"0000017C2E3C5DF0.w128.b0", !6438, i64 0}
!6438 = !{!"0000017C2E3C5DF0.w256.b0", !6439, i64 0}
!6439 = !{!"0000017C2E3C5DF0.w512.b0", !6440, i64 0}
!6440 = !{!"0000017C2E3C5DF0.w1024.b0", !6441, i64 0}
!6441 = !{!"0000017C2E3C5DF0", !21, i64 0}
!6442 = !{!6443, !6443, i64 0}
!6443 = !{!"0000017C2E3C5DF0.w4.b4", !6433, i64 0}
!6444 = !{!6445, !6445, i64 0}
!6445 = !{!"0000017C2E3C5DF0.w4.b8", !6446, i64 0}
!6446 = !{!"0000017C2E3C5DF0.w8.b8", !6434, i64 0}
!6447 = !{!6448, !6448, i64 0}
!6448 = !{!"0000017C2E3CA470.w8.b0", !6449, i64 0}
!6449 = !{!"0000017C2E3CA470.w16.b0", !6450, i64 0}
!6450 = !{!"0000017C2E3CA470.w32.b0", !6451, i64 0}
!6451 = !{!"0000017C2E3CA470.w64.b0", !6452, i64 0}
!6452 = !{!"0000017C2E3CA470.w128.b0", !6453, i64 0}
!6453 = !{!"0000017C2E3CA470.w256.b0", !6454, i64 0}
!6454 = !{!"0000017C2E3CA470.w512.b0", !6455, i64 0}
!6455 = !{!"0000017C2E3CA470.w1024.b0", !6456, i64 0}
!6456 = !{!"0000017C2E3CA470", !21, i64 0}
!6457 = !{!6458, !6458, i64 0}
!6458 = !{!"0000017C2E3CA470.w8.b8", !6449, i64 0}
!6459 = !{!6460, !6460, i64 0}
!6460 = !{!"0000017C2E3CA470.w8.b16", !6461, i64 0}
!6461 = !{!"0000017C2E3CA470.w16.b16", !6450, i64 0}
!6462 = !{!6463, !6463, i64 0}
!6463 = !{!"0000017C2E3CA470.w8.b24", !6461, i64 0}
!6464 = !{!6465, !6465, i64 0}
!6465 = !{!"0000017C2E3CAE30.w8.b8", !6466, i64 0}
!6466 = !{!"0000017C2E3CAE30.w16.b0", !6467, i64 0}
!6467 = !{!"0000017C2E3CAE30.w32.b0", !6468, i64 0}
!6468 = !{!"0000017C2E3CAE30.w64.b0", !6469, i64 0}
!6469 = !{!"0000017C2E3CAE30.w128.b0", !6470, i64 0}
!6470 = !{!"0000017C2E3CAE30.w256.b0", !6471, i64 0}
!6471 = !{!"0000017C2E3CAE30.w512.b0", !6472, i64 0}
!6472 = !{!"0000017C2E3CAE30.w1024.b0", !6473, i64 0}
!6473 = !{!"0000017C2E3CAE30", !21, i64 0}
!6474 = !{!6475, !6475, i64 0}
!6475 = !{!"0000017C2E3CAE30.w8.b16", !6476, i64 0}
!6476 = !{!"0000017C2E3CAE30.w16.b16", !6467, i64 0}
!6477 = !{!6478, !6478, i64 0}
!6478 = !{!"0000017C2E3CAE30.w8.b24", !6476, i64 0}
!6479 = !{!6480, !6480, i64 0}
!6480 = !{!"0000017C2E3CC530.w8.b0", !6481, i64 0}
!6481 = !{!"0000017C2E3CC530.w16.b0", !6482, i64 0}
!6482 = !{!"0000017C2E3CC530.w32.b0", !6483, i64 0}
!6483 = !{!"0000017C2E3CC530.w64.b0", !6484, i64 0}
!6484 = !{!"0000017C2E3CC530.w128.b0", !6485, i64 0}
!6485 = !{!"0000017C2E3CC530.w256.b0", !6486, i64 0}
!6486 = !{!"0000017C2E3CC530.w512.b0", !6487, i64 0}
!6487 = !{!"0000017C2E3CC530.w1024.b0", !6488, i64 0}
!6488 = !{!"0000017C2E3CC530", !21, i64 0}
!6489 = !{!6490, !6490, i64 0}
!6490 = !{!"0000017C2E3CC530.w8.b8", !6481, i64 0}
!6491 = !{!6492, !6492, i64 0}
!6492 = !{!"0000017C2E3CC530.w8.b16", !6493, i64 0}
!6493 = !{!"0000017C2E3CC530.w16.b16", !6482, i64 0}
!6494 = !{!6495, !6495, i64 0}
!6495 = !{!"0000017C2E3CC530.w8.b24", !6493, i64 0}
!6496 = !{!6497, !6497, i64 0}
!6497 = !{!"0000017C2E3CCAB0.w8.b0", !6498, i64 0}
!6498 = !{!"0000017C2E3CCAB0.w16.b0", !6499, i64 0}
!6499 = !{!"0000017C2E3CCAB0.w32.b0", !6500, i64 0}
!6500 = !{!"0000017C2E3CCAB0.w64.b0", !6501, i64 0}
!6501 = !{!"0000017C2E3CCAB0.w128.b0", !6502, i64 0}
!6502 = !{!"0000017C2E3CCAB0.w256.b0", !6503, i64 0}
!6503 = !{!"0000017C2E3CCAB0.w512.b0", !6504, i64 0}
!6504 = !{!"0000017C2E3CCAB0.w1024.b0", !6505, i64 0}
!6505 = !{!"0000017C2E3CCAB0", !21, i64 0}
!6506 = !{!6507, !6507, i64 0}
!6507 = !{!"0000017C2E3CCAB0.w8.b8", !6498, i64 0}
!6508 = !{!6509, !6509, i64 0}
!6509 = !{!"0000017C2E3CDBF0.w8.b0", !6510, i64 0}
!6510 = !{!"0000017C2E3CDBF0.w16.b0", !6511, i64 0}
!6511 = !{!"0000017C2E3CDBF0.w32.b0", !6512, i64 0}
!6512 = !{!"0000017C2E3CDBF0.w64.b0", !6513, i64 0}
!6513 = !{!"0000017C2E3CDBF0.w128.b0", !6514, i64 0}
!6514 = !{!"0000017C2E3CDBF0.w256.b0", !6515, i64 0}
!6515 = !{!"0000017C2E3CDBF0.w512.b0", !6516, i64 0}
!6516 = !{!"0000017C2E3CDBF0.w1024.b0", !6517, i64 0}
!6517 = !{!"0000017C2E3CDBF0", !21, i64 0}
!6518 = !{!6519, !6519, i64 0}
!6519 = !{!"0000017C2E3CDBF0.w8.b8", !6510, i64 0}
!6520 = !{!6521, !6521, i64 0}
!6521 = !{!"0000017C2E3CDBF0.w8.b16", !6522, i64 0}
!6522 = !{!"0000017C2E3CDBF0.w16.b16", !6511, i64 0}
!6523 = !{!6524, !6524, i64 0}
!6524 = !{!"0000017C2E3CDBF0.w8.b24", !6522, i64 0}
!6525 = !{!6526, !6526, i64 0}
!6526 = !{!"0000017C2E3CDDF0.w8.b8", !6527, i64 0}
!6527 = !{!"0000017C2E3CDDF0.w16.b0", !6528, i64 0}
!6528 = !{!"0000017C2E3CDDF0.w32.b0", !6529, i64 0}
!6529 = !{!"0000017C2E3CDDF0.w64.b0", !6530, i64 0}
!6530 = !{!"0000017C2E3CDDF0.w128.b0", !6531, i64 0}
!6531 = !{!"0000017C2E3CDDF0.w256.b0", !6532, i64 0}
!6532 = !{!"0000017C2E3CDDF0.w512.b0", !6533, i64 0}
!6533 = !{!"0000017C2E3CDDF0.w1024.b0", !6534, i64 0}
!6534 = !{!"0000017C2E3CDDF0", !21, i64 0}
!6535 = !{!6536, !6536, i64 0}
!6536 = !{!"0000017C2E3CDDF0.w8.b16", !6537, i64 0}
!6537 = !{!"0000017C2E3CDDF0.w16.b16", !6528, i64 0}
!6538 = !{!6539, !6539, i64 0}
!6539 = !{!"0000017C2E3CDDF0.w8.b24", !6537, i64 0}
!6540 = !{!6541, !6541, i64 0}
!6541 = !{!"0000017C2E368830.w4.b0", !6542, i64 0}
!6542 = !{!"0000017C2E368830.w8.b0", !6543, i64 0}
!6543 = !{!"0000017C2E368830.w16.b0", !6544, i64 0}
!6544 = !{!"0000017C2E368830.w32.b0", !6545, i64 0}
!6545 = !{!"0000017C2E368830.w64.b0", !6546, i64 0}
!6546 = !{!"0000017C2E368830.w128.b0", !6547, i64 0}
!6547 = !{!"0000017C2E368830.w256.b0", !6548, i64 0}
!6548 = !{!"0000017C2E368830.w512.b0", !6549, i64 0}
!6549 = !{!"0000017C2E368830.w1024.b0", !6550, i64 0}
!6550 = !{!"0000017C2E368830", !21, i64 0}
!6551 = !{!6552, !6552, i64 0}
!6552 = !{!"0000017C2E368830.w4.b4", !6542, i64 0}
!6553 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6554)
!6554 = !{!6555, !6556, !6557, !6558, !6559, !6560}
!6555 = !DILocalVariable(name: "arg1", arg: 1, scope: !6553, file: !1, type: !8)
!6556 = !DILocalVariable(name: "arg2", arg: 2, scope: !6553, file: !1, type: !9)
!6557 = !DILocalVariable(name: "arg3", arg: 3, scope: !6553, file: !1, type: !7)
!6558 = !DILocalVariable(name: "arg4", arg: 4, scope: !6553, file: !1, type: !8)
!6559 = !DILocalVariable(name: "arg5", arg: 5, scope: !6553, file: !1, type: !9)
!6560 = !DILocalVariable(name: "arg6", arg: 6, scope: !6553, file: !1, type: !8)
!6561 = !DILocation(line: 0, scope: !6553)
!6562 = !{!6563, !6563, i64 0}
!6563 = !{!"0000017C22BEC6B0.w4.b0", !6564, i64 0}
!6564 = !{!"0000017C22BEC6B0.w8.b0", !6565, i64 0}
!6565 = !{!"0000017C22BEC6B0.w16.b0", !6566, i64 0}
!6566 = !{!"0000017C22BEC6B0.w32.b0", !6567, i64 0}
!6567 = !{!"0000017C22BEC6B0.w64.b0", !6568, i64 0}
!6568 = !{!"0000017C22BEC6B0.w128.b0", !6569, i64 0}
!6569 = !{!"0000017C22BEC6B0.w256.b0", !6570, i64 0}
!6570 = !{!"0000017C22BEC6B0.w512.b0", !6571, i64 0}
!6571 = !{!"0000017C22BEC6B0.w1024.b0", !6572, i64 0}
!6572 = !{!"0000017C22BEC6B0", !21, i64 0}
!6573 = !{!6574, !6574, i64 0}
!6574 = !{!"0000017C22BEC6B0.w4.b4", !6564, i64 0}
!6575 = !{!6576, !6576, i64 0}
!6576 = !{!"0000017C22BEC6B0.w4.b8", !6577, i64 0}
!6577 = !{!"0000017C22BEC6B0.w8.b8", !6565, i64 0}
!6578 = !{!6579, !6579, i64 0}
!6579 = !{!"0000017C21D79470.w8.b0", !6580, i64 0}
!6580 = !{!"0000017C21D79470.w16.b0", !6581, i64 0}
!6581 = !{!"0000017C21D79470.w32.b0", !6582, i64 0}
!6582 = !{!"0000017C21D79470.w64.b0", !6583, i64 0}
!6583 = !{!"0000017C21D79470.w128.b0", !6584, i64 0}
!6584 = !{!"0000017C21D79470.w256.b0", !6585, i64 0}
!6585 = !{!"0000017C21D79470.w512.b0", !6586, i64 0}
!6586 = !{!"0000017C21D79470.w1024.b0", !6587, i64 0}
!6587 = !{!"0000017C21D79470", !21, i64 0}
!6588 = !{!6589, !6589, i64 0}
!6589 = !{!"0000017C21D79470.w8.b8", !6580, i64 0}
!6590 = !{!6591, !6591, i64 0}
!6591 = !{!"0000017C21D79470.w8.b16", !6592, i64 0}
!6592 = !{!"0000017C21D79470.w16.b16", !6581, i64 0}
!6593 = !{!6594, !6594, i64 0}
!6594 = !{!"0000017C21D79470.w8.b24", !6592, i64 0}
!6595 = !{!6596, !6596, i64 0}
!6596 = !{!"0000017C1AAF28B0.w8.b8", !6597, i64 0}
!6597 = !{!"0000017C1AAF28B0.w16.b0", !6598, i64 0}
!6598 = !{!"0000017C1AAF28B0.w32.b0", !6599, i64 0}
!6599 = !{!"0000017C1AAF28B0.w64.b0", !6600, i64 0}
!6600 = !{!"0000017C1AAF28B0.w128.b0", !6601, i64 0}
!6601 = !{!"0000017C1AAF28B0.w256.b0", !6602, i64 0}
!6602 = !{!"0000017C1AAF28B0.w512.b0", !6603, i64 0}
!6603 = !{!"0000017C1AAF28B0.w1024.b0", !6604, i64 0}
!6604 = !{!"0000017C1AAF28B0", !21, i64 0}
!6605 = !{!6606, !6606, i64 0}
!6606 = !{!"0000017C1AAF28B0.w8.b16", !6607, i64 0}
!6607 = !{!"0000017C1AAF28B0.w16.b16", !6598, i64 0}
!6608 = !{!6609, !6609, i64 0}
!6609 = !{!"0000017C1AAF28B0.w8.b24", !6607, i64 0}
!6610 = !{!6611, !6611, i64 0}
!6611 = !{!"0000017C1AAF7770.w8.b0", !6612, i64 0}
!6612 = !{!"0000017C1AAF7770.w16.b0", !6613, i64 0}
!6613 = !{!"0000017C1AAF7770.w32.b0", !6614, i64 0}
!6614 = !{!"0000017C1AAF7770.w64.b0", !6615, i64 0}
!6615 = !{!"0000017C1AAF7770.w128.b0", !6616, i64 0}
!6616 = !{!"0000017C1AAF7770.w256.b0", !6617, i64 0}
!6617 = !{!"0000017C1AAF7770.w512.b0", !6618, i64 0}
!6618 = !{!"0000017C1AAF7770.w1024.b0", !6619, i64 0}
!6619 = !{!"0000017C1AAF7770", !21, i64 0}
!6620 = !{!6621, !6621, i64 0}
!6621 = !{!"0000017C1AAF7770.w8.b8", !6612, i64 0}
!6622 = !{!6623, !6623, i64 0}
!6623 = !{!"0000017C1AAF7770.w8.b16", !6624, i64 0}
!6624 = !{!"0000017C1AAF7770.w16.b16", !6613, i64 0}
!6625 = !{!6626, !6626, i64 0}
!6626 = !{!"0000017C1AAF7770.w8.b24", !6624, i64 0}
!6627 = !{!6628, !6628, i64 0}
!6628 = !{!"0000017C24CAB1B0.w8.b0", !6629, i64 0}
!6629 = !{!"0000017C24CAB1B0.w16.b0", !6630, i64 0}
!6630 = !{!"0000017C24CAB1B0.w32.b0", !6631, i64 0}
!6631 = !{!"0000017C24CAB1B0.w64.b0", !6632, i64 0}
!6632 = !{!"0000017C24CAB1B0.w128.b0", !6633, i64 0}
!6633 = !{!"0000017C24CAB1B0.w256.b0", !6634, i64 0}
!6634 = !{!"0000017C24CAB1B0.w512.b0", !6635, i64 0}
!6635 = !{!"0000017C24CAB1B0.w1024.b0", !6636, i64 0}
!6636 = !{!"0000017C24CAB1B0", !21, i64 0}
!6637 = !{!6638, !6638, i64 0}
!6638 = !{!"0000017C24CAB1B0.w8.b8", !6629, i64 0}
!6639 = !{!6640, !6640, i64 0}
!6640 = !{!"0000017C24CAB1B0.w8.b16", !6641, i64 0}
!6641 = !{!"0000017C24CAB1B0.w16.b16", !6630, i64 0}
!6642 = !{!6643, !6643, i64 0}
!6643 = !{!"0000017C24CAB1B0.w8.b24", !6641, i64 0}
!6644 = !{!6645, !6645, i64 0}
!6645 = !{!"0000017C229D7E60.w8.b0", !6646, i64 0}
!6646 = !{!"0000017C229D7E60.w16.b0", !6647, i64 0}
!6647 = !{!"0000017C229D7E60.w32.b0", !6648, i64 0}
!6648 = !{!"0000017C229D7E60.w64.b0", !6649, i64 0}
!6649 = !{!"0000017C229D7E60.w128.b0", !6650, i64 0}
!6650 = !{!"0000017C229D7E60.w256.b0", !6651, i64 0}
!6651 = !{!"0000017C229D7E60.w512.b0", !6652, i64 0}
!6652 = !{!"0000017C229D7E60.w1024.b0", !6653, i64 0}
!6653 = !{!"0000017C229D7E60", !21, i64 0}
!6654 = !{!6655, !6655, i64 0}
!6655 = !{!"0000017C229D7E60.w8.b8", !6646, i64 0}
!6656 = !{!6657, !6657, i64 0}
!6657 = !{!"0000017C229D7E60.w8.b16", !6658, i64 0}
!6658 = !{!"0000017C229D7E60.w16.b16", !6647, i64 0}
!6659 = !{!6660, !6660, i64 0}
!6660 = !{!"0000017C229D7E60.w8.b24", !6658, i64 0}
!6661 = !{!6662, !6662, i64 0}
!6662 = !{!"0000017C21FE8620.w8.b8", !6663, i64 0}
!6663 = !{!"0000017C21FE8620.w16.b0", !6664, i64 0}
!6664 = !{!"0000017C21FE8620.w32.b0", !6665, i64 0}
!6665 = !{!"0000017C21FE8620.w64.b0", !6666, i64 0}
!6666 = !{!"0000017C21FE8620.w128.b0", !6667, i64 0}
!6667 = !{!"0000017C21FE8620.w256.b0", !6668, i64 0}
!6668 = !{!"0000017C21FE8620.w512.b0", !6669, i64 0}
!6669 = !{!"0000017C21FE8620.w1024.b0", !6670, i64 0}
!6670 = !{!"0000017C21FE8620", !21, i64 0}
!6671 = !{!6672, !6672, i64 0}
!6672 = !{!"0000017C21FE8620.w8.b16", !6673, i64 0}
!6673 = !{!"0000017C21FE8620.w16.b16", !6664, i64 0}
!6674 = !{!6675, !6675, i64 0}
!6675 = !{!"0000017C21FE8620.w8.b24", !6673, i64 0}
!6676 = !{!6677, !6677, i64 0}
!6677 = !{!"0000017C2E56A9E0.w4.b0", !6678, i64 0}
!6678 = !{!"0000017C2E56A9E0.w8.b0", !6679, i64 0}
!6679 = !{!"0000017C2E56A9E0.w16.b0", !6680, i64 0}
!6680 = !{!"0000017C2E56A9E0.w32.b0", !6681, i64 0}
!6681 = !{!"0000017C2E56A9E0.w64.b0", !6682, i64 0}
!6682 = !{!"0000017C2E56A9E0.w128.b0", !6683, i64 0}
!6683 = !{!"0000017C2E56A9E0.w256.b0", !6684, i64 0}
!6684 = !{!"0000017C2E56A9E0.w512.b0", !6685, i64 0}
!6685 = !{!"0000017C2E56A9E0.w1024.b0", !6686, i64 0}
!6686 = !{!"0000017C2E56A9E0", !21, i64 0}
!6687 = !{!6688, !6688, i64 0}
!6688 = !{!"0000017C2E56A9E0.w4.b4", !6678, i64 0}
!6689 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6690)
!6690 = !{!6691, !6692, !6693, !6694, !6695, !6696}
!6691 = !DILocalVariable(name: "arg1", arg: 1, scope: !6689, file: !1, type: !8)
!6692 = !DILocalVariable(name: "arg2", arg: 2, scope: !6689, file: !1, type: !9)
!6693 = !DILocalVariable(name: "arg3", arg: 3, scope: !6689, file: !1, type: !7)
!6694 = !DILocalVariable(name: "arg4", arg: 4, scope: !6689, file: !1, type: !8)
!6695 = !DILocalVariable(name: "arg5", arg: 5, scope: !6689, file: !1, type: !9)
!6696 = !DILocalVariable(name: "arg6", arg: 6, scope: !6689, file: !1, type: !8)
!6697 = !DILocation(line: 0, scope: !6689)
!6698 = !{!6699, !6699, i64 0}
!6699 = !{!"0000017C2E3048B0.w4.b0", !6700, i64 0}
!6700 = !{!"0000017C2E3048B0.w8.b0", !6701, i64 0}
!6701 = !{!"0000017C2E3048B0.w16.b0", !6702, i64 0}
!6702 = !{!"0000017C2E3048B0.w32.b0", !6703, i64 0}
!6703 = !{!"0000017C2E3048B0.w64.b0", !6704, i64 0}
!6704 = !{!"0000017C2E3048B0.w128.b0", !6705, i64 0}
!6705 = !{!"0000017C2E3048B0.w256.b0", !6706, i64 0}
!6706 = !{!"0000017C2E3048B0.w512.b0", !6707, i64 0}
!6707 = !{!"0000017C2E3048B0.w1024.b0", !6708, i64 0}
!6708 = !{!"0000017C2E3048B0", !21, i64 0}
!6709 = !{!6710, !6710, i64 0}
!6710 = !{!"0000017C2E3048B0.w4.b4", !6700, i64 0}
!6711 = !{!6712, !6712, i64 0}
!6712 = !{!"0000017C2E3048B0.w4.b8", !6713, i64 0}
!6713 = !{!"0000017C2E3048B0.w8.b8", !6701, i64 0}
!6714 = !{!6715, !6715, i64 0}
!6715 = !{!"0000017C2E2EB030.w8.b0", !6716, i64 0}
!6716 = !{!"0000017C2E2EB030.w16.b0", !6717, i64 0}
!6717 = !{!"0000017C2E2EB030.w32.b0", !6718, i64 0}
!6718 = !{!"0000017C2E2EB030.w64.b0", !6719, i64 0}
!6719 = !{!"0000017C2E2EB030.w128.b0", !6720, i64 0}
!6720 = !{!"0000017C2E2EB030.w256.b0", !6721, i64 0}
!6721 = !{!"0000017C2E2EB030.w512.b0", !6722, i64 0}
!6722 = !{!"0000017C2E2EB030.w1024.b0", !6723, i64 0}
!6723 = !{!"0000017C2E2EB030", !21, i64 0}
!6724 = !{!6725, !6725, i64 0}
!6725 = !{!"0000017C2E2EB030.w8.b8", !6716, i64 0}
!6726 = !{!6727, !6727, i64 0}
!6727 = !{!"0000017C2E2EB030.w8.b16", !6728, i64 0}
!6728 = !{!"0000017C2E2EB030.w16.b16", !6717, i64 0}
!6729 = !{!6730, !6730, i64 0}
!6730 = !{!"0000017C2E2EB030.w8.b24", !6728, i64 0}
!6731 = !{!6732, !6732, i64 0}
!6732 = !{!"0000017C2E2EA2F0.w8.b8", !6733, i64 0}
!6733 = !{!"0000017C2E2EA2F0.w16.b0", !6734, i64 0}
!6734 = !{!"0000017C2E2EA2F0.w32.b0", !6735, i64 0}
!6735 = !{!"0000017C2E2EA2F0.w64.b0", !6736, i64 0}
!6736 = !{!"0000017C2E2EA2F0.w128.b0", !6737, i64 0}
!6737 = !{!"0000017C2E2EA2F0.w256.b0", !6738, i64 0}
!6738 = !{!"0000017C2E2EA2F0.w512.b0", !6739, i64 0}
!6739 = !{!"0000017C2E2EA2F0.w1024.b0", !6740, i64 0}
!6740 = !{!"0000017C2E2EA2F0", !21, i64 0}
!6741 = !{!6742, !6742, i64 0}
!6742 = !{!"0000017C2E2EA2F0.w8.b16", !6743, i64 0}
!6743 = !{!"0000017C2E2EA2F0.w16.b16", !6734, i64 0}
!6744 = !{!6745, !6745, i64 0}
!6745 = !{!"0000017C2E2EA2F0.w8.b24", !6743, i64 0}
!6746 = !{!6747, !6747, i64 0}
!6747 = !{!"0000017C2E2EB670.w8.b0", !6748, i64 0}
!6748 = !{!"0000017C2E2EB670.w16.b0", !6749, i64 0}
!6749 = !{!"0000017C2E2EB670.w32.b0", !6750, i64 0}
!6750 = !{!"0000017C2E2EB670.w64.b0", !6751, i64 0}
!6751 = !{!"0000017C2E2EB670.w128.b0", !6752, i64 0}
!6752 = !{!"0000017C2E2EB670.w256.b0", !6753, i64 0}
!6753 = !{!"0000017C2E2EB670.w512.b0", !6754, i64 0}
!6754 = !{!"0000017C2E2EB670.w1024.b0", !6755, i64 0}
!6755 = !{!"0000017C2E2EB670", !21, i64 0}
!6756 = !{!6757, !6757, i64 0}
!6757 = !{!"0000017C2E2EB670.w8.b8", !6748, i64 0}
!6758 = !{!6759, !6759, i64 0}
!6759 = !{!"0000017C2E2EB670.w8.b16", !6760, i64 0}
!6760 = !{!"0000017C2E2EB670.w16.b16", !6749, i64 0}
!6761 = !{!6762, !6762, i64 0}
!6762 = !{!"0000017C2E2EB670.w8.b24", !6760, i64 0}
!6763 = !{!6764, !6764, i64 0}
!6764 = !{!"0000017C2E2F18F0.w8.b0", !6765, i64 0}
!6765 = !{!"0000017C2E2F18F0.w16.b0", !6766, i64 0}
!6766 = !{!"0000017C2E2F18F0.w32.b0", !6767, i64 0}
!6767 = !{!"0000017C2E2F18F0.w64.b0", !6768, i64 0}
!6768 = !{!"0000017C2E2F18F0.w128.b0", !6769, i64 0}
!6769 = !{!"0000017C2E2F18F0.w256.b0", !6770, i64 0}
!6770 = !{!"0000017C2E2F18F0.w512.b0", !6771, i64 0}
!6771 = !{!"0000017C2E2F18F0.w1024.b0", !6772, i64 0}
!6772 = !{!"0000017C2E2F18F0", !21, i64 0}
!6773 = !{!6774, !6774, i64 0}
!6774 = !{!"0000017C2E2F18F0.w8.b8", !6765, i64 0}
!6775 = !{!6776, !6776, i64 0}
!6776 = !{!"0000017C237C75E0.w8.b0", !6777, i64 0}
!6777 = !{!"0000017C237C75E0.w16.b0", !6778, i64 0}
!6778 = !{!"0000017C237C75E0.w32.b0", !6779, i64 0}
!6779 = !{!"0000017C237C75E0.w64.b0", !6780, i64 0}
!6780 = !{!"0000017C237C75E0.w128.b0", !6781, i64 0}
!6781 = !{!"0000017C237C75E0.w256.b0", !6782, i64 0}
!6782 = !{!"0000017C237C75E0.w512.b0", !6783, i64 0}
!6783 = !{!"0000017C237C75E0.w1024.b0", !6784, i64 0}
!6784 = !{!"0000017C237C75E0", !21, i64 0}
!6785 = !{!6786, !6786, i64 0}
!6786 = !{!"0000017C237C75E0.w8.b8", !6777, i64 0}
!6787 = !{!6788, !6788, i64 0}
!6788 = !{!"0000017C237C75E0.w8.b16", !6789, i64 0}
!6789 = !{!"0000017C237C75E0.w16.b16", !6778, i64 0}
!6790 = !{!6791, !6791, i64 0}
!6791 = !{!"0000017C237C75E0.w8.b24", !6789, i64 0}
!6792 = !{!6793, !6793, i64 0}
!6793 = !{!"0000017C21D6AC30.w8.b8", !6794, i64 0}
!6794 = !{!"0000017C21D6AC30.w16.b0", !6795, i64 0}
!6795 = !{!"0000017C21D6AC30.w32.b0", !6796, i64 0}
!6796 = !{!"0000017C21D6AC30.w64.b0", !6797, i64 0}
!6797 = !{!"0000017C21D6AC30.w128.b0", !6798, i64 0}
!6798 = !{!"0000017C21D6AC30.w256.b0", !6799, i64 0}
!6799 = !{!"0000017C21D6AC30.w512.b0", !6800, i64 0}
!6800 = !{!"0000017C21D6AC30.w1024.b0", !6801, i64 0}
!6801 = !{!"0000017C21D6AC30", !21, i64 0}
!6802 = !{!6803, !6803, i64 0}
!6803 = !{!"0000017C21D6AC30.w8.b16", !6804, i64 0}
!6804 = !{!"0000017C21D6AC30.w16.b16", !6795, i64 0}
!6805 = !{!6806, !6806, i64 0}
!6806 = !{!"0000017C21D6AC30.w8.b24", !6804, i64 0}
!6807 = !{!6808, !6808, i64 0}
!6808 = !{!"0000017C1AAF3B30.w4.b0", !6809, i64 0}
!6809 = !{!"0000017C1AAF3B30.w8.b0", !6810, i64 0}
!6810 = !{!"0000017C1AAF3B30.w16.b0", !6811, i64 0}
!6811 = !{!"0000017C1AAF3B30.w32.b0", !6812, i64 0}
!6812 = !{!"0000017C1AAF3B30.w64.b0", !6813, i64 0}
!6813 = !{!"0000017C1AAF3B30.w128.b0", !6814, i64 0}
!6814 = !{!"0000017C1AAF3B30.w256.b0", !6815, i64 0}
!6815 = !{!"0000017C1AAF3B30.w512.b0", !6816, i64 0}
!6816 = !{!"0000017C1AAF3B30.w1024.b0", !6817, i64 0}
!6817 = !{!"0000017C1AAF3B30", !21, i64 0}
!6818 = !{!6819, !6819, i64 0}
!6819 = !{!"0000017C1AAF3B30.w4.b4", !6809, i64 0}
!6820 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6821)
!6821 = !{!6822, !6823, !6824, !6825, !6826, !6827}
!6822 = !DILocalVariable(name: "arg1", arg: 1, scope: !6820, file: !1, type: !8)
!6823 = !DILocalVariable(name: "arg2", arg: 2, scope: !6820, file: !1, type: !9)
!6824 = !DILocalVariable(name: "arg3", arg: 3, scope: !6820, file: !1, type: !7)
!6825 = !DILocalVariable(name: "arg4", arg: 4, scope: !6820, file: !1, type: !8)
!6826 = !DILocalVariable(name: "arg5", arg: 5, scope: !6820, file: !1, type: !9)
!6827 = !DILocalVariable(name: "arg6", arg: 6, scope: !6820, file: !1, type: !8)
!6828 = !DILocation(line: 0, scope: !6820)
!6829 = !{!6830, !6830, i64 0}
!6830 = !{!"0000017C2E3C8730.w4.b0", !6831, i64 0}
!6831 = !{!"0000017C2E3C8730.w8.b0", !6832, i64 0}
!6832 = !{!"0000017C2E3C8730.w16.b0", !6833, i64 0}
!6833 = !{!"0000017C2E3C8730.w32.b0", !6834, i64 0}
!6834 = !{!"0000017C2E3C8730.w64.b0", !6835, i64 0}
!6835 = !{!"0000017C2E3C8730.w128.b0", !6836, i64 0}
!6836 = !{!"0000017C2E3C8730.w256.b0", !6837, i64 0}
!6837 = !{!"0000017C2E3C8730.w512.b0", !6838, i64 0}
!6838 = !{!"0000017C2E3C8730.w1024.b0", !6839, i64 0}
!6839 = !{!"0000017C2E3C8730", !21, i64 0}
!6840 = !{!6841, !6841, i64 0}
!6841 = !{!"0000017C2E3C8730.w4.b4", !6831, i64 0}
!6842 = !{!6843, !6843, i64 0}
!6843 = !{!"0000017C2E3C8730.w4.b8", !6844, i64 0}
!6844 = !{!"0000017C2E3C8730.w8.b8", !6832, i64 0}
!6845 = !{!6846, !6846, i64 0}
!6846 = !{!"0000017C2E3CFA30.w8.b0", !6847, i64 0}
!6847 = !{!"0000017C2E3CFA30.w16.b0", !6848, i64 0}
!6848 = !{!"0000017C2E3CFA30.w32.b0", !6849, i64 0}
!6849 = !{!"0000017C2E3CFA30.w64.b0", !6850, i64 0}
!6850 = !{!"0000017C2E3CFA30.w128.b0", !6851, i64 0}
!6851 = !{!"0000017C2E3CFA30.w256.b0", !6852, i64 0}
!6852 = !{!"0000017C2E3CFA30.w512.b0", !6853, i64 0}
!6853 = !{!"0000017C2E3CFA30.w1024.b0", !6854, i64 0}
!6854 = !{!"0000017C2E3CFA30", !21, i64 0}
!6855 = !{!6856, !6856, i64 0}
!6856 = !{!"0000017C2E3CFA30.w8.b8", !6847, i64 0}
!6857 = !{!6858, !6858, i64 0}
!6858 = !{!"0000017C2E3CFA30.w8.b16", !6859, i64 0}
!6859 = !{!"0000017C2E3CFA30.w16.b16", !6848, i64 0}
!6860 = !{!6861, !6861, i64 0}
!6861 = !{!"0000017C2E3CFA30.w8.b24", !6859, i64 0}
!6862 = !{!6863, !6863, i64 0}
!6863 = !{!"0000017C2E3CF870.w8.b8", !6864, i64 0}
!6864 = !{!"0000017C2E3CF870.w16.b0", !6865, i64 0}
!6865 = !{!"0000017C2E3CF870.w32.b0", !6866, i64 0}
!6866 = !{!"0000017C2E3CF870.w64.b0", !6867, i64 0}
!6867 = !{!"0000017C2E3CF870.w128.b0", !6868, i64 0}
!6868 = !{!"0000017C2E3CF870.w256.b0", !6869, i64 0}
!6869 = !{!"0000017C2E3CF870.w512.b0", !6870, i64 0}
!6870 = !{!"0000017C2E3CF870.w1024.b0", !6871, i64 0}
!6871 = !{!"0000017C2E3CF870", !21, i64 0}
!6872 = !{!6873, !6873, i64 0}
!6873 = !{!"0000017C2E3CF870.w8.b16", !6874, i64 0}
!6874 = !{!"0000017C2E3CF870.w16.b16", !6865, i64 0}
!6875 = !{!6876, !6876, i64 0}
!6876 = !{!"0000017C2E3CF870.w8.b24", !6874, i64 0}
!6877 = !{!6878, !6878, i64 0}
!6878 = !{!"0000017C2E3D0CF0.w8.b0", !6879, i64 0}
!6879 = !{!"0000017C2E3D0CF0.w16.b0", !6880, i64 0}
!6880 = !{!"0000017C2E3D0CF0.w32.b0", !6881, i64 0}
!6881 = !{!"0000017C2E3D0CF0.w64.b0", !6882, i64 0}
!6882 = !{!"0000017C2E3D0CF0.w128.b0", !6883, i64 0}
!6883 = !{!"0000017C2E3D0CF0.w256.b0", !6884, i64 0}
!6884 = !{!"0000017C2E3D0CF0.w512.b0", !6885, i64 0}
!6885 = !{!"0000017C2E3D0CF0.w1024.b0", !6886, i64 0}
!6886 = !{!"0000017C2E3D0CF0", !21, i64 0}
!6887 = !{!6888, !6888, i64 0}
!6888 = !{!"0000017C2E3D0CF0.w8.b8", !6879, i64 0}
!6889 = !{!6890, !6890, i64 0}
!6890 = !{!"0000017C2E3D0CF0.w8.b16", !6891, i64 0}
!6891 = !{!"0000017C2E3D0CF0.w16.b16", !6880, i64 0}
!6892 = !{!6893, !6893, i64 0}
!6893 = !{!"0000017C2E3D0CF0.w8.b24", !6891, i64 0}
!6894 = !{!6895, !6895, i64 0}
!6895 = !{!"0000017C2E3D06B0.w8.b0", !6896, i64 0}
!6896 = !{!"0000017C2E3D06B0.w16.b0", !6897, i64 0}
!6897 = !{!"0000017C2E3D06B0.w32.b0", !6898, i64 0}
!6898 = !{!"0000017C2E3D06B0.w64.b0", !6899, i64 0}
!6899 = !{!"0000017C2E3D06B0.w128.b0", !6900, i64 0}
!6900 = !{!"0000017C2E3D06B0.w256.b0", !6901, i64 0}
!6901 = !{!"0000017C2E3D06B0.w512.b0", !6902, i64 0}
!6902 = !{!"0000017C2E3D06B0.w1024.b0", !6903, i64 0}
!6903 = !{!"0000017C2E3D06B0", !21, i64 0}
!6904 = !{!6905, !6905, i64 0}
!6905 = !{!"0000017C2E3D06B0.w8.b8", !6896, i64 0}
!6906 = !{!6907, !6907, i64 0}
!6907 = !{!"0000017C2E3D0AB0.w8.b0", !6908, i64 0}
!6908 = !{!"0000017C2E3D0AB0.w16.b0", !6909, i64 0}
!6909 = !{!"0000017C2E3D0AB0.w32.b0", !6910, i64 0}
!6910 = !{!"0000017C2E3D0AB0.w64.b0", !6911, i64 0}
!6911 = !{!"0000017C2E3D0AB0.w128.b0", !6912, i64 0}
!6912 = !{!"0000017C2E3D0AB0.w256.b0", !6913, i64 0}
!6913 = !{!"0000017C2E3D0AB0.w512.b0", !6914, i64 0}
!6914 = !{!"0000017C2E3D0AB0.w1024.b0", !6915, i64 0}
!6915 = !{!"0000017C2E3D0AB0", !21, i64 0}
!6916 = !{!6917, !6917, i64 0}
!6917 = !{!"0000017C2E3D0AB0.w8.b8", !6908, i64 0}
!6918 = !{!6919, !6919, i64 0}
!6919 = !{!"0000017C2E3D0AB0.w8.b16", !6920, i64 0}
!6920 = !{!"0000017C2E3D0AB0.w16.b16", !6909, i64 0}
!6921 = !{!6922, !6922, i64 0}
!6922 = !{!"0000017C2E3D0AB0.w8.b24", !6920, i64 0}
!6923 = !{!6924, !6924, i64 0}
!6924 = !{!"0000017C2E3B02B0.w8.b8", !6925, i64 0}
!6925 = !{!"0000017C2E3B02B0.w16.b0", !6926, i64 0}
!6926 = !{!"0000017C2E3B02B0.w32.b0", !6927, i64 0}
!6927 = !{!"0000017C2E3B02B0.w64.b0", !6928, i64 0}
!6928 = !{!"0000017C2E3B02B0.w128.b0", !6929, i64 0}
!6929 = !{!"0000017C2E3B02B0.w256.b0", !6930, i64 0}
!6930 = !{!"0000017C2E3B02B0.w512.b0", !6931, i64 0}
!6931 = !{!"0000017C2E3B02B0.w1024.b0", !6932, i64 0}
!6932 = !{!"0000017C2E3B02B0", !21, i64 0}
!6933 = !{!6934, !6934, i64 0}
!6934 = !{!"0000017C2E3B02B0.w8.b16", !6935, i64 0}
!6935 = !{!"0000017C2E3B02B0.w16.b16", !6926, i64 0}
!6936 = !{!6937, !6937, i64 0}
!6937 = !{!"0000017C2E3B02B0.w8.b24", !6935, i64 0}
!6938 = !{!6939, !6939, i64 0}
!6939 = !{!"0000017C2E34E930.w4.b0", !6940, i64 0}
!6940 = !{!"0000017C2E34E930.w8.b0", !6941, i64 0}
!6941 = !{!"0000017C2E34E930.w16.b0", !6942, i64 0}
!6942 = !{!"0000017C2E34E930.w32.b0", !6943, i64 0}
!6943 = !{!"0000017C2E34E930.w64.b0", !6944, i64 0}
!6944 = !{!"0000017C2E34E930.w128.b0", !6945, i64 0}
!6945 = !{!"0000017C2E34E930.w256.b0", !6946, i64 0}
!6946 = !{!"0000017C2E34E930.w512.b0", !6947, i64 0}
!6947 = !{!"0000017C2E34E930.w1024.b0", !6948, i64 0}
!6948 = !{!"0000017C2E34E930", !21, i64 0}
!6949 = !{!6950, !6950, i64 0}
!6950 = !{!"0000017C2E34E930.w4.b4", !6940, i64 0}
!6951 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6952)
!6952 = !{!6953, !6954, !6955, !6956, !6957, !6958}
!6953 = !DILocalVariable(name: "arg1", arg: 1, scope: !6951, file: !1, type: !8)
!6954 = !DILocalVariable(name: "arg2", arg: 2, scope: !6951, file: !1, type: !9)
!6955 = !DILocalVariable(name: "arg3", arg: 3, scope: !6951, file: !1, type: !7)
!6956 = !DILocalVariable(name: "arg4", arg: 4, scope: !6951, file: !1, type: !8)
!6957 = !DILocalVariable(name: "arg5", arg: 5, scope: !6951, file: !1, type: !9)
!6958 = !DILocalVariable(name: "arg6", arg: 6, scope: !6951, file: !1, type: !8)
!6959 = !DILocation(line: 0, scope: !6951)
!6960 = !{!6961, !6961, i64 0}
!6961 = !{!"0000017C2E2EC5F0.w4.b0", !6962, i64 0}
!6962 = !{!"0000017C2E2EC5F0.w8.b0", !6963, i64 0}
!6963 = !{!"0000017C2E2EC5F0.w16.b0", !6964, i64 0}
!6964 = !{!"0000017C2E2EC5F0.w32.b0", !6965, i64 0}
!6965 = !{!"0000017C2E2EC5F0.w64.b0", !6966, i64 0}
!6966 = !{!"0000017C2E2EC5F0.w128.b0", !6967, i64 0}
!6967 = !{!"0000017C2E2EC5F0.w256.b0", !6968, i64 0}
!6968 = !{!"0000017C2E2EC5F0.w512.b0", !6969, i64 0}
!6969 = !{!"0000017C2E2EC5F0.w1024.b0", !6970, i64 0}
!6970 = !{!"0000017C2E2EC5F0", !21, i64 0}
!6971 = !{!6972, !6972, i64 0}
!6972 = !{!"0000017C2E2EC5F0.w4.b4", !6962, i64 0}
!6973 = !{!6974, !6974, i64 0}
!6974 = !{!"0000017C2E2EC5F0.w4.b8", !6975, i64 0}
!6975 = !{!"0000017C2E2EC5F0.w8.b8", !6963, i64 0}
!6976 = !{!6977, !6977, i64 0}
!6977 = !{!"0000017C2E2EF470.w8.b0", !6978, i64 0}
!6978 = !{!"0000017C2E2EF470.w16.b0", !6979, i64 0}
!6979 = !{!"0000017C2E2EF470.w32.b0", !6980, i64 0}
!6980 = !{!"0000017C2E2EF470.w64.b0", !6981, i64 0}
!6981 = !{!"0000017C2E2EF470.w128.b0", !6982, i64 0}
!6982 = !{!"0000017C2E2EF470.w256.b0", !6983, i64 0}
!6983 = !{!"0000017C2E2EF470.w512.b0", !6984, i64 0}
!6984 = !{!"0000017C2E2EF470.w1024.b0", !6985, i64 0}
!6985 = !{!"0000017C2E2EF470", !21, i64 0}
!6986 = !{!6987, !6987, i64 0}
!6987 = !{!"0000017C2E2EF470.w8.b8", !6978, i64 0}
!6988 = !{!6989, !6989, i64 0}
!6989 = !{!"0000017C2E2EF470.w8.b16", !6990, i64 0}
!6990 = !{!"0000017C2E2EF470.w16.b16", !6979, i64 0}
!6991 = !{!6992, !6992, i64 0}
!6992 = !{!"0000017C2E2EF470.w8.b24", !6990, i64 0}
!6993 = !{!6994, !6994, i64 0}
!6994 = !{!"0000017C2E2EF170.w8.b8", !6995, i64 0}
!6995 = !{!"0000017C2E2EF170.w16.b0", !6996, i64 0}
!6996 = !{!"0000017C2E2EF170.w32.b0", !6997, i64 0}
!6997 = !{!"0000017C2E2EF170.w64.b0", !6998, i64 0}
!6998 = !{!"0000017C2E2EF170.w128.b0", !6999, i64 0}
!6999 = !{!"0000017C2E2EF170.w256.b0", !7000, i64 0}
!7000 = !{!"0000017C2E2EF170.w512.b0", !7001, i64 0}
!7001 = !{!"0000017C2E2EF170.w1024.b0", !7002, i64 0}
!7002 = !{!"0000017C2E2EF170", !21, i64 0}
!7003 = !{!7004, !7004, i64 0}
!7004 = !{!"0000017C2E2EF170.w8.b16", !7005, i64 0}
!7005 = !{!"0000017C2E2EF170.w16.b16", !6996, i64 0}
!7006 = !{!7007, !7007, i64 0}
!7007 = !{!"0000017C2E2EF170.w8.b24", !7005, i64 0}
!7008 = !{!7009, !7009, i64 0}
!7009 = !{!"0000017C2E2F1FB0.w8.b0", !7010, i64 0}
!7010 = !{!"0000017C2E2F1FB0.w16.b0", !7011, i64 0}
!7011 = !{!"0000017C2E2F1FB0.w32.b0", !7012, i64 0}
!7012 = !{!"0000017C2E2F1FB0.w64.b0", !7013, i64 0}
!7013 = !{!"0000017C2E2F1FB0.w128.b0", !7014, i64 0}
!7014 = !{!"0000017C2E2F1FB0.w256.b0", !7015, i64 0}
!7015 = !{!"0000017C2E2F1FB0.w512.b0", !7016, i64 0}
!7016 = !{!"0000017C2E2F1FB0.w1024.b0", !7017, i64 0}
!7017 = !{!"0000017C2E2F1FB0", !21, i64 0}
!7018 = !{!7019, !7019, i64 0}
!7019 = !{!"0000017C2E2F1FB0.w8.b8", !7010, i64 0}
!7020 = !{!7021, !7021, i64 0}
!7021 = !{!"0000017C2E2F1FB0.w8.b16", !7022, i64 0}
!7022 = !{!"0000017C2E2F1FB0.w16.b16", !7011, i64 0}
!7023 = !{!7024, !7024, i64 0}
!7024 = !{!"0000017C2E2F1FB0.w8.b24", !7022, i64 0}
!7025 = !{!7026, !7026, i64 0}
!7026 = !{!"0000017C2E2F1770.w8.b0", !7027, i64 0}
!7027 = !{!"0000017C2E2F1770.w16.b0", !7028, i64 0}
!7028 = !{!"0000017C2E2F1770.w32.b0", !7029, i64 0}
!7029 = !{!"0000017C2E2F1770.w64.b0", !7030, i64 0}
!7030 = !{!"0000017C2E2F1770.w128.b0", !7031, i64 0}
!7031 = !{!"0000017C2E2F1770.w256.b0", !7032, i64 0}
!7032 = !{!"0000017C2E2F1770.w512.b0", !7033, i64 0}
!7033 = !{!"0000017C2E2F1770.w1024.b0", !7034, i64 0}
!7034 = !{!"0000017C2E2F1770", !21, i64 0}
!7035 = !{!7036, !7036, i64 0}
!7036 = !{!"0000017C2E2F1770.w8.b8", !7027, i64 0}
!7037 = !{!7038, !7038, i64 0}
!7038 = !{!"0000017C2E2F2BB0.w8.b0", !7039, i64 0}
!7039 = !{!"0000017C2E2F2BB0.w16.b0", !7040, i64 0}
!7040 = !{!"0000017C2E2F2BB0.w32.b0", !7041, i64 0}
!7041 = !{!"0000017C2E2F2BB0.w64.b0", !7042, i64 0}
!7042 = !{!"0000017C2E2F2BB0.w128.b0", !7043, i64 0}
!7043 = !{!"0000017C2E2F2BB0.w256.b0", !7044, i64 0}
!7044 = !{!"0000017C2E2F2BB0.w512.b0", !7045, i64 0}
!7045 = !{!"0000017C2E2F2BB0.w1024.b0", !7046, i64 0}
!7046 = !{!"0000017C2E2F2BB0", !21, i64 0}
!7047 = !{!7048, !7048, i64 0}
!7048 = !{!"0000017C2E2F2BB0.w8.b8", !7039, i64 0}
!7049 = !{!7050, !7050, i64 0}
!7050 = !{!"0000017C2E2F2BB0.w8.b16", !7051, i64 0}
!7051 = !{!"0000017C2E2F2BB0.w16.b16", !7040, i64 0}
!7052 = !{!7053, !7053, i64 0}
!7053 = !{!"0000017C2E2F2BB0.w8.b24", !7051, i64 0}
!7054 = !{!7055, !7055, i64 0}
!7055 = !{!"0000017C2E2F2970.w8.b8", !7056, i64 0}
!7056 = !{!"0000017C2E2F2970.w16.b0", !7057, i64 0}
!7057 = !{!"0000017C2E2F2970.w32.b0", !7058, i64 0}
!7058 = !{!"0000017C2E2F2970.w64.b0", !7059, i64 0}
!7059 = !{!"0000017C2E2F2970.w128.b0", !7060, i64 0}
!7060 = !{!"0000017C2E2F2970.w256.b0", !7061, i64 0}
!7061 = !{!"0000017C2E2F2970.w512.b0", !7062, i64 0}
!7062 = !{!"0000017C2E2F2970.w1024.b0", !7063, i64 0}
!7063 = !{!"0000017C2E2F2970", !21, i64 0}
!7064 = !{!7065, !7065, i64 0}
!7065 = !{!"0000017C2E2F2970.w8.b16", !7066, i64 0}
!7066 = !{!"0000017C2E2F2970.w16.b16", !7057, i64 0}
!7067 = !{!7068, !7068, i64 0}
!7068 = !{!"0000017C2E2F2970.w8.b24", !7066, i64 0}
!7069 = !{!7070, !7070, i64 0}
!7070 = !{!"0000017C22C017E0.w4.b0", !7071, i64 0}
!7071 = !{!"0000017C22C017E0.w8.b0", !7072, i64 0}
!7072 = !{!"0000017C22C017E0.w16.b0", !7073, i64 0}
!7073 = !{!"0000017C22C017E0.w32.b0", !7074, i64 0}
!7074 = !{!"0000017C22C017E0.w64.b0", !7075, i64 0}
!7075 = !{!"0000017C22C017E0.w128.b0", !7076, i64 0}
!7076 = !{!"0000017C22C017E0.w256.b0", !7077, i64 0}
!7077 = !{!"0000017C22C017E0.w512.b0", !7078, i64 0}
!7078 = !{!"0000017C22C017E0.w1024.b0", !7079, i64 0}
!7079 = !{!"0000017C22C017E0", !21, i64 0}
!7080 = !{!7081, !7081, i64 0}
!7081 = !{!"0000017C22C017E0.w4.b4", !7071, i64 0}
!7082 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7083)
!7083 = !{!7084, !7085, !7086, !7087, !7088, !7089}
!7084 = !DILocalVariable(name: "arg1", arg: 1, scope: !7082, file: !1, type: !8)
!7085 = !DILocalVariable(name: "arg2", arg: 2, scope: !7082, file: !1, type: !9)
!7086 = !DILocalVariable(name: "arg3", arg: 3, scope: !7082, file: !1, type: !7)
!7087 = !DILocalVariable(name: "arg4", arg: 4, scope: !7082, file: !1, type: !8)
!7088 = !DILocalVariable(name: "arg5", arg: 5, scope: !7082, file: !1, type: !9)
!7089 = !DILocalVariable(name: "arg6", arg: 6, scope: !7082, file: !1, type: !8)
!7090 = !DILocation(line: 0, scope: !7082)
!7091 = !{!7092, !7092, i64 0}
!7092 = !{!"0000017C22BFA760.w4.b0", !7093, i64 0}
!7093 = !{!"0000017C22BFA760.w8.b0", !7094, i64 0}
!7094 = !{!"0000017C22BFA760.w16.b0", !7095, i64 0}
!7095 = !{!"0000017C22BFA760.w32.b0", !7096, i64 0}
!7096 = !{!"0000017C22BFA760.w64.b0", !7097, i64 0}
!7097 = !{!"0000017C22BFA760.w128.b0", !7098, i64 0}
!7098 = !{!"0000017C22BFA760.w256.b0", !7099, i64 0}
!7099 = !{!"0000017C22BFA760.w512.b0", !7100, i64 0}
!7100 = !{!"0000017C22BFA760.w1024.b0", !7101, i64 0}
!7101 = !{!"0000017C22BFA760", !21, i64 0}
!7102 = !{!7103, !7103, i64 0}
!7103 = !{!"0000017C22BFA760.w4.b4", !7093, i64 0}
!7104 = !{!7105, !7105, i64 0}
!7105 = !{!"0000017C22BFA760.w4.b8", !7106, i64 0}
!7106 = !{!"0000017C22BFA760.w8.b8", !7094, i64 0}
!7107 = !{!7108, !7108, i64 0}
!7108 = !{!"0000017C22BFDDE0.w8.b0", !7109, i64 0}
!7109 = !{!"0000017C22BFDDE0.w16.b0", !7110, i64 0}
!7110 = !{!"0000017C22BFDDE0.w32.b0", !7111, i64 0}
!7111 = !{!"0000017C22BFDDE0.w64.b0", !7112, i64 0}
!7112 = !{!"0000017C22BFDDE0.w128.b0", !7113, i64 0}
!7113 = !{!"0000017C22BFDDE0.w256.b0", !7114, i64 0}
!7114 = !{!"0000017C22BFDDE0.w512.b0", !7115, i64 0}
!7115 = !{!"0000017C22BFDDE0.w1024.b0", !7116, i64 0}
!7116 = !{!"0000017C22BFDDE0", !21, i64 0}
!7117 = !{!7118, !7118, i64 0}
!7118 = !{!"0000017C22BFDDE0.w8.b8", !7109, i64 0}
!7119 = !{!7120, !7120, i64 0}
!7120 = !{!"0000017C22BFDDE0.w8.b16", !7121, i64 0}
!7121 = !{!"0000017C22BFDDE0.w16.b16", !7110, i64 0}
!7122 = !{!7123, !7123, i64 0}
!7123 = !{!"0000017C22BFDDE0.w8.b24", !7121, i64 0}
!7124 = !{!7125, !7125, i64 0}
!7125 = !{!"0000017C22BFD460.w8.b8", !7126, i64 0}
!7126 = !{!"0000017C22BFD460.w16.b0", !7127, i64 0}
!7127 = !{!"0000017C22BFD460.w32.b0", !7128, i64 0}
!7128 = !{!"0000017C22BFD460.w64.b0", !7129, i64 0}
!7129 = !{!"0000017C22BFD460.w128.b0", !7130, i64 0}
!7130 = !{!"0000017C22BFD460.w256.b0", !7131, i64 0}
!7131 = !{!"0000017C22BFD460.w512.b0", !7132, i64 0}
!7132 = !{!"0000017C22BFD460.w1024.b0", !7133, i64 0}
!7133 = !{!"0000017C22BFD460", !21, i64 0}
!7134 = !{!7135, !7135, i64 0}
!7135 = !{!"0000017C22BFD460.w8.b16", !7136, i64 0}
!7136 = !{!"0000017C22BFD460.w16.b16", !7127, i64 0}
!7137 = !{!7138, !7138, i64 0}
!7138 = !{!"0000017C22BFD460.w8.b24", !7136, i64 0}
!7139 = !{!7140, !7140, i64 0}
!7140 = !{!"0000017C22BFF960.w8.b0", !7141, i64 0}
!7141 = !{!"0000017C22BFF960.w16.b0", !7142, i64 0}
!7142 = !{!"0000017C22BFF960.w32.b0", !7143, i64 0}
!7143 = !{!"0000017C22BFF960.w64.b0", !7144, i64 0}
!7144 = !{!"0000017C22BFF960.w128.b0", !7145, i64 0}
!7145 = !{!"0000017C22BFF960.w256.b0", !7146, i64 0}
!7146 = !{!"0000017C22BFF960.w512.b0", !7147, i64 0}
!7147 = !{!"0000017C22BFF960.w1024.b0", !7148, i64 0}
!7148 = !{!"0000017C22BFF960", !21, i64 0}
!7149 = !{!7150, !7150, i64 0}
!7150 = !{!"0000017C22BFF960.w8.b8", !7141, i64 0}
!7151 = !{!7152, !7152, i64 0}
!7152 = !{!"0000017C22BFF960.w8.b16", !7153, i64 0}
!7153 = !{!"0000017C22BFF960.w16.b16", !7142, i64 0}
!7154 = !{!7155, !7155, i64 0}
!7155 = !{!"0000017C22BFF960.w8.b24", !7153, i64 0}
!7156 = !{!7157, !7157, i64 0}
!7157 = !{!"0000017C22BFF1A0.w8.b0", !7158, i64 0}
!7158 = !{!"0000017C22BFF1A0.w16.b0", !7159, i64 0}
!7159 = !{!"0000017C22BFF1A0.w32.b0", !7160, i64 0}
!7160 = !{!"0000017C22BFF1A0.w64.b0", !7161, i64 0}
!7161 = !{!"0000017C22BFF1A0.w128.b0", !7162, i64 0}
!7162 = !{!"0000017C22BFF1A0.w256.b0", !7163, i64 0}
!7163 = !{!"0000017C22BFF1A0.w512.b0", !7164, i64 0}
!7164 = !{!"0000017C22BFF1A0.w1024.b0", !7165, i64 0}
!7165 = !{!"0000017C22BFF1A0", !21, i64 0}
!7166 = !{!7167, !7167, i64 0}
!7167 = !{!"0000017C22BFF1A0.w8.b8", !7158, i64 0}
!7168 = !{!7169, !7169, i64 0}
!7169 = !{!"0000017C22BFF1A0.w8.b16", !7170, i64 0}
!7170 = !{!"0000017C22BFF1A0.w16.b16", !7159, i64 0}
!7171 = !{!7172, !7172, i64 0}
!7172 = !{!"0000017C22BFF1A0.w8.b24", !7170, i64 0}
!7173 = !{!7174, !7174, i64 0}
!7174 = !{!"0000017C22C00EE0.w8.b0", !7175, i64 0}
!7175 = !{!"0000017C22C00EE0.w16.b0", !7176, i64 0}
!7176 = !{!"0000017C22C00EE0.w32.b0", !7177, i64 0}
!7177 = !{!"0000017C22C00EE0.w64.b0", !7178, i64 0}
!7178 = !{!"0000017C22C00EE0.w128.b0", !7179, i64 0}
!7179 = !{!"0000017C22C00EE0.w256.b0", !7180, i64 0}
!7180 = !{!"0000017C22C00EE0.w512.b0", !7181, i64 0}
!7181 = !{!"0000017C22C00EE0.w1024.b0", !7182, i64 0}
!7182 = !{!"0000017C22C00EE0", !21, i64 0}
!7183 = !{!7184, !7184, i64 0}
!7184 = !{!"0000017C22C00EE0.w8.b8", !7175, i64 0}
!7185 = !{!7186, !7186, i64 0}
!7186 = !{!"0000017C22C00EE0.w8.b16", !7187, i64 0}
!7187 = !{!"0000017C22C00EE0.w16.b16", !7176, i64 0}
!7188 = !{!7189, !7189, i64 0}
!7189 = !{!"0000017C22C00EE0.w8.b24", !7187, i64 0}
!7190 = !{!7191, !7191, i64 0}
!7191 = !{!"0000017C22C002E0.w8.b8", !7192, i64 0}
!7192 = !{!"0000017C22C002E0.w16.b0", !7193, i64 0}
!7193 = !{!"0000017C22C002E0.w32.b0", !7194, i64 0}
!7194 = !{!"0000017C22C002E0.w64.b0", !7195, i64 0}
!7195 = !{!"0000017C22C002E0.w128.b0", !7196, i64 0}
!7196 = !{!"0000017C22C002E0.w256.b0", !7197, i64 0}
!7197 = !{!"0000017C22C002E0.w512.b0", !7198, i64 0}
!7198 = !{!"0000017C22C002E0.w1024.b0", !7199, i64 0}
!7199 = !{!"0000017C22C002E0", !21, i64 0}
!7200 = !{!7201, !7201, i64 0}
!7201 = !{!"0000017C22C002E0.w8.b16", !7202, i64 0}
!7202 = !{!"0000017C22C002E0.w16.b16", !7193, i64 0}
!7203 = !{!7204, !7204, i64 0}
!7204 = !{!"0000017C22C002E0.w8.b24", !7202, i64 0}
!7205 = !{!7206, !7206, i64 0}
!7206 = !{!"0000017C2E556EE0.w4.b0", !7207, i64 0}
!7207 = !{!"0000017C2E556EE0.w8.b0", !7208, i64 0}
!7208 = !{!"0000017C2E556EE0.w16.b0", !7209, i64 0}
!7209 = !{!"0000017C2E556EE0.w32.b0", !7210, i64 0}
!7210 = !{!"0000017C2E556EE0.w64.b0", !7211, i64 0}
!7211 = !{!"0000017C2E556EE0.w128.b0", !7212, i64 0}
!7212 = !{!"0000017C2E556EE0.w256.b0", !7213, i64 0}
!7213 = !{!"0000017C2E556EE0.w512.b0", !7214, i64 0}
!7214 = !{!"0000017C2E556EE0.w1024.b0", !7215, i64 0}
!7215 = !{!"0000017C2E556EE0", !21, i64 0}
!7216 = !{!7217, !7217, i64 0}
!7217 = !{!"0000017C2E556EE0.w4.b4", !7207, i64 0}
!7218 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7219)
!7219 = !{!7220, !7221, !7222, !7223, !7224, !7225}
!7220 = !DILocalVariable(name: "arg1", arg: 1, scope: !7218, file: !1, type: !8)
!7221 = !DILocalVariable(name: "arg2", arg: 2, scope: !7218, file: !1, type: !9)
!7222 = !DILocalVariable(name: "arg3", arg: 3, scope: !7218, file: !1, type: !7)
!7223 = !DILocalVariable(name: "arg4", arg: 4, scope: !7218, file: !1, type: !8)
!7224 = !DILocalVariable(name: "arg5", arg: 5, scope: !7218, file: !1, type: !9)
!7225 = !DILocalVariable(name: "arg6", arg: 6, scope: !7218, file: !1, type: !8)
!7226 = !DILocation(line: 0, scope: !7218)
!7227 = !{!7228, !7228, i64 0}
!7228 = !{!"0000017C2E40DF20.w4.b0", !7229, i64 0}
!7229 = !{!"0000017C2E40DF20.w8.b0", !7230, i64 0}
!7230 = !{!"0000017C2E40DF20.w16.b0", !7231, i64 0}
!7231 = !{!"0000017C2E40DF20.w32.b0", !7232, i64 0}
!7232 = !{!"0000017C2E40DF20.w64.b0", !7233, i64 0}
!7233 = !{!"0000017C2E40DF20.w128.b0", !7234, i64 0}
!7234 = !{!"0000017C2E40DF20.w256.b0", !7235, i64 0}
!7235 = !{!"0000017C2E40DF20.w512.b0", !7236, i64 0}
!7236 = !{!"0000017C2E40DF20.w1024.b0", !7237, i64 0}
!7237 = !{!"0000017C2E40DF20", !21, i64 0}
!7238 = !{!7239, !7239, i64 0}
!7239 = !{!"0000017C2E40DF20.w4.b4", !7229, i64 0}
!7240 = !{!7241, !7241, i64 0}
!7241 = !{!"0000017C2E40DF20.w4.b8", !7242, i64 0}
!7242 = !{!"0000017C2E40DF20.w8.b8", !7230, i64 0}
!7243 = !{!7244, !7244, i64 0}
!7244 = !{!"0000017C2E411E20.w8.b0", !7245, i64 0}
!7245 = !{!"0000017C2E411E20.w16.b0", !7246, i64 0}
!7246 = !{!"0000017C2E411E20.w32.b0", !7247, i64 0}
!7247 = !{!"0000017C2E411E20.w64.b0", !7248, i64 0}
!7248 = !{!"0000017C2E411E20.w128.b0", !7249, i64 0}
!7249 = !{!"0000017C2E411E20.w256.b0", !7250, i64 0}
!7250 = !{!"0000017C2E411E20.w512.b0", !7251, i64 0}
!7251 = !{!"0000017C2E411E20.w1024.b0", !7252, i64 0}
!7252 = !{!"0000017C2E411E20", !21, i64 0}
!7253 = !{!7254, !7254, i64 0}
!7254 = !{!"0000017C2E411E20.w8.b8", !7245, i64 0}
!7255 = !{!7256, !7256, i64 0}
!7256 = !{!"0000017C2E411E20.w8.b16", !7257, i64 0}
!7257 = !{!"0000017C2E411E20.w16.b16", !7246, i64 0}
!7258 = !{!7259, !7259, i64 0}
!7259 = !{!"0000017C2E411E20.w8.b24", !7257, i64 0}
!7260 = !{!7261, !7261, i64 0}
!7261 = !{!"0000017C2E4117E0.w8.b8", !7262, i64 0}
!7262 = !{!"0000017C2E4117E0.w16.b0", !7263, i64 0}
!7263 = !{!"0000017C2E4117E0.w32.b0", !7264, i64 0}
!7264 = !{!"0000017C2E4117E0.w64.b0", !7265, i64 0}
!7265 = !{!"0000017C2E4117E0.w128.b0", !7266, i64 0}
!7266 = !{!"0000017C2E4117E0.w256.b0", !7267, i64 0}
!7267 = !{!"0000017C2E4117E0.w512.b0", !7268, i64 0}
!7268 = !{!"0000017C2E4117E0.w1024.b0", !7269, i64 0}
!7269 = !{!"0000017C2E4117E0", !21, i64 0}
!7270 = !{!7271, !7271, i64 0}
!7271 = !{!"0000017C2E4117E0.w8.b16", !7272, i64 0}
!7272 = !{!"0000017C2E4117E0.w16.b16", !7263, i64 0}
!7273 = !{!7274, !7274, i64 0}
!7274 = !{!"0000017C2E4117E0.w8.b24", !7272, i64 0}
!7275 = !{!7276, !7276, i64 0}
!7276 = !{!"0000017C2E4139A0.w8.b0", !7277, i64 0}
!7277 = !{!"0000017C2E4139A0.w16.b0", !7278, i64 0}
!7278 = !{!"0000017C2E4139A0.w32.b0", !7279, i64 0}
!7279 = !{!"0000017C2E4139A0.w64.b0", !7280, i64 0}
!7280 = !{!"0000017C2E4139A0.w128.b0", !7281, i64 0}
!7281 = !{!"0000017C2E4139A0.w256.b0", !7282, i64 0}
!7282 = !{!"0000017C2E4139A0.w512.b0", !7283, i64 0}
!7283 = !{!"0000017C2E4139A0.w1024.b0", !7284, i64 0}
!7284 = !{!"0000017C2E4139A0", !21, i64 0}
!7285 = !{!7286, !7286, i64 0}
!7286 = !{!"0000017C2E4139A0.w8.b8", !7277, i64 0}
!7287 = !{!7288, !7288, i64 0}
!7288 = !{!"0000017C2E4139A0.w8.b16", !7289, i64 0}
!7289 = !{!"0000017C2E4139A0.w16.b16", !7278, i64 0}
!7290 = !{!7291, !7291, i64 0}
!7291 = !{!"0000017C2E4139A0.w8.b24", !7289, i64 0}
!7292 = !{!7293, !7293, i64 0}
!7293 = !{!"0000017C2E413C60.w8.b0", !7294, i64 0}
!7294 = !{!"0000017C2E413C60.w16.b0", !7295, i64 0}
!7295 = !{!"0000017C2E413C60.w32.b0", !7296, i64 0}
!7296 = !{!"0000017C2E413C60.w64.b0", !7297, i64 0}
!7297 = !{!"0000017C2E413C60.w128.b0", !7298, i64 0}
!7298 = !{!"0000017C2E413C60.w256.b0", !7299, i64 0}
!7299 = !{!"0000017C2E413C60.w512.b0", !7300, i64 0}
!7300 = !{!"0000017C2E413C60.w1024.b0", !7301, i64 0}
!7301 = !{!"0000017C2E413C60", !21, i64 0}
!7302 = !{!7303, !7303, i64 0}
!7303 = !{!"0000017C2E413C60.w8.b8", !7294, i64 0}
!7304 = !{!7305, !7305, i64 0}
!7305 = !{!"0000017C2E414160.w8.b0", !7306, i64 0}
!7306 = !{!"0000017C2E414160.w16.b0", !7307, i64 0}
!7307 = !{!"0000017C2E414160.w32.b0", !7308, i64 0}
!7308 = !{!"0000017C2E414160.w64.b0", !7309, i64 0}
!7309 = !{!"0000017C2E414160.w128.b0", !7310, i64 0}
!7310 = !{!"0000017C2E414160.w256.b0", !7311, i64 0}
!7311 = !{!"0000017C2E414160.w512.b0", !7312, i64 0}
!7312 = !{!"0000017C2E414160.w1024.b0", !7313, i64 0}
!7313 = !{!"0000017C2E414160", !21, i64 0}
!7314 = !{!7315, !7315, i64 0}
!7315 = !{!"0000017C2E414160.w8.b8", !7306, i64 0}
!7316 = !{!7317, !7317, i64 0}
!7317 = !{!"0000017C2E414160.w8.b16", !7318, i64 0}
!7318 = !{!"0000017C2E414160.w16.b16", !7307, i64 0}
!7319 = !{!7320, !7320, i64 0}
!7320 = !{!"0000017C2E414160.w8.b24", !7318, i64 0}
!7321 = !{!7322, !7322, i64 0}
!7322 = !{!"0000017C2E414620.w8.b8", !7323, i64 0}
!7323 = !{!"0000017C2E414620.w16.b0", !7324, i64 0}
!7324 = !{!"0000017C2E414620.w32.b0", !7325, i64 0}
!7325 = !{!"0000017C2E414620.w64.b0", !7326, i64 0}
!7326 = !{!"0000017C2E414620.w128.b0", !7327, i64 0}
!7327 = !{!"0000017C2E414620.w256.b0", !7328, i64 0}
!7328 = !{!"0000017C2E414620.w512.b0", !7329, i64 0}
!7329 = !{!"0000017C2E414620.w1024.b0", !7330, i64 0}
!7330 = !{!"0000017C2E414620", !21, i64 0}
!7331 = !{!7332, !7332, i64 0}
!7332 = !{!"0000017C2E414620.w8.b16", !7333, i64 0}
!7333 = !{!"0000017C2E414620.w16.b16", !7324, i64 0}
!7334 = !{!7335, !7335, i64 0}
!7335 = !{!"0000017C2E414620.w8.b24", !7333, i64 0}
!7336 = !{!7337, !7337, i64 0}
!7337 = !{!"0000017C2E422960.w4.b0", !7338, i64 0}
!7338 = !{!"0000017C2E422960.w8.b0", !7339, i64 0}
!7339 = !{!"0000017C2E422960.w16.b0", !7340, i64 0}
!7340 = !{!"0000017C2E422960.w32.b0", !7341, i64 0}
!7341 = !{!"0000017C2E422960.w64.b0", !7342, i64 0}
!7342 = !{!"0000017C2E422960.w128.b0", !7343, i64 0}
!7343 = !{!"0000017C2E422960.w256.b0", !7344, i64 0}
!7344 = !{!"0000017C2E422960.w512.b0", !7345, i64 0}
!7345 = !{!"0000017C2E422960.w1024.b0", !7346, i64 0}
!7346 = !{!"0000017C2E422960", !21, i64 0}
!7347 = !{!7348, !7348, i64 0}
!7348 = !{!"0000017C2E422960.w4.b4", !7338, i64 0}
!7349 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7350)
!7350 = !{!7351, !7352, !7353, !7354, !7355, !7356}
!7351 = !DILocalVariable(name: "arg1", arg: 1, scope: !7349, file: !1, type: !8)
!7352 = !DILocalVariable(name: "arg2", arg: 2, scope: !7349, file: !1, type: !9)
!7353 = !DILocalVariable(name: "arg3", arg: 3, scope: !7349, file: !1, type: !7)
!7354 = !DILocalVariable(name: "arg4", arg: 4, scope: !7349, file: !1, type: !8)
!7355 = !DILocalVariable(name: "arg5", arg: 5, scope: !7349, file: !1, type: !9)
!7356 = !DILocalVariable(name: "arg6", arg: 6, scope: !7349, file: !1, type: !8)
!7357 = !DILocation(line: 0, scope: !7349)
!7358 = !{!7359, !7359, i64 0}
!7359 = !{!"0000017C2E4FA930.w4.b0", !7360, i64 0}
!7360 = !{!"0000017C2E4FA930.w8.b0", !7361, i64 0}
!7361 = !{!"0000017C2E4FA930.w16.b0", !7362, i64 0}
!7362 = !{!"0000017C2E4FA930.w32.b0", !7363, i64 0}
!7363 = !{!"0000017C2E4FA930.w64.b0", !7364, i64 0}
!7364 = !{!"0000017C2E4FA930.w128.b0", !7365, i64 0}
!7365 = !{!"0000017C2E4FA930.w256.b0", !7366, i64 0}
!7366 = !{!"0000017C2E4FA930.w512.b0", !7367, i64 0}
!7367 = !{!"0000017C2E4FA930.w1024.b0", !7368, i64 0}
!7368 = !{!"0000017C2E4FA930", !21, i64 0}
!7369 = !{!7370, !7370, i64 0}
!7370 = !{!"0000017C2E4FA930.w4.b4", !7360, i64 0}
!7371 = !{!7372, !7372, i64 0}
!7372 = !{!"0000017C2E4FA930.w4.b8", !7373, i64 0}
!7373 = !{!"0000017C2E4FA930.w8.b8", !7361, i64 0}
!7374 = !{!7375, !7375, i64 0}
!7375 = !{!"0000017C2E500530.w8.b0", !7376, i64 0}
!7376 = !{!"0000017C2E500530.w16.b0", !7377, i64 0}
!7377 = !{!"0000017C2E500530.w32.b0", !7378, i64 0}
!7378 = !{!"0000017C2E500530.w64.b0", !7379, i64 0}
!7379 = !{!"0000017C2E500530.w128.b0", !7380, i64 0}
!7380 = !{!"0000017C2E500530.w256.b0", !7381, i64 0}
!7381 = !{!"0000017C2E500530.w512.b0", !7382, i64 0}
!7382 = !{!"0000017C2E500530.w1024.b0", !7383, i64 0}
!7383 = !{!"0000017C2E500530", !21, i64 0}
!7384 = !{!7385, !7385, i64 0}
!7385 = !{!"0000017C2E500530.w8.b8", !7376, i64 0}
!7386 = !{!7387, !7387, i64 0}
!7387 = !{!"0000017C2E500530.w8.b16", !7388, i64 0}
!7388 = !{!"0000017C2E500530.w16.b16", !7377, i64 0}
!7389 = !{!7390, !7390, i64 0}
!7390 = !{!"0000017C2E500530.w8.b24", !7388, i64 0}
!7391 = !{!7392, !7392, i64 0}
!7392 = !{!"0000017C2E5002B0.w8.b8", !7393, i64 0}
!7393 = !{!"0000017C2E5002B0.w16.b0", !7394, i64 0}
!7394 = !{!"0000017C2E5002B0.w32.b0", !7395, i64 0}
!7395 = !{!"0000017C2E5002B0.w64.b0", !7396, i64 0}
!7396 = !{!"0000017C2E5002B0.w128.b0", !7397, i64 0}
!7397 = !{!"0000017C2E5002B0.w256.b0", !7398, i64 0}
!7398 = !{!"0000017C2E5002B0.w512.b0", !7399, i64 0}
!7399 = !{!"0000017C2E5002B0.w1024.b0", !7400, i64 0}
!7400 = !{!"0000017C2E5002B0", !21, i64 0}
!7401 = !{!7402, !7402, i64 0}
!7402 = !{!"0000017C2E5002B0.w8.b16", !7403, i64 0}
!7403 = !{!"0000017C2E5002B0.w16.b16", !7394, i64 0}
!7404 = !{!7405, !7405, i64 0}
!7405 = !{!"0000017C2E5002B0.w8.b24", !7403, i64 0}
!7406 = !{!7407, !7407, i64 0}
!7407 = !{!"0000017C2E501170.w8.b0", !7408, i64 0}
!7408 = !{!"0000017C2E501170.w16.b0", !7409, i64 0}
!7409 = !{!"0000017C2E501170.w32.b0", !7410, i64 0}
!7410 = !{!"0000017C2E501170.w64.b0", !7411, i64 0}
!7411 = !{!"0000017C2E501170.w128.b0", !7412, i64 0}
!7412 = !{!"0000017C2E501170.w256.b0", !7413, i64 0}
!7413 = !{!"0000017C2E501170.w512.b0", !7414, i64 0}
!7414 = !{!"0000017C2E501170.w1024.b0", !7415, i64 0}
!7415 = !{!"0000017C2E501170", !21, i64 0}
!7416 = !{!7417, !7417, i64 0}
!7417 = !{!"0000017C2E501170.w8.b8", !7408, i64 0}
!7418 = !{!7419, !7419, i64 0}
!7419 = !{!"0000017C2E501170.w8.b16", !7420, i64 0}
!7420 = !{!"0000017C2E501170.w16.b16", !7409, i64 0}
!7421 = !{!7422, !7422, i64 0}
!7422 = !{!"0000017C2E501170.w8.b24", !7420, i64 0}
!7423 = !{!7424, !7424, i64 0}
!7424 = !{!"0000017C2E501A70.w8.b0", !7425, i64 0}
!7425 = !{!"0000017C2E501A70.w16.b0", !7426, i64 0}
!7426 = !{!"0000017C2E501A70.w32.b0", !7427, i64 0}
!7427 = !{!"0000017C2E501A70.w64.b0", !7428, i64 0}
!7428 = !{!"0000017C2E501A70.w128.b0", !7429, i64 0}
!7429 = !{!"0000017C2E501A70.w256.b0", !7430, i64 0}
!7430 = !{!"0000017C2E501A70.w512.b0", !7431, i64 0}
!7431 = !{!"0000017C2E501A70.w1024.b0", !7432, i64 0}
!7432 = !{!"0000017C2E501A70", !21, i64 0}
!7433 = !{!7434, !7434, i64 0}
!7434 = !{!"0000017C2E501A70.w8.b8", !7425, i64 0}
!7435 = !{!7436, !7436, i64 0}
!7436 = !{!"0000017C2E5017F0.w8.b0", !7437, i64 0}
!7437 = !{!"0000017C2E5017F0.w16.b0", !7438, i64 0}
!7438 = !{!"0000017C2E5017F0.w32.b0", !7439, i64 0}
!7439 = !{!"0000017C2E5017F0.w64.b0", !7440, i64 0}
!7440 = !{!"0000017C2E5017F0.w128.b0", !7441, i64 0}
!7441 = !{!"0000017C2E5017F0.w256.b0", !7442, i64 0}
!7442 = !{!"0000017C2E5017F0.w512.b0", !7443, i64 0}
!7443 = !{!"0000017C2E5017F0.w1024.b0", !7444, i64 0}
!7444 = !{!"0000017C2E5017F0", !21, i64 0}
!7445 = !{!7446, !7446, i64 0}
!7446 = !{!"0000017C2E5017F0.w8.b8", !7437, i64 0}
!7447 = !{!7448, !7448, i64 0}
!7448 = !{!"0000017C2E5017F0.w8.b16", !7449, i64 0}
!7449 = !{!"0000017C2E5017F0.w16.b16", !7438, i64 0}
!7450 = !{!7451, !7451, i64 0}
!7451 = !{!"0000017C2E5017F0.w8.b24", !7449, i64 0}
!7452 = !{!7453, !7453, i64 0}
!7453 = !{!"0000017C2E502B30.w8.b8", !7454, i64 0}
!7454 = !{!"0000017C2E502B30.w16.b0", !7455, i64 0}
!7455 = !{!"0000017C2E502B30.w32.b0", !7456, i64 0}
!7456 = !{!"0000017C2E502B30.w64.b0", !7457, i64 0}
!7457 = !{!"0000017C2E502B30.w128.b0", !7458, i64 0}
!7458 = !{!"0000017C2E502B30.w256.b0", !7459, i64 0}
!7459 = !{!"0000017C2E502B30.w512.b0", !7460, i64 0}
!7460 = !{!"0000017C2E502B30.w1024.b0", !7461, i64 0}
!7461 = !{!"0000017C2E502B30", !21, i64 0}
!7462 = !{!7463, !7463, i64 0}
!7463 = !{!"0000017C2E502B30.w8.b16", !7464, i64 0}
!7464 = !{!"0000017C2E502B30.w16.b16", !7455, i64 0}
!7465 = !{!7466, !7466, i64 0}
!7466 = !{!"0000017C2E502B30.w8.b24", !7464, i64 0}
!7467 = !{!7468, !7468, i64 0}
!7468 = !{!"0000017C2E60B4F0.w4.b0", !7469, i64 0}
!7469 = !{!"0000017C2E60B4F0.w8.b0", !7470, i64 0}
!7470 = !{!"0000017C2E60B4F0.w16.b0", !7471, i64 0}
!7471 = !{!"0000017C2E60B4F0.w32.b0", !7472, i64 0}
!7472 = !{!"0000017C2E60B4F0.w64.b0", !7473, i64 0}
!7473 = !{!"0000017C2E60B4F0.w128.b0", !7474, i64 0}
!7474 = !{!"0000017C2E60B4F0.w256.b0", !7475, i64 0}
!7475 = !{!"0000017C2E60B4F0.w512.b0", !7476, i64 0}
!7476 = !{!"0000017C2E60B4F0.w1024.b0", !7477, i64 0}
!7477 = !{!"0000017C2E60B4F0", !21, i64 0}
!7478 = !{!7479, !7479, i64 0}
!7479 = !{!"0000017C2E60B4F0.w4.b4", !7469, i64 0}
!7480 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7481)
!7481 = !{!7482, !7483, !7484, !7485, !7486, !7487}
!7482 = !DILocalVariable(name: "arg1", arg: 1, scope: !7480, file: !1, type: !8)
!7483 = !DILocalVariable(name: "arg2", arg: 2, scope: !7480, file: !1, type: !9)
!7484 = !DILocalVariable(name: "arg3", arg: 3, scope: !7480, file: !1, type: !7)
!7485 = !DILocalVariable(name: "arg4", arg: 4, scope: !7480, file: !1, type: !8)
!7486 = !DILocalVariable(name: "arg5", arg: 5, scope: !7480, file: !1, type: !9)
!7487 = !DILocalVariable(name: "arg6", arg: 6, scope: !7480, file: !1, type: !8)
!7488 = !DILocation(line: 0, scope: !7480)
!7489 = !{!7490, !7490, i64 0}
!7490 = !{!"0000017C2E490EB0.w4.b0", !7491, i64 0}
!7491 = !{!"0000017C2E490EB0.w8.b0", !7492, i64 0}
!7492 = !{!"0000017C2E490EB0.w16.b0", !7493, i64 0}
!7493 = !{!"0000017C2E490EB0.w32.b0", !7494, i64 0}
!7494 = !{!"0000017C2E490EB0.w64.b0", !7495, i64 0}
!7495 = !{!"0000017C2E490EB0.w128.b0", !7496, i64 0}
!7496 = !{!"0000017C2E490EB0.w256.b0", !7497, i64 0}
!7497 = !{!"0000017C2E490EB0.w512.b0", !7498, i64 0}
!7498 = !{!"0000017C2E490EB0.w1024.b0", !7499, i64 0}
!7499 = !{!"0000017C2E490EB0", !21, i64 0}
!7500 = !{!7501, !7501, i64 0}
!7501 = !{!"0000017C2E490EB0.w4.b4", !7491, i64 0}
!7502 = !{!7503, !7503, i64 0}
!7503 = !{!"0000017C2E490EB0.w4.b8", !7504, i64 0}
!7504 = !{!"0000017C2E490EB0.w8.b8", !7492, i64 0}
!7505 = !{!7506, !7506, i64 0}
!7506 = !{!"0000017C2E491EB0.w8.b0", !7507, i64 0}
!7507 = !{!"0000017C2E491EB0.w16.b0", !7508, i64 0}
!7508 = !{!"0000017C2E491EB0.w32.b0", !7509, i64 0}
!7509 = !{!"0000017C2E491EB0.w64.b0", !7510, i64 0}
!7510 = !{!"0000017C2E491EB0.w128.b0", !7511, i64 0}
!7511 = !{!"0000017C2E491EB0.w256.b0", !7512, i64 0}
!7512 = !{!"0000017C2E491EB0.w512.b0", !7513, i64 0}
!7513 = !{!"0000017C2E491EB0.w1024.b0", !7514, i64 0}
!7514 = !{!"0000017C2E491EB0", !21, i64 0}
!7515 = !{!7516, !7516, i64 0}
!7516 = !{!"0000017C2E491EB0.w8.b8", !7507, i64 0}
!7517 = !{!7518, !7518, i64 0}
!7518 = !{!"0000017C2E491EB0.w8.b16", !7519, i64 0}
!7519 = !{!"0000017C2E491EB0.w16.b16", !7508, i64 0}
!7520 = !{!7521, !7521, i64 0}
!7521 = !{!"0000017C2E491EB0.w8.b24", !7519, i64 0}
!7522 = !{!7523, !7523, i64 0}
!7523 = !{!"0000017C2E492070.w8.b8", !7524, i64 0}
!7524 = !{!"0000017C2E492070.w16.b0", !7525, i64 0}
!7525 = !{!"0000017C2E492070.w32.b0", !7526, i64 0}
!7526 = !{!"0000017C2E492070.w64.b0", !7527, i64 0}
!7527 = !{!"0000017C2E492070.w128.b0", !7528, i64 0}
!7528 = !{!"0000017C2E492070.w256.b0", !7529, i64 0}
!7529 = !{!"0000017C2E492070.w512.b0", !7530, i64 0}
!7530 = !{!"0000017C2E492070.w1024.b0", !7531, i64 0}
!7531 = !{!"0000017C2E492070", !21, i64 0}
!7532 = !{!7533, !7533, i64 0}
!7533 = !{!"0000017C2E492070.w8.b16", !7534, i64 0}
!7534 = !{!"0000017C2E492070.w16.b16", !7525, i64 0}
!7535 = !{!7536, !7536, i64 0}
!7536 = !{!"0000017C2E492070.w8.b24", !7534, i64 0}
!7537 = !{!7538, !7538, i64 0}
!7538 = !{!"0000017C2E4914B0.w8.b0", !7539, i64 0}
!7539 = !{!"0000017C2E4914B0.w16.b0", !7540, i64 0}
!7540 = !{!"0000017C2E4914B0.w32.b0", !7541, i64 0}
!7541 = !{!"0000017C2E4914B0.w64.b0", !7542, i64 0}
!7542 = !{!"0000017C2E4914B0.w128.b0", !7543, i64 0}
!7543 = !{!"0000017C2E4914B0.w256.b0", !7544, i64 0}
!7544 = !{!"0000017C2E4914B0.w512.b0", !7545, i64 0}
!7545 = !{!"0000017C2E4914B0.w1024.b0", !7546, i64 0}
!7546 = !{!"0000017C2E4914B0", !21, i64 0}
!7547 = !{!7548, !7548, i64 0}
!7548 = !{!"0000017C2E4914B0.w8.b8", !7539, i64 0}
!7549 = !{!7550, !7550, i64 0}
!7550 = !{!"0000017C2E4914B0.w8.b16", !7551, i64 0}
!7551 = !{!"0000017C2E4914B0.w16.b16", !7540, i64 0}
!7552 = !{!7553, !7553, i64 0}
!7553 = !{!"0000017C2E4914B0.w8.b24", !7551, i64 0}
!7554 = !{!7555, !7555, i64 0}
!7555 = !{!"0000017C2E492CB0.w8.b0", !7556, i64 0}
!7556 = !{!"0000017C2E492CB0.w16.b0", !7557, i64 0}
!7557 = !{!"0000017C2E492CB0.w32.b0", !7558, i64 0}
!7558 = !{!"0000017C2E492CB0.w64.b0", !7559, i64 0}
!7559 = !{!"0000017C2E492CB0.w128.b0", !7560, i64 0}
!7560 = !{!"0000017C2E492CB0.w256.b0", !7561, i64 0}
!7561 = !{!"0000017C2E492CB0.w512.b0", !7562, i64 0}
!7562 = !{!"0000017C2E492CB0.w1024.b0", !7563, i64 0}
!7563 = !{!"0000017C2E492CB0", !21, i64 0}
!7564 = !{!7565, !7565, i64 0}
!7565 = !{!"0000017C2E492CB0.w8.b8", !7556, i64 0}
!7566 = !{!7567, !7567, i64 0}
!7567 = !{!"0000017C2E4922B0.w8.b0", !7568, i64 0}
!7568 = !{!"0000017C2E4922B0.w16.b0", !7569, i64 0}
!7569 = !{!"0000017C2E4922B0.w32.b0", !7570, i64 0}
!7570 = !{!"0000017C2E4922B0.w64.b0", !7571, i64 0}
!7571 = !{!"0000017C2E4922B0.w128.b0", !7572, i64 0}
!7572 = !{!"0000017C2E4922B0.w256.b0", !7573, i64 0}
!7573 = !{!"0000017C2E4922B0.w512.b0", !7574, i64 0}
!7574 = !{!"0000017C2E4922B0.w1024.b0", !7575, i64 0}
!7575 = !{!"0000017C2E4922B0", !21, i64 0}
!7576 = !{!7577, !7577, i64 0}
!7577 = !{!"0000017C2E4922B0.w8.b8", !7568, i64 0}
!7578 = !{!7579, !7579, i64 0}
!7579 = !{!"0000017C2E4922B0.w8.b16", !7580, i64 0}
!7580 = !{!"0000017C2E4922B0.w16.b16", !7569, i64 0}
!7581 = !{!7582, !7582, i64 0}
!7582 = !{!"0000017C2E4922B0.w8.b24", !7580, i64 0}
!7583 = !{!7584, !7584, i64 0}
!7584 = !{!"0000017C2E4936F0.w8.b8", !7585, i64 0}
!7585 = !{!"0000017C2E4936F0.w16.b0", !7586, i64 0}
!7586 = !{!"0000017C2E4936F0.w32.b0", !7587, i64 0}
!7587 = !{!"0000017C2E4936F0.w64.b0", !7588, i64 0}
!7588 = !{!"0000017C2E4936F0.w128.b0", !7589, i64 0}
!7589 = !{!"0000017C2E4936F0.w256.b0", !7590, i64 0}
!7590 = !{!"0000017C2E4936F0.w512.b0", !7591, i64 0}
!7591 = !{!"0000017C2E4936F0.w1024.b0", !7592, i64 0}
!7592 = !{!"0000017C2E4936F0", !21, i64 0}
!7593 = !{!7594, !7594, i64 0}
!7594 = !{!"0000017C2E4936F0.w8.b16", !7595, i64 0}
!7595 = !{!"0000017C2E4936F0.w16.b16", !7586, i64 0}
!7596 = !{!7597, !7597, i64 0}
!7597 = !{!"0000017C2E4936F0.w8.b24", !7595, i64 0}
!7598 = !{!7599, !7599, i64 0}
!7599 = !{!"0000017C2E365BB0.w4.b0", !7600, i64 0}
!7600 = !{!"0000017C2E365BB0.w8.b0", !7601, i64 0}
!7601 = !{!"0000017C2E365BB0.w16.b0", !7602, i64 0}
!7602 = !{!"0000017C2E365BB0.w32.b0", !7603, i64 0}
!7603 = !{!"0000017C2E365BB0.w64.b0", !7604, i64 0}
!7604 = !{!"0000017C2E365BB0.w128.b0", !7605, i64 0}
!7605 = !{!"0000017C2E365BB0.w256.b0", !7606, i64 0}
!7606 = !{!"0000017C2E365BB0.w512.b0", !7607, i64 0}
!7607 = !{!"0000017C2E365BB0.w1024.b0", !7608, i64 0}
!7608 = !{!"0000017C2E365BB0", !21, i64 0}
!7609 = !{!7610, !7610, i64 0}
!7610 = !{!"0000017C2E365BB0.w4.b4", !7600, i64 0}
!7611 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7612)
!7612 = !{!7613, !7614, !7615, !7616, !7617, !7618}
!7613 = !DILocalVariable(name: "arg1", arg: 1, scope: !7611, file: !1, type: !8)
!7614 = !DILocalVariable(name: "arg2", arg: 2, scope: !7611, file: !1, type: !9)
!7615 = !DILocalVariable(name: "arg3", arg: 3, scope: !7611, file: !1, type: !7)
!7616 = !DILocalVariable(name: "arg4", arg: 4, scope: !7611, file: !1, type: !8)
!7617 = !DILocalVariable(name: "arg5", arg: 5, scope: !7611, file: !1, type: !9)
!7618 = !DILocalVariable(name: "arg6", arg: 6, scope: !7611, file: !1, type: !8)
!7619 = !DILocation(line: 0, scope: !7611)
!7620 = !{!7621, !7621, i64 0}
!7621 = !{!"0000017C2E35FA30.w4.b0", !7622, i64 0}
!7622 = !{!"0000017C2E35FA30.w8.b0", !7623, i64 0}
!7623 = !{!"0000017C2E35FA30.w16.b0", !7624, i64 0}
!7624 = !{!"0000017C2E35FA30.w32.b0", !7625, i64 0}
!7625 = !{!"0000017C2E35FA30.w64.b0", !7626, i64 0}
!7626 = !{!"0000017C2E35FA30.w128.b0", !7627, i64 0}
!7627 = !{!"0000017C2E35FA30.w256.b0", !7628, i64 0}
!7628 = !{!"0000017C2E35FA30.w512.b0", !7629, i64 0}
!7629 = !{!"0000017C2E35FA30.w1024.b0", !7630, i64 0}
!7630 = !{!"0000017C2E35FA30", !21, i64 0}
!7631 = !{!7632, !7632, i64 0}
!7632 = !{!"0000017C2E35FA30.w4.b4", !7622, i64 0}
!7633 = !{!7634, !7634, i64 0}
!7634 = !{!"0000017C2E35FA30.w4.b8", !7635, i64 0}
!7635 = !{!"0000017C2E35FA30.w8.b8", !7623, i64 0}
!7636 = !{!7637, !7637, i64 0}
!7637 = !{!"0000017C2E365CB0.w8.b0", !7638, i64 0}
!7638 = !{!"0000017C2E365CB0.w16.b0", !7639, i64 0}
!7639 = !{!"0000017C2E365CB0.w32.b0", !7640, i64 0}
!7640 = !{!"0000017C2E365CB0.w64.b0", !7641, i64 0}
!7641 = !{!"0000017C2E365CB0.w128.b0", !7642, i64 0}
!7642 = !{!"0000017C2E365CB0.w256.b0", !7643, i64 0}
!7643 = !{!"0000017C2E365CB0.w512.b0", !7644, i64 0}
!7644 = !{!"0000017C2E365CB0.w1024.b0", !7645, i64 0}
!7645 = !{!"0000017C2E365CB0", !21, i64 0}
!7646 = !{!7647, !7647, i64 0}
!7647 = !{!"0000017C2E365CB0.w8.b8", !7638, i64 0}
!7648 = !{!7649, !7649, i64 0}
!7649 = !{!"0000017C2E365CB0.w8.b16", !7650, i64 0}
!7650 = !{!"0000017C2E365CB0.w16.b16", !7639, i64 0}
!7651 = !{!7652, !7652, i64 0}
!7652 = !{!"0000017C2E365CB0.w8.b24", !7650, i64 0}
!7653 = !{!7654, !7654, i64 0}
!7654 = !{!"0000017C2E366EB0.w8.b8", !7655, i64 0}
!7655 = !{!"0000017C2E366EB0.w16.b0", !7656, i64 0}
!7656 = !{!"0000017C2E366EB0.w32.b0", !7657, i64 0}
!7657 = !{!"0000017C2E366EB0.w64.b0", !7658, i64 0}
!7658 = !{!"0000017C2E366EB0.w128.b0", !7659, i64 0}
!7659 = !{!"0000017C2E366EB0.w256.b0", !7660, i64 0}
!7660 = !{!"0000017C2E366EB0.w512.b0", !7661, i64 0}
!7661 = !{!"0000017C2E366EB0.w1024.b0", !7662, i64 0}
!7662 = !{!"0000017C2E366EB0", !21, i64 0}
!7663 = !{!7664, !7664, i64 0}
!7664 = !{!"0000017C2E366EB0.w8.b16", !7665, i64 0}
!7665 = !{!"0000017C2E366EB0.w16.b16", !7656, i64 0}
!7666 = !{!7667, !7667, i64 0}
!7667 = !{!"0000017C2E366EB0.w8.b24", !7665, i64 0}
!7668 = !{!7669, !7669, i64 0}
!7669 = !{!"0000017C2E366BF0.w8.b0", !7670, i64 0}
!7670 = !{!"0000017C2E366BF0.w16.b0", !7671, i64 0}
!7671 = !{!"0000017C2E366BF0.w32.b0", !7672, i64 0}
!7672 = !{!"0000017C2E366BF0.w64.b0", !7673, i64 0}
!7673 = !{!"0000017C2E366BF0.w128.b0", !7674, i64 0}
!7674 = !{!"0000017C2E366BF0.w256.b0", !7675, i64 0}
!7675 = !{!"0000017C2E366BF0.w512.b0", !7676, i64 0}
!7676 = !{!"0000017C2E366BF0.w1024.b0", !7677, i64 0}
!7677 = !{!"0000017C2E366BF0", !21, i64 0}
!7678 = !{!7679, !7679, i64 0}
!7679 = !{!"0000017C2E366BF0.w8.b8", !7670, i64 0}
!7680 = !{!7681, !7681, i64 0}
!7681 = !{!"0000017C2E366BF0.w8.b16", !7682, i64 0}
!7682 = !{!"0000017C2E366BF0.w16.b16", !7671, i64 0}
!7683 = !{!7684, !7684, i64 0}
!7684 = !{!"0000017C2E366BF0.w8.b24", !7682, i64 0}
!7685 = !{!7686, !7686, i64 0}
!7686 = !{!"0000017C2E367730.w8.b0", !7687, i64 0}
!7687 = !{!"0000017C2E367730.w16.b0", !7688, i64 0}
!7688 = !{!"0000017C2E367730.w32.b0", !7689, i64 0}
!7689 = !{!"0000017C2E367730.w64.b0", !7690, i64 0}
!7690 = !{!"0000017C2E367730.w128.b0", !7691, i64 0}
!7691 = !{!"0000017C2E367730.w256.b0", !7692, i64 0}
!7692 = !{!"0000017C2E367730.w512.b0", !7693, i64 0}
!7693 = !{!"0000017C2E367730.w1024.b0", !7694, i64 0}
!7694 = !{!"0000017C2E367730", !21, i64 0}
!7695 = !{!7696, !7696, i64 0}
!7696 = !{!"0000017C2E367730.w8.b8", !7687, i64 0}
!7697 = !{!7698, !7698, i64 0}
!7698 = !{!"0000017C2E367BF0.w8.b0", !7699, i64 0}
!7699 = !{!"0000017C2E367BF0.w16.b0", !7700, i64 0}
!7700 = !{!"0000017C2E367BF0.w32.b0", !7701, i64 0}
!7701 = !{!"0000017C2E367BF0.w64.b0", !7702, i64 0}
!7702 = !{!"0000017C2E367BF0.w128.b0", !7703, i64 0}
!7703 = !{!"0000017C2E367BF0.w256.b0", !7704, i64 0}
!7704 = !{!"0000017C2E367BF0.w512.b0", !7705, i64 0}
!7705 = !{!"0000017C2E367BF0.w1024.b0", !7706, i64 0}
!7706 = !{!"0000017C2E367BF0", !21, i64 0}
!7707 = !{!7708, !7708, i64 0}
!7708 = !{!"0000017C2E367BF0.w8.b8", !7699, i64 0}
!7709 = !{!7710, !7710, i64 0}
!7710 = !{!"0000017C2E367BF0.w8.b16", !7711, i64 0}
!7711 = !{!"0000017C2E367BF0.w16.b16", !7700, i64 0}
!7712 = !{!7713, !7713, i64 0}
!7713 = !{!"0000017C2E367BF0.w8.b24", !7711, i64 0}
!7714 = !{!7715, !7715, i64 0}
!7715 = !{!"0000017C2E367CB0.w8.b8", !7716, i64 0}
!7716 = !{!"0000017C2E367CB0.w16.b0", !7717, i64 0}
!7717 = !{!"0000017C2E367CB0.w32.b0", !7718, i64 0}
!7718 = !{!"0000017C2E367CB0.w64.b0", !7719, i64 0}
!7719 = !{!"0000017C2E367CB0.w128.b0", !7720, i64 0}
!7720 = !{!"0000017C2E367CB0.w256.b0", !7721, i64 0}
!7721 = !{!"0000017C2E367CB0.w512.b0", !7722, i64 0}
!7722 = !{!"0000017C2E367CB0.w1024.b0", !7723, i64 0}
!7723 = !{!"0000017C2E367CB0", !21, i64 0}
!7724 = !{!7725, !7725, i64 0}
!7725 = !{!"0000017C2E367CB0.w8.b16", !7726, i64 0}
!7726 = !{!"0000017C2E367CB0.w16.b16", !7717, i64 0}
!7727 = !{!7728, !7728, i64 0}
!7728 = !{!"0000017C2E367CB0.w8.b24", !7726, i64 0}
!7729 = !{!7730, !7730, i64 0}
!7730 = !{!"0000017C2E415D20.w4.b0", !7731, i64 0}
!7731 = !{!"0000017C2E415D20.w8.b0", !7732, i64 0}
!7732 = !{!"0000017C2E415D20.w16.b0", !7733, i64 0}
!7733 = !{!"0000017C2E415D20.w32.b0", !7734, i64 0}
!7734 = !{!"0000017C2E415D20.w64.b0", !7735, i64 0}
!7735 = !{!"0000017C2E415D20.w128.b0", !7736, i64 0}
!7736 = !{!"0000017C2E415D20.w256.b0", !7737, i64 0}
!7737 = !{!"0000017C2E415D20.w512.b0", !7738, i64 0}
!7738 = !{!"0000017C2E415D20.w1024.b0", !7739, i64 0}
!7739 = !{!"0000017C2E415D20", !21, i64 0}
!7740 = !{!7741, !7741, i64 0}
!7741 = !{!"0000017C2E415D20.w4.b4", !7731, i64 0}
!7742 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7743)
!7743 = !{!7744, !7745, !7746, !7747, !7748, !7749}
!7744 = !DILocalVariable(name: "arg1", arg: 1, scope: !7742, file: !1, type: !8)
!7745 = !DILocalVariable(name: "arg2", arg: 2, scope: !7742, file: !1, type: !9)
!7746 = !DILocalVariable(name: "arg3", arg: 3, scope: !7742, file: !1, type: !7)
!7747 = !DILocalVariable(name: "arg4", arg: 4, scope: !7742, file: !1, type: !8)
!7748 = !DILocalVariable(name: "arg5", arg: 5, scope: !7742, file: !1, type: !9)
!7749 = !DILocalVariable(name: "arg6", arg: 6, scope: !7742, file: !1, type: !8)
!7750 = !DILocation(line: 0, scope: !7742)
!7751 = !{!7752, !7752, i64 0}
!7752 = !{!"0000017C2E415120.w4.b0", !7753, i64 0}
!7753 = !{!"0000017C2E415120.w8.b0", !7754, i64 0}
!7754 = !{!"0000017C2E415120.w16.b0", !7755, i64 0}
!7755 = !{!"0000017C2E415120.w32.b0", !7756, i64 0}
!7756 = !{!"0000017C2E415120.w64.b0", !7757, i64 0}
!7757 = !{!"0000017C2E415120.w128.b0", !7758, i64 0}
!7758 = !{!"0000017C2E415120.w256.b0", !7759, i64 0}
!7759 = !{!"0000017C2E415120.w512.b0", !7760, i64 0}
!7760 = !{!"0000017C2E415120.w1024.b0", !7761, i64 0}
!7761 = !{!"0000017C2E415120", !21, i64 0}
!7762 = !{!7763, !7763, i64 0}
!7763 = !{!"0000017C2E415120.w4.b4", !7753, i64 0}
!7764 = !{!7765, !7765, i64 0}
!7765 = !{!"0000017C2E415120.w4.b8", !7766, i64 0}
!7766 = !{!"0000017C2E415120.w8.b8", !7754, i64 0}
!7767 = !{!7768, !7768, i64 0}
!7768 = !{!"0000017C2E418860.w8.b0", !7769, i64 0}
!7769 = !{!"0000017C2E418860.w16.b0", !7770, i64 0}
!7770 = !{!"0000017C2E418860.w32.b0", !7771, i64 0}
!7771 = !{!"0000017C2E418860.w64.b0", !7772, i64 0}
!7772 = !{!"0000017C2E418860.w128.b0", !7773, i64 0}
!7773 = !{!"0000017C2E418860.w256.b0", !7774, i64 0}
!7774 = !{!"0000017C2E418860.w512.b0", !7775, i64 0}
!7775 = !{!"0000017C2E418860.w1024.b0", !7776, i64 0}
!7776 = !{!"0000017C2E418860", !21, i64 0}
!7777 = !{!7778, !7778, i64 0}
!7778 = !{!"0000017C2E418860.w8.b8", !7769, i64 0}
!7779 = !{!7780, !7780, i64 0}
!7780 = !{!"0000017C2E418860.w8.b16", !7781, i64 0}
!7781 = !{!"0000017C2E418860.w16.b16", !7770, i64 0}
!7782 = !{!7783, !7783, i64 0}
!7783 = !{!"0000017C2E418860.w8.b24", !7781, i64 0}
!7784 = !{!7785, !7785, i64 0}
!7785 = !{!"0000017C2E419920.w8.b8", !7786, i64 0}
!7786 = !{!"0000017C2E419920.w16.b0", !7787, i64 0}
!7787 = !{!"0000017C2E419920.w32.b0", !7788, i64 0}
!7788 = !{!"0000017C2E419920.w64.b0", !7789, i64 0}
!7789 = !{!"0000017C2E419920.w128.b0", !7790, i64 0}
!7790 = !{!"0000017C2E419920.w256.b0", !7791, i64 0}
!7791 = !{!"0000017C2E419920.w512.b0", !7792, i64 0}
!7792 = !{!"0000017C2E419920.w1024.b0", !7793, i64 0}
!7793 = !{!"0000017C2E419920", !21, i64 0}
!7794 = !{!7795, !7795, i64 0}
!7795 = !{!"0000017C2E419920.w8.b16", !7796, i64 0}
!7796 = !{!"0000017C2E419920.w16.b16", !7787, i64 0}
!7797 = !{!7798, !7798, i64 0}
!7798 = !{!"0000017C2E419920.w8.b24", !7796, i64 0}
!7799 = !{!7800, !7800, i64 0}
!7800 = !{!"0000017C2E41B9E0.w8.b0", !7801, i64 0}
!7801 = !{!"0000017C2E41B9E0.w16.b0", !7802, i64 0}
!7802 = !{!"0000017C2E41B9E0.w32.b0", !7803, i64 0}
!7803 = !{!"0000017C2E41B9E0.w64.b0", !7804, i64 0}
!7804 = !{!"0000017C2E41B9E0.w128.b0", !7805, i64 0}
!7805 = !{!"0000017C2E41B9E0.w256.b0", !7806, i64 0}
!7806 = !{!"0000017C2E41B9E0.w512.b0", !7807, i64 0}
!7807 = !{!"0000017C2E41B9E0.w1024.b0", !7808, i64 0}
!7808 = !{!"0000017C2E41B9E0", !21, i64 0}
!7809 = !{!7810, !7810, i64 0}
!7810 = !{!"0000017C2E41B9E0.w8.b8", !7801, i64 0}
!7811 = !{!7812, !7812, i64 0}
!7812 = !{!"0000017C2E41B9E0.w8.b16", !7813, i64 0}
!7813 = !{!"0000017C2E41B9E0.w16.b16", !7802, i64 0}
!7814 = !{!7815, !7815, i64 0}
!7815 = !{!"0000017C2E41B9E0.w8.b24", !7813, i64 0}
!7816 = !{!7817, !7817, i64 0}
!7817 = !{!"0000017C2E41B820.w8.b0", !7818, i64 0}
!7818 = !{!"0000017C2E41B820.w16.b0", !7819, i64 0}
!7819 = !{!"0000017C2E41B820.w32.b0", !7820, i64 0}
!7820 = !{!"0000017C2E41B820.w64.b0", !7821, i64 0}
!7821 = !{!"0000017C2E41B820.w128.b0", !7822, i64 0}
!7822 = !{!"0000017C2E41B820.w256.b0", !7823, i64 0}
!7823 = !{!"0000017C2E41B820.w512.b0", !7824, i64 0}
!7824 = !{!"0000017C2E41B820.w1024.b0", !7825, i64 0}
!7825 = !{!"0000017C2E41B820", !21, i64 0}
!7826 = !{!7827, !7827, i64 0}
!7827 = !{!"0000017C2E41B820.w8.b8", !7818, i64 0}
!7828 = !{!7829, !7829, i64 0}
!7829 = !{!"0000017C2E41B820.w8.b16", !7830, i64 0}
!7830 = !{!"0000017C2E41B820.w16.b16", !7819, i64 0}
!7831 = !{!7832, !7832, i64 0}
!7832 = !{!"0000017C2E41B820.w8.b24", !7830, i64 0}
!7833 = !{!7834, !7834, i64 0}
!7834 = !{!"0000017C2E41C6A0.w8.b0", !7835, i64 0}
!7835 = !{!"0000017C2E41C6A0.w16.b0", !7836, i64 0}
!7836 = !{!"0000017C2E41C6A0.w32.b0", !7837, i64 0}
!7837 = !{!"0000017C2E41C6A0.w64.b0", !7838, i64 0}
!7838 = !{!"0000017C2E41C6A0.w128.b0", !7839, i64 0}
!7839 = !{!"0000017C2E41C6A0.w256.b0", !7840, i64 0}
!7840 = !{!"0000017C2E41C6A0.w512.b0", !7841, i64 0}
!7841 = !{!"0000017C2E41C6A0.w1024.b0", !7842, i64 0}
!7842 = !{!"0000017C2E41C6A0", !21, i64 0}
!7843 = !{!7844, !7844, i64 0}
!7844 = !{!"0000017C2E41C6A0.w8.b8", !7835, i64 0}
!7845 = !{!7846, !7846, i64 0}
!7846 = !{!"0000017C2E41C6A0.w8.b16", !7847, i64 0}
!7847 = !{!"0000017C2E41C6A0.w16.b16", !7836, i64 0}
!7848 = !{!7849, !7849, i64 0}
!7849 = !{!"0000017C2E41C6A0.w8.b24", !7847, i64 0}
!7850 = !{!7851, !7851, i64 0}
!7851 = !{!"0000017C2E41CFA0.w8.b8", !7852, i64 0}
!7852 = !{!"0000017C2E41CFA0.w16.b0", !7853, i64 0}
!7853 = !{!"0000017C2E41CFA0.w32.b0", !7854, i64 0}
!7854 = !{!"0000017C2E41CFA0.w64.b0", !7855, i64 0}
!7855 = !{!"0000017C2E41CFA0.w128.b0", !7856, i64 0}
!7856 = !{!"0000017C2E41CFA0.w256.b0", !7857, i64 0}
!7857 = !{!"0000017C2E41CFA0.w512.b0", !7858, i64 0}
!7858 = !{!"0000017C2E41CFA0.w1024.b0", !7859, i64 0}
!7859 = !{!"0000017C2E41CFA0", !21, i64 0}
!7860 = !{!7861, !7861, i64 0}
!7861 = !{!"0000017C2E41CFA0.w8.b16", !7862, i64 0}
!7862 = !{!"0000017C2E41CFA0.w16.b16", !7853, i64 0}
!7863 = !{!7864, !7864, i64 0}
!7864 = !{!"0000017C2E41CFA0.w8.b24", !7862, i64 0}
!7865 = !{!7866, !7866, i64 0}
!7866 = !{!"0000017C2E2F40B0.w4.b0", !7867, i64 0}
!7867 = !{!"0000017C2E2F40B0.w8.b0", !7868, i64 0}
!7868 = !{!"0000017C2E2F40B0.w16.b0", !7869, i64 0}
!7869 = !{!"0000017C2E2F40B0.w32.b0", !7870, i64 0}
!7870 = !{!"0000017C2E2F40B0.w64.b0", !7871, i64 0}
!7871 = !{!"0000017C2E2F40B0.w128.b0", !7872, i64 0}
!7872 = !{!"0000017C2E2F40B0.w256.b0", !7873, i64 0}
!7873 = !{!"0000017C2E2F40B0.w512.b0", !7874, i64 0}
!7874 = !{!"0000017C2E2F40B0.w1024.b0", !7875, i64 0}
!7875 = !{!"0000017C2E2F40B0", !21, i64 0}
!7876 = !{!7877, !7877, i64 0}
!7877 = !{!"0000017C2E2F40B0.w4.b4", !7867, i64 0}
!7878 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7879)
!7879 = !{!7880, !7881, !7882, !7883, !7884, !7885}
!7880 = !DILocalVariable(name: "arg1", arg: 1, scope: !7878, file: !1, type: !8)
!7881 = !DILocalVariable(name: "arg2", arg: 2, scope: !7878, file: !1, type: !9)
!7882 = !DILocalVariable(name: "arg3", arg: 3, scope: !7878, file: !1, type: !7)
!7883 = !DILocalVariable(name: "arg4", arg: 4, scope: !7878, file: !1, type: !8)
!7884 = !DILocalVariable(name: "arg5", arg: 5, scope: !7878, file: !1, type: !9)
!7885 = !DILocalVariable(name: "arg6", arg: 6, scope: !7878, file: !1, type: !8)
!7886 = !DILocation(line: 0, scope: !7878)
!7887 = !{!7888, !7888, i64 0}
!7888 = !{!"0000017C22C04420.w4.b0", !7889, i64 0}
!7889 = !{!"0000017C22C04420.w8.b0", !7890, i64 0}
!7890 = !{!"0000017C22C04420.w16.b0", !7891, i64 0}
!7891 = !{!"0000017C22C04420.w32.b0", !7892, i64 0}
!7892 = !{!"0000017C22C04420.w64.b0", !7893, i64 0}
!7893 = !{!"0000017C22C04420.w128.b0", !7894, i64 0}
!7894 = !{!"0000017C22C04420.w256.b0", !7895, i64 0}
!7895 = !{!"0000017C22C04420.w512.b0", !7896, i64 0}
!7896 = !{!"0000017C22C04420.w1024.b0", !7897, i64 0}
!7897 = !{!"0000017C22C04420", !21, i64 0}
!7898 = !{!7899, !7899, i64 0}
!7899 = !{!"0000017C22C04420.w4.b4", !7889, i64 0}
!7900 = !{!7901, !7901, i64 0}
!7901 = !{!"0000017C22C04420.w4.b8", !7902, i64 0}
!7902 = !{!"0000017C22C04420.w8.b8", !7890, i64 0}
!7903 = !{!7904, !7904, i64 0}
!7904 = !{!"0000017C22C09CE0.w8.b0", !7905, i64 0}
!7905 = !{!"0000017C22C09CE0.w16.b0", !7906, i64 0}
!7906 = !{!"0000017C22C09CE0.w32.b0", !7907, i64 0}
!7907 = !{!"0000017C22C09CE0.w64.b0", !7908, i64 0}
!7908 = !{!"0000017C22C09CE0.w128.b0", !7909, i64 0}
!7909 = !{!"0000017C22C09CE0.w256.b0", !7910, i64 0}
!7910 = !{!"0000017C22C09CE0.w512.b0", !7911, i64 0}
!7911 = !{!"0000017C22C09CE0.w1024.b0", !7912, i64 0}
!7912 = !{!"0000017C22C09CE0", !21, i64 0}
!7913 = !{!7914, !7914, i64 0}
!7914 = !{!"0000017C22C09CE0.w8.b8", !7905, i64 0}
!7915 = !{!7916, !7916, i64 0}
!7916 = !{!"0000017C22C09CE0.w8.b16", !7917, i64 0}
!7917 = !{!"0000017C22C09CE0.w16.b16", !7906, i64 0}
!7918 = !{!7919, !7919, i64 0}
!7919 = !{!"0000017C22C09CE0.w8.b24", !7917, i64 0}
!7920 = !{!7921, !7921, i64 0}
!7921 = !{!"0000017C22C0A560.w8.b8", !7922, i64 0}
!7922 = !{!"0000017C22C0A560.w16.b0", !7923, i64 0}
!7923 = !{!"0000017C22C0A560.w32.b0", !7924, i64 0}
!7924 = !{!"0000017C22C0A560.w64.b0", !7925, i64 0}
!7925 = !{!"0000017C22C0A560.w128.b0", !7926, i64 0}
!7926 = !{!"0000017C22C0A560.w256.b0", !7927, i64 0}
!7927 = !{!"0000017C22C0A560.w512.b0", !7928, i64 0}
!7928 = !{!"0000017C22C0A560.w1024.b0", !7929, i64 0}
!7929 = !{!"0000017C22C0A560", !21, i64 0}
!7930 = !{!7931, !7931, i64 0}
!7931 = !{!"0000017C22C0A560.w8.b16", !7932, i64 0}
!7932 = !{!"0000017C22C0A560.w16.b16", !7923, i64 0}
!7933 = !{!7934, !7934, i64 0}
!7934 = !{!"0000017C22C0A560.w8.b24", !7932, i64 0}
!7935 = !{!7936, !7936, i64 0}
!7936 = !{!"0000017C22C0BDA0.w8.b0", !7937, i64 0}
!7937 = !{!"0000017C22C0BDA0.w16.b0", !7938, i64 0}
!7938 = !{!"0000017C22C0BDA0.w32.b0", !7939, i64 0}
!7939 = !{!"0000017C22C0BDA0.w64.b0", !7940, i64 0}
!7940 = !{!"0000017C22C0BDA0.w128.b0", !7941, i64 0}
!7941 = !{!"0000017C22C0BDA0.w256.b0", !7942, i64 0}
!7942 = !{!"0000017C22C0BDA0.w512.b0", !7943, i64 0}
!7943 = !{!"0000017C22C0BDA0.w1024.b0", !7944, i64 0}
!7944 = !{!"0000017C22C0BDA0", !21, i64 0}
!7945 = !{!7946, !7946, i64 0}
!7946 = !{!"0000017C22C0BDA0.w8.b8", !7937, i64 0}
!7947 = !{!7948, !7948, i64 0}
!7948 = !{!"0000017C22C0BDA0.w8.b16", !7949, i64 0}
!7949 = !{!"0000017C22C0BDA0.w16.b16", !7938, i64 0}
!7950 = !{!7951, !7951, i64 0}
!7951 = !{!"0000017C22C0BDA0.w8.b24", !7949, i64 0}
!7952 = !{!7953, !7953, i64 0}
!7953 = !{!"0000017C22C0D0E0.w8.b0", !7954, i64 0}
!7954 = !{!"0000017C22C0D0E0.w16.b0", !7955, i64 0}
!7955 = !{!"0000017C22C0D0E0.w32.b0", !7956, i64 0}
!7956 = !{!"0000017C22C0D0E0.w64.b0", !7957, i64 0}
!7957 = !{!"0000017C22C0D0E0.w128.b0", !7958, i64 0}
!7958 = !{!"0000017C22C0D0E0.w256.b0", !7959, i64 0}
!7959 = !{!"0000017C22C0D0E0.w512.b0", !7960, i64 0}
!7960 = !{!"0000017C22C0D0E0.w1024.b0", !7961, i64 0}
!7961 = !{!"0000017C22C0D0E0", !21, i64 0}
!7962 = !{!7963, !7963, i64 0}
!7963 = !{!"0000017C22C0D0E0.w8.b8", !7954, i64 0}
!7964 = !{!7965, !7965, i64 0}
!7965 = !{!"0000017C22C0C4A0.w8.b0", !7966, i64 0}
!7966 = !{!"0000017C22C0C4A0.w16.b0", !7967, i64 0}
!7967 = !{!"0000017C22C0C4A0.w32.b0", !7968, i64 0}
!7968 = !{!"0000017C22C0C4A0.w64.b0", !7969, i64 0}
!7969 = !{!"0000017C22C0C4A0.w128.b0", !7970, i64 0}
!7970 = !{!"0000017C22C0C4A0.w256.b0", !7971, i64 0}
!7971 = !{!"0000017C22C0C4A0.w512.b0", !7972, i64 0}
!7972 = !{!"0000017C22C0C4A0.w1024.b0", !7973, i64 0}
!7973 = !{!"0000017C22C0C4A0", !21, i64 0}
!7974 = !{!7975, !7975, i64 0}
!7975 = !{!"0000017C22C0C4A0.w8.b8", !7966, i64 0}
!7976 = !{!7977, !7977, i64 0}
!7977 = !{!"0000017C22C0C4A0.w8.b16", !7978, i64 0}
!7978 = !{!"0000017C22C0C4A0.w16.b16", !7967, i64 0}
!7979 = !{!7980, !7980, i64 0}
!7980 = !{!"0000017C22C0C4A0.w8.b24", !7978, i64 0}
!7981 = !{!7982, !7982, i64 0}
!7982 = !{!"0000017C22C0CFE0.w8.b8", !7983, i64 0}
!7983 = !{!"0000017C22C0CFE0.w16.b0", !7984, i64 0}
!7984 = !{!"0000017C22C0CFE0.w32.b0", !7985, i64 0}
!7985 = !{!"0000017C22C0CFE0.w64.b0", !7986, i64 0}
!7986 = !{!"0000017C22C0CFE0.w128.b0", !7987, i64 0}
!7987 = !{!"0000017C22C0CFE0.w256.b0", !7988, i64 0}
!7988 = !{!"0000017C22C0CFE0.w512.b0", !7989, i64 0}
!7989 = !{!"0000017C22C0CFE0.w1024.b0", !7990, i64 0}
!7990 = !{!"0000017C22C0CFE0", !21, i64 0}
!7991 = !{!7992, !7992, i64 0}
!7992 = !{!"0000017C22C0CFE0.w8.b16", !7993, i64 0}
!7993 = !{!"0000017C22C0CFE0.w16.b16", !7984, i64 0}
!7994 = !{!7995, !7995, i64 0}
!7995 = !{!"0000017C22C0CFE0.w8.b24", !7993, i64 0}
!7996 = !{!7997, !7997, i64 0}
!7997 = !{!"0000017C2E55A160.w4.b0", !7998, i64 0}
!7998 = !{!"0000017C2E55A160.w8.b0", !7999, i64 0}
!7999 = !{!"0000017C2E55A160.w16.b0", !8000, i64 0}
!8000 = !{!"0000017C2E55A160.w32.b0", !8001, i64 0}
!8001 = !{!"0000017C2E55A160.w64.b0", !8002, i64 0}
!8002 = !{!"0000017C2E55A160.w128.b0", !8003, i64 0}
!8003 = !{!"0000017C2E55A160.w256.b0", !8004, i64 0}
!8004 = !{!"0000017C2E55A160.w512.b0", !8005, i64 0}
!8005 = !{!"0000017C2E55A160.w1024.b0", !8006, i64 0}
!8006 = !{!"0000017C2E55A160", !21, i64 0}
!8007 = !{!8008, !8008, i64 0}
!8008 = !{!"0000017C2E55A160.w4.b4", !7998, i64 0}
!8009 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8010)
!8010 = !{!8011, !8012, !8013, !8014, !8015, !8016}
!8011 = !DILocalVariable(name: "arg1", arg: 1, scope: !8009, file: !1, type: !8)
!8012 = !DILocalVariable(name: "arg2", arg: 2, scope: !8009, file: !1, type: !9)
!8013 = !DILocalVariable(name: "arg3", arg: 3, scope: !8009, file: !1, type: !7)
!8014 = !DILocalVariable(name: "arg4", arg: 4, scope: !8009, file: !1, type: !8)
!8015 = !DILocalVariable(name: "arg5", arg: 5, scope: !8009, file: !1, type: !9)
!8016 = !DILocalVariable(name: "arg6", arg: 6, scope: !8009, file: !1, type: !8)
!8017 = !DILocation(line: 0, scope: !8009)
!8018 = !{!8019, !8019, i64 0}
!8019 = !{!"0000017C2E4A99F0.w4.b0", !8020, i64 0}
!8020 = !{!"0000017C2E4A99F0.w8.b0", !8021, i64 0}
!8021 = !{!"0000017C2E4A99F0.w16.b0", !8022, i64 0}
!8022 = !{!"0000017C2E4A99F0.w32.b0", !8023, i64 0}
!8023 = !{!"0000017C2E4A99F0.w64.b0", !8024, i64 0}
!8024 = !{!"0000017C2E4A99F0.w128.b0", !8025, i64 0}
!8025 = !{!"0000017C2E4A99F0.w256.b0", !8026, i64 0}
!8026 = !{!"0000017C2E4A99F0.w512.b0", !8027, i64 0}
!8027 = !{!"0000017C2E4A99F0.w1024.b0", !8028, i64 0}
!8028 = !{!"0000017C2E4A99F0", !21, i64 0}
!8029 = !{!8030, !8030, i64 0}
!8030 = !{!"0000017C2E4A99F0.w4.b4", !8020, i64 0}
!8031 = !{!8032, !8032, i64 0}
!8032 = !{!"0000017C2E4A99F0.w4.b8", !8033, i64 0}
!8033 = !{!"0000017C2E4A99F0.w8.b8", !8021, i64 0}
!8034 = !{!8035, !8035, i64 0}
!8035 = !{!"0000017C2E4ADF70.w8.b0", !8036, i64 0}
!8036 = !{!"0000017C2E4ADF70.w16.b0", !8037, i64 0}
!8037 = !{!"0000017C2E4ADF70.w32.b0", !8038, i64 0}
!8038 = !{!"0000017C2E4ADF70.w64.b0", !8039, i64 0}
!8039 = !{!"0000017C2E4ADF70.w128.b0", !8040, i64 0}
!8040 = !{!"0000017C2E4ADF70.w256.b0", !8041, i64 0}
!8041 = !{!"0000017C2E4ADF70.w512.b0", !8042, i64 0}
!8042 = !{!"0000017C2E4ADF70.w1024.b0", !8043, i64 0}
!8043 = !{!"0000017C2E4ADF70", !21, i64 0}
!8044 = !{!8045, !8045, i64 0}
!8045 = !{!"0000017C2E4ADF70.w8.b8", !8036, i64 0}
!8046 = !{!8047, !8047, i64 0}
!8047 = !{!"0000017C2E4ADF70.w8.b16", !8048, i64 0}
!8048 = !{!"0000017C2E4ADF70.w16.b16", !8037, i64 0}
!8049 = !{!8050, !8050, i64 0}
!8050 = !{!"0000017C2E4ADF70.w8.b24", !8048, i64 0}
!8051 = !{!8052, !8052, i64 0}
!8052 = !{!"0000017C2E4AE3F0.w8.b8", !8053, i64 0}
!8053 = !{!"0000017C2E4AE3F0.w16.b0", !8054, i64 0}
!8054 = !{!"0000017C2E4AE3F0.w32.b0", !8055, i64 0}
!8055 = !{!"0000017C2E4AE3F0.w64.b0", !8056, i64 0}
!8056 = !{!"0000017C2E4AE3F0.w128.b0", !8057, i64 0}
!8057 = !{!"0000017C2E4AE3F0.w256.b0", !8058, i64 0}
!8058 = !{!"0000017C2E4AE3F0.w512.b0", !8059, i64 0}
!8059 = !{!"0000017C2E4AE3F0.w1024.b0", !8060, i64 0}
!8060 = !{!"0000017C2E4AE3F0", !21, i64 0}
!8061 = !{!8062, !8062, i64 0}
!8062 = !{!"0000017C2E4AE3F0.w8.b16", !8063, i64 0}
!8063 = !{!"0000017C2E4AE3F0.w16.b16", !8054, i64 0}
!8064 = !{!8065, !8065, i64 0}
!8065 = !{!"0000017C2E4AE3F0.w8.b24", !8063, i64 0}
!8066 = !{!8067, !8067, i64 0}
!8067 = !{!"0000017C2E4B0DF0.w8.b0", !8068, i64 0}
!8068 = !{!"0000017C2E4B0DF0.w16.b0", !8069, i64 0}
!8069 = !{!"0000017C2E4B0DF0.w32.b0", !8070, i64 0}
!8070 = !{!"0000017C2E4B0DF0.w64.b0", !8071, i64 0}
!8071 = !{!"0000017C2E4B0DF0.w128.b0", !8072, i64 0}
!8072 = !{!"0000017C2E4B0DF0.w256.b0", !8073, i64 0}
!8073 = !{!"0000017C2E4B0DF0.w512.b0", !8074, i64 0}
!8074 = !{!"0000017C2E4B0DF0.w1024.b0", !8075, i64 0}
!8075 = !{!"0000017C2E4B0DF0", !21, i64 0}
!8076 = !{!8077, !8077, i64 0}
!8077 = !{!"0000017C2E4B0DF0.w8.b8", !8068, i64 0}
!8078 = !{!8079, !8079, i64 0}
!8079 = !{!"0000017C2E4B0DF0.w8.b16", !8080, i64 0}
!8080 = !{!"0000017C2E4B0DF0.w16.b16", !8069, i64 0}
!8081 = !{!8082, !8082, i64 0}
!8082 = !{!"0000017C2E4B0DF0.w8.b24", !8080, i64 0}
!8083 = !{!8084, !8084, i64 0}
!8084 = !{!"0000017C2E4B07B0.w8.b0", !8085, i64 0}
!8085 = !{!"0000017C2E4B07B0.w16.b0", !8086, i64 0}
!8086 = !{!"0000017C2E4B07B0.w32.b0", !8087, i64 0}
!8087 = !{!"0000017C2E4B07B0.w64.b0", !8088, i64 0}
!8088 = !{!"0000017C2E4B07B0.w128.b0", !8089, i64 0}
!8089 = !{!"0000017C2E4B07B0.w256.b0", !8090, i64 0}
!8090 = !{!"0000017C2E4B07B0.w512.b0", !8091, i64 0}
!8091 = !{!"0000017C2E4B07B0.w1024.b0", !8092, i64 0}
!8092 = !{!"0000017C2E4B07B0", !21, i64 0}
!8093 = !{!8094, !8094, i64 0}
!8094 = !{!"0000017C2E4B07B0.w8.b8", !8085, i64 0}
!8095 = !{!8096, !8096, i64 0}
!8096 = !{!"0000017C2E426A60.w8.b0", !8097, i64 0}
!8097 = !{!"0000017C2E426A60.w16.b0", !8098, i64 0}
!8098 = !{!"0000017C2E426A60.w32.b0", !8099, i64 0}
!8099 = !{!"0000017C2E426A60.w64.b0", !8100, i64 0}
!8100 = !{!"0000017C2E426A60.w128.b0", !8101, i64 0}
!8101 = !{!"0000017C2E426A60.w256.b0", !8102, i64 0}
!8102 = !{!"0000017C2E426A60.w512.b0", !8103, i64 0}
!8103 = !{!"0000017C2E426A60.w1024.b0", !8104, i64 0}
!8104 = !{!"0000017C2E426A60", !21, i64 0}
!8105 = !{!8106, !8106, i64 0}
!8106 = !{!"0000017C2E426A60.w8.b8", !8097, i64 0}
!8107 = !{!8108, !8108, i64 0}
!8108 = !{!"0000017C2E426A60.w8.b16", !8109, i64 0}
!8109 = !{!"0000017C2E426A60.w16.b16", !8098, i64 0}
!8110 = !{!8111, !8111, i64 0}
!8111 = !{!"0000017C2E426A60.w8.b24", !8109, i64 0}
!8112 = !{!8113, !8113, i64 0}
!8113 = !{!"0000017C2E4261A0.w8.b8", !8114, i64 0}
!8114 = !{!"0000017C2E4261A0.w16.b0", !8115, i64 0}
!8115 = !{!"0000017C2E4261A0.w32.b0", !8116, i64 0}
!8116 = !{!"0000017C2E4261A0.w64.b0", !8117, i64 0}
!8117 = !{!"0000017C2E4261A0.w128.b0", !8118, i64 0}
!8118 = !{!"0000017C2E4261A0.w256.b0", !8119, i64 0}
!8119 = !{!"0000017C2E4261A0.w512.b0", !8120, i64 0}
!8120 = !{!"0000017C2E4261A0.w1024.b0", !8121, i64 0}
!8121 = !{!"0000017C2E4261A0", !21, i64 0}
!8122 = !{!8123, !8123, i64 0}
!8123 = !{!"0000017C2E4261A0.w8.b16", !8124, i64 0}
!8124 = !{!"0000017C2E4261A0.w16.b16", !8115, i64 0}
!8125 = !{!8126, !8126, i64 0}
!8126 = !{!"0000017C2E4261A0.w8.b24", !8124, i64 0}
!8127 = !{!8128, !8128, i64 0}
!8128 = !{!"0000017C2E607CB0.w4.b0", !8129, i64 0}
!8129 = !{!"0000017C2E607CB0.w8.b0", !8130, i64 0}
!8130 = !{!"0000017C2E607CB0.w16.b0", !8131, i64 0}
!8131 = !{!"0000017C2E607CB0.w32.b0", !8132, i64 0}
!8132 = !{!"0000017C2E607CB0.w64.b0", !8133, i64 0}
!8133 = !{!"0000017C2E607CB0.w128.b0", !8134, i64 0}
!8134 = !{!"0000017C2E607CB0.w256.b0", !8135, i64 0}
!8135 = !{!"0000017C2E607CB0.w512.b0", !8136, i64 0}
!8136 = !{!"0000017C2E607CB0.w1024.b0", !8137, i64 0}
!8137 = !{!"0000017C2E607CB0", !21, i64 0}
!8138 = !{!8139, !8139, i64 0}
!8139 = !{!"0000017C2E607CB0.w4.b4", !8129, i64 0}
!8140 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8141)
!8141 = !{!8142, !8143, !8144, !8145, !8146, !8147}
!8142 = !DILocalVariable(name: "arg1", arg: 1, scope: !8140, file: !1, type: !8)
!8143 = !DILocalVariable(name: "arg2", arg: 2, scope: !8140, file: !1, type: !9)
!8144 = !DILocalVariable(name: "arg3", arg: 3, scope: !8140, file: !1, type: !7)
!8145 = !DILocalVariable(name: "arg4", arg: 4, scope: !8140, file: !1, type: !8)
!8146 = !DILocalVariable(name: "arg5", arg: 5, scope: !8140, file: !1, type: !9)
!8147 = !DILocalVariable(name: "arg6", arg: 6, scope: !8140, file: !1, type: !8)
!8148 = !DILocation(line: 0, scope: !8140)
!8149 = !{!8150, !8150, i64 0}
!8150 = !{!"0000017C2E490570.w4.b0", !8151, i64 0}
!8151 = !{!"0000017C2E490570.w8.b0", !8152, i64 0}
!8152 = !{!"0000017C2E490570.w16.b0", !8153, i64 0}
!8153 = !{!"0000017C2E490570.w32.b0", !8154, i64 0}
!8154 = !{!"0000017C2E490570.w64.b0", !8155, i64 0}
!8155 = !{!"0000017C2E490570.w128.b0", !8156, i64 0}
!8156 = !{!"0000017C2E490570.w256.b0", !8157, i64 0}
!8157 = !{!"0000017C2E490570.w512.b0", !8158, i64 0}
!8158 = !{!"0000017C2E490570.w1024.b0", !8159, i64 0}
!8159 = !{!"0000017C2E490570", !21, i64 0}
!8160 = !{!8161, !8161, i64 0}
!8161 = !{!"0000017C2E490570.w4.b4", !8151, i64 0}
!8162 = !{!8163, !8163, i64 0}
!8163 = !{!"0000017C2E490570.w4.b8", !8164, i64 0}
!8164 = !{!"0000017C2E490570.w8.b8", !8152, i64 0}
!8165 = !{!8166, !8166, i64 0}
!8166 = !{!"0000017C2E494670.w8.b0", !8167, i64 0}
!8167 = !{!"0000017C2E494670.w16.b0", !8168, i64 0}
!8168 = !{!"0000017C2E494670.w32.b0", !8169, i64 0}
!8169 = !{!"0000017C2E494670.w64.b0", !8170, i64 0}
!8170 = !{!"0000017C2E494670.w128.b0", !8171, i64 0}
!8171 = !{!"0000017C2E494670.w256.b0", !8172, i64 0}
!8172 = !{!"0000017C2E494670.w512.b0", !8173, i64 0}
!8173 = !{!"0000017C2E494670.w1024.b0", !8174, i64 0}
!8174 = !{!"0000017C2E494670", !21, i64 0}
!8175 = !{!8176, !8176, i64 0}
!8176 = !{!"0000017C2E494670.w8.b8", !8167, i64 0}
!8177 = !{!8178, !8178, i64 0}
!8178 = !{!"0000017C2E494670.w8.b16", !8179, i64 0}
!8179 = !{!"0000017C2E494670.w16.b16", !8168, i64 0}
!8180 = !{!8181, !8181, i64 0}
!8181 = !{!"0000017C2E494670.w8.b24", !8179, i64 0}
!8182 = !{!8183, !8183, i64 0}
!8183 = !{!"0000017C2E494430.w8.b8", !8184, i64 0}
!8184 = !{!"0000017C2E494430.w16.b0", !8185, i64 0}
!8185 = !{!"0000017C2E494430.w32.b0", !8186, i64 0}
!8186 = !{!"0000017C2E494430.w64.b0", !8187, i64 0}
!8187 = !{!"0000017C2E494430.w128.b0", !8188, i64 0}
!8188 = !{!"0000017C2E494430.w256.b0", !8189, i64 0}
!8189 = !{!"0000017C2E494430.w512.b0", !8190, i64 0}
!8190 = !{!"0000017C2E494430.w1024.b0", !8191, i64 0}
!8191 = !{!"0000017C2E494430", !21, i64 0}
!8192 = !{!8193, !8193, i64 0}
!8193 = !{!"0000017C2E494430.w8.b16", !8194, i64 0}
!8194 = !{!"0000017C2E494430.w16.b16", !8185, i64 0}
!8195 = !{!8196, !8196, i64 0}
!8196 = !{!"0000017C2E494430.w8.b24", !8194, i64 0}
!8197 = !{!8198, !8198, i64 0}
!8198 = !{!"0000017C2E495F30.w8.b0", !8199, i64 0}
!8199 = !{!"0000017C2E495F30.w16.b0", !8200, i64 0}
!8200 = !{!"0000017C2E495F30.w32.b0", !8201, i64 0}
!8201 = !{!"0000017C2E495F30.w64.b0", !8202, i64 0}
!8202 = !{!"0000017C2E495F30.w128.b0", !8203, i64 0}
!8203 = !{!"0000017C2E495F30.w256.b0", !8204, i64 0}
!8204 = !{!"0000017C2E495F30.w512.b0", !8205, i64 0}
!8205 = !{!"0000017C2E495F30.w1024.b0", !8206, i64 0}
!8206 = !{!"0000017C2E495F30", !21, i64 0}
!8207 = !{!8208, !8208, i64 0}
!8208 = !{!"0000017C2E495F30.w8.b8", !8199, i64 0}
!8209 = !{!8210, !8210, i64 0}
!8210 = !{!"0000017C2E495F30.w8.b16", !8211, i64 0}
!8211 = !{!"0000017C2E495F30.w16.b16", !8200, i64 0}
!8212 = !{!8213, !8213, i64 0}
!8213 = !{!"0000017C2E495F30.w8.b24", !8211, i64 0}
!8214 = !{!8215, !8215, i64 0}
!8215 = !{!"0000017C2E4951F0.w8.b0", !8216, i64 0}
!8216 = !{!"0000017C2E4951F0.w16.b0", !8217, i64 0}
!8217 = !{!"0000017C2E4951F0.w32.b0", !8218, i64 0}
!8218 = !{!"0000017C2E4951F0.w64.b0", !8219, i64 0}
!8219 = !{!"0000017C2E4951F0.w128.b0", !8220, i64 0}
!8220 = !{!"0000017C2E4951F0.w256.b0", !8221, i64 0}
!8221 = !{!"0000017C2E4951F0.w512.b0", !8222, i64 0}
!8222 = !{!"0000017C2E4951F0.w1024.b0", !8223, i64 0}
!8223 = !{!"0000017C2E4951F0", !21, i64 0}
!8224 = !{!8225, !8225, i64 0}
!8225 = !{!"0000017C2E4951F0.w8.b8", !8216, i64 0}
!8226 = !{!8227, !8227, i64 0}
!8227 = !{!"0000017C2E4951F0.w8.b16", !8228, i64 0}
!8228 = !{!"0000017C2E4951F0.w16.b16", !8217, i64 0}
!8229 = !{!8230, !8230, i64 0}
!8230 = !{!"0000017C2E4951F0.w8.b24", !8228, i64 0}
!8231 = !{!8232, !8232, i64 0}
!8232 = !{!"0000017C2E4963F0.w8.b0", !8233, i64 0}
!8233 = !{!"0000017C2E4963F0.w16.b0", !8234, i64 0}
!8234 = !{!"0000017C2E4963F0.w32.b0", !8235, i64 0}
!8235 = !{!"0000017C2E4963F0.w64.b0", !8236, i64 0}
!8236 = !{!"0000017C2E4963F0.w128.b0", !8237, i64 0}
!8237 = !{!"0000017C2E4963F0.w256.b0", !8238, i64 0}
!8238 = !{!"0000017C2E4963F0.w512.b0", !8239, i64 0}
!8239 = !{!"0000017C2E4963F0.w1024.b0", !8240, i64 0}
!8240 = !{!"0000017C2E4963F0", !21, i64 0}
!8241 = !{!8242, !8242, i64 0}
!8242 = !{!"0000017C2E4963F0.w8.b8", !8233, i64 0}
!8243 = !{!8244, !8244, i64 0}
!8244 = !{!"0000017C2E4963F0.w8.b16", !8245, i64 0}
!8245 = !{!"0000017C2E4963F0.w16.b16", !8234, i64 0}
!8246 = !{!8247, !8247, i64 0}
!8247 = !{!"0000017C2E4963F0.w8.b24", !8245, i64 0}
!8248 = !{!8249, !8249, i64 0}
!8249 = !{!"0000017C2E496570.w8.b8", !8250, i64 0}
!8250 = !{!"0000017C2E496570.w16.b0", !8251, i64 0}
!8251 = !{!"0000017C2E496570.w32.b0", !8252, i64 0}
!8252 = !{!"0000017C2E496570.w64.b0", !8253, i64 0}
!8253 = !{!"0000017C2E496570.w128.b0", !8254, i64 0}
!8254 = !{!"0000017C2E496570.w256.b0", !8255, i64 0}
!8255 = !{!"0000017C2E496570.w512.b0", !8256, i64 0}
!8256 = !{!"0000017C2E496570.w1024.b0", !8257, i64 0}
!8257 = !{!"0000017C2E496570", !21, i64 0}
!8258 = !{!8259, !8259, i64 0}
!8259 = !{!"0000017C2E496570.w8.b16", !8260, i64 0}
!8260 = !{!"0000017C2E496570.w16.b16", !8251, i64 0}
!8261 = !{!8262, !8262, i64 0}
!8262 = !{!"0000017C2E496570.w8.b24", !8260, i64 0}
!8263 = !{!8264, !8264, i64 0}
!8264 = !{!"0000017C2E2EB9B0.w4.b0", !8265, i64 0}
!8265 = !{!"0000017C2E2EB9B0.w8.b0", !8266, i64 0}
!8266 = !{!"0000017C2E2EB9B0.w16.b0", !8267, i64 0}
!8267 = !{!"0000017C2E2EB9B0.w32.b0", !8268, i64 0}
!8268 = !{!"0000017C2E2EB9B0.w64.b0", !8269, i64 0}
!8269 = !{!"0000017C2E2EB9B0.w128.b0", !8270, i64 0}
!8270 = !{!"0000017C2E2EB9B0.w256.b0", !8271, i64 0}
!8271 = !{!"0000017C2E2EB9B0.w512.b0", !8272, i64 0}
!8272 = !{!"0000017C2E2EB9B0.w1024.b0", !8273, i64 0}
!8273 = !{!"0000017C2E2EB9B0", !21, i64 0}
!8274 = !{!8275, !8275, i64 0}
!8275 = !{!"0000017C2E2EB9B0.w4.b4", !8265, i64 0}
!8276 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8277)
!8277 = !{!8278, !8279, !8280, !8281, !8282, !8283}
!8278 = !DILocalVariable(name: "arg1", arg: 1, scope: !8276, file: !1, type: !8)
!8279 = !DILocalVariable(name: "arg2", arg: 2, scope: !8276, file: !1, type: !9)
!8280 = !DILocalVariable(name: "arg3", arg: 3, scope: !8276, file: !1, type: !7)
!8281 = !DILocalVariable(name: "arg4", arg: 4, scope: !8276, file: !1, type: !8)
!8282 = !DILocalVariable(name: "arg5", arg: 5, scope: !8276, file: !1, type: !9)
!8283 = !DILocalVariable(name: "arg6", arg: 6, scope: !8276, file: !1, type: !8)
!8284 = !DILocation(line: 0, scope: !8276)
!8285 = !{!8286, !8286, i64 0}
!8286 = !{!"0000017C22C0C5E0.w4.b0", !8287, i64 0}
!8287 = !{!"0000017C22C0C5E0.w8.b0", !8288, i64 0}
!8288 = !{!"0000017C22C0C5E0.w16.b0", !8289, i64 0}
!8289 = !{!"0000017C22C0C5E0.w32.b0", !8290, i64 0}
!8290 = !{!"0000017C22C0C5E0.w64.b0", !8291, i64 0}
!8291 = !{!"0000017C22C0C5E0.w128.b0", !8292, i64 0}
!8292 = !{!"0000017C22C0C5E0.w256.b0", !8293, i64 0}
!8293 = !{!"0000017C22C0C5E0.w512.b0", !8294, i64 0}
!8294 = !{!"0000017C22C0C5E0.w1024.b0", !8295, i64 0}
!8295 = !{!"0000017C22C0C5E0", !21, i64 0}
!8296 = !{!8297, !8297, i64 0}
!8297 = !{!"0000017C22C0C5E0.w4.b4", !8287, i64 0}
!8298 = !{!8299, !8299, i64 0}
!8299 = !{!"0000017C22C0C5E0.w4.b8", !8300, i64 0}
!8300 = !{!"0000017C22C0C5E0.w8.b8", !8288, i64 0}
!8301 = !{!8302, !8302, i64 0}
!8302 = !{!"0000017C22C11620.w8.b0", !8303, i64 0}
!8303 = !{!"0000017C22C11620.w16.b0", !8304, i64 0}
!8304 = !{!"0000017C22C11620.w32.b0", !8305, i64 0}
!8305 = !{!"0000017C22C11620.w64.b0", !8306, i64 0}
!8306 = !{!"0000017C22C11620.w128.b0", !8307, i64 0}
!8307 = !{!"0000017C22C11620.w256.b0", !8308, i64 0}
!8308 = !{!"0000017C22C11620.w512.b0", !8309, i64 0}
!8309 = !{!"0000017C22C11620.w1024.b0", !8310, i64 0}
!8310 = !{!"0000017C22C11620", !21, i64 0}
!8311 = !{!8312, !8312, i64 0}
!8312 = !{!"0000017C22C11620.w8.b8", !8303, i64 0}
!8313 = !{!8314, !8314, i64 0}
!8314 = !{!"0000017C22C11620.w8.b16", !8315, i64 0}
!8315 = !{!"0000017C22C11620.w16.b16", !8304, i64 0}
!8316 = !{!8317, !8317, i64 0}
!8317 = !{!"0000017C22C11620.w8.b24", !8315, i64 0}
!8318 = !{!8319, !8319, i64 0}
!8319 = !{!"0000017C22C12A60.w8.b8", !8320, i64 0}
!8320 = !{!"0000017C22C12A60.w16.b0", !8321, i64 0}
!8321 = !{!"0000017C22C12A60.w32.b0", !8322, i64 0}
!8322 = !{!"0000017C22C12A60.w64.b0", !8323, i64 0}
!8323 = !{!"0000017C22C12A60.w128.b0", !8324, i64 0}
!8324 = !{!"0000017C22C12A60.w256.b0", !8325, i64 0}
!8325 = !{!"0000017C22C12A60.w512.b0", !8326, i64 0}
!8326 = !{!"0000017C22C12A60.w1024.b0", !8327, i64 0}
!8327 = !{!"0000017C22C12A60", !21, i64 0}
!8328 = !{!8329, !8329, i64 0}
!8329 = !{!"0000017C22C12A60.w8.b16", !8330, i64 0}
!8330 = !{!"0000017C22C12A60.w16.b16", !8321, i64 0}
!8331 = !{!8332, !8332, i64 0}
!8332 = !{!"0000017C22C12A60.w8.b24", !8330, i64 0}
!8333 = !{!8334, !8334, i64 0}
!8334 = !{!"0000017C22C12860.w8.b0", !8335, i64 0}
!8335 = !{!"0000017C22C12860.w16.b0", !8336, i64 0}
!8336 = !{!"0000017C22C12860.w32.b0", !8337, i64 0}
!8337 = !{!"0000017C22C12860.w64.b0", !8338, i64 0}
!8338 = !{!"0000017C22C12860.w128.b0", !8339, i64 0}
!8339 = !{!"0000017C22C12860.w256.b0", !8340, i64 0}
!8340 = !{!"0000017C22C12860.w512.b0", !8341, i64 0}
!8341 = !{!"0000017C22C12860.w1024.b0", !8342, i64 0}
!8342 = !{!"0000017C22C12860", !21, i64 0}
!8343 = !{!8344, !8344, i64 0}
!8344 = !{!"0000017C22C12860.w8.b8", !8335, i64 0}
!8345 = !{!8346, !8346, i64 0}
!8346 = !{!"0000017C22C12860.w8.b16", !8347, i64 0}
!8347 = !{!"0000017C22C12860.w16.b16", !8336, i64 0}
!8348 = !{!8349, !8349, i64 0}
!8349 = !{!"0000017C22C12860.w8.b24", !8347, i64 0}
!8350 = !{!8351, !8351, i64 0}
!8351 = !{!"0000017C22C126A0.w8.b0", !8352, i64 0}
!8352 = !{!"0000017C22C126A0.w16.b0", !8353, i64 0}
!8353 = !{!"0000017C22C126A0.w32.b0", !8354, i64 0}
!8354 = !{!"0000017C22C126A0.w64.b0", !8355, i64 0}
!8355 = !{!"0000017C22C126A0.w128.b0", !8356, i64 0}
!8356 = !{!"0000017C22C126A0.w256.b0", !8357, i64 0}
!8357 = !{!"0000017C22C126A0.w512.b0", !8358, i64 0}
!8358 = !{!"0000017C22C126A0.w1024.b0", !8359, i64 0}
!8359 = !{!"0000017C22C126A0", !21, i64 0}
!8360 = !{!8361, !8361, i64 0}
!8361 = !{!"0000017C22C126A0.w8.b8", !8352, i64 0}
!8362 = !{!8363, !8363, i64 0}
!8363 = !{!"0000017C22C13F60.w8.b0", !8364, i64 0}
!8364 = !{!"0000017C22C13F60.w16.b0", !8365, i64 0}
!8365 = !{!"0000017C22C13F60.w32.b0", !8366, i64 0}
!8366 = !{!"0000017C22C13F60.w64.b0", !8367, i64 0}
!8367 = !{!"0000017C22C13F60.w128.b0", !8368, i64 0}
!8368 = !{!"0000017C22C13F60.w256.b0", !8369, i64 0}
!8369 = !{!"0000017C22C13F60.w512.b0", !8370, i64 0}
!8370 = !{!"0000017C22C13F60.w1024.b0", !8371, i64 0}
!8371 = !{!"0000017C22C13F60", !21, i64 0}
!8372 = !{!8373, !8373, i64 0}
!8373 = !{!"0000017C22C13F60.w8.b8", !8364, i64 0}
!8374 = !{!8375, !8375, i64 0}
!8375 = !{!"0000017C22C13F60.w8.b16", !8376, i64 0}
!8376 = !{!"0000017C22C13F60.w16.b16", !8365, i64 0}
!8377 = !{!8378, !8378, i64 0}
!8378 = !{!"0000017C22C13F60.w8.b24", !8376, i64 0}
!8379 = !{!8380, !8380, i64 0}
!8380 = !{!"0000017C22C13CE0.w8.b8", !8381, i64 0}
!8381 = !{!"0000017C22C13CE0.w16.b0", !8382, i64 0}
!8382 = !{!"0000017C22C13CE0.w32.b0", !8383, i64 0}
!8383 = !{!"0000017C22C13CE0.w64.b0", !8384, i64 0}
!8384 = !{!"0000017C22C13CE0.w128.b0", !8385, i64 0}
!8385 = !{!"0000017C22C13CE0.w256.b0", !8386, i64 0}
!8386 = !{!"0000017C22C13CE0.w512.b0", !8387, i64 0}
!8387 = !{!"0000017C22C13CE0.w1024.b0", !8388, i64 0}
!8388 = !{!"0000017C22C13CE0", !21, i64 0}
!8389 = !{!8390, !8390, i64 0}
!8390 = !{!"0000017C22C13CE0.w8.b16", !8391, i64 0}
!8391 = !{!"0000017C22C13CE0.w16.b16", !8382, i64 0}
!8392 = !{!8393, !8393, i64 0}
!8393 = !{!"0000017C22C13CE0.w8.b24", !8391, i64 0}
!8394 = !{!8395, !8395, i64 0}
!8395 = !{!"0000017C2E55E920.w4.b0", !8396, i64 0}
!8396 = !{!"0000017C2E55E920.w8.b0", !8397, i64 0}
!8397 = !{!"0000017C2E55E920.w16.b0", !8398, i64 0}
!8398 = !{!"0000017C2E55E920.w32.b0", !8399, i64 0}
!8399 = !{!"0000017C2E55E920.w64.b0", !8400, i64 0}
!8400 = !{!"0000017C2E55E920.w128.b0", !8401, i64 0}
!8401 = !{!"0000017C2E55E920.w256.b0", !8402, i64 0}
!8402 = !{!"0000017C2E55E920.w512.b0", !8403, i64 0}
!8403 = !{!"0000017C2E55E920.w1024.b0", !8404, i64 0}
!8404 = !{!"0000017C2E55E920", !21, i64 0}
!8405 = !{!8406, !8406, i64 0}
!8406 = !{!"0000017C2E55E920.w4.b4", !8396, i64 0}
!8407 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8408)
!8408 = !{!8409, !8410, !8411, !8412, !8413, !8414}
!8409 = !DILocalVariable(name: "arg1", arg: 1, scope: !8407, file: !1, type: !8)
!8410 = !DILocalVariable(name: "arg2", arg: 2, scope: !8407, file: !1, type: !9)
!8411 = !DILocalVariable(name: "arg3", arg: 3, scope: !8407, file: !1, type: !7)
!8412 = !DILocalVariable(name: "arg4", arg: 4, scope: !8407, file: !1, type: !8)
!8413 = !DILocalVariable(name: "arg5", arg: 5, scope: !8407, file: !1, type: !9)
!8414 = !DILocalVariable(name: "arg6", arg: 6, scope: !8407, file: !1, type: !8)
!8415 = !DILocation(line: 0, scope: !8407)
!8416 = !{!8417, !8417, i64 0}
!8417 = !{!"0000017C2E35B0B0.w4.b0", !8418, i64 0}
!8418 = !{!"0000017C2E35B0B0.w8.b0", !8419, i64 0}
!8419 = !{!"0000017C2E35B0B0.w16.b0", !8420, i64 0}
!8420 = !{!"0000017C2E35B0B0.w32.b0", !8421, i64 0}
!8421 = !{!"0000017C2E35B0B0.w64.b0", !8422, i64 0}
!8422 = !{!"0000017C2E35B0B0.w128.b0", !8423, i64 0}
!8423 = !{!"0000017C2E35B0B0.w256.b0", !8424, i64 0}
!8424 = !{!"0000017C2E35B0B0.w512.b0", !8425, i64 0}
!8425 = !{!"0000017C2E35B0B0.w1024.b0", !8426, i64 0}
!8426 = !{!"0000017C2E35B0B0", !21, i64 0}
!8427 = !{!8428, !8428, i64 0}
!8428 = !{!"0000017C2E35B0B0.w4.b4", !8418, i64 0}
!8429 = !{!8430, !8430, i64 0}
!8430 = !{!"0000017C2E35B0B0.w4.b8", !8431, i64 0}
!8431 = !{!"0000017C2E35B0B0.w8.b8", !8419, i64 0}
!8432 = !{!8433, !8433, i64 0}
!8433 = !{!"0000017C2E35B0B0.w4.b12", !8431, i64 0}
!8434 = !{!8435, !8435, i64 0}
!8435 = !{!"0000017C2E360EB0.w8.b0", !8436, i64 0}
!8436 = !{!"0000017C2E360EB0.w16.b0", !8437, i64 0}
!8437 = !{!"0000017C2E360EB0.w32.b0", !8438, i64 0}
!8438 = !{!"0000017C2E360EB0.w64.b0", !8439, i64 0}
!8439 = !{!"0000017C2E360EB0.w128.b0", !8440, i64 0}
!8440 = !{!"0000017C2E360EB0.w256.b0", !8441, i64 0}
!8441 = !{!"0000017C2E360EB0.w512.b0", !8442, i64 0}
!8442 = !{!"0000017C2E360EB0.w1024.b0", !8443, i64 0}
!8443 = !{!"0000017C2E360EB0", !21, i64 0}
!8444 = !{!8445, !8445, i64 0}
!8445 = !{!"0000017C2E360EB0.w8.b8", !8436, i64 0}
!8446 = !{!8447, !8447, i64 0}
!8447 = !{!"0000017C2E360D30.w8.b8", !8448, i64 0}
!8448 = !{!"0000017C2E360D30.w16.b0", !8449, i64 0}
!8449 = !{!"0000017C2E360D30.w32.b0", !8450, i64 0}
!8450 = !{!"0000017C2E360D30.w64.b0", !8451, i64 0}
!8451 = !{!"0000017C2E360D30.w128.b0", !8452, i64 0}
!8452 = !{!"0000017C2E360D30.w256.b0", !8453, i64 0}
!8453 = !{!"0000017C2E360D30.w512.b0", !8454, i64 0}
!8454 = !{!"0000017C2E360D30.w1024.b0", !8455, i64 0}
!8455 = !{!"0000017C2E360D30", !21, i64 0}
!8456 = !{!8457, !8457, i64 0}
!8457 = !{!"0000017C2E360A70.w8.b0", !8458, i64 0}
!8458 = !{!"0000017C2E360A70.w16.b0", !8459, i64 0}
!8459 = !{!"0000017C2E360A70.w32.b0", !8460, i64 0}
!8460 = !{!"0000017C2E360A70.w64.b0", !8461, i64 0}
!8461 = !{!"0000017C2E360A70.w128.b0", !8462, i64 0}
!8462 = !{!"0000017C2E360A70.w256.b0", !8463, i64 0}
!8463 = !{!"0000017C2E360A70.w512.b0", !8464, i64 0}
!8464 = !{!"0000017C2E360A70.w1024.b0", !8465, i64 0}
!8465 = !{!"0000017C2E360A70", !21, i64 0}
!8466 = !{!8467, !8467, i64 0}
!8467 = !{!"0000017C2E360A70.w8.b8", !8458, i64 0}
!8468 = !{!8469, !8469, i64 0}
!8469 = !{!"0000017C2E3612B0.w8.b0", !8470, i64 0}
!8470 = !{!"0000017C2E3612B0.w16.b0", !8471, i64 0}
!8471 = !{!"0000017C2E3612B0.w32.b0", !8472, i64 0}
!8472 = !{!"0000017C2E3612B0.w64.b0", !8473, i64 0}
!8473 = !{!"0000017C2E3612B0.w128.b0", !8474, i64 0}
!8474 = !{!"0000017C2E3612B0.w256.b0", !8475, i64 0}
!8475 = !{!"0000017C2E3612B0.w512.b0", !8476, i64 0}
!8476 = !{!"0000017C2E3612B0.w1024.b0", !8477, i64 0}
!8477 = !{!"0000017C2E3612B0", !21, i64 0}
!8478 = !{!8479, !8479, i64 0}
!8479 = !{!"0000017C2E3612B0.w8.b8", !8470, i64 0}
!8480 = !{!8481, !8481, i64 0}
!8481 = !{!"0000017C2E361FF0.w8.b0", !8482, i64 0}
!8482 = !{!"0000017C2E361FF0.w16.b0", !8483, i64 0}
!8483 = !{!"0000017C2E361FF0.w32.b0", !8484, i64 0}
!8484 = !{!"0000017C2E361FF0.w64.b0", !8485, i64 0}
!8485 = !{!"0000017C2E361FF0.w128.b0", !8486, i64 0}
!8486 = !{!"0000017C2E361FF0.w256.b0", !8487, i64 0}
!8487 = !{!"0000017C2E361FF0.w512.b0", !8488, i64 0}
!8488 = !{!"0000017C2E361FF0.w1024.b0", !8489, i64 0}
!8489 = !{!"0000017C2E361FF0", !21, i64 0}
!8490 = !{!8491, !8491, i64 0}
!8491 = !{!"0000017C2E361FF0.w8.b8", !8482, i64 0}
!8492 = !{!8493, !8493, i64 0}
!8493 = !{!"0000017C2E361DF0.w8.b8", !8494, i64 0}
!8494 = !{!"0000017C2E361DF0.w16.b0", !8495, i64 0}
!8495 = !{!"0000017C2E361DF0.w32.b0", !8496, i64 0}
!8496 = !{!"0000017C2E361DF0.w64.b0", !8497, i64 0}
!8497 = !{!"0000017C2E361DF0.w128.b0", !8498, i64 0}
!8498 = !{!"0000017C2E361DF0.w256.b0", !8499, i64 0}
!8499 = !{!"0000017C2E361DF0.w512.b0", !8500, i64 0}
!8500 = !{!"0000017C2E361DF0.w1024.b0", !8501, i64 0}
!8501 = !{!"0000017C2E361DF0", !21, i64 0}
!8502 = !{!8503, !8503, i64 0}
!8503 = !{!"0000017C2E362FB0.w8.b0", !8504, i64 0}
!8504 = !{!"0000017C2E362FB0.w16.b0", !8505, i64 0}
!8505 = !{!"0000017C2E362FB0.w32.b0", !8506, i64 0}
!8506 = !{!"0000017C2E362FB0.w64.b0", !8507, i64 0}
!8507 = !{!"0000017C2E362FB0.w128.b0", !8508, i64 0}
!8508 = !{!"0000017C2E362FB0.w256.b0", !8509, i64 0}
!8509 = !{!"0000017C2E362FB0.w512.b0", !8510, i64 0}
!8510 = !{!"0000017C2E362FB0.w1024.b0", !8511, i64 0}
!8511 = !{!"0000017C2E362FB0", !21, i64 0}
!8512 = !{!8513, !8513, i64 0}
!8513 = !{!"0000017C2E362FB0.w8.b8", !8504, i64 0}
!8514 = !{!8515, !8515, i64 0}
!8515 = !{!"0000017C2E3622B0.w8.b8", !8516, i64 0}
!8516 = !{!"0000017C2E3622B0.w16.b0", !8517, i64 0}
!8517 = !{!"0000017C2E3622B0.w32.b0", !8518, i64 0}
!8518 = !{!"0000017C2E3622B0.w64.b0", !8519, i64 0}
!8519 = !{!"0000017C2E3622B0.w128.b0", !8520, i64 0}
!8520 = !{!"0000017C2E3622B0.w256.b0", !8521, i64 0}
!8521 = !{!"0000017C2E3622B0.w512.b0", !8522, i64 0}
!8522 = !{!"0000017C2E3622B0.w1024.b0", !8523, i64 0}
!8523 = !{!"0000017C2E3622B0", !21, i64 0}
!8524 = !{!8525, !8525, i64 0}
!8525 = !{!"0000017C2E40A960.w4.b0", !8526, i64 0}
!8526 = !{!"0000017C2E40A960.w8.b0", !8527, i64 0}
!8527 = !{!"0000017C2E40A960.w16.b0", !8528, i64 0}
!8528 = !{!"0000017C2E40A960.w32.b0", !8529, i64 0}
!8529 = !{!"0000017C2E40A960.w64.b0", !8530, i64 0}
!8530 = !{!"0000017C2E40A960.w128.b0", !8531, i64 0}
!8531 = !{!"0000017C2E40A960.w256.b0", !8532, i64 0}
!8532 = !{!"0000017C2E40A960.w512.b0", !8533, i64 0}
!8533 = !{!"0000017C2E40A960.w1024.b0", !8534, i64 0}
!8534 = !{!"0000017C2E40A960", !21, i64 0}
!8535 = !{!8536, !8536, i64 0}
!8536 = !{!"0000017C2E40A960.w4.b4", !8526, i64 0}
!8537 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8538)
!8538 = !{!8539, !8540, !8541, !8542, !8543, !8544}
!8539 = !DILocalVariable(name: "arg1", arg: 1, scope: !8537, file: !1, type: !8)
!8540 = !DILocalVariable(name: "arg2", arg: 2, scope: !8537, file: !1, type: !9)
!8541 = !DILocalVariable(name: "arg3", arg: 3, scope: !8537, file: !1, type: !7)
!8542 = !DILocalVariable(name: "arg4", arg: 4, scope: !8537, file: !1, type: !8)
!8543 = !DILocalVariable(name: "arg5", arg: 5, scope: !8537, file: !1, type: !9)
!8544 = !DILocalVariable(name: "arg6", arg: 6, scope: !8537, file: !1, type: !8)
!8545 = !DILocation(line: 0, scope: !8537)
!8546 = !{!8547, !8547, i64 0}
!8547 = !{!"0000017C2E34EC70.w4.b0", !8548, i64 0}
!8548 = !{!"0000017C2E34EC70.w8.b0", !8549, i64 0}
!8549 = !{!"0000017C2E34EC70.w16.b0", !8550, i64 0}
!8550 = !{!"0000017C2E34EC70.w32.b0", !8551, i64 0}
!8551 = !{!"0000017C2E34EC70.w64.b0", !8552, i64 0}
!8552 = !{!"0000017C2E34EC70.w128.b0", !8553, i64 0}
!8553 = !{!"0000017C2E34EC70.w256.b0", !8554, i64 0}
!8554 = !{!"0000017C2E34EC70.w512.b0", !8555, i64 0}
!8555 = !{!"0000017C2E34EC70.w1024.b0", !8556, i64 0}
!8556 = !{!"0000017C2E34EC70", !21, i64 0}
!8557 = !{!8558, !8558, i64 0}
!8558 = !{!"0000017C2E34EC70.w4.b4", !8548, i64 0}
!8559 = !{!8560, !8560, i64 0}
!8560 = !{!"0000017C2E355130.w8.b0", !8561, i64 0}
!8561 = !{!"0000017C2E355130.w16.b0", !8562, i64 0}
!8562 = !{!"0000017C2E355130.w32.b0", !8563, i64 0}
!8563 = !{!"0000017C2E355130.w64.b0", !8564, i64 0}
!8564 = !{!"0000017C2E355130.w128.b0", !8565, i64 0}
!8565 = !{!"0000017C2E355130.w256.b0", !8566, i64 0}
!8566 = !{!"0000017C2E355130.w512.b0", !8567, i64 0}
!8567 = !{!"0000017C2E355130.w1024.b0", !8568, i64 0}
!8568 = !{!"0000017C2E355130", !21, i64 0}
!8569 = !{!8570, !8570, i64 0}
!8570 = !{!"0000017C2E355130.w8.b8", !8561, i64 0}
!8571 = !{!8572, !8572, i64 0}
!8572 = !{!"0000017C2E355130.w8.b16", !8573, i64 0}
!8573 = !{!"0000017C2E355130.w16.b16", !8562, i64 0}
!8574 = !{!8575, !8575, i64 0}
!8575 = !{!"0000017C2E355130.w8.b24", !8573, i64 0}
!8576 = !{!8577, !8577, i64 0}
!8577 = !{!"0000017C2E3554F0.w8.b8", !8578, i64 0}
!8578 = !{!"0000017C2E3554F0.w16.b0", !8579, i64 0}
!8579 = !{!"0000017C2E3554F0.w32.b0", !8580, i64 0}
!8580 = !{!"0000017C2E3554F0.w64.b0", !8581, i64 0}
!8581 = !{!"0000017C2E3554F0.w128.b0", !8582, i64 0}
!8582 = !{!"0000017C2E3554F0.w256.b0", !8583, i64 0}
!8583 = !{!"0000017C2E3554F0.w512.b0", !8584, i64 0}
!8584 = !{!"0000017C2E3554F0.w1024.b0", !8585, i64 0}
!8585 = !{!"0000017C2E3554F0", !21, i64 0}
!8586 = !{!8587, !8587, i64 0}
!8587 = !{!"0000017C2E3554F0.w8.b16", !8588, i64 0}
!8588 = !{!"0000017C2E3554F0.w16.b16", !8579, i64 0}
!8589 = !{!8590, !8590, i64 0}
!8590 = !{!"0000017C2E3554F0.w8.b24", !8588, i64 0}
!8591 = !{!8592, !8592, i64 0}
!8592 = !{!"0000017C2E3576F0.w8.b0", !8593, i64 0}
!8593 = !{!"0000017C2E3576F0.w16.b0", !8594, i64 0}
!8594 = !{!"0000017C2E3576F0.w32.b0", !8595, i64 0}
!8595 = !{!"0000017C2E3576F0.w64.b0", !8596, i64 0}
!8596 = !{!"0000017C2E3576F0.w128.b0", !8597, i64 0}
!8597 = !{!"0000017C2E3576F0.w256.b0", !8598, i64 0}
!8598 = !{!"0000017C2E3576F0.w512.b0", !8599, i64 0}
!8599 = !{!"0000017C2E3576F0.w1024.b0", !8600, i64 0}
!8600 = !{!"0000017C2E3576F0", !21, i64 0}
!8601 = !{!8602, !8602, i64 0}
!8602 = !{!"0000017C2E3576F0.w8.b8", !8593, i64 0}
!8603 = !{!8604, !8604, i64 0}
!8604 = !{!"0000017C2E3576F0.w8.b16", !8605, i64 0}
!8605 = !{!"0000017C2E3576F0.w16.b16", !8594, i64 0}
!8606 = !{!8607, !8607, i64 0}
!8607 = !{!"0000017C2E3576F0.w8.b24", !8605, i64 0}
!8608 = !{!8609, !8609, i64 0}
!8609 = !{!"0000017C2E3577F0.w8.b8", !8610, i64 0}
!8610 = !{!"0000017C2E3577F0.w16.b0", !8611, i64 0}
!8611 = !{!"0000017C2E3577F0.w32.b0", !8612, i64 0}
!8612 = !{!"0000017C2E3577F0.w64.b0", !8613, i64 0}
!8613 = !{!"0000017C2E3577F0.w128.b0", !8614, i64 0}
!8614 = !{!"0000017C2E3577F0.w256.b0", !8615, i64 0}
!8615 = !{!"0000017C2E3577F0.w512.b0", !8616, i64 0}
!8616 = !{!"0000017C2E3577F0.w1024.b0", !8617, i64 0}
!8617 = !{!"0000017C2E3577F0", !21, i64 0}
!8618 = !{!8619, !8619, i64 0}
!8619 = !{!"0000017C2E3577F0.w8.b16", !8620, i64 0}
!8620 = !{!"0000017C2E3577F0.w16.b16", !8611, i64 0}
!8621 = !{!8622, !8622, i64 0}
!8622 = !{!"0000017C2E3577F0.w8.b24", !8620, i64 0}
!8623 = !{!8624, !8624, i64 0}
!8624 = !{!"0000017C2E4A7E70.w4.b0", !8625, i64 0}
!8625 = !{!"0000017C2E4A7E70.w8.b0", !8626, i64 0}
!8626 = !{!"0000017C2E4A7E70.w16.b0", !8627, i64 0}
!8627 = !{!"0000017C2E4A7E70.w32.b0", !8628, i64 0}
!8628 = !{!"0000017C2E4A7E70.w64.b0", !8629, i64 0}
!8629 = !{!"0000017C2E4A7E70.w128.b0", !8630, i64 0}
!8630 = !{!"0000017C2E4A7E70.w256.b0", !8631, i64 0}
!8631 = !{!"0000017C2E4A7E70.w512.b0", !8632, i64 0}
!8632 = !{!"0000017C2E4A7E70.w1024.b0", !8633, i64 0}
!8633 = !{!"0000017C2E4A7E70", !21, i64 0}
!8634 = !{!8635, !8635, i64 0}
!8635 = !{!"0000017C2E4A7E70.w4.b4", !8625, i64 0}
!8636 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8637)
!8637 = !{!8638, !8639, !8640, !8641, !8642, !8643}
!8638 = !DILocalVariable(name: "arg1", arg: 1, scope: !8636, file: !1, type: !8)
!8639 = !DILocalVariable(name: "arg2", arg: 2, scope: !8636, file: !1, type: !9)
!8640 = !DILocalVariable(name: "arg3", arg: 3, scope: !8636, file: !1, type: !7)
!8641 = !DILocalVariable(name: "arg4", arg: 4, scope: !8636, file: !1, type: !8)
!8642 = !DILocalVariable(name: "arg5", arg: 5, scope: !8636, file: !1, type: !9)
!8643 = !DILocalVariable(name: "arg6", arg: 6, scope: !8636, file: !1, type: !8)
!8644 = !DILocation(line: 0, scope: !8636)
!8645 = !{!8646, !8646, i64 0}
!8646 = !{!"0000017C2E35CFB0.w4.b0", !8647, i64 0}
!8647 = !{!"0000017C2E35CFB0.w8.b0", !8648, i64 0}
!8648 = !{!"0000017C2E35CFB0.w16.b0", !8649, i64 0}
!8649 = !{!"0000017C2E35CFB0.w32.b0", !8650, i64 0}
!8650 = !{!"0000017C2E35CFB0.w64.b0", !8651, i64 0}
!8651 = !{!"0000017C2E35CFB0.w128.b0", !8652, i64 0}
!8652 = !{!"0000017C2E35CFB0.w256.b0", !8653, i64 0}
!8653 = !{!"0000017C2E35CFB0.w512.b0", !8654, i64 0}
!8654 = !{!"0000017C2E35CFB0.w1024.b0", !8655, i64 0}
!8655 = !{!"0000017C2E35CFB0", !21, i64 0}
!8656 = !{!8657, !8657, i64 0}
!8657 = !{!"0000017C2E35CFB0.w4.b4", !8647, i64 0}
!8658 = !{!8659, !8659, i64 0}
!8659 = !{!"0000017C2E3619B0.w8.b0", !8660, i64 0}
!8660 = !{!"0000017C2E3619B0.w16.b0", !8661, i64 0}
!8661 = !{!"0000017C2E3619B0.w32.b0", !8662, i64 0}
!8662 = !{!"0000017C2E3619B0.w64.b0", !8663, i64 0}
!8663 = !{!"0000017C2E3619B0.w128.b0", !8664, i64 0}
!8664 = !{!"0000017C2E3619B0.w256.b0", !8665, i64 0}
!8665 = !{!"0000017C2E3619B0.w512.b0", !8666, i64 0}
!8666 = !{!"0000017C2E3619B0.w1024.b0", !8667, i64 0}
!8667 = !{!"0000017C2E3619B0", !21, i64 0}
!8668 = !{!8669, !8669, i64 0}
!8669 = !{!"0000017C2E3619B0.w8.b8", !8660, i64 0}
!8670 = !{!8671, !8671, i64 0}
!8671 = !{!"0000017C2E3619B0.w8.b16", !8672, i64 0}
!8672 = !{!"0000017C2E3619B0.w16.b16", !8661, i64 0}
!8673 = !{!8674, !8674, i64 0}
!8674 = !{!"0000017C2E3619B0.w8.b24", !8672, i64 0}
!8675 = !{!8676, !8676, i64 0}
!8676 = !{!"0000017C2E3623B0.w8.b8", !8677, i64 0}
!8677 = !{!"0000017C2E3623B0.w16.b0", !8678, i64 0}
!8678 = !{!"0000017C2E3623B0.w32.b0", !8679, i64 0}
!8679 = !{!"0000017C2E3623B0.w64.b0", !8680, i64 0}
!8680 = !{!"0000017C2E3623B0.w128.b0", !8681, i64 0}
!8681 = !{!"0000017C2E3623B0.w256.b0", !8682, i64 0}
!8682 = !{!"0000017C2E3623B0.w512.b0", !8683, i64 0}
!8683 = !{!"0000017C2E3623B0.w1024.b0", !8684, i64 0}
!8684 = !{!"0000017C2E3623B0", !21, i64 0}
!8685 = !{!8686, !8686, i64 0}
!8686 = !{!"0000017C2E364AB0.w8.b0", !8687, i64 0}
!8687 = !{!"0000017C2E364AB0.w16.b0", !8688, i64 0}
!8688 = !{!"0000017C2E364AB0.w32.b0", !8689, i64 0}
!8689 = !{!"0000017C2E364AB0.w64.b0", !8690, i64 0}
!8690 = !{!"0000017C2E364AB0.w128.b0", !8691, i64 0}
!8691 = !{!"0000017C2E364AB0.w256.b0", !8692, i64 0}
!8692 = !{!"0000017C2E364AB0.w512.b0", !8693, i64 0}
!8693 = !{!"0000017C2E364AB0.w1024.b0", !8694, i64 0}
!8694 = !{!"0000017C2E364AB0", !21, i64 0}
!8695 = !{!8696, !8696, i64 0}
!8696 = !{!"0000017C2E364AB0.w8.b8", !8687, i64 0}
!8697 = !{!8698, !8698, i64 0}
!8698 = !{!"0000017C2E364570.w8.b8", !8699, i64 0}
!8699 = !{!"0000017C2E364570.w16.b0", !8700, i64 0}
!8700 = !{!"0000017C2E364570.w32.b0", !8701, i64 0}
!8701 = !{!"0000017C2E364570.w64.b0", !8702, i64 0}
!8702 = !{!"0000017C2E364570.w128.b0", !8703, i64 0}
!8703 = !{!"0000017C2E364570.w256.b0", !8704, i64 0}
!8704 = !{!"0000017C2E364570.w512.b0", !8705, i64 0}
!8705 = !{!"0000017C2E364570.w1024.b0", !8706, i64 0}
!8706 = !{!"0000017C2E364570", !21, i64 0}
!8707 = !{!8708, !8708, i64 0}
!8708 = !{!"0000017C2E415620.w4.b0", !8709, i64 0}
!8709 = !{!"0000017C2E415620.w8.b0", !8710, i64 0}
!8710 = !{!"0000017C2E415620.w16.b0", !8711, i64 0}
!8711 = !{!"0000017C2E415620.w32.b0", !8712, i64 0}
!8712 = !{!"0000017C2E415620.w64.b0", !8713, i64 0}
!8713 = !{!"0000017C2E415620.w128.b0", !8714, i64 0}
!8714 = !{!"0000017C2E415620.w256.b0", !8715, i64 0}
!8715 = !{!"0000017C2E415620.w512.b0", !8716, i64 0}
!8716 = !{!"0000017C2E415620.w1024.b0", !8717, i64 0}
!8717 = !{!"0000017C2E415620", !21, i64 0}
!8718 = !{!8719, !8719, i64 0}
!8719 = !{!"0000017C2E415620.w4.b4", !8709, i64 0}
!8720 = !{!138, !138, i64 0}
!8721 = !{!8722, !8722, i64 0}
!8722 = !{!"0000017C2E567760.w4.b16", !8723, i64 0}
!8723 = !{!"0000017C2E567760.w8.b16", !8724, i64 0}
!8724 = !{!"0000017C2E567760.w16.b16", !139, i64 0}
!8725 = !{!272, !272, i64 0}
!8726 = !{!8727, !8727, i64 0}
!8727 = !{!"0000017C2E4953F0.w4.b16", !8728, i64 0}
!8728 = !{!"0000017C2E4953F0.w8.b16", !8729, i64 0}
!8729 = !{!"0000017C2E4953F0.w16.b16", !273, i64 0}
!8730 = !{!406, !406, i64 0}
!8731 = !{!8732, !8732, i64 0}
!8732 = !{!"0000017C2E3C0BB0.w4.b16", !8733, i64 0}
!8733 = !{!"0000017C2E3C0BB0.w8.b16", !8734, i64 0}
!8734 = !{!"0000017C2E3C0BB0.w16.b16", !407, i64 0}
!8735 = !{!540, !540, i64 0}
!8736 = !{!8737, !8737, i64 0}
!8737 = !{!"0000017C2E601CB0.w4.b16", !8738, i64 0}
!8738 = !{!"0000017C2E601CB0.w8.b16", !8739, i64 0}
!8739 = !{!"0000017C2E601CB0.w16.b16", !541, i64 0}
!8740 = !{!639, !639, i64 0}
!8741 = !{!797, !797, i64 0}
!8742 = !{!8743, !8743, i64 0}
!8743 = !{!"0000017C2E55A360.w4.b16", !8744, i64 0}
!8744 = !{!"0000017C2E55A360.w8.b16", !8745, i64 0}
!8745 = !{!"0000017C2E55A360.w16.b16", !798, i64 0}
!8746 = !{!8747, !8747, i64 0}
!8747 = !{!"0000017C2E55A360.w4.b20", !8744, i64 0}
!8748 = !{!955, !955, i64 0}
!8749 = !{!8750, !8750, i64 0}
!8750 = !{!"0000017C2E302330.w4.b16", !8751, i64 0}
!8751 = !{!"0000017C2E302330.w8.b16", !8752, i64 0}
!8752 = !{!"0000017C2E302330.w16.b16", !956, i64 0}
!8753 = !{!8754, !8754, i64 0}
!8754 = !{!"0000017C2E302330.w4.b20", !8751, i64 0}
!8755 = !{!1113, !1113, i64 0}
!8756 = !{!8757, !8757, i64 0}
!8757 = !{!"0000017C2E4FF470.w4.b16", !8758, i64 0}
!8758 = !{!"0000017C2E4FF470.w8.b16", !8759, i64 0}
!8759 = !{!"0000017C2E4FF470.w16.b16", !1114, i64 0}
!8760 = !{!8761, !8761, i64 0}
!8761 = !{!"0000017C2E4FF470.w4.b20", !8758, i64 0}
!8762 = !{!1271, !1271, i64 0}
!8763 = !{!8764, !8764, i64 0}
!8764 = !{!"0000017C2E3BBBB0.w4.b16", !8765, i64 0}
!8765 = !{!"0000017C2E3BBBB0.w8.b16", !8766, i64 0}
!8766 = !{!"0000017C2E3BBBB0.w16.b16", !1272, i64 0}
!8767 = !{!8768, !8768, i64 0}
!8768 = !{!"0000017C2E3BBBB0.w4.b20", !8765, i64 0}
!8769 = !{!1429, !1429, i64 0}
!8770 = !{!8771, !8771, i64 0}
!8771 = !{!"0000017C2E56AD20.w4.b16", !8772, i64 0}
!8772 = !{!"0000017C2E56AD20.w8.b16", !8773, i64 0}
!8773 = !{!"0000017C2E56AD20.w16.b16", !1430, i64 0}
!8774 = !{!8775, !8775, i64 0}
!8775 = !{!"0000017C2E56AD20.w4.b20", !8772, i64 0}
!8776 = !{!1587, !1587, i64 0}
!8777 = !{!8778, !8778, i64 0}
!8778 = !{!"0000017C2E2F0170.w4.b16", !8779, i64 0}
!8779 = !{!"0000017C2E2F0170.w8.b16", !8780, i64 0}
!8780 = !{!"0000017C2E2F0170.w16.b16", !1588, i64 0}
!8781 = !{!8782, !8782, i64 0}
!8782 = !{!"0000017C2E2F0170.w4.b20", !8779, i64 0}
!8783 = !{!1745, !1745, i64 0}
!8784 = !{!8785, !8785, i64 0}
!8785 = !{!"0000017C2E49BF70.w4.b16", !8786, i64 0}
!8786 = !{!"0000017C2E49BF70.w8.b16", !8787, i64 0}
!8787 = !{!"0000017C2E49BF70.w16.b16", !1746, i64 0}
!8788 = !{!8789, !8789, i64 0}
!8789 = !{!"0000017C2E49BF70.w4.b20", !8786, i64 0}
!8790 = !{!1903, !1903, i64 0}
!8791 = !{!8792, !8792, i64 0}
!8792 = !{!"0000017C22C11720.w4.b16", !8793, i64 0}
!8793 = !{!"0000017C22C11720.w8.b16", !8794, i64 0}
!8794 = !{!"0000017C22C11720.w16.b16", !1904, i64 0}
!8795 = !{!8796, !8796, i64 0}
!8796 = !{!"0000017C22C11720.w4.b20", !8793, i64 0}
!8797 = !{!2061, !2061, i64 0}
!8798 = !{!8799, !8799, i64 0}
!8799 = !{!"0000017C2E3B3C70.w4.b16", !8800, i64 0}
!8800 = !{!"0000017C2E3B3C70.w8.b16", !8801, i64 0}
!8801 = !{!"0000017C2E3B3C70.w16.b16", !2062, i64 0}
!8802 = !{!8803, !8803, i64 0}
!8803 = !{!"0000017C2E3B3C70.w4.b20", !8800, i64 0}
!8804 = !{!2219, !2219, i64 0}
!8805 = !{!8806, !8806, i64 0}
!8806 = !{!"0000017C2E5FF4F0.w4.b16", !8807, i64 0}
!8807 = !{!"0000017C2E5FF4F0.w8.b16", !8808, i64 0}
!8808 = !{!"0000017C2E5FF4F0.w16.b16", !2220, i64 0}
!8809 = !{!8810, !8810, i64 0}
!8810 = !{!"0000017C2E5FF4F0.w4.b20", !8807, i64 0}
!8811 = !{!2377, !2377, i64 0}
!8812 = !{!8813, !8813, i64 0}
!8813 = !{!"0000017C2E60F670.w4.b16", !8814, i64 0}
!8814 = !{!"0000017C2E60F670.w8.b16", !8815, i64 0}
!8815 = !{!"0000017C2E60F670.w16.b16", !2378, i64 0}
!8816 = !{!8817, !8817, i64 0}
!8817 = !{!"0000017C2E60F670.w4.b20", !8814, i64 0}
!8818 = !{!2535, !2535, i64 0}
!8819 = !{!8820, !8820, i64 0}
!8820 = !{!"0000017C1AB00C70.w4.b16", !8821, i64 0}
!8821 = !{!"0000017C1AB00C70.w8.b16", !8822, i64 0}
!8822 = !{!"0000017C1AB00C70.w16.b16", !2536, i64 0}
!8823 = !{!8824, !8824, i64 0}
!8824 = !{!"0000017C1AB00C70.w4.b20", !8821, i64 0}
!8825 = !{!2693, !2693, i64 0}
!8826 = !{!8827, !8827, i64 0}
!8827 = !{!"0000017C2E5028F0.w4.b16", !8828, i64 0}
!8828 = !{!"0000017C2E5028F0.w8.b16", !8829, i64 0}
!8829 = !{!"0000017C2E5028F0.w16.b16", !2694, i64 0}
!8830 = !{!8831, !8831, i64 0}
!8831 = !{!"0000017C2E5028F0.w4.b20", !8828, i64 0}
!8832 = !{!2851, !2851, i64 0}
!8833 = !{!8834, !8834, i64 0}
!8834 = !{!"0000017C2E5582A0.w4.b16", !8835, i64 0}
!8835 = !{!"0000017C2E5582A0.w8.b16", !8836, i64 0}
!8836 = !{!"0000017C2E5582A0.w16.b16", !2852, i64 0}
!8837 = !{!8838, !8838, i64 0}
!8838 = !{!"0000017C2E5582A0.w4.b20", !8835, i64 0}
!8839 = !{!3009, !3009, i64 0}
!8840 = !{!8841, !8841, i64 0}
!8841 = !{!"0000017C2E5FED30.w4.b16", !8842, i64 0}
!8842 = !{!"0000017C2E5FED30.w8.b16", !8843, i64 0}
!8843 = !{!"0000017C2E5FED30.w16.b16", !3010, i64 0}
!8844 = !{!8845, !8845, i64 0}
!8845 = !{!"0000017C2E5FED30.w4.b20", !8842, i64 0}
!8846 = !{!3167, !3167, i64 0}
!8847 = !{!8848, !8848, i64 0}
!8848 = !{!"0000017C2E356EF0.w4.b16", !8849, i64 0}
!8849 = !{!"0000017C2E356EF0.w8.b16", !8850, i64 0}
!8850 = !{!"0000017C2E356EF0.w16.b16", !3168, i64 0}
!8851 = !{!8852, !8852, i64 0}
!8852 = !{!"0000017C2E356EF0.w4.b20", !8849, i64 0}
!8853 = !{!3325, !3325, i64 0}
!8854 = !{!8855, !8855, i64 0}
!8855 = !{!"0000017C2E35BA30.w4.b16", !8856, i64 0}
!8856 = !{!"0000017C2E35BA30.w8.b16", !8857, i64 0}
!8857 = !{!"0000017C2E35BA30.w16.b16", !3326, i64 0}
!8858 = !{!8859, !8859, i64 0}
!8859 = !{!"0000017C2E35BA30.w4.b20", !8856, i64 0}
!8860 = !{!3483, !3483, i64 0}
!8861 = !{!8862, !8862, i64 0}
!8862 = !{!"0000017C2E2FCFB0.w4.b16", !8863, i64 0}
!8863 = !{!"0000017C2E2FCFB0.w8.b16", !8864, i64 0}
!8864 = !{!"0000017C2E2FCFB0.w16.b16", !3484, i64 0}
!8865 = !{!8866, !8866, i64 0}
!8866 = !{!"0000017C2E2FCFB0.w4.b20", !8863, i64 0}
!8867 = !{!3641, !3641, i64 0}
!8868 = !{!8869, !8869, i64 0}
!8869 = !{!"0000017C22BFD560.w4.b16", !8870, i64 0}
!8870 = !{!"0000017C22BFD560.w8.b16", !8871, i64 0}
!8871 = !{!"0000017C22BFD560.w16.b16", !3642, i64 0}
!8872 = !{!8873, !8873, i64 0}
!8873 = !{!"0000017C22BFD560.w4.b20", !8870, i64 0}
!8874 = !{!3799, !3799, i64 0}
!8875 = !{!8876, !8876, i64 0}
!8876 = !{!"0000017C2E6032F0.w4.b16", !8877, i64 0}
!8877 = !{!"0000017C2E6032F0.w8.b16", !8878, i64 0}
!8878 = !{!"0000017C2E6032F0.w16.b16", !3800, i64 0}
!8879 = !{!8880, !8880, i64 0}
!8880 = !{!"0000017C2E6032F0.w4.b20", !8877, i64 0}
!8881 = !{!3957, !3957, i64 0}
!8882 = !{!8883, !8883, i64 0}
!8883 = !{!"0000017C2E5062B0.w4.b16", !8884, i64 0}
!8884 = !{!"0000017C2E5062B0.w8.b16", !8885, i64 0}
!8885 = !{!"0000017C2E5062B0.w16.b16", !3958, i64 0}
!8886 = !{!8887, !8887, i64 0}
!8887 = !{!"0000017C2E5062B0.w4.b20", !8884, i64 0}
!8888 = !{!4056, !4056, i64 0}
!8889 = !{!4150, !4150, i64 0}
!8890 = !{!8891, !8891, i64 0}
!8891 = !{!"0000017C2E5608A0.w4.b16", !8892, i64 0}
!8892 = !{!"0000017C2E5608A0.w8.b16", !8893, i64 0}
!8893 = !{!"0000017C2E5608A0.w16.b16", !4151, i64 0}
!8894 = !{!4286, !4286, i64 0}
!8895 = !{!8896, !8896, i64 0}
!8896 = !{!"0000017C2E601670.w16.b16", !4287, i64 0}
!8897 = !{!8898, !8898, i64 0}
!8898 = !{!"0000017C2E601670.w16.b32", !8899, i64 0}
!8899 = !{!"0000017C2E601670.w32.b32", !4288, i64 0}
!8900 = !{!8901, !8901, i64 0}
!8901 = !{!"0000017C2E601670.w4.b48", !8902, i64 0}
!8902 = !{!"0000017C2E601670.w8.b48", !8903, i64 0}
!8903 = !{!"0000017C2E601670.w16.b48", !8899, i64 0}
!8904 = !{!8905, !8905, i64 0}
!8905 = !{!"0000017C2E601670.w4.b52", !8902, i64 0}
!8906 = !{!8907, !8907, i64 0}
!8907 = !{!"0000017C2E601670.w4.b56", !8908, i64 0}
!8908 = !{!"0000017C2E601670.w8.b56", !8903, i64 0}
!8909 = !{!4417, !4417, i64 0}
!8910 = !{!8911, !8911, i64 0}
!8911 = !{!"0000017C2E4AF130.w16.b16", !4418, i64 0}
!8912 = !{!8913, !8913, i64 0}
!8913 = !{!"0000017C2E4AF130.w16.b32", !8914, i64 0}
!8914 = !{!"0000017C2E4AF130.w32.b32", !4419, i64 0}
!8915 = !{!8916, !8916, i64 0}
!8916 = !{!"0000017C2E4AF130.w4.b48", !8917, i64 0}
!8917 = !{!"0000017C2E4AF130.w8.b48", !8918, i64 0}
!8918 = !{!"0000017C2E4AF130.w16.b48", !8914, i64 0}
!8919 = !{!8920, !8920, i64 0}
!8920 = !{!"0000017C2E4AF130.w4.b52", !8917, i64 0}
!8921 = !{!8922, !8922, i64 0}
!8922 = !{!"0000017C2E4AF130.w4.b56", !8923, i64 0}
!8923 = !{!"0000017C2E4AF130.w8.b56", !8918, i64 0}
!8924 = !{!4553, !4553, i64 0}
!8925 = !{!8926, !8926, i64 0}
!8926 = !{!"0000017C22C0A320.w16.b16", !4554, i64 0}
!8927 = !{!8928, !8928, i64 0}
!8928 = !{!"0000017C22C0A320.w16.b32", !8929, i64 0}
!8929 = !{!"0000017C22C0A320.w32.b32", !4555, i64 0}
!8930 = !{!8931, !8931, i64 0}
!8931 = !{!"0000017C22C0A320.w4.b48", !8932, i64 0}
!8932 = !{!"0000017C22C0A320.w8.b48", !8933, i64 0}
!8933 = !{!"0000017C22C0A320.w16.b48", !8929, i64 0}
!8934 = !{!8935, !8935, i64 0}
!8935 = !{!"0000017C22C0A320.w4.b52", !8932, i64 0}
!8936 = !{!8937, !8937, i64 0}
!8937 = !{!"0000017C22C0A320.w4.b56", !8938, i64 0}
!8938 = !{!"0000017C22C0A320.w8.b56", !8933, i64 0}
!8939 = !{!4684, !4684, i64 0}
!8940 = !{!8941, !8941, i64 0}
!8941 = !{!"0000017C2E55D4A0.w16.b16", !4685, i64 0}
!8942 = !{!8943, !8943, i64 0}
!8943 = !{!"0000017C2E55D4A0.w16.b32", !8944, i64 0}
!8944 = !{!"0000017C2E55D4A0.w32.b32", !4686, i64 0}
!8945 = !{!8946, !8946, i64 0}
!8946 = !{!"0000017C2E55D4A0.w4.b48", !8947, i64 0}
!8947 = !{!"0000017C2E55D4A0.w8.b48", !8948, i64 0}
!8948 = !{!"0000017C2E55D4A0.w16.b48", !8944, i64 0}
!8949 = !{!8950, !8950, i64 0}
!8950 = !{!"0000017C2E55D4A0.w4.b52", !8947, i64 0}
!8951 = !{!8952, !8952, i64 0}
!8952 = !{!"0000017C2E55D4A0.w4.b56", !8953, i64 0}
!8953 = !{!"0000017C2E55D4A0.w8.b56", !8948, i64 0}
!8954 = !{!4815, !4815, i64 0}
!8955 = !{!8956, !8956, i64 0}
!8956 = !{!"0000017C2E3C07B0.w16.b16", !4816, i64 0}
!8957 = !{!8958, !8958, i64 0}
!8958 = !{!"0000017C2E3C07B0.w16.b32", !8959, i64 0}
!8959 = !{!"0000017C2E3C07B0.w32.b32", !4817, i64 0}
!8960 = !{!8961, !8961, i64 0}
!8961 = !{!"0000017C2E3C07B0.w4.b48", !8962, i64 0}
!8962 = !{!"0000017C2E3C07B0.w8.b48", !8963, i64 0}
!8963 = !{!"0000017C2E3C07B0.w16.b48", !8959, i64 0}
!8964 = !{!8965, !8965, i64 0}
!8965 = !{!"0000017C2E3C07B0.w4.b52", !8962, i64 0}
!8966 = !{!8967, !8967, i64 0}
!8967 = !{!"0000017C2E3C07B0.w4.b56", !8968, i64 0}
!8968 = !{!"0000017C2E3C07B0.w8.b56", !8963, i64 0}
!8969 = !{!4951, !4951, i64 0}
!8970 = !{!8971, !8971, i64 0}
!8971 = !{!"0000017C2E4A0D70.w16.b16", !4952, i64 0}
!8972 = !{!8973, !8973, i64 0}
!8973 = !{!"0000017C2E4A0D70.w16.b32", !8974, i64 0}
!8974 = !{!"0000017C2E4A0D70.w32.b32", !4953, i64 0}
!8975 = !{!8976, !8976, i64 0}
!8976 = !{!"0000017C2E4A0D70.w4.b48", !8977, i64 0}
!8977 = !{!"0000017C2E4A0D70.w8.b48", !8978, i64 0}
!8978 = !{!"0000017C2E4A0D70.w16.b48", !8974, i64 0}
!8979 = !{!8980, !8980, i64 0}
!8980 = !{!"0000017C2E4A0D70.w4.b52", !8977, i64 0}
!8981 = !{!8982, !8982, i64 0}
!8982 = !{!"0000017C2E4A0D70.w4.b56", !8983, i64 0}
!8983 = !{!"0000017C2E4A0D70.w8.b56", !8978, i64 0}
!8984 = !{!5082, !5082, i64 0}
!8985 = !{!8986, !8986, i64 0}
!8986 = !{!"0000017C2E60BB70.w16.b16", !5083, i64 0}
!8987 = !{!8988, !8988, i64 0}
!8988 = !{!"0000017C2E60BB70.w16.b32", !8989, i64 0}
!8989 = !{!"0000017C2E60BB70.w32.b32", !5084, i64 0}
!8990 = !{!8991, !8991, i64 0}
!8991 = !{!"0000017C2E60BB70.w4.b48", !8992, i64 0}
!8992 = !{!"0000017C2E60BB70.w8.b48", !8993, i64 0}
!8993 = !{!"0000017C2E60BB70.w16.b48", !8989, i64 0}
!8994 = !{!8995, !8995, i64 0}
!8995 = !{!"0000017C2E60BB70.w4.b52", !8992, i64 0}
!8996 = !{!8997, !8997, i64 0}
!8997 = !{!"0000017C2E60BB70.w4.b56", !8998, i64 0}
!8998 = !{!"0000017C2E60BB70.w8.b56", !8993, i64 0}
!8999 = !{!5218, !5218, i64 0}
!9000 = !{!9001, !9001, i64 0}
!9001 = !{!"0000017C2E564020.w16.b16", !5219, i64 0}
!9002 = !{!9003, !9003, i64 0}
!9003 = !{!"0000017C2E564020.w16.b32", !9004, i64 0}
!9004 = !{!"0000017C2E564020.w32.b32", !5220, i64 0}
!9005 = !{!9006, !9006, i64 0}
!9006 = !{!"0000017C2E564020.w4.b48", !9007, i64 0}
!9007 = !{!"0000017C2E564020.w8.b48", !9008, i64 0}
!9008 = !{!"0000017C2E564020.w16.b48", !9004, i64 0}
!9009 = !{!9010, !9010, i64 0}
!9010 = !{!"0000017C2E564020.w4.b52", !9007, i64 0}
!9011 = !{!9012, !9012, i64 0}
!9012 = !{!"0000017C2E564020.w4.b56", !9013, i64 0}
!9013 = !{!"0000017C2E564020.w8.b56", !9008, i64 0}
!9014 = !{!5349, !5349, i64 0}
!9015 = !{!9016, !9016, i64 0}
!9016 = !{!"0000017C2E567AE0.w16.b16", !5350, i64 0}
!9017 = !{!9018, !9018, i64 0}
!9018 = !{!"0000017C2E567AE0.w16.b32", !9019, i64 0}
!9019 = !{!"0000017C2E567AE0.w32.b32", !5351, i64 0}
!9020 = !{!9021, !9021, i64 0}
!9021 = !{!"0000017C2E567AE0.w4.b48", !9022, i64 0}
!9022 = !{!"0000017C2E567AE0.w8.b48", !9023, i64 0}
!9023 = !{!"0000017C2E567AE0.w16.b48", !9019, i64 0}
!9024 = !{!9025, !9025, i64 0}
!9025 = !{!"0000017C2E567AE0.w4.b52", !9022, i64 0}
!9026 = !{!9027, !9027, i64 0}
!9027 = !{!"0000017C2E567AE0.w4.b56", !9028, i64 0}
!9028 = !{!"0000017C2E567AE0.w8.b56", !9023, i64 0}
!9029 = !{!5485, !5485, i64 0}
!9030 = !{!9031, !9031, i64 0}
!9031 = !{!"0000017C2E4AB9B0.w16.b16", !5486, i64 0}
!9032 = !{!9033, !9033, i64 0}
!9033 = !{!"0000017C2E4AB9B0.w16.b32", !9034, i64 0}
!9034 = !{!"0000017C2E4AB9B0.w32.b32", !5487, i64 0}
!9035 = !{!9036, !9036, i64 0}
!9036 = !{!"0000017C2E4AB9B0.w4.b48", !9037, i64 0}
!9037 = !{!"0000017C2E4AB9B0.w8.b48", !9038, i64 0}
!9038 = !{!"0000017C2E4AB9B0.w16.b48", !9034, i64 0}
!9039 = !{!9040, !9040, i64 0}
!9040 = !{!"0000017C2E4AB9B0.w4.b52", !9037, i64 0}
!9041 = !{!9042, !9042, i64 0}
!9042 = !{!"0000017C2E4AB9B0.w4.b56", !9043, i64 0}
!9043 = !{!"0000017C2E4AB9B0.w8.b56", !9038, i64 0}
!9044 = !{!5616, !5616, i64 0}
!9045 = !{!9046, !9046, i64 0}
!9046 = !{!"0000017C2E60F1F0.w16.b16", !5617, i64 0}
!9047 = !{!9048, !9048, i64 0}
!9048 = !{!"0000017C2E60F1F0.w16.b32", !9049, i64 0}
!9049 = !{!"0000017C2E60F1F0.w32.b32", !5618, i64 0}
!9050 = !{!9051, !9051, i64 0}
!9051 = !{!"0000017C2E60F1F0.w4.b48", !9052, i64 0}
!9052 = !{!"0000017C2E60F1F0.w8.b48", !9053, i64 0}
!9053 = !{!"0000017C2E60F1F0.w16.b48", !9049, i64 0}
!9054 = !{!9055, !9055, i64 0}
!9055 = !{!"0000017C2E60F1F0.w4.b52", !9052, i64 0}
!9056 = !{!9057, !9057, i64 0}
!9057 = !{!"0000017C2E60F1F0.w4.b56", !9058, i64 0}
!9058 = !{!"0000017C2E60F1F0.w8.b56", !9053, i64 0}
!9059 = !{!5747, !5747, i64 0}
!9060 = !{!9061, !9061, i64 0}
!9061 = !{!"0000017C2E603530.w16.b16", !5748, i64 0}
!9062 = !{!9063, !9063, i64 0}
!9063 = !{!"0000017C2E603530.w16.b32", !9064, i64 0}
!9064 = !{!"0000017C2E603530.w32.b32", !5749, i64 0}
!9065 = !{!9066, !9066, i64 0}
!9066 = !{!"0000017C2E603530.w4.b48", !9067, i64 0}
!9067 = !{!"0000017C2E603530.w8.b48", !9068, i64 0}
!9068 = !{!"0000017C2E603530.w16.b48", !9064, i64 0}
!9069 = !{!9070, !9070, i64 0}
!9070 = !{!"0000017C2E603530.w4.b52", !9067, i64 0}
!9071 = !{!9072, !9072, i64 0}
!9072 = !{!"0000017C2E603530.w4.b56", !9073, i64 0}
!9073 = !{!"0000017C2E603530.w8.b56", !9068, i64 0}
!9074 = !{!5878, !5878, i64 0}
!9075 = !{!9076, !9076, i64 0}
!9076 = !{!"0000017C22BF7C60.w16.b16", !5879, i64 0}
!9077 = !{!9078, !9078, i64 0}
!9078 = !{!"0000017C22BF7C60.w16.b32", !9079, i64 0}
!9079 = !{!"0000017C22BF7C60.w32.b32", !5880, i64 0}
!9080 = !{!9081, !9081, i64 0}
!9081 = !{!"0000017C22BF7C60.w4.b48", !9082, i64 0}
!9082 = !{!"0000017C22BF7C60.w8.b48", !9083, i64 0}
!9083 = !{!"0000017C22BF7C60.w16.b48", !9079, i64 0}
!9084 = !{!9085, !9085, i64 0}
!9085 = !{!"0000017C22BF7C60.w4.b52", !9082, i64 0}
!9086 = !{!9087, !9087, i64 0}
!9087 = !{!"0000017C22BF7C60.w4.b56", !9088, i64 0}
!9088 = !{!"0000017C22BF7C60.w8.b56", !9083, i64 0}
!9089 = !{!6009, !6009, i64 0}
!9090 = !{!9091, !9091, i64 0}
!9091 = !{!"0000017C2E40D460.w16.b16", !6010, i64 0}
!9092 = !{!9093, !9093, i64 0}
!9093 = !{!"0000017C2E40D460.w16.b32", !9094, i64 0}
!9094 = !{!"0000017C2E40D460.w32.b32", !6011, i64 0}
!9095 = !{!9096, !9096, i64 0}
!9096 = !{!"0000017C2E40D460.w4.b48", !9097, i64 0}
!9097 = !{!"0000017C2E40D460.w8.b48", !9098, i64 0}
!9098 = !{!"0000017C2E40D460.w16.b48", !9094, i64 0}
!9099 = !{!9100, !9100, i64 0}
!9100 = !{!"0000017C2E40D460.w4.b52", !9097, i64 0}
!9101 = !{!9102, !9102, i64 0}
!9102 = !{!"0000017C2E40D460.w4.b56", !9103, i64 0}
!9103 = !{!"0000017C2E40D460.w8.b56", !9098, i64 0}
!9104 = !{!6145, !6145, i64 0}
!9105 = !{!9106, !9106, i64 0}
!9106 = !{!"0000017C2E607630.w16.b16", !6146, i64 0}
!9107 = !{!9108, !9108, i64 0}
!9108 = !{!"0000017C2E607630.w16.b32", !9109, i64 0}
!9109 = !{!"0000017C2E607630.w32.b32", !6147, i64 0}
!9110 = !{!9111, !9111, i64 0}
!9111 = !{!"0000017C2E607630.w4.b48", !9112, i64 0}
!9112 = !{!"0000017C2E607630.w8.b48", !9113, i64 0}
!9113 = !{!"0000017C2E607630.w16.b48", !9109, i64 0}
!9114 = !{!9115, !9115, i64 0}
!9115 = !{!"0000017C2E607630.w4.b52", !9112, i64 0}
!9116 = !{!9117, !9117, i64 0}
!9117 = !{!"0000017C2E607630.w4.b56", !9118, i64 0}
!9118 = !{!"0000017C2E607630.w8.b56", !9113, i64 0}
!9119 = !{!6281, !6281, i64 0}
!9120 = !{!9121, !9121, i64 0}
!9121 = !{!"0000017C2E563CE0.w16.b16", !6282, i64 0}
!9122 = !{!9123, !9123, i64 0}
!9123 = !{!"0000017C2E563CE0.w16.b32", !9124, i64 0}
!9124 = !{!"0000017C2E563CE0.w32.b32", !6283, i64 0}
!9125 = !{!9126, !9126, i64 0}
!9126 = !{!"0000017C2E563CE0.w4.b48", !9127, i64 0}
!9127 = !{!"0000017C2E563CE0.w8.b48", !9128, i64 0}
!9128 = !{!"0000017C2E563CE0.w16.b48", !9124, i64 0}
!9129 = !{!9130, !9130, i64 0}
!9130 = !{!"0000017C2E563CE0.w4.b52", !9127, i64 0}
!9131 = !{!9132, !9132, i64 0}
!9132 = !{!"0000017C2E563CE0.w4.b56", !9133, i64 0}
!9133 = !{!"0000017C2E563CE0.w8.b56", !9128, i64 0}
!9134 = !{!6412, !6412, i64 0}
!9135 = !{!9136, !9136, i64 0}
!9136 = !{!"0000017C1AAF06F0.w16.b16", !6413, i64 0}
!9137 = !{!9138, !9138, i64 0}
!9138 = !{!"0000017C1AAF06F0.w16.b32", !9139, i64 0}
!9139 = !{!"0000017C1AAF06F0.w32.b32", !6414, i64 0}
!9140 = !{!9141, !9141, i64 0}
!9141 = !{!"0000017C1AAF06F0.w4.b48", !9142, i64 0}
!9142 = !{!"0000017C1AAF06F0.w8.b48", !9143, i64 0}
!9143 = !{!"0000017C1AAF06F0.w16.b48", !9139, i64 0}
!9144 = !{!9145, !9145, i64 0}
!9145 = !{!"0000017C1AAF06F0.w4.b52", !9142, i64 0}
!9146 = !{!9147, !9147, i64 0}
!9147 = !{!"0000017C1AAF06F0.w4.b56", !9148, i64 0}
!9148 = !{!"0000017C1AAF06F0.w8.b56", !9143, i64 0}
!9149 = !{!6543, !6543, i64 0}
!9150 = !{!9151, !9151, i64 0}
!9151 = !{!"0000017C2E368830.w16.b16", !6544, i64 0}
!9152 = !{!9153, !9153, i64 0}
!9153 = !{!"0000017C2E368830.w16.b32", !9154, i64 0}
!9154 = !{!"0000017C2E368830.w32.b32", !6545, i64 0}
!9155 = !{!9156, !9156, i64 0}
!9156 = !{!"0000017C2E368830.w4.b48", !9157, i64 0}
!9157 = !{!"0000017C2E368830.w8.b48", !9158, i64 0}
!9158 = !{!"0000017C2E368830.w16.b48", !9154, i64 0}
!9159 = !{!9160, !9160, i64 0}
!9160 = !{!"0000017C2E368830.w4.b52", !9157, i64 0}
!9161 = !{!9162, !9162, i64 0}
!9162 = !{!"0000017C2E368830.w4.b56", !9163, i64 0}
!9163 = !{!"0000017C2E368830.w8.b56", !9158, i64 0}
!9164 = !{!6679, !6679, i64 0}
!9165 = !{!9166, !9166, i64 0}
!9166 = !{!"0000017C2E56A9E0.w16.b16", !6680, i64 0}
!9167 = !{!9168, !9168, i64 0}
!9168 = !{!"0000017C2E56A9E0.w16.b32", !9169, i64 0}
!9169 = !{!"0000017C2E56A9E0.w32.b32", !6681, i64 0}
!9170 = !{!9171, !9171, i64 0}
!9171 = !{!"0000017C2E56A9E0.w4.b48", !9172, i64 0}
!9172 = !{!"0000017C2E56A9E0.w8.b48", !9173, i64 0}
!9173 = !{!"0000017C2E56A9E0.w16.b48", !9169, i64 0}
!9174 = !{!9175, !9175, i64 0}
!9175 = !{!"0000017C2E56A9E0.w4.b52", !9172, i64 0}
!9176 = !{!9177, !9177, i64 0}
!9177 = !{!"0000017C2E56A9E0.w4.b56", !9178, i64 0}
!9178 = !{!"0000017C2E56A9E0.w8.b56", !9173, i64 0}
!9179 = !{!6810, !6810, i64 0}
!9180 = !{!9181, !9181, i64 0}
!9181 = !{!"0000017C1AAF3B30.w16.b16", !6811, i64 0}
!9182 = !{!9183, !9183, i64 0}
!9183 = !{!"0000017C1AAF3B30.w16.b32", !9184, i64 0}
!9184 = !{!"0000017C1AAF3B30.w32.b32", !6812, i64 0}
!9185 = !{!9186, !9186, i64 0}
!9186 = !{!"0000017C1AAF3B30.w4.b48", !9187, i64 0}
!9187 = !{!"0000017C1AAF3B30.w8.b48", !9188, i64 0}
!9188 = !{!"0000017C1AAF3B30.w16.b48", !9184, i64 0}
!9189 = !{!9190, !9190, i64 0}
!9190 = !{!"0000017C1AAF3B30.w4.b52", !9187, i64 0}
!9191 = !{!9192, !9192, i64 0}
!9192 = !{!"0000017C1AAF3B30.w4.b56", !9193, i64 0}
!9193 = !{!"0000017C1AAF3B30.w8.b56", !9188, i64 0}
!9194 = !{!6941, !6941, i64 0}
!9195 = !{!9196, !9196, i64 0}
!9196 = !{!"0000017C2E34E930.w16.b16", !6942, i64 0}
!9197 = !{!9198, !9198, i64 0}
!9198 = !{!"0000017C2E34E930.w16.b32", !9199, i64 0}
!9199 = !{!"0000017C2E34E930.w32.b32", !6943, i64 0}
!9200 = !{!9201, !9201, i64 0}
!9201 = !{!"0000017C2E34E930.w4.b48", !9202, i64 0}
!9202 = !{!"0000017C2E34E930.w8.b48", !9203, i64 0}
!9203 = !{!"0000017C2E34E930.w16.b48", !9199, i64 0}
!9204 = !{!9205, !9205, i64 0}
!9205 = !{!"0000017C2E34E930.w4.b52", !9202, i64 0}
!9206 = !{!9207, !9207, i64 0}
!9207 = !{!"0000017C2E34E930.w4.b56", !9208, i64 0}
!9208 = !{!"0000017C2E34E930.w8.b56", !9203, i64 0}
!9209 = !{!7072, !7072, i64 0}
!9210 = !{!9211, !9211, i64 0}
!9211 = !{!"0000017C22C017E0.w16.b16", !7073, i64 0}
!9212 = !{!9213, !9213, i64 0}
!9213 = !{!"0000017C22C017E0.w16.b32", !9214, i64 0}
!9214 = !{!"0000017C22C017E0.w32.b32", !7074, i64 0}
!9215 = !{!9216, !9216, i64 0}
!9216 = !{!"0000017C22C017E0.w4.b48", !9217, i64 0}
!9217 = !{!"0000017C22C017E0.w8.b48", !9218, i64 0}
!9218 = !{!"0000017C22C017E0.w16.b48", !9214, i64 0}
!9219 = !{!9220, !9220, i64 0}
!9220 = !{!"0000017C22C017E0.w4.b52", !9217, i64 0}
!9221 = !{!9222, !9222, i64 0}
!9222 = !{!"0000017C22C017E0.w4.b56", !9223, i64 0}
!9223 = !{!"0000017C22C017E0.w8.b56", !9218, i64 0}
!9224 = !{!7208, !7208, i64 0}
!9225 = !{!9226, !9226, i64 0}
!9226 = !{!"0000017C2E556EE0.w16.b16", !7209, i64 0}
!9227 = !{!9228, !9228, i64 0}
!9228 = !{!"0000017C2E556EE0.w16.b32", !9229, i64 0}
!9229 = !{!"0000017C2E556EE0.w32.b32", !7210, i64 0}
!9230 = !{!9231, !9231, i64 0}
!9231 = !{!"0000017C2E556EE0.w4.b48", !9232, i64 0}
!9232 = !{!"0000017C2E556EE0.w8.b48", !9233, i64 0}
!9233 = !{!"0000017C2E556EE0.w16.b48", !9229, i64 0}
!9234 = !{!9235, !9235, i64 0}
!9235 = !{!"0000017C2E556EE0.w4.b52", !9232, i64 0}
!9236 = !{!9237, !9237, i64 0}
!9237 = !{!"0000017C2E556EE0.w4.b56", !9238, i64 0}
!9238 = !{!"0000017C2E556EE0.w8.b56", !9233, i64 0}
!9239 = !{!7339, !7339, i64 0}
!9240 = !{!9241, !9241, i64 0}
!9241 = !{!"0000017C2E422960.w16.b16", !7340, i64 0}
!9242 = !{!9243, !9243, i64 0}
!9243 = !{!"0000017C2E422960.w16.b32", !9244, i64 0}
!9244 = !{!"0000017C2E422960.w32.b32", !7341, i64 0}
!9245 = !{!9246, !9246, i64 0}
!9246 = !{!"0000017C2E422960.w4.b48", !9247, i64 0}
!9247 = !{!"0000017C2E422960.w8.b48", !9248, i64 0}
!9248 = !{!"0000017C2E422960.w16.b48", !9244, i64 0}
!9249 = !{!9250, !9250, i64 0}
!9250 = !{!"0000017C2E422960.w4.b52", !9247, i64 0}
!9251 = !{!9252, !9252, i64 0}
!9252 = !{!"0000017C2E422960.w4.b56", !9253, i64 0}
!9253 = !{!"0000017C2E422960.w8.b56", !9248, i64 0}
!9254 = !{!7470, !7470, i64 0}
!9255 = !{!9256, !9256, i64 0}
!9256 = !{!"0000017C2E60B4F0.w16.b16", !7471, i64 0}
!9257 = !{!9258, !9258, i64 0}
!9258 = !{!"0000017C2E60B4F0.w16.b32", !9259, i64 0}
!9259 = !{!"0000017C2E60B4F0.w32.b32", !7472, i64 0}
!9260 = !{!9261, !9261, i64 0}
!9261 = !{!"0000017C2E60B4F0.w4.b48", !9262, i64 0}
!9262 = !{!"0000017C2E60B4F0.w8.b48", !9263, i64 0}
!9263 = !{!"0000017C2E60B4F0.w16.b48", !9259, i64 0}
!9264 = !{!9265, !9265, i64 0}
!9265 = !{!"0000017C2E60B4F0.w4.b52", !9262, i64 0}
!9266 = !{!9267, !9267, i64 0}
!9267 = !{!"0000017C2E60B4F0.w4.b56", !9268, i64 0}
!9268 = !{!"0000017C2E60B4F0.w8.b56", !9263, i64 0}
!9269 = !{!7601, !7601, i64 0}
!9270 = !{!9271, !9271, i64 0}
!9271 = !{!"0000017C2E365BB0.w16.b16", !7602, i64 0}
!9272 = !{!9273, !9273, i64 0}
!9273 = !{!"0000017C2E365BB0.w16.b32", !9274, i64 0}
!9274 = !{!"0000017C2E365BB0.w32.b32", !7603, i64 0}
!9275 = !{!9276, !9276, i64 0}
!9276 = !{!"0000017C2E365BB0.w4.b48", !9277, i64 0}
!9277 = !{!"0000017C2E365BB0.w8.b48", !9278, i64 0}
!9278 = !{!"0000017C2E365BB0.w16.b48", !9274, i64 0}
!9279 = !{!9280, !9280, i64 0}
!9280 = !{!"0000017C2E365BB0.w4.b52", !9277, i64 0}
!9281 = !{!9282, !9282, i64 0}
!9282 = !{!"0000017C2E365BB0.w4.b56", !9283, i64 0}
!9283 = !{!"0000017C2E365BB0.w8.b56", !9278, i64 0}
!9284 = !{!7732, !7732, i64 0}
!9285 = !{!9286, !9286, i64 0}
!9286 = !{!"0000017C2E415D20.w16.b16", !7733, i64 0}
!9287 = !{!9288, !9288, i64 0}
!9288 = !{!"0000017C2E415D20.w16.b32", !9289, i64 0}
!9289 = !{!"0000017C2E415D20.w32.b32", !7734, i64 0}
!9290 = !{!9291, !9291, i64 0}
!9291 = !{!"0000017C2E415D20.w4.b48", !9292, i64 0}
!9292 = !{!"0000017C2E415D20.w8.b48", !9293, i64 0}
!9293 = !{!"0000017C2E415D20.w16.b48", !9289, i64 0}
!9294 = !{!9295, !9295, i64 0}
!9295 = !{!"0000017C2E415D20.w4.b52", !9292, i64 0}
!9296 = !{!9297, !9297, i64 0}
!9297 = !{!"0000017C2E415D20.w4.b56", !9298, i64 0}
!9298 = !{!"0000017C2E415D20.w8.b56", !9293, i64 0}
!9299 = !{!7868, !7868, i64 0}
!9300 = !{!9301, !9301, i64 0}
!9301 = !{!"0000017C2E2F40B0.w16.b16", !7869, i64 0}
!9302 = !{!9303, !9303, i64 0}
!9303 = !{!"0000017C2E2F40B0.w16.b32", !9304, i64 0}
!9304 = !{!"0000017C2E2F40B0.w32.b32", !7870, i64 0}
!9305 = !{!9306, !9306, i64 0}
!9306 = !{!"0000017C2E2F40B0.w4.b48", !9307, i64 0}
!9307 = !{!"0000017C2E2F40B0.w8.b48", !9308, i64 0}
!9308 = !{!"0000017C2E2F40B0.w16.b48", !9304, i64 0}
!9309 = !{!9310, !9310, i64 0}
!9310 = !{!"0000017C2E2F40B0.w4.b52", !9307, i64 0}
!9311 = !{!9312, !9312, i64 0}
!9312 = !{!"0000017C2E2F40B0.w4.b56", !9313, i64 0}
!9313 = !{!"0000017C2E2F40B0.w8.b56", !9308, i64 0}
!9314 = !{!7999, !7999, i64 0}
!9315 = !{!9316, !9316, i64 0}
!9316 = !{!"0000017C2E55A160.w16.b16", !8000, i64 0}
!9317 = !{!9318, !9318, i64 0}
!9318 = !{!"0000017C2E55A160.w16.b32", !9319, i64 0}
!9319 = !{!"0000017C2E55A160.w32.b32", !8001, i64 0}
!9320 = !{!9321, !9321, i64 0}
!9321 = !{!"0000017C2E55A160.w4.b48", !9322, i64 0}
!9322 = !{!"0000017C2E55A160.w8.b48", !9323, i64 0}
!9323 = !{!"0000017C2E55A160.w16.b48", !9319, i64 0}
!9324 = !{!9325, !9325, i64 0}
!9325 = !{!"0000017C2E55A160.w4.b52", !9322, i64 0}
!9326 = !{!9327, !9327, i64 0}
!9327 = !{!"0000017C2E55A160.w4.b56", !9328, i64 0}
!9328 = !{!"0000017C2E55A160.w8.b56", !9323, i64 0}
!9329 = !{!8130, !8130, i64 0}
!9330 = !{!9331, !9331, i64 0}
!9331 = !{!"0000017C2E607CB0.w16.b16", !8131, i64 0}
!9332 = !{!9333, !9333, i64 0}
!9333 = !{!"0000017C2E607CB0.w16.b32", !9334, i64 0}
!9334 = !{!"0000017C2E607CB0.w32.b32", !8132, i64 0}
!9335 = !{!9336, !9336, i64 0}
!9336 = !{!"0000017C2E607CB0.w4.b48", !9337, i64 0}
!9337 = !{!"0000017C2E607CB0.w8.b48", !9338, i64 0}
!9338 = !{!"0000017C2E607CB0.w16.b48", !9334, i64 0}
!9339 = !{!9340, !9340, i64 0}
!9340 = !{!"0000017C2E607CB0.w4.b52", !9337, i64 0}
!9341 = !{!9342, !9342, i64 0}
!9342 = !{!"0000017C2E607CB0.w4.b56", !9343, i64 0}
!9343 = !{!"0000017C2E607CB0.w8.b56", !9338, i64 0}
!9344 = !{!8266, !8266, i64 0}
!9345 = !{!9346, !9346, i64 0}
!9346 = !{!"0000017C2E2EB9B0.w16.b16", !8267, i64 0}
!9347 = !{!9348, !9348, i64 0}
!9348 = !{!"0000017C2E2EB9B0.w16.b32", !9349, i64 0}
!9349 = !{!"0000017C2E2EB9B0.w32.b32", !8268, i64 0}
!9350 = !{!9351, !9351, i64 0}
!9351 = !{!"0000017C2E2EB9B0.w4.b48", !9352, i64 0}
!9352 = !{!"0000017C2E2EB9B0.w8.b48", !9353, i64 0}
!9353 = !{!"0000017C2E2EB9B0.w16.b48", !9349, i64 0}
!9354 = !{!9355, !9355, i64 0}
!9355 = !{!"0000017C2E2EB9B0.w4.b52", !9352, i64 0}
!9356 = !{!9357, !9357, i64 0}
!9357 = !{!"0000017C2E2EB9B0.w4.b56", !9358, i64 0}
!9358 = !{!"0000017C2E2EB9B0.w8.b56", !9353, i64 0}
!9359 = !{!8397, !8397, i64 0}
!9360 = !{!9361, !9361, i64 0}
!9361 = !{!"0000017C2E55E920.w16.b16", !8398, i64 0}
!9362 = !{!9363, !9363, i64 0}
!9363 = !{!"0000017C2E55E920.w16.b32", !9364, i64 0}
!9364 = !{!"0000017C2E55E920.w32.b32", !8399, i64 0}
!9365 = !{!9366, !9366, i64 0}
!9366 = !{!"0000017C2E55E920.w4.b48", !9367, i64 0}
!9367 = !{!"0000017C2E55E920.w8.b48", !9368, i64 0}
!9368 = !{!"0000017C2E55E920.w16.b48", !9364, i64 0}
!9369 = !{!9370, !9370, i64 0}
!9370 = !{!"0000017C2E55E920.w4.b52", !9367, i64 0}
!9371 = !{!9372, !9372, i64 0}
!9372 = !{!"0000017C2E55E920.w4.b56", !9373, i64 0}
!9373 = !{!"0000017C2E55E920.w8.b56", !9368, i64 0}
!9374 = !{!8527, !8527, i64 0}
!9375 = !{!9376, !9376, i64 0}
!9376 = !{!"0000017C2E40A960.w4.b16", !9377, i64 0}
!9377 = !{!"0000017C2E40A960.w8.b16", !9378, i64 0}
!9378 = !{!"0000017C2E40A960.w16.b16", !8528, i64 0}
!9379 = !{!9380, !9380, i64 0}
!9380 = !{!"0000017C2E40A960.w4.b20", !9377, i64 0}
!9381 = !{!9382, !9382, i64 0}
!9382 = !{!"0000017C2E40A960.w4.b24", !9383, i64 0}
!9383 = !{!"0000017C2E40A960.w8.b24", !9378, i64 0}
!9384 = !{!8626, !8626, i64 0}
!9385 = !{!8710, !8710, i64 0}
